package com.avos.avoscloud;

import com.alibaba.fastjson.asm.Opcodes;
import com.avos.avospush.session.CommandPacket;
import com.google.android.exoplayer2.C;
import com.google.android.exoplayer2.extractor.ts.TsExtractor;
import com.google.protobuf.AbstractParser;
import com.google.protobuf.ByteString;
import com.google.protobuf.CodedInputStream;
import com.google.protobuf.CodedOutputStream;
import com.google.protobuf.Descriptors.Descriptor;
import com.google.protobuf.Descriptors.EnumDescriptor;
import com.google.protobuf.Descriptors.EnumValueDescriptor;
import com.google.protobuf.Descriptors.FieldDescriptor;
import com.google.protobuf.Descriptors.FileDescriptor;
import com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner;
import com.google.protobuf.Descriptors.OneofDescriptor;
import com.google.protobuf.ExtensionRegistry;
import com.google.protobuf.ExtensionRegistryLite;
import com.google.protobuf.GeneratedMessageV3;
import com.google.protobuf.GeneratedMessageV3.FieldAccessorTable;
import com.google.protobuf.Internal;
import com.google.protobuf.Internal.EnumLiteMap;
import com.google.protobuf.InvalidProtocolBufferException;
import com.google.protobuf.LazyStringArrayList;
import com.google.protobuf.LazyStringList;
import com.google.protobuf.Message;
import com.google.protobuf.MessageLite;
import com.google.protobuf.MessageOrBuilder;
import com.google.protobuf.Parser;
import com.google.protobuf.ProtocolMessageEnum;
import com.google.protobuf.ProtocolStringList;
import com.google.protobuf.RepeatedFieldBuilderV3;
import com.google.protobuf.SingleFieldBuilderV3;
import com.google.protobuf.UnknownFieldSet;
import java.io.IOException;
import java.io.InputStream;
import java.nio.ByteBuffer;
import java.util.ArrayList;
import java.util.Collections;
import java.util.List;
import org.eclipse.jetty.http.HttpHeaders;
import tv.danmaku.ijk.media.player.IjkMediaMeta;

public final class Messages {
    /* access modifiers changed from: private */
    public static FileDescriptor descriptor;
    /* access modifiers changed from: private */
    public static final Descriptor internal_static_com_avos_avoscloud_AckCommand_descriptor = ((Descriptor) getDescriptor().getMessageTypes().get(8));
    /* access modifiers changed from: private */
    public static final FieldAccessorTable internal_static_com_avos_avoscloud_AckCommand_fieldAccessorTable = new FieldAccessorTable(internal_static_com_avos_avoscloud_AckCommand_descriptor, new String[]{"Code", "Reason", "Mid", "Cid", "T", "Uid", "Fromts", "Tots", "Type", "Ids", "AppCode"});
    /* access modifiers changed from: private */
    public static final Descriptor internal_static_com_avos_avoscloud_BlacklistCommand_descriptor = ((Descriptor) getDescriptor().getMessageTypes().get(22));
    /* access modifiers changed from: private */
    public static final FieldAccessorTable internal_static_com_avos_avoscloud_BlacklistCommand_fieldAccessorTable = new FieldAccessorTable(internal_static_com_avos_avoscloud_BlacklistCommand_descriptor, new String[]{"SrcCid", "ToPids", "SrcPid", "ToCids", "Limit", "Next", "BlockedPids", "BlockedCids", "AllowedPids", "FailedPids", "T", "N", "S"});
    /* access modifiers changed from: private */
    public static final Descriptor internal_static_com_avos_avoscloud_ConvCommand_descriptor = ((Descriptor) getDescriptor().getMessageTypes().get(10));
    /* access modifiers changed from: private */
    public static final FieldAccessorTable internal_static_com_avos_avoscloud_ConvCommand_fieldAccessorTable = new FieldAccessorTable(internal_static_com_avos_avoscloud_ConvCommand_descriptor, new String[]{"M", "Transient", "Unique", "Cid", "Cdate", "InitBy", "Sort", "Limit", "Skip", "Flag", "Count", "Udate", "T", "N", "S", "StatusSub", "StatusPub", "StatusTTL", "UniqueId", "TargetClientId", "MaxReadTimestamp", "MaxAckTimestamp", "QueryAllMembers", "MaxReadTuples", "Cids", "Info", "TempConv", "TempConvTTL", "TempConvIds", "AllowedPids", "FailedPids", "Next", "Results", "Where", "Attr"});
    /* access modifiers changed from: private */
    public static final Descriptor internal_static_com_avos_avoscloud_ConvMemberInfo_descriptor = ((Descriptor) getDescriptor().getMessageTypes().get(3));
    /* access modifiers changed from: private */
    public static final FieldAccessorTable internal_static_com_avos_avoscloud_ConvMemberInfo_fieldAccessorTable;
    /* access modifiers changed from: private */
    public static final Descriptor internal_static_com_avos_avoscloud_DataCommand_descriptor = ((Descriptor) getDescriptor().getMessageTypes().get(4));
    /* access modifiers changed from: private */
    public static final FieldAccessorTable internal_static_com_avos_avoscloud_DataCommand_fieldAccessorTable = new FieldAccessorTable(internal_static_com_avos_avoscloud_DataCommand_descriptor, new String[]{"Ids", "Msg", "Offline"});
    /* access modifiers changed from: private */
    public static final Descriptor internal_static_com_avos_avoscloud_DirectCommand_descriptor = ((Descriptor) getDescriptor().getMessageTypes().get(7));
    /* access modifiers changed from: private */
    public static final FieldAccessorTable internal_static_com_avos_avoscloud_DirectCommand_fieldAccessorTable = new FieldAccessorTable(internal_static_com_avos_avoscloud_DirectCommand_descriptor, new String[]{"Msg", "Uid", "FromPeerId", "Timestamp", "Offline", "HasMore", "ToPeerIds", "R", "Cid", "Id", "Transient", "Dt", "RoomId", "PushData", "Will", "PatchTimestamp", "BinaryMsg", "MentionPids", "MentionAll", "ConvType"});
    /* access modifiers changed from: private */
    public static final Descriptor internal_static_com_avos_avoscloud_ErrorCommand_descriptor = ((Descriptor) getDescriptor().getMessageTypes().get(6));
    /* access modifiers changed from: private */
    public static final FieldAccessorTable internal_static_com_avos_avoscloud_ErrorCommand_fieldAccessorTable = new FieldAccessorTable(internal_static_com_avos_avoscloud_ErrorCommand_descriptor, new String[]{"Code", "Reason", "AppCode", "Detail", "Pids"});
    /* access modifiers changed from: private */
    public static final Descriptor internal_static_com_avos_avoscloud_GenericCommand_descriptor = ((Descriptor) getDescriptor().getMessageTypes().get(23));
    /* access modifiers changed from: private */
    public static final FieldAccessorTable internal_static_com_avos_avoscloud_GenericCommand_fieldAccessorTable = new FieldAccessorTable(internal_static_com_avos_avoscloud_GenericCommand_descriptor, new String[]{"Cmd", "Op", "AppId", "PeerId", "I", "InstallationId", "Priority", "Service", "ServerTs", "DataMessage", "SessionMessage", "ErrorMessage", "DirectMessage", "AckMessage", "UnreadMessage", "ReadMessage", "RcpMessage", "LogsMessage", "ConvMessage", "RoomMessage", "PresenceMessage", "ReportMessage", "PatchMessage", "PubsubMessage", "BlacklistMessage"});
    /* access modifiers changed from: private */
    public static final Descriptor internal_static_com_avos_avoscloud_JsonObjectMessage_descriptor = ((Descriptor) getDescriptor().getMessageTypes().get(0));
    /* access modifiers changed from: private */
    public static final FieldAccessorTable internal_static_com_avos_avoscloud_JsonObjectMessage_fieldAccessorTable;
    /* access modifiers changed from: private */
    public static final Descriptor internal_static_com_avos_avoscloud_LogItem_descriptor = ((Descriptor) getDescriptor().getMessageTypes().get(2));
    /* access modifiers changed from: private */
    public static final FieldAccessorTable internal_static_com_avos_avoscloud_LogItem_fieldAccessorTable = new FieldAccessorTable(internal_static_com_avos_avoscloud_LogItem_descriptor, new String[]{HttpHeaders.FROM, "Data", "Timestamp", "MsgId", "AckAt", "ReadAt", "PatchTimestamp", "MentionAll", "MentionPids", "Bin", "ConvType"});
    /* access modifiers changed from: private */
    public static final Descriptor internal_static_com_avos_avoscloud_LogsCommand_descriptor = ((Descriptor) getDescriptor().getMessageTypes().get(12));
    /* access modifiers changed from: private */
    public static final FieldAccessorTable internal_static_com_avos_avoscloud_LogsCommand_fieldAccessorTable = new FieldAccessorTable(internal_static_com_avos_avoscloud_LogsCommand_descriptor, new String[]{"Cid", "L", "Limit", "T", "Tt", "Tmid", "Mid", "Checksum", "Stored", "Direction", "TIncluded", "TtIncluded", "Lctype", "Logs"});
    /* access modifiers changed from: private */
    public static final Descriptor internal_static_com_avos_avoscloud_MaxReadTuple_descriptor = ((Descriptor) getDescriptor().getMessageTypes().get(15));
    /* access modifiers changed from: private */
    public static final FieldAccessorTable internal_static_com_avos_avoscloud_MaxReadTuple_fieldAccessorTable;
    /* access modifiers changed from: private */
    public static final Descriptor internal_static_com_avos_avoscloud_PatchCommand_descriptor = ((Descriptor) getDescriptor().getMessageTypes().get(20));
    /* access modifiers changed from: private */
    public static final FieldAccessorTable internal_static_com_avos_avoscloud_PatchCommand_fieldAccessorTable = new FieldAccessorTable(internal_static_com_avos_avoscloud_PatchCommand_descriptor, new String[]{"Patches", "LastPatchTime"});
    /* access modifiers changed from: private */
    public static final Descriptor internal_static_com_avos_avoscloud_PatchItem_descriptor = ((Descriptor) getDescriptor().getMessageTypes().get(19));
    /* access modifiers changed from: private */
    public static final FieldAccessorTable internal_static_com_avos_avoscloud_PatchItem_fieldAccessorTable = new FieldAccessorTable(internal_static_com_avos_avoscloud_PatchItem_descriptor, new String[]{"Cid", "Mid", "Timestamp", "Recall", "Data", "PatchTimestamp", HttpHeaders.FROM, "BinaryMsg", "MentionAll", "MentionPids"});
    /* access modifiers changed from: private */
    public static final Descriptor internal_static_com_avos_avoscloud_PresenceCommand_descriptor = ((Descriptor) getDescriptor().getMessageTypes().get(17));
    /* access modifiers changed from: private */
    public static final FieldAccessorTable internal_static_com_avos_avoscloud_PresenceCommand_fieldAccessorTable;
    /* access modifiers changed from: private */
    public static final Descriptor internal_static_com_avos_avoscloud_PubsubCommand_descriptor = ((Descriptor) getDescriptor().getMessageTypes().get(21));
    /* access modifiers changed from: private */
    public static final FieldAccessorTable internal_static_com_avos_avoscloud_PubsubCommand_fieldAccessorTable = new FieldAccessorTable(internal_static_com_avos_avoscloud_PubsubCommand_descriptor, new String[]{"Cid", "Cids", "Topic", "Subtopic", "Topics", "Subtopics", "Results"});
    /* access modifiers changed from: private */
    public static final Descriptor internal_static_com_avos_avoscloud_RcpCommand_descriptor = ((Descriptor) getDescriptor().getMessageTypes().get(13));
    /* access modifiers changed from: private */
    public static final FieldAccessorTable internal_static_com_avos_avoscloud_RcpCommand_fieldAccessorTable;
    /* access modifiers changed from: private */
    public static final Descriptor internal_static_com_avos_avoscloud_ReadCommand_descriptor = ((Descriptor) getDescriptor().getMessageTypes().get(16));
    /* access modifiers changed from: private */
    public static final FieldAccessorTable internal_static_com_avos_avoscloud_ReadCommand_fieldAccessorTable;
    /* access modifiers changed from: private */
    public static final Descriptor internal_static_com_avos_avoscloud_ReadTuple_descriptor = ((Descriptor) getDescriptor().getMessageTypes().get(14));
    /* access modifiers changed from: private */
    public static final FieldAccessorTable internal_static_com_avos_avoscloud_ReadTuple_fieldAccessorTable;
    /* access modifiers changed from: private */
    public static final Descriptor internal_static_com_avos_avoscloud_ReportCommand_descriptor = ((Descriptor) getDescriptor().getMessageTypes().get(18));
    /* access modifiers changed from: private */
    public static final FieldAccessorTable internal_static_com_avos_avoscloud_ReportCommand_fieldAccessorTable;
    /* access modifiers changed from: private */
    public static final Descriptor internal_static_com_avos_avoscloud_RoomCommand_descriptor = ((Descriptor) getDescriptor().getMessageTypes().get(11));
    /* access modifiers changed from: private */
    public static final FieldAccessorTable internal_static_com_avos_avoscloud_RoomCommand_fieldAccessorTable = new FieldAccessorTable(internal_static_com_avos_avoscloud_RoomCommand_descriptor, new String[]{"RoomId", "S", "T", "N", "Transient", "RoomPeerIds", "ByPeerId"});
    /* access modifiers changed from: private */
    public static final Descriptor internal_static_com_avos_avoscloud_SessionCommand_descriptor = ((Descriptor) getDescriptor().getMessageTypes().get(5));
    /* access modifiers changed from: private */
    public static final FieldAccessorTable internal_static_com_avos_avoscloud_SessionCommand_fieldAccessorTable = new FieldAccessorTable(internal_static_com_avos_avoscloud_SessionCommand_descriptor, new String[]{"T", "N", "S", "Ua", "R", "Tag", "DeviceId", "SessionPeerIds", "OnlineSessionPeerIds", "St", "StTtl", "Code", "Reason", "DeviceToken", "Sp", "Detail", "LastUnreadNotifTime", "LastPatchTime", "ConfigBitmap"});
    /* access modifiers changed from: private */
    public static final Descriptor internal_static_com_avos_avoscloud_UnreadCommand_descriptor = ((Descriptor) getDescriptor().getMessageTypes().get(9));
    /* access modifiers changed from: private */
    public static final FieldAccessorTable internal_static_com_avos_avoscloud_UnreadCommand_fieldAccessorTable;
    /* access modifiers changed from: private */
    public static final Descriptor internal_static_com_avos_avoscloud_UnreadTuple_descriptor = ((Descriptor) getDescriptor().getMessageTypes().get(1));
    /* access modifiers changed from: private */
    public static final FieldAccessorTable internal_static_com_avos_avoscloud_UnreadTuple_fieldAccessorTable = new FieldAccessorTable(internal_static_com_avos_avoscloud_UnreadTuple_descriptor, new String[]{"Cid", "Unread", "Mid", "Timestamp", HttpHeaders.FROM, "Data", "PatchTimestamp", "Mentioned", "BinaryMsg", "ConvType"});

    public static final class AckCommand extends GeneratedMessageV3 implements AckCommandOrBuilder {
        public static final int APPCODE_FIELD_NUMBER = 11;
        public static final int CID_FIELD_NUMBER = 4;
        public static final int CODE_FIELD_NUMBER = 1;
        private static final AckCommand DEFAULT_INSTANCE = new AckCommand();
        public static final int FROMTS_FIELD_NUMBER = 7;
        public static final int IDS_FIELD_NUMBER = 10;
        public static final int MID_FIELD_NUMBER = 3;
        @Deprecated
        public static final Parser<AckCommand> PARSER = new AbstractParser<AckCommand>() {
            public AckCommand parsePartialFrom(CodedInputStream codedInputStream, ExtensionRegistryLite extensionRegistryLite) throws InvalidProtocolBufferException {
                return new AckCommand(codedInputStream, extensionRegistryLite);
            }
        };
        public static final int REASON_FIELD_NUMBER = 2;
        public static final int TOTS_FIELD_NUMBER = 8;
        public static final int TYPE_FIELD_NUMBER = 9;
        public static final int T_FIELD_NUMBER = 5;
        public static final int UID_FIELD_NUMBER = 6;
        private static final long serialVersionUID = 0;
        /* access modifiers changed from: private */
        public int appCode_;
        /* access modifiers changed from: private */
        public int bitField0_;
        /* access modifiers changed from: private */
        public volatile Object cid_;
        /* access modifiers changed from: private */
        public int code_;
        /* access modifiers changed from: private */
        public long fromts_;
        /* access modifiers changed from: private */
        public LazyStringList ids_;
        private byte memoizedIsInitialized;
        /* access modifiers changed from: private */
        public volatile Object mid_;
        /* access modifiers changed from: private */
        public volatile Object reason_;
        /* access modifiers changed from: private */
        public long t_;
        /* access modifiers changed from: private */
        public long tots_;
        /* access modifiers changed from: private */
        public volatile Object type_;
        /* access modifiers changed from: private */
        public volatile Object uid_;

        public static final class Builder extends com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements AckCommandOrBuilder {
            private int appCode_;
            private int bitField0_;
            private Object cid_;
            private int code_;
            private long fromts_;
            private LazyStringList ids_;
            private Object mid_;
            private Object reason_;
            private long t_;
            private long tots_;
            private Object type_;
            private Object uid_;

            public final boolean isInitialized() {
                return true;
            }

            public static final Descriptor getDescriptor() {
                return Messages.internal_static_com_avos_avoscloud_AckCommand_descriptor;
            }

            /* access modifiers changed from: protected */
            public FieldAccessorTable internalGetFieldAccessorTable() {
                return Messages.internal_static_com_avos_avoscloud_AckCommand_fieldAccessorTable.ensureFieldAccessorsInitialized(AckCommand.class, Builder.class);
            }

            private Builder() {
                String str = "";
                this.reason_ = str;
                this.mid_ = str;
                this.cid_ = str;
                this.uid_ = str;
                this.type_ = str;
                this.ids_ = LazyStringArrayList.EMPTY;
                maybeForceBuilderInitialization();
            }

            private Builder(BuilderParent builderParent) {
                super(builderParent);
                String str = "";
                this.reason_ = str;
                this.mid_ = str;
                this.cid_ = str;
                this.uid_ = str;
                this.type_ = str;
                this.ids_ = LazyStringArrayList.EMPTY;
                maybeForceBuilderInitialization();
            }

            private void maybeForceBuilderInitialization() {
                AckCommand.alwaysUseFieldBuilders;
            }

            public Builder clear() {
                super.clear();
                this.code_ = 0;
                this.bitField0_ &= -2;
                String str = "";
                this.reason_ = str;
                this.bitField0_ &= -3;
                this.mid_ = str;
                this.bitField0_ &= -5;
                this.cid_ = str;
                this.bitField0_ &= -9;
                this.t_ = 0;
                this.bitField0_ &= -17;
                this.uid_ = str;
                this.bitField0_ &= -33;
                this.fromts_ = 0;
                this.bitField0_ &= -65;
                this.tots_ = 0;
                this.bitField0_ &= -129;
                this.type_ = str;
                this.bitField0_ &= -257;
                this.ids_ = LazyStringArrayList.EMPTY;
                this.bitField0_ &= -513;
                this.appCode_ = 0;
                this.bitField0_ &= -1025;
                return this;
            }

            public Descriptor getDescriptorForType() {
                return Messages.internal_static_com_avos_avoscloud_AckCommand_descriptor;
            }

            public AckCommand getDefaultInstanceForType() {
                return AckCommand.getDefaultInstance();
            }

            public AckCommand build() {
                AckCommand buildPartial = buildPartial();
                if (buildPartial.isInitialized()) {
                    return buildPartial;
                }
                throw newUninitializedMessageException(buildPartial);
            }

            public AckCommand buildPartial() {
                AckCommand ackCommand = new AckCommand((com.google.protobuf.GeneratedMessageV3.Builder) this);
                int i = this.bitField0_;
                int i2 = 1;
                if ((i & 1) != 1) {
                    i2 = 0;
                }
                ackCommand.code_ = this.code_;
                if ((i & 2) == 2) {
                    i2 |= 2;
                }
                ackCommand.reason_ = this.reason_;
                if ((i & 4) == 4) {
                    i2 |= 4;
                }
                ackCommand.mid_ = this.mid_;
                if ((i & 8) == 8) {
                    i2 |= 8;
                }
                ackCommand.cid_ = this.cid_;
                if ((i & 16) == 16) {
                    i2 |= 16;
                }
                ackCommand.t_ = this.t_;
                if ((i & 32) == 32) {
                    i2 |= 32;
                }
                ackCommand.uid_ = this.uid_;
                if ((i & 64) == 64) {
                    i2 |= 64;
                }
                ackCommand.fromts_ = this.fromts_;
                if ((i & 128) == 128) {
                    i2 |= 128;
                }
                ackCommand.tots_ = this.tots_;
                if ((i & 256) == 256) {
                    i2 |= 256;
                }
                ackCommand.type_ = this.type_;
                if ((this.bitField0_ & 512) == 512) {
                    this.ids_ = this.ids_.getUnmodifiableView();
                    this.bitField0_ &= -513;
                }
                ackCommand.ids_ = this.ids_;
                if ((i & 1024) == 1024) {
                    i2 |= 512;
                }
                ackCommand.appCode_ = this.appCode_;
                ackCommand.bitField0_ = i2;
                onBuilt();
                return ackCommand;
            }

            public Builder clone() {
                return (Builder) super.clone();
            }

            public Builder setField(FieldDescriptor fieldDescriptor, Object obj) {
                return (Builder) super.setField(fieldDescriptor, obj);
            }

            public Builder clearField(FieldDescriptor fieldDescriptor) {
                return (Builder) super.clearField(fieldDescriptor);
            }

            public Builder clearOneof(OneofDescriptor oneofDescriptor) {
                return (Builder) super.clearOneof(oneofDescriptor);
            }

            public Builder setRepeatedField(FieldDescriptor fieldDescriptor, int i, Object obj) {
                return (Builder) super.setRepeatedField(fieldDescriptor, i, obj);
            }

            public Builder addRepeatedField(FieldDescriptor fieldDescriptor, Object obj) {
                return (Builder) super.addRepeatedField(fieldDescriptor, obj);
            }

            public Builder mergeFrom(Message message) {
                if (message instanceof AckCommand) {
                    return mergeFrom((AckCommand) message);
                }
                super.mergeFrom(message);
                return this;
            }

            public Builder mergeFrom(AckCommand ackCommand) {
                if (ackCommand == AckCommand.getDefaultInstance()) {
                    return this;
                }
                if (ackCommand.hasCode()) {
                    setCode(ackCommand.getCode());
                }
                if (ackCommand.hasReason()) {
                    this.bitField0_ |= 2;
                    this.reason_ = ackCommand.reason_;
                    onChanged();
                }
                if (ackCommand.hasMid()) {
                    this.bitField0_ |= 4;
                    this.mid_ = ackCommand.mid_;
                    onChanged();
                }
                if (ackCommand.hasCid()) {
                    this.bitField0_ |= 8;
                    this.cid_ = ackCommand.cid_;
                    onChanged();
                }
                if (ackCommand.hasT()) {
                    setT(ackCommand.getT());
                }
                if (ackCommand.hasUid()) {
                    this.bitField0_ |= 32;
                    this.uid_ = ackCommand.uid_;
                    onChanged();
                }
                if (ackCommand.hasFromts()) {
                    setFromts(ackCommand.getFromts());
                }
                if (ackCommand.hasTots()) {
                    setTots(ackCommand.getTots());
                }
                if (ackCommand.hasType()) {
                    this.bitField0_ |= 256;
                    this.type_ = ackCommand.type_;
                    onChanged();
                }
                if (!ackCommand.ids_.isEmpty()) {
                    if (this.ids_.isEmpty()) {
                        this.ids_ = ackCommand.ids_;
                        this.bitField0_ &= -513;
                    } else {
                        ensureIdsIsMutable();
                        this.ids_.addAll(ackCommand.ids_);
                    }
                    onChanged();
                }
                if (ackCommand.hasAppCode()) {
                    setAppCode(ackCommand.getAppCode());
                }
                mergeUnknownFields(ackCommand.unknownFields);
                onChanged();
                return this;
            }

            /* JADX WARNING: Removed duplicated region for block: B:16:0x0021  */
            /* Code decompiled incorrectly, please refer to instructions dump. */
            public com.avos.avoscloud.Messages.AckCommand.Builder mergeFrom(com.google.protobuf.CodedInputStream r3, com.google.protobuf.ExtensionRegistryLite r4) throws java.io.IOException {
                /*
                    r2 = this;
                    r0 = 0
                    com.google.protobuf.Parser<com.avos.avoscloud.Messages$AckCommand> r1 = com.avos.avoscloud.Messages.AckCommand.PARSER     // Catch:{ InvalidProtocolBufferException -> 0x0011 }
                    java.lang.Object r3 = r1.parsePartialFrom(r3, r4)     // Catch:{ InvalidProtocolBufferException -> 0x0011 }
                    com.avos.avoscloud.Messages$AckCommand r3 = (com.avos.avoscloud.Messages.AckCommand) r3     // Catch:{ InvalidProtocolBufferException -> 0x0011 }
                    if (r3 == 0) goto L_0x000e
                    r2.mergeFrom(r3)
                L_0x000e:
                    return r2
                L_0x000f:
                    r3 = move-exception
                    goto L_0x001f
                L_0x0011:
                    r3 = move-exception
                    com.google.protobuf.MessageLite r4 = r3.getUnfinishedMessage()     // Catch:{ all -> 0x000f }
                    com.avos.avoscloud.Messages$AckCommand r4 = (com.avos.avoscloud.Messages.AckCommand) r4     // Catch:{ all -> 0x000f }
                    java.io.IOException r3 = r3.unwrapIOException()     // Catch:{ all -> 0x001d }
                    throw r3     // Catch:{ all -> 0x001d }
                L_0x001d:
                    r3 = move-exception
                    r0 = r4
                L_0x001f:
                    if (r0 == 0) goto L_0x0024
                    r2.mergeFrom(r0)
                L_0x0024:
                    throw r3
                */
                throw new UnsupportedOperationException("Method not decompiled: com.avos.avoscloud.Messages.AckCommand.Builder.mergeFrom(com.google.protobuf.CodedInputStream, com.google.protobuf.ExtensionRegistryLite):com.avos.avoscloud.Messages$AckCommand$Builder");
            }

            public boolean hasCode() {
                return (this.bitField0_ & 1) == 1;
            }

            public int getCode() {
                return this.code_;
            }

            public Builder setCode(int i) {
                this.bitField0_ |= 1;
                this.code_ = i;
                onChanged();
                return this;
            }

            public Builder clearCode() {
                this.bitField0_ &= -2;
                this.code_ = 0;
                onChanged();
                return this;
            }

            public boolean hasReason() {
                return (this.bitField0_ & 2) == 2;
            }

            public String getReason() {
                Object obj = this.reason_;
                if (obj instanceof String) {
                    return (String) obj;
                }
                ByteString byteString = (ByteString) obj;
                String stringUtf8 = byteString.toStringUtf8();
                if (byteString.isValidUtf8()) {
                    this.reason_ = stringUtf8;
                }
                return stringUtf8;
            }

            public ByteString getReasonBytes() {
                Object obj = this.reason_;
                if (!(obj instanceof String)) {
                    return (ByteString) obj;
                }
                ByteString copyFromUtf8 = ByteString.copyFromUtf8((String) obj);
                this.reason_ = copyFromUtf8;
                return copyFromUtf8;
            }

            public Builder setReason(String str) {
                if (str != null) {
                    this.bitField0_ |= 2;
                    this.reason_ = str;
                    onChanged();
                    return this;
                }
                throw new NullPointerException();
            }

            public Builder clearReason() {
                this.bitField0_ &= -3;
                this.reason_ = AckCommand.getDefaultInstance().getReason();
                onChanged();
                return this;
            }

            public Builder setReasonBytes(ByteString byteString) {
                if (byteString != null) {
                    this.bitField0_ |= 2;
                    this.reason_ = byteString;
                    onChanged();
                    return this;
                }
                throw new NullPointerException();
            }

            public boolean hasMid() {
                return (this.bitField0_ & 4) == 4;
            }

            public String getMid() {
                Object obj = this.mid_;
                if (obj instanceof String) {
                    return (String) obj;
                }
                ByteString byteString = (ByteString) obj;
                String stringUtf8 = byteString.toStringUtf8();
                if (byteString.isValidUtf8()) {
                    this.mid_ = stringUtf8;
                }
                return stringUtf8;
            }

            public ByteString getMidBytes() {
                Object obj = this.mid_;
                if (!(obj instanceof String)) {
                    return (ByteString) obj;
                }
                ByteString copyFromUtf8 = ByteString.copyFromUtf8((String) obj);
                this.mid_ = copyFromUtf8;
                return copyFromUtf8;
            }

            public Builder setMid(String str) {
                if (str != null) {
                    this.bitField0_ |= 4;
                    this.mid_ = str;
                    onChanged();
                    return this;
                }
                throw new NullPointerException();
            }

            public Builder clearMid() {
                this.bitField0_ &= -5;
                this.mid_ = AckCommand.getDefaultInstance().getMid();
                onChanged();
                return this;
            }

            public Builder setMidBytes(ByteString byteString) {
                if (byteString != null) {
                    this.bitField0_ |= 4;
                    this.mid_ = byteString;
                    onChanged();
                    return this;
                }
                throw new NullPointerException();
            }

            public boolean hasCid() {
                return (this.bitField0_ & 8) == 8;
            }

            public String getCid() {
                Object obj = this.cid_;
                if (obj instanceof String) {
                    return (String) obj;
                }
                ByteString byteString = (ByteString) obj;
                String stringUtf8 = byteString.toStringUtf8();
                if (byteString.isValidUtf8()) {
                    this.cid_ = stringUtf8;
                }
                return stringUtf8;
            }

            public ByteString getCidBytes() {
                Object obj = this.cid_;
                if (!(obj instanceof String)) {
                    return (ByteString) obj;
                }
                ByteString copyFromUtf8 = ByteString.copyFromUtf8((String) obj);
                this.cid_ = copyFromUtf8;
                return copyFromUtf8;
            }

            public Builder setCid(String str) {
                if (str != null) {
                    this.bitField0_ |= 8;
                    this.cid_ = str;
                    onChanged();
                    return this;
                }
                throw new NullPointerException();
            }

            public Builder clearCid() {
                this.bitField0_ &= -9;
                this.cid_ = AckCommand.getDefaultInstance().getCid();
                onChanged();
                return this;
            }

            public Builder setCidBytes(ByteString byteString) {
                if (byteString != null) {
                    this.bitField0_ |= 8;
                    this.cid_ = byteString;
                    onChanged();
                    return this;
                }
                throw new NullPointerException();
            }

            public boolean hasT() {
                return (this.bitField0_ & 16) == 16;
            }

            public long getT() {
                return this.t_;
            }

            public Builder setT(long j) {
                this.bitField0_ |= 16;
                this.t_ = j;
                onChanged();
                return this;
            }

            public Builder clearT() {
                this.bitField0_ &= -17;
                this.t_ = 0;
                onChanged();
                return this;
            }

            public boolean hasUid() {
                return (this.bitField0_ & 32) == 32;
            }

            public String getUid() {
                Object obj = this.uid_;
                if (obj instanceof String) {
                    return (String) obj;
                }
                ByteString byteString = (ByteString) obj;
                String stringUtf8 = byteString.toStringUtf8();
                if (byteString.isValidUtf8()) {
                    this.uid_ = stringUtf8;
                }
                return stringUtf8;
            }

            public ByteString getUidBytes() {
                Object obj = this.uid_;
                if (!(obj instanceof String)) {
                    return (ByteString) obj;
                }
                ByteString copyFromUtf8 = ByteString.copyFromUtf8((String) obj);
                this.uid_ = copyFromUtf8;
                return copyFromUtf8;
            }

            public Builder setUid(String str) {
                if (str != null) {
                    this.bitField0_ |= 32;
                    this.uid_ = str;
                    onChanged();
                    return this;
                }
                throw new NullPointerException();
            }

            public Builder clearUid() {
                this.bitField0_ &= -33;
                this.uid_ = AckCommand.getDefaultInstance().getUid();
                onChanged();
                return this;
            }

            public Builder setUidBytes(ByteString byteString) {
                if (byteString != null) {
                    this.bitField0_ |= 32;
                    this.uid_ = byteString;
                    onChanged();
                    return this;
                }
                throw new NullPointerException();
            }

            public boolean hasFromts() {
                return (this.bitField0_ & 64) == 64;
            }

            public long getFromts() {
                return this.fromts_;
            }

            public Builder setFromts(long j) {
                this.bitField0_ |= 64;
                this.fromts_ = j;
                onChanged();
                return this;
            }

            public Builder clearFromts() {
                this.bitField0_ &= -65;
                this.fromts_ = 0;
                onChanged();
                return this;
            }

            public boolean hasTots() {
                return (this.bitField0_ & 128) == 128;
            }

            public long getTots() {
                return this.tots_;
            }

            public Builder setTots(long j) {
                this.bitField0_ |= 128;
                this.tots_ = j;
                onChanged();
                return this;
            }

            public Builder clearTots() {
                this.bitField0_ &= -129;
                this.tots_ = 0;
                onChanged();
                return this;
            }

            public boolean hasType() {
                return (this.bitField0_ & 256) == 256;
            }

            public String getType() {
                Object obj = this.type_;
                if (obj instanceof String) {
                    return (String) obj;
                }
                ByteString byteString = (ByteString) obj;
                String stringUtf8 = byteString.toStringUtf8();
                if (byteString.isValidUtf8()) {
                    this.type_ = stringUtf8;
                }
                return stringUtf8;
            }

            public ByteString getTypeBytes() {
                Object obj = this.type_;
                if (!(obj instanceof String)) {
                    return (ByteString) obj;
                }
                ByteString copyFromUtf8 = ByteString.copyFromUtf8((String) obj);
                this.type_ = copyFromUtf8;
                return copyFromUtf8;
            }

            public Builder setType(String str) {
                if (str != null) {
                    this.bitField0_ |= 256;
                    this.type_ = str;
                    onChanged();
                    return this;
                }
                throw new NullPointerException();
            }

            public Builder clearType() {
                this.bitField0_ &= -257;
                this.type_ = AckCommand.getDefaultInstance().getType();
                onChanged();
                return this;
            }

            public Builder setTypeBytes(ByteString byteString) {
                if (byteString != null) {
                    this.bitField0_ |= 256;
                    this.type_ = byteString;
                    onChanged();
                    return this;
                }
                throw new NullPointerException();
            }

            private void ensureIdsIsMutable() {
                if ((this.bitField0_ & 512) != 512) {
                    this.ids_ = new LazyStringArrayList(this.ids_);
                    this.bitField0_ |= 512;
                }
            }

            public ProtocolStringList getIdsList() {
                return this.ids_.getUnmodifiableView();
            }

            public int getIdsCount() {
                return this.ids_.size();
            }

            public String getIds(int i) {
                return (String) this.ids_.get(i);
            }

            public ByteString getIdsBytes(int i) {
                return this.ids_.getByteString(i);
            }

            public Builder setIds(int i, String str) {
                if (str != null) {
                    ensureIdsIsMutable();
                    this.ids_.set(i, str);
                    onChanged();
                    return this;
                }
                throw new NullPointerException();
            }

            public Builder addIds(String str) {
                if (str != null) {
                    ensureIdsIsMutable();
                    this.ids_.add(str);
                    onChanged();
                    return this;
                }
                throw new NullPointerException();
            }

            public Builder addAllIds(Iterable<String> iterable) {
                ensureIdsIsMutable();
                com.google.protobuf.AbstractMessageLite.Builder.addAll((Iterable) iterable, (List) this.ids_);
                onChanged();
                return this;
            }

            public Builder clearIds() {
                this.ids_ = LazyStringArrayList.EMPTY;
                this.bitField0_ &= -513;
                onChanged();
                return this;
            }

            public Builder addIdsBytes(ByteString byteString) {
                if (byteString != null) {
                    ensureIdsIsMutable();
                    this.ids_.add(byteString);
                    onChanged();
                    return this;
                }
                throw new NullPointerException();
            }

            public boolean hasAppCode() {
                return (this.bitField0_ & 1024) == 1024;
            }

            public int getAppCode() {
                return this.appCode_;
            }

            public Builder setAppCode(int i) {
                this.bitField0_ |= 1024;
                this.appCode_ = i;
                onChanged();
                return this;
            }

            public Builder clearAppCode() {
                this.bitField0_ &= -1025;
                this.appCode_ = 0;
                onChanged();
                return this;
            }

            public final Builder setUnknownFields(UnknownFieldSet unknownFieldSet) {
                return (Builder) super.setUnknownFields(unknownFieldSet);
            }

            public final Builder mergeUnknownFields(UnknownFieldSet unknownFieldSet) {
                return (Builder) super.mergeUnknownFields(unknownFieldSet);
            }
        }

        private AckCommand(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
            super(builder);
            this.memoizedIsInitialized = -1;
        }

        private AckCommand() {
            this.memoizedIsInitialized = -1;
            this.code_ = 0;
            String str = "";
            this.reason_ = str;
            this.mid_ = str;
            this.cid_ = str;
            this.t_ = 0;
            this.uid_ = str;
            this.fromts_ = 0;
            this.tots_ = 0;
            this.type_ = str;
            this.ids_ = LazyStringArrayList.EMPTY;
            this.appCode_ = 0;
        }

        public final UnknownFieldSet getUnknownFields() {
            return this.unknownFields;
        }

        private AckCommand(CodedInputStream codedInputStream, ExtensionRegistryLite extensionRegistryLite) throws InvalidProtocolBufferException {
            this();
            com.google.protobuf.UnknownFieldSet.Builder newBuilder = UnknownFieldSet.newBuilder();
            boolean z = false;
            boolean z2 = false;
            while (!z) {
                try {
                    int readTag = codedInputStream.readTag();
                    switch (readTag) {
                        case 0:
                            z = true;
                            break;
                        case 8:
                            this.bitField0_ |= 1;
                            this.code_ = codedInputStream.readInt32();
                            break;
                        case 18:
                            ByteString readBytes = codedInputStream.readBytes();
                            this.bitField0_ |= 2;
                            this.reason_ = readBytes;
                            break;
                        case 26:
                            ByteString readBytes2 = codedInputStream.readBytes();
                            this.bitField0_ |= 4;
                            this.mid_ = readBytes2;
                            break;
                        case 34:
                            ByteString readBytes3 = codedInputStream.readBytes();
                            this.bitField0_ |= 8;
                            this.cid_ = readBytes3;
                            break;
                        case 40:
                            this.bitField0_ |= 16;
                            this.t_ = codedInputStream.readInt64();
                            break;
                        case 50:
                            ByteString readBytes4 = codedInputStream.readBytes();
                            this.bitField0_ |= 32;
                            this.uid_ = readBytes4;
                            break;
                        case 56:
                            this.bitField0_ |= 64;
                            this.fromts_ = codedInputStream.readInt64();
                            break;
                        case 64:
                            this.bitField0_ |= 128;
                            this.tots_ = codedInputStream.readInt64();
                            break;
                        case 74:
                            ByteString readBytes5 = codedInputStream.readBytes();
                            this.bitField0_ |= 256;
                            this.type_ = readBytes5;
                            break;
                        case 82:
                            ByteString readBytes6 = codedInputStream.readBytes();
                            if (!(z2 & true)) {
                                this.ids_ = new LazyStringArrayList();
                                z2 |= true;
                            }
                            this.ids_.add(readBytes6);
                            break;
                        case 88:
                            this.bitField0_ |= 512;
                            this.appCode_ = codedInputStream.readInt32();
                            break;
                        default:
                            if (parseUnknownField(codedInputStream, newBuilder, extensionRegistryLite, readTag)) {
                                break;
                            }
                            z = true;
                            break;
                    }
                } catch (InvalidProtocolBufferException e) {
                    throw e.setUnfinishedMessage(this);
                } catch (IOException e2) {
                    throw new InvalidProtocolBufferException(e2).setUnfinishedMessage(this);
                } catch (Throwable th) {
                    if (z2 & true) {
                        this.ids_ = this.ids_.getUnmodifiableView();
                    }
                    this.unknownFields = newBuilder.build();
                    makeExtensionsImmutable();
                    throw th;
                }
            }
            if (z2 & true) {
                this.ids_ = this.ids_.getUnmodifiableView();
            }
            this.unknownFields = newBuilder.build();
            makeExtensionsImmutable();
        }

        public static final Descriptor getDescriptor() {
            return Messages.internal_static_com_avos_avoscloud_AckCommand_descriptor;
        }

        /* access modifiers changed from: protected */
        public FieldAccessorTable internalGetFieldAccessorTable() {
            return Messages.internal_static_com_avos_avoscloud_AckCommand_fieldAccessorTable.ensureFieldAccessorsInitialized(AckCommand.class, Builder.class);
        }

        public boolean hasCode() {
            return (this.bitField0_ & 1) == 1;
        }

        public int getCode() {
            return this.code_;
        }

        public boolean hasReason() {
            return (this.bitField0_ & 2) == 2;
        }

        public String getReason() {
            Object obj = this.reason_;
            if (obj instanceof String) {
                return (String) obj;
            }
            ByteString byteString = (ByteString) obj;
            String stringUtf8 = byteString.toStringUtf8();
            if (byteString.isValidUtf8()) {
                this.reason_ = stringUtf8;
            }
            return stringUtf8;
        }

        public ByteString getReasonBytes() {
            Object obj = this.reason_;
            if (!(obj instanceof String)) {
                return (ByteString) obj;
            }
            ByteString copyFromUtf8 = ByteString.copyFromUtf8((String) obj);
            this.reason_ = copyFromUtf8;
            return copyFromUtf8;
        }

        public boolean hasMid() {
            return (this.bitField0_ & 4) == 4;
        }

        public String getMid() {
            Object obj = this.mid_;
            if (obj instanceof String) {
                return (String) obj;
            }
            ByteString byteString = (ByteString) obj;
            String stringUtf8 = byteString.toStringUtf8();
            if (byteString.isValidUtf8()) {
                this.mid_ = stringUtf8;
            }
            return stringUtf8;
        }

        public ByteString getMidBytes() {
            Object obj = this.mid_;
            if (!(obj instanceof String)) {
                return (ByteString) obj;
            }
            ByteString copyFromUtf8 = ByteString.copyFromUtf8((String) obj);
            this.mid_ = copyFromUtf8;
            return copyFromUtf8;
        }

        public boolean hasCid() {
            return (this.bitField0_ & 8) == 8;
        }

        public String getCid() {
            Object obj = this.cid_;
            if (obj instanceof String) {
                return (String) obj;
            }
            ByteString byteString = (ByteString) obj;
            String stringUtf8 = byteString.toStringUtf8();
            if (byteString.isValidUtf8()) {
                this.cid_ = stringUtf8;
            }
            return stringUtf8;
        }

        public ByteString getCidBytes() {
            Object obj = this.cid_;
            if (!(obj instanceof String)) {
                return (ByteString) obj;
            }
            ByteString copyFromUtf8 = ByteString.copyFromUtf8((String) obj);
            this.cid_ = copyFromUtf8;
            return copyFromUtf8;
        }

        public boolean hasT() {
            return (this.bitField0_ & 16) == 16;
        }

        public long getT() {
            return this.t_;
        }

        public boolean hasUid() {
            return (this.bitField0_ & 32) == 32;
        }

        public String getUid() {
            Object obj = this.uid_;
            if (obj instanceof String) {
                return (String) obj;
            }
            ByteString byteString = (ByteString) obj;
            String stringUtf8 = byteString.toStringUtf8();
            if (byteString.isValidUtf8()) {
                this.uid_ = stringUtf8;
            }
            return stringUtf8;
        }

        public ByteString getUidBytes() {
            Object obj = this.uid_;
            if (!(obj instanceof String)) {
                return (ByteString) obj;
            }
            ByteString copyFromUtf8 = ByteString.copyFromUtf8((String) obj);
            this.uid_ = copyFromUtf8;
            return copyFromUtf8;
        }

        public boolean hasFromts() {
            return (this.bitField0_ & 64) == 64;
        }

        public long getFromts() {
            return this.fromts_;
        }

        public boolean hasTots() {
            return (this.bitField0_ & 128) == 128;
        }

        public long getTots() {
            return this.tots_;
        }

        public boolean hasType() {
            return (this.bitField0_ & 256) == 256;
        }

        public String getType() {
            Object obj = this.type_;
            if (obj instanceof String) {
                return (String) obj;
            }
            ByteString byteString = (ByteString) obj;
            String stringUtf8 = byteString.toStringUtf8();
            if (byteString.isValidUtf8()) {
                this.type_ = stringUtf8;
            }
            return stringUtf8;
        }

        public ByteString getTypeBytes() {
            Object obj = this.type_;
            if (!(obj instanceof String)) {
                return (ByteString) obj;
            }
            ByteString copyFromUtf8 = ByteString.copyFromUtf8((String) obj);
            this.type_ = copyFromUtf8;
            return copyFromUtf8;
        }

        public ProtocolStringList getIdsList() {
            return this.ids_;
        }

        public int getIdsCount() {
            return this.ids_.size();
        }

        public String getIds(int i) {
            return (String) this.ids_.get(i);
        }

        public ByteString getIdsBytes(int i) {
            return this.ids_.getByteString(i);
        }

        public boolean hasAppCode() {
            return (this.bitField0_ & 512) == 512;
        }

        public int getAppCode() {
            return this.appCode_;
        }

        public final boolean isInitialized() {
            byte b = this.memoizedIsInitialized;
            if (b == 1) {
                return true;
            }
            if (b == 0) {
                return false;
            }
            this.memoizedIsInitialized = 1;
            return true;
        }

        public void writeTo(CodedOutputStream codedOutputStream) throws IOException {
            if ((this.bitField0_ & 1) == 1) {
                codedOutputStream.writeInt32(1, this.code_);
            }
            if ((this.bitField0_ & 2) == 2) {
                GeneratedMessageV3.writeString(codedOutputStream, 2, this.reason_);
            }
            if ((this.bitField0_ & 4) == 4) {
                GeneratedMessageV3.writeString(codedOutputStream, 3, this.mid_);
            }
            if ((this.bitField0_ & 8) == 8) {
                GeneratedMessageV3.writeString(codedOutputStream, 4, this.cid_);
            }
            if ((this.bitField0_ & 16) == 16) {
                codedOutputStream.writeInt64(5, this.t_);
            }
            if ((this.bitField0_ & 32) == 32) {
                GeneratedMessageV3.writeString(codedOutputStream, 6, this.uid_);
            }
            if ((this.bitField0_ & 64) == 64) {
                codedOutputStream.writeInt64(7, this.fromts_);
            }
            if ((this.bitField0_ & 128) == 128) {
                codedOutputStream.writeInt64(8, this.tots_);
            }
            if ((this.bitField0_ & 256) == 256) {
                GeneratedMessageV3.writeString(codedOutputStream, 9, this.type_);
            }
            for (int i = 0; i < this.ids_.size(); i++) {
                GeneratedMessageV3.writeString(codedOutputStream, 10, this.ids_.getRaw(i));
            }
            if ((this.bitField0_ & 512) == 512) {
                codedOutputStream.writeInt32(11, this.appCode_);
            }
            this.unknownFields.writeTo(codedOutputStream);
        }

        public int getSerializedSize() {
            int i = this.memoizedSize;
            if (i != -1) {
                return i;
            }
            int computeInt32Size = (this.bitField0_ & 1) == 1 ? CodedOutputStream.computeInt32Size(1, this.code_) + 0 : 0;
            if ((this.bitField0_ & 2) == 2) {
                computeInt32Size += GeneratedMessageV3.computeStringSize(2, this.reason_);
            }
            if ((this.bitField0_ & 4) == 4) {
                computeInt32Size += GeneratedMessageV3.computeStringSize(3, this.mid_);
            }
            if ((this.bitField0_ & 8) == 8) {
                computeInt32Size += GeneratedMessageV3.computeStringSize(4, this.cid_);
            }
            if ((this.bitField0_ & 16) == 16) {
                computeInt32Size += CodedOutputStream.computeInt64Size(5, this.t_);
            }
            if ((this.bitField0_ & 32) == 32) {
                computeInt32Size += GeneratedMessageV3.computeStringSize(6, this.uid_);
            }
            if ((this.bitField0_ & 64) == 64) {
                computeInt32Size += CodedOutputStream.computeInt64Size(7, this.fromts_);
            }
            if ((this.bitField0_ & 128) == 128) {
                computeInt32Size += CodedOutputStream.computeInt64Size(8, this.tots_);
            }
            if ((this.bitField0_ & 256) == 256) {
                computeInt32Size += GeneratedMessageV3.computeStringSize(9, this.type_);
            }
            int i2 = 0;
            for (int i3 = 0; i3 < this.ids_.size(); i3++) {
                i2 += computeStringSizeNoTag(this.ids_.getRaw(i3));
            }
            int size = computeInt32Size + i2 + (getIdsList().size() * 1);
            if ((this.bitField0_ & 512) == 512) {
                size += CodedOutputStream.computeInt32Size(11, this.appCode_);
            }
            int serializedSize = size + this.unknownFields.getSerializedSize();
            this.memoizedSize = serializedSize;
            return serializedSize;
        }

        public boolean equals(Object obj) {
            boolean z = true;
            if (obj == this) {
                return true;
            }
            if (!(obj instanceof AckCommand)) {
                return super.equals(obj);
            }
            AckCommand ackCommand = (AckCommand) obj;
            boolean z2 = hasCode() == ackCommand.hasCode();
            if (hasCode()) {
                z2 = z2 && getCode() == ackCommand.getCode();
            }
            boolean z3 = z2 && hasReason() == ackCommand.hasReason();
            if (hasReason()) {
                z3 = z3 && getReason().equals(ackCommand.getReason());
            }
            boolean z4 = z3 && hasMid() == ackCommand.hasMid();
            if (hasMid()) {
                z4 = z4 && getMid().equals(ackCommand.getMid());
            }
            boolean z5 = z4 && hasCid() == ackCommand.hasCid();
            if (hasCid()) {
                z5 = z5 && getCid().equals(ackCommand.getCid());
            }
            boolean z6 = z5 && hasT() == ackCommand.hasT();
            if (hasT()) {
                z6 = z6 && getT() == ackCommand.getT();
            }
            boolean z7 = z6 && hasUid() == ackCommand.hasUid();
            if (hasUid()) {
                z7 = z7 && getUid().equals(ackCommand.getUid());
            }
            boolean z8 = z7 && hasFromts() == ackCommand.hasFromts();
            if (hasFromts()) {
                z8 = z8 && getFromts() == ackCommand.getFromts();
            }
            boolean z9 = z8 && hasTots() == ackCommand.hasTots();
            if (hasTots()) {
                z9 = z9 && getTots() == ackCommand.getTots();
            }
            boolean z10 = z9 && hasType() == ackCommand.hasType();
            if (hasType()) {
                z10 = z10 && getType().equals(ackCommand.getType());
            }
            boolean z11 = (z10 && getIdsList().equals(ackCommand.getIdsList())) && hasAppCode() == ackCommand.hasAppCode();
            if (hasAppCode()) {
                z11 = z11 && getAppCode() == ackCommand.getAppCode();
            }
            if (!z11 || !this.unknownFields.equals(ackCommand.unknownFields)) {
                z = false;
            }
            return z;
        }

        public int hashCode() {
            if (this.memoizedHashCode != 0) {
                return this.memoizedHashCode;
            }
            int hashCode = 779 + getDescriptor().hashCode();
            if (hasCode()) {
                hashCode = (((hashCode * 37) + 1) * 53) + getCode();
            }
            if (hasReason()) {
                hashCode = (((hashCode * 37) + 2) * 53) + getReason().hashCode();
            }
            if (hasMid()) {
                hashCode = (((hashCode * 37) + 3) * 53) + getMid().hashCode();
            }
            if (hasCid()) {
                hashCode = (((hashCode * 37) + 4) * 53) + getCid().hashCode();
            }
            if (hasT()) {
                hashCode = (((hashCode * 37) + 5) * 53) + Internal.hashLong(getT());
            }
            if (hasUid()) {
                hashCode = (((hashCode * 37) + 6) * 53) + getUid().hashCode();
            }
            if (hasFromts()) {
                hashCode = (((hashCode * 37) + 7) * 53) + Internal.hashLong(getFromts());
            }
            if (hasTots()) {
                hashCode = (((hashCode * 37) + 8) * 53) + Internal.hashLong(getTots());
            }
            if (hasType()) {
                hashCode = (((hashCode * 37) + 9) * 53) + getType().hashCode();
            }
            if (getIdsCount() > 0) {
                hashCode = (((hashCode * 37) + 10) * 53) + getIdsList().hashCode();
            }
            if (hasAppCode()) {
                hashCode = (((hashCode * 37) + 11) * 53) + getAppCode();
            }
            int hashCode2 = (hashCode * 29) + this.unknownFields.hashCode();
            this.memoizedHashCode = hashCode2;
            return hashCode2;
        }

        public static AckCommand parseFrom(ByteBuffer byteBuffer) throws InvalidProtocolBufferException {
            return (AckCommand) PARSER.parseFrom(byteBuffer);
        }

        public static AckCommand parseFrom(ByteBuffer byteBuffer, ExtensionRegistryLite extensionRegistryLite) throws InvalidProtocolBufferException {
            return (AckCommand) PARSER.parseFrom(byteBuffer, extensionRegistryLite);
        }

        public static AckCommand parseFrom(ByteString byteString) throws InvalidProtocolBufferException {
            return (AckCommand) PARSER.parseFrom(byteString);
        }

        public static AckCommand parseFrom(ByteString byteString, ExtensionRegistryLite extensionRegistryLite) throws InvalidProtocolBufferException {
            return (AckCommand) PARSER.parseFrom(byteString, extensionRegistryLite);
        }

        public static AckCommand parseFrom(byte[] bArr) throws InvalidProtocolBufferException {
            return (AckCommand) PARSER.parseFrom(bArr);
        }

        public static AckCommand parseFrom(byte[] bArr, ExtensionRegistryLite extensionRegistryLite) throws InvalidProtocolBufferException {
            return (AckCommand) PARSER.parseFrom(bArr, extensionRegistryLite);
        }

        public static AckCommand parseFrom(InputStream inputStream) throws IOException {
            return (AckCommand) GeneratedMessageV3.parseWithIOException(PARSER, inputStream);
        }

        public static AckCommand parseFrom(InputStream inputStream, ExtensionRegistryLite extensionRegistryLite) throws IOException {
            return (AckCommand) GeneratedMessageV3.parseWithIOException(PARSER, inputStream, extensionRegistryLite);
        }

        public static AckCommand parseDelimitedFrom(InputStream inputStream) throws IOException {
            return (AckCommand) GeneratedMessageV3.parseDelimitedWithIOException(PARSER, inputStream);
        }

        public static AckCommand parseDelimitedFrom(InputStream inputStream, ExtensionRegistryLite extensionRegistryLite) throws IOException {
            return (AckCommand) GeneratedMessageV3.parseDelimitedWithIOException(PARSER, inputStream, extensionRegistryLite);
        }

        public static AckCommand parseFrom(CodedInputStream codedInputStream) throws IOException {
            return (AckCommand) GeneratedMessageV3.parseWithIOException(PARSER, codedInputStream);
        }

        public static AckCommand parseFrom(CodedInputStream codedInputStream, ExtensionRegistryLite extensionRegistryLite) throws IOException {
            return (AckCommand) GeneratedMessageV3.parseWithIOException(PARSER, codedInputStream, extensionRegistryLite);
        }

        public Builder newBuilderForType() {
            return newBuilder();
        }

        public static Builder newBuilder() {
            return DEFAULT_INSTANCE.toBuilder();
        }

        public static Builder newBuilder(AckCommand ackCommand) {
            return DEFAULT_INSTANCE.toBuilder().mergeFrom(ackCommand);
        }

        public Builder toBuilder() {
            if (this == DEFAULT_INSTANCE) {
                return new Builder();
            }
            return new Builder().mergeFrom(this);
        }

        /* access modifiers changed from: protected */
        public Builder newBuilderForType(BuilderParent builderParent) {
            return new Builder(builderParent);
        }

        public static AckCommand getDefaultInstance() {
            return DEFAULT_INSTANCE;
        }

        public static Parser<AckCommand> parser() {
            return PARSER;
        }

        public Parser<AckCommand> getParserForType() {
            return PARSER;
        }

        public AckCommand getDefaultInstanceForType() {
            return DEFAULT_INSTANCE;
        }
    }

    public interface AckCommandOrBuilder extends MessageOrBuilder {
        int getAppCode();

        String getCid();

        ByteString getCidBytes();

        int getCode();

        long getFromts();

        String getIds(int i);

        ByteString getIdsBytes(int i);

        int getIdsCount();

        List<String> getIdsList();

        String getMid();

        ByteString getMidBytes();

        String getReason();

        ByteString getReasonBytes();

        long getT();

        long getTots();

        String getType();

        ByteString getTypeBytes();

        String getUid();

        ByteString getUidBytes();

        boolean hasAppCode();

        boolean hasCid();

        boolean hasCode();

        boolean hasFromts();

        boolean hasMid();

        boolean hasReason();

        boolean hasT();

        boolean hasTots();

        boolean hasType();

        boolean hasUid();
    }

    public static final class BlacklistCommand extends GeneratedMessageV3 implements BlacklistCommandOrBuilder {
        public static final int ALLOWEDPIDS_FIELD_NUMBER = 10;
        public static final int BLOCKEDCIDS_FIELD_NUMBER = 9;
        public static final int BLOCKEDPIDS_FIELD_NUMBER = 8;
        private static final BlacklistCommand DEFAULT_INSTANCE = new BlacklistCommand();
        public static final int FAILEDPIDS_FIELD_NUMBER = 11;
        public static final int LIMIT_FIELD_NUMBER = 5;
        public static final int NEXT_FIELD_NUMBER = 6;
        public static final int N_FIELD_NUMBER = 13;
        @Deprecated
        public static final Parser<BlacklistCommand> PARSER = new AbstractParser<BlacklistCommand>() {
            public BlacklistCommand parsePartialFrom(CodedInputStream codedInputStream, ExtensionRegistryLite extensionRegistryLite) throws InvalidProtocolBufferException {
                return new BlacklistCommand(codedInputStream, extensionRegistryLite);
            }
        };
        public static final int SRCCID_FIELD_NUMBER = 1;
        public static final int SRCPID_FIELD_NUMBER = 3;
        public static final int S_FIELD_NUMBER = 14;
        public static final int TOCIDS_FIELD_NUMBER = 4;
        public static final int TOPIDS_FIELD_NUMBER = 2;
        public static final int T_FIELD_NUMBER = 12;
        private static final long serialVersionUID = 0;
        /* access modifiers changed from: private */
        public LazyStringList allowedPids_;
        /* access modifiers changed from: private */
        public int bitField0_;
        /* access modifiers changed from: private */
        public LazyStringList blockedCids_;
        /* access modifiers changed from: private */
        public LazyStringList blockedPids_;
        /* access modifiers changed from: private */
        public List<ErrorCommand> failedPids_;
        /* access modifiers changed from: private */
        public int limit_;
        private byte memoizedIsInitialized;
        /* access modifiers changed from: private */
        public volatile Object n_;
        /* access modifiers changed from: private */
        public volatile Object next_;
        /* access modifiers changed from: private */
        public volatile Object s_;
        /* access modifiers changed from: private */
        public volatile Object srcCid_;
        /* access modifiers changed from: private */
        public volatile Object srcPid_;
        /* access modifiers changed from: private */
        public long t_;
        /* access modifiers changed from: private */
        public LazyStringList toCids_;
        /* access modifiers changed from: private */
        public LazyStringList toPids_;

        public static final class Builder extends com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements BlacklistCommandOrBuilder {
            private LazyStringList allowedPids_;
            private int bitField0_;
            private LazyStringList blockedCids_;
            private LazyStringList blockedPids_;
            private RepeatedFieldBuilderV3<ErrorCommand, Builder, ErrorCommandOrBuilder> failedPidsBuilder_;
            private List<ErrorCommand> failedPids_;
            private int limit_;
            private Object n_;
            private Object next_;
            private Object s_;
            private Object srcCid_;
            private Object srcPid_;
            private long t_;
            private LazyStringList toCids_;
            private LazyStringList toPids_;

            public static final Descriptor getDescriptor() {
                return Messages.internal_static_com_avos_avoscloud_BlacklistCommand_descriptor;
            }

            /* access modifiers changed from: protected */
            public FieldAccessorTable internalGetFieldAccessorTable() {
                return Messages.internal_static_com_avos_avoscloud_BlacklistCommand_fieldAccessorTable.ensureFieldAccessorsInitialized(BlacklistCommand.class, Builder.class);
            }

            private Builder() {
                String str = "";
                this.srcCid_ = str;
                this.toPids_ = LazyStringArrayList.EMPTY;
                this.srcPid_ = str;
                this.toCids_ = LazyStringArrayList.EMPTY;
                this.next_ = str;
                this.blockedPids_ = LazyStringArrayList.EMPTY;
                this.blockedCids_ = LazyStringArrayList.EMPTY;
                this.allowedPids_ = LazyStringArrayList.EMPTY;
                this.failedPids_ = Collections.emptyList();
                this.n_ = str;
                this.s_ = str;
                maybeForceBuilderInitialization();
            }

            private Builder(BuilderParent builderParent) {
                super(builderParent);
                String str = "";
                this.srcCid_ = str;
                this.toPids_ = LazyStringArrayList.EMPTY;
                this.srcPid_ = str;
                this.toCids_ = LazyStringArrayList.EMPTY;
                this.next_ = str;
                this.blockedPids_ = LazyStringArrayList.EMPTY;
                this.blockedCids_ = LazyStringArrayList.EMPTY;
                this.allowedPids_ = LazyStringArrayList.EMPTY;
                this.failedPids_ = Collections.emptyList();
                this.n_ = str;
                this.s_ = str;
                maybeForceBuilderInitialization();
            }

            private void maybeForceBuilderInitialization() {
                if (BlacklistCommand.alwaysUseFieldBuilders) {
                    getFailedPidsFieldBuilder();
                }
            }

            public Builder clear() {
                super.clear();
                String str = "";
                this.srcCid_ = str;
                this.bitField0_ &= -2;
                this.toPids_ = LazyStringArrayList.EMPTY;
                this.bitField0_ &= -3;
                this.srcPid_ = str;
                this.bitField0_ &= -5;
                this.toCids_ = LazyStringArrayList.EMPTY;
                this.bitField0_ &= -9;
                this.limit_ = 0;
                this.bitField0_ &= -17;
                this.next_ = str;
                this.bitField0_ &= -33;
                this.blockedPids_ = LazyStringArrayList.EMPTY;
                this.bitField0_ &= -65;
                this.blockedCids_ = LazyStringArrayList.EMPTY;
                this.bitField0_ &= -129;
                this.allowedPids_ = LazyStringArrayList.EMPTY;
                this.bitField0_ &= -257;
                RepeatedFieldBuilderV3<ErrorCommand, Builder, ErrorCommandOrBuilder> repeatedFieldBuilderV3 = this.failedPidsBuilder_;
                if (repeatedFieldBuilderV3 == null) {
                    this.failedPids_ = Collections.emptyList();
                    this.bitField0_ &= -513;
                } else {
                    repeatedFieldBuilderV3.clear();
                }
                this.t_ = 0;
                this.bitField0_ &= -1025;
                this.n_ = str;
                this.bitField0_ &= -2049;
                this.s_ = str;
                this.bitField0_ &= -4097;
                return this;
            }

            public Descriptor getDescriptorForType() {
                return Messages.internal_static_com_avos_avoscloud_BlacklistCommand_descriptor;
            }

            public BlacklistCommand getDefaultInstanceForType() {
                return BlacklistCommand.getDefaultInstance();
            }

            public BlacklistCommand build() {
                BlacklistCommand buildPartial = buildPartial();
                if (buildPartial.isInitialized()) {
                    return buildPartial;
                }
                throw newUninitializedMessageException(buildPartial);
            }

            public BlacklistCommand buildPartial() {
                BlacklistCommand blacklistCommand = new BlacklistCommand((com.google.protobuf.GeneratedMessageV3.Builder) this);
                int i = this.bitField0_;
                int i2 = 1;
                if ((i & 1) != 1) {
                    i2 = 0;
                }
                blacklistCommand.srcCid_ = this.srcCid_;
                if ((this.bitField0_ & 2) == 2) {
                    this.toPids_ = this.toPids_.getUnmodifiableView();
                    this.bitField0_ &= -3;
                }
                blacklistCommand.toPids_ = this.toPids_;
                if ((i & 4) == 4) {
                    i2 |= 2;
                }
                blacklistCommand.srcPid_ = this.srcPid_;
                if ((this.bitField0_ & 8) == 8) {
                    this.toCids_ = this.toCids_.getUnmodifiableView();
                    this.bitField0_ &= -9;
                }
                blacklistCommand.toCids_ = this.toCids_;
                if ((i & 16) == 16) {
                    i2 |= 4;
                }
                blacklistCommand.limit_ = this.limit_;
                if ((i & 32) == 32) {
                    i2 |= 8;
                }
                blacklistCommand.next_ = this.next_;
                if ((this.bitField0_ & 64) == 64) {
                    this.blockedPids_ = this.blockedPids_.getUnmodifiableView();
                    this.bitField0_ &= -65;
                }
                blacklistCommand.blockedPids_ = this.blockedPids_;
                if ((this.bitField0_ & 128) == 128) {
                    this.blockedCids_ = this.blockedCids_.getUnmodifiableView();
                    this.bitField0_ &= -129;
                }
                blacklistCommand.blockedCids_ = this.blockedCids_;
                if ((this.bitField0_ & 256) == 256) {
                    this.allowedPids_ = this.allowedPids_.getUnmodifiableView();
                    this.bitField0_ &= -257;
                }
                blacklistCommand.allowedPids_ = this.allowedPids_;
                RepeatedFieldBuilderV3<ErrorCommand, Builder, ErrorCommandOrBuilder> repeatedFieldBuilderV3 = this.failedPidsBuilder_;
                if (repeatedFieldBuilderV3 == null) {
                    if ((this.bitField0_ & 512) == 512) {
                        this.failedPids_ = Collections.unmodifiableList(this.failedPids_);
                        this.bitField0_ &= -513;
                    }
                    blacklistCommand.failedPids_ = this.failedPids_;
                } else {
                    blacklistCommand.failedPids_ = repeatedFieldBuilderV3.build();
                }
                if ((i & 1024) == 1024) {
                    i2 |= 16;
                }
                blacklistCommand.t_ = this.t_;
                if ((i & 2048) == 2048) {
                    i2 |= 32;
                }
                blacklistCommand.n_ = this.n_;
                if ((i & 4096) == 4096) {
                    i2 |= 64;
                }
                blacklistCommand.s_ = this.s_;
                blacklistCommand.bitField0_ = i2;
                onBuilt();
                return blacklistCommand;
            }

            public Builder clone() {
                return (Builder) super.clone();
            }

            public Builder setField(FieldDescriptor fieldDescriptor, Object obj) {
                return (Builder) super.setField(fieldDescriptor, obj);
            }

            public Builder clearField(FieldDescriptor fieldDescriptor) {
                return (Builder) super.clearField(fieldDescriptor);
            }

            public Builder clearOneof(OneofDescriptor oneofDescriptor) {
                return (Builder) super.clearOneof(oneofDescriptor);
            }

            public Builder setRepeatedField(FieldDescriptor fieldDescriptor, int i, Object obj) {
                return (Builder) super.setRepeatedField(fieldDescriptor, i, obj);
            }

            public Builder addRepeatedField(FieldDescriptor fieldDescriptor, Object obj) {
                return (Builder) super.addRepeatedField(fieldDescriptor, obj);
            }

            public Builder mergeFrom(Message message) {
                if (message instanceof BlacklistCommand) {
                    return mergeFrom((BlacklistCommand) message);
                }
                super.mergeFrom(message);
                return this;
            }

            public Builder mergeFrom(BlacklistCommand blacklistCommand) {
                if (blacklistCommand == BlacklistCommand.getDefaultInstance()) {
                    return this;
                }
                if (blacklistCommand.hasSrcCid()) {
                    this.bitField0_ |= 1;
                    this.srcCid_ = blacklistCommand.srcCid_;
                    onChanged();
                }
                if (!blacklistCommand.toPids_.isEmpty()) {
                    if (this.toPids_.isEmpty()) {
                        this.toPids_ = blacklistCommand.toPids_;
                        this.bitField0_ &= -3;
                    } else {
                        ensureToPidsIsMutable();
                        this.toPids_.addAll(blacklistCommand.toPids_);
                    }
                    onChanged();
                }
                if (blacklistCommand.hasSrcPid()) {
                    this.bitField0_ |= 4;
                    this.srcPid_ = blacklistCommand.srcPid_;
                    onChanged();
                }
                if (!blacklistCommand.toCids_.isEmpty()) {
                    if (this.toCids_.isEmpty()) {
                        this.toCids_ = blacklistCommand.toCids_;
                        this.bitField0_ &= -9;
                    } else {
                        ensureToCidsIsMutable();
                        this.toCids_.addAll(blacklistCommand.toCids_);
                    }
                    onChanged();
                }
                if (blacklistCommand.hasLimit()) {
                    setLimit(blacklistCommand.getLimit());
                }
                if (blacklistCommand.hasNext()) {
                    this.bitField0_ |= 32;
                    this.next_ = blacklistCommand.next_;
                    onChanged();
                }
                if (!blacklistCommand.blockedPids_.isEmpty()) {
                    if (this.blockedPids_.isEmpty()) {
                        this.blockedPids_ = blacklistCommand.blockedPids_;
                        this.bitField0_ &= -65;
                    } else {
                        ensureBlockedPidsIsMutable();
                        this.blockedPids_.addAll(blacklistCommand.blockedPids_);
                    }
                    onChanged();
                }
                if (!blacklistCommand.blockedCids_.isEmpty()) {
                    if (this.blockedCids_.isEmpty()) {
                        this.blockedCids_ = blacklistCommand.blockedCids_;
                        this.bitField0_ &= -129;
                    } else {
                        ensureBlockedCidsIsMutable();
                        this.blockedCids_.addAll(blacklistCommand.blockedCids_);
                    }
                    onChanged();
                }
                if (!blacklistCommand.allowedPids_.isEmpty()) {
                    if (this.allowedPids_.isEmpty()) {
                        this.allowedPids_ = blacklistCommand.allowedPids_;
                        this.bitField0_ &= -257;
                    } else {
                        ensureAllowedPidsIsMutable();
                        this.allowedPids_.addAll(blacklistCommand.allowedPids_);
                    }
                    onChanged();
                }
                if (this.failedPidsBuilder_ == null) {
                    if (!blacklistCommand.failedPids_.isEmpty()) {
                        if (this.failedPids_.isEmpty()) {
                            this.failedPids_ = blacklistCommand.failedPids_;
                            this.bitField0_ &= -513;
                        } else {
                            ensureFailedPidsIsMutable();
                            this.failedPids_.addAll(blacklistCommand.failedPids_);
                        }
                        onChanged();
                    }
                } else if (!blacklistCommand.failedPids_.isEmpty()) {
                    if (this.failedPidsBuilder_.isEmpty()) {
                        this.failedPidsBuilder_.dispose();
                        RepeatedFieldBuilderV3<ErrorCommand, Builder, ErrorCommandOrBuilder> repeatedFieldBuilderV3 = null;
                        this.failedPidsBuilder_ = null;
                        this.failedPids_ = blacklistCommand.failedPids_;
                        this.bitField0_ &= -513;
                        if (BlacklistCommand.alwaysUseFieldBuilders) {
                            repeatedFieldBuilderV3 = getFailedPidsFieldBuilder();
                        }
                        this.failedPidsBuilder_ = repeatedFieldBuilderV3;
                    } else {
                        this.failedPidsBuilder_.addAllMessages(blacklistCommand.failedPids_);
                    }
                }
                if (blacklistCommand.hasT()) {
                    setT(blacklistCommand.getT());
                }
                if (blacklistCommand.hasN()) {
                    this.bitField0_ |= 2048;
                    this.n_ = blacklistCommand.n_;
                    onChanged();
                }
                if (blacklistCommand.hasS()) {
                    this.bitField0_ |= 4096;
                    this.s_ = blacklistCommand.s_;
                    onChanged();
                }
                mergeUnknownFields(blacklistCommand.unknownFields);
                onChanged();
                return this;
            }

            public final boolean isInitialized() {
                for (int i = 0; i < getFailedPidsCount(); i++) {
                    if (!getFailedPids(i).isInitialized()) {
                        return false;
                    }
                }
                return true;
            }

            /* JADX WARNING: Removed duplicated region for block: B:16:0x0021  */
            /* Code decompiled incorrectly, please refer to instructions dump. */
            public com.avos.avoscloud.Messages.BlacklistCommand.Builder mergeFrom(com.google.protobuf.CodedInputStream r3, com.google.protobuf.ExtensionRegistryLite r4) throws java.io.IOException {
                /*
                    r2 = this;
                    r0 = 0
                    com.google.protobuf.Parser<com.avos.avoscloud.Messages$BlacklistCommand> r1 = com.avos.avoscloud.Messages.BlacklistCommand.PARSER     // Catch:{ InvalidProtocolBufferException -> 0x0011 }
                    java.lang.Object r3 = r1.parsePartialFrom(r3, r4)     // Catch:{ InvalidProtocolBufferException -> 0x0011 }
                    com.avos.avoscloud.Messages$BlacklistCommand r3 = (com.avos.avoscloud.Messages.BlacklistCommand) r3     // Catch:{ InvalidProtocolBufferException -> 0x0011 }
                    if (r3 == 0) goto L_0x000e
                    r2.mergeFrom(r3)
                L_0x000e:
                    return r2
                L_0x000f:
                    r3 = move-exception
                    goto L_0x001f
                L_0x0011:
                    r3 = move-exception
                    com.google.protobuf.MessageLite r4 = r3.getUnfinishedMessage()     // Catch:{ all -> 0x000f }
                    com.avos.avoscloud.Messages$BlacklistCommand r4 = (com.avos.avoscloud.Messages.BlacklistCommand) r4     // Catch:{ all -> 0x000f }
                    java.io.IOException r3 = r3.unwrapIOException()     // Catch:{ all -> 0x001d }
                    throw r3     // Catch:{ all -> 0x001d }
                L_0x001d:
                    r3 = move-exception
                    r0 = r4
                L_0x001f:
                    if (r0 == 0) goto L_0x0024
                    r2.mergeFrom(r0)
                L_0x0024:
                    throw r3
                */
                throw new UnsupportedOperationException("Method not decompiled: com.avos.avoscloud.Messages.BlacklistCommand.Builder.mergeFrom(com.google.protobuf.CodedInputStream, com.google.protobuf.ExtensionRegistryLite):com.avos.avoscloud.Messages$BlacklistCommand$Builder");
            }

            public boolean hasSrcCid() {
                return (this.bitField0_ & 1) == 1;
            }

            public String getSrcCid() {
                Object obj = this.srcCid_;
                if (obj instanceof String) {
                    return (String) obj;
                }
                ByteString byteString = (ByteString) obj;
                String stringUtf8 = byteString.toStringUtf8();
                if (byteString.isValidUtf8()) {
                    this.srcCid_ = stringUtf8;
                }
                return stringUtf8;
            }

            public ByteString getSrcCidBytes() {
                Object obj = this.srcCid_;
                if (!(obj instanceof String)) {
                    return (ByteString) obj;
                }
                ByteString copyFromUtf8 = ByteString.copyFromUtf8((String) obj);
                this.srcCid_ = copyFromUtf8;
                return copyFromUtf8;
            }

            public Builder setSrcCid(String str) {
                if (str != null) {
                    this.bitField0_ |= 1;
                    this.srcCid_ = str;
                    onChanged();
                    return this;
                }
                throw new NullPointerException();
            }

            public Builder clearSrcCid() {
                this.bitField0_ &= -2;
                this.srcCid_ = BlacklistCommand.getDefaultInstance().getSrcCid();
                onChanged();
                return this;
            }

            public Builder setSrcCidBytes(ByteString byteString) {
                if (byteString != null) {
                    this.bitField0_ |= 1;
                    this.srcCid_ = byteString;
                    onChanged();
                    return this;
                }
                throw new NullPointerException();
            }

            private void ensureToPidsIsMutable() {
                if ((this.bitField0_ & 2) != 2) {
                    this.toPids_ = new LazyStringArrayList(this.toPids_);
                    this.bitField0_ |= 2;
                }
            }

            public ProtocolStringList getToPidsList() {
                return this.toPids_.getUnmodifiableView();
            }

            public int getToPidsCount() {
                return this.toPids_.size();
            }

            public String getToPids(int i) {
                return (String) this.toPids_.get(i);
            }

            public ByteString getToPidsBytes(int i) {
                return this.toPids_.getByteString(i);
            }

            public Builder setToPids(int i, String str) {
                if (str != null) {
                    ensureToPidsIsMutable();
                    this.toPids_.set(i, str);
                    onChanged();
                    return this;
                }
                throw new NullPointerException();
            }

            public Builder addToPids(String str) {
                if (str != null) {
                    ensureToPidsIsMutable();
                    this.toPids_.add(str);
                    onChanged();
                    return this;
                }
                throw new NullPointerException();
            }

            public Builder addAllToPids(Iterable<String> iterable) {
                ensureToPidsIsMutable();
                com.google.protobuf.AbstractMessageLite.Builder.addAll((Iterable) iterable, (List) this.toPids_);
                onChanged();
                return this;
            }

            public Builder clearToPids() {
                this.toPids_ = LazyStringArrayList.EMPTY;
                this.bitField0_ &= -3;
                onChanged();
                return this;
            }

            public Builder addToPidsBytes(ByteString byteString) {
                if (byteString != null) {
                    ensureToPidsIsMutable();
                    this.toPids_.add(byteString);
                    onChanged();
                    return this;
                }
                throw new NullPointerException();
            }

            public boolean hasSrcPid() {
                return (this.bitField0_ & 4) == 4;
            }

            public String getSrcPid() {
                Object obj = this.srcPid_;
                if (obj instanceof String) {
                    return (String) obj;
                }
                ByteString byteString = (ByteString) obj;
                String stringUtf8 = byteString.toStringUtf8();
                if (byteString.isValidUtf8()) {
                    this.srcPid_ = stringUtf8;
                }
                return stringUtf8;
            }

            public ByteString getSrcPidBytes() {
                Object obj = this.srcPid_;
                if (!(obj instanceof String)) {
                    return (ByteString) obj;
                }
                ByteString copyFromUtf8 = ByteString.copyFromUtf8((String) obj);
                this.srcPid_ = copyFromUtf8;
                return copyFromUtf8;
            }

            public Builder setSrcPid(String str) {
                if (str != null) {
                    this.bitField0_ |= 4;
                    this.srcPid_ = str;
                    onChanged();
                    return this;
                }
                throw new NullPointerException();
            }

            public Builder clearSrcPid() {
                this.bitField0_ &= -5;
                this.srcPid_ = BlacklistCommand.getDefaultInstance().getSrcPid();
                onChanged();
                return this;
            }

            public Builder setSrcPidBytes(ByteString byteString) {
                if (byteString != null) {
                    this.bitField0_ |= 4;
                    this.srcPid_ = byteString;
                    onChanged();
                    return this;
                }
                throw new NullPointerException();
            }

            private void ensureToCidsIsMutable() {
                if ((this.bitField0_ & 8) != 8) {
                    this.toCids_ = new LazyStringArrayList(this.toCids_);
                    this.bitField0_ |= 8;
                }
            }

            public ProtocolStringList getToCidsList() {
                return this.toCids_.getUnmodifiableView();
            }

            public int getToCidsCount() {
                return this.toCids_.size();
            }

            public String getToCids(int i) {
                return (String) this.toCids_.get(i);
            }

            public ByteString getToCidsBytes(int i) {
                return this.toCids_.getByteString(i);
            }

            public Builder setToCids(int i, String str) {
                if (str != null) {
                    ensureToCidsIsMutable();
                    this.toCids_.set(i, str);
                    onChanged();
                    return this;
                }
                throw new NullPointerException();
            }

            public Builder addToCids(String str) {
                if (str != null) {
                    ensureToCidsIsMutable();
                    this.toCids_.add(str);
                    onChanged();
                    return this;
                }
                throw new NullPointerException();
            }

            public Builder addAllToCids(Iterable<String> iterable) {
                ensureToCidsIsMutable();
                com.google.protobuf.AbstractMessageLite.Builder.addAll((Iterable) iterable, (List) this.toCids_);
                onChanged();
                return this;
            }

            public Builder clearToCids() {
                this.toCids_ = LazyStringArrayList.EMPTY;
                this.bitField0_ &= -9;
                onChanged();
                return this;
            }

            public Builder addToCidsBytes(ByteString byteString) {
                if (byteString != null) {
                    ensureToCidsIsMutable();
                    this.toCids_.add(byteString);
                    onChanged();
                    return this;
                }
                throw new NullPointerException();
            }

            public boolean hasLimit() {
                return (this.bitField0_ & 16) == 16;
            }

            public int getLimit() {
                return this.limit_;
            }

            public Builder setLimit(int i) {
                this.bitField0_ |= 16;
                this.limit_ = i;
                onChanged();
                return this;
            }

            public Builder clearLimit() {
                this.bitField0_ &= -17;
                this.limit_ = 0;
                onChanged();
                return this;
            }

            public boolean hasNext() {
                return (this.bitField0_ & 32) == 32;
            }

            public String getNext() {
                Object obj = this.next_;
                if (obj instanceof String) {
                    return (String) obj;
                }
                ByteString byteString = (ByteString) obj;
                String stringUtf8 = byteString.toStringUtf8();
                if (byteString.isValidUtf8()) {
                    this.next_ = stringUtf8;
                }
                return stringUtf8;
            }

            public ByteString getNextBytes() {
                Object obj = this.next_;
                if (!(obj instanceof String)) {
                    return (ByteString) obj;
                }
                ByteString copyFromUtf8 = ByteString.copyFromUtf8((String) obj);
                this.next_ = copyFromUtf8;
                return copyFromUtf8;
            }

            public Builder setNext(String str) {
                if (str != null) {
                    this.bitField0_ |= 32;
                    this.next_ = str;
                    onChanged();
                    return this;
                }
                throw new NullPointerException();
            }

            public Builder clearNext() {
                this.bitField0_ &= -33;
                this.next_ = BlacklistCommand.getDefaultInstance().getNext();
                onChanged();
                return this;
            }

            public Builder setNextBytes(ByteString byteString) {
                if (byteString != null) {
                    this.bitField0_ |= 32;
                    this.next_ = byteString;
                    onChanged();
                    return this;
                }
                throw new NullPointerException();
            }

            private void ensureBlockedPidsIsMutable() {
                if ((this.bitField0_ & 64) != 64) {
                    this.blockedPids_ = new LazyStringArrayList(this.blockedPids_);
                    this.bitField0_ |= 64;
                }
            }

            public ProtocolStringList getBlockedPidsList() {
                return this.blockedPids_.getUnmodifiableView();
            }

            public int getBlockedPidsCount() {
                return this.blockedPids_.size();
            }

            public String getBlockedPids(int i) {
                return (String) this.blockedPids_.get(i);
            }

            public ByteString getBlockedPidsBytes(int i) {
                return this.blockedPids_.getByteString(i);
            }

            public Builder setBlockedPids(int i, String str) {
                if (str != null) {
                    ensureBlockedPidsIsMutable();
                    this.blockedPids_.set(i, str);
                    onChanged();
                    return this;
                }
                throw new NullPointerException();
            }

            public Builder addBlockedPids(String str) {
                if (str != null) {
                    ensureBlockedPidsIsMutable();
                    this.blockedPids_.add(str);
                    onChanged();
                    return this;
                }
                throw new NullPointerException();
            }

            public Builder addAllBlockedPids(Iterable<String> iterable) {
                ensureBlockedPidsIsMutable();
                com.google.protobuf.AbstractMessageLite.Builder.addAll((Iterable) iterable, (List) this.blockedPids_);
                onChanged();
                return this;
            }

            public Builder clearBlockedPids() {
                this.blockedPids_ = LazyStringArrayList.EMPTY;
                this.bitField0_ &= -65;
                onChanged();
                return this;
            }

            public Builder addBlockedPidsBytes(ByteString byteString) {
                if (byteString != null) {
                    ensureBlockedPidsIsMutable();
                    this.blockedPids_.add(byteString);
                    onChanged();
                    return this;
                }
                throw new NullPointerException();
            }

            private void ensureBlockedCidsIsMutable() {
                if ((this.bitField0_ & 128) != 128) {
                    this.blockedCids_ = new LazyStringArrayList(this.blockedCids_);
                    this.bitField0_ |= 128;
                }
            }

            public ProtocolStringList getBlockedCidsList() {
                return this.blockedCids_.getUnmodifiableView();
            }

            public int getBlockedCidsCount() {
                return this.blockedCids_.size();
            }

            public String getBlockedCids(int i) {
                return (String) this.blockedCids_.get(i);
            }

            public ByteString getBlockedCidsBytes(int i) {
                return this.blockedCids_.getByteString(i);
            }

            public Builder setBlockedCids(int i, String str) {
                if (str != null) {
                    ensureBlockedCidsIsMutable();
                    this.blockedCids_.set(i, str);
                    onChanged();
                    return this;
                }
                throw new NullPointerException();
            }

            public Builder addBlockedCids(String str) {
                if (str != null) {
                    ensureBlockedCidsIsMutable();
                    this.blockedCids_.add(str);
                    onChanged();
                    return this;
                }
                throw new NullPointerException();
            }

            public Builder addAllBlockedCids(Iterable<String> iterable) {
                ensureBlockedCidsIsMutable();
                com.google.protobuf.AbstractMessageLite.Builder.addAll((Iterable) iterable, (List) this.blockedCids_);
                onChanged();
                return this;
            }

            public Builder clearBlockedCids() {
                this.blockedCids_ = LazyStringArrayList.EMPTY;
                this.bitField0_ &= -129;
                onChanged();
                return this;
            }

            public Builder addBlockedCidsBytes(ByteString byteString) {
                if (byteString != null) {
                    ensureBlockedCidsIsMutable();
                    this.blockedCids_.add(byteString);
                    onChanged();
                    return this;
                }
                throw new NullPointerException();
            }

            private void ensureAllowedPidsIsMutable() {
                if ((this.bitField0_ & 256) != 256) {
                    this.allowedPids_ = new LazyStringArrayList(this.allowedPids_);
                    this.bitField0_ |= 256;
                }
            }

            public ProtocolStringList getAllowedPidsList() {
                return this.allowedPids_.getUnmodifiableView();
            }

            public int getAllowedPidsCount() {
                return this.allowedPids_.size();
            }

            public String getAllowedPids(int i) {
                return (String) this.allowedPids_.get(i);
            }

            public ByteString getAllowedPidsBytes(int i) {
                return this.allowedPids_.getByteString(i);
            }

            public Builder setAllowedPids(int i, String str) {
                if (str != null) {
                    ensureAllowedPidsIsMutable();
                    this.allowedPids_.set(i, str);
                    onChanged();
                    return this;
                }
                throw new NullPointerException();
            }

            public Builder addAllowedPids(String str) {
                if (str != null) {
                    ensureAllowedPidsIsMutable();
                    this.allowedPids_.add(str);
                    onChanged();
                    return this;
                }
                throw new NullPointerException();
            }

            public Builder addAllAllowedPids(Iterable<String> iterable) {
                ensureAllowedPidsIsMutable();
                com.google.protobuf.AbstractMessageLite.Builder.addAll((Iterable) iterable, (List) this.allowedPids_);
                onChanged();
                return this;
            }

            public Builder clearAllowedPids() {
                this.allowedPids_ = LazyStringArrayList.EMPTY;
                this.bitField0_ &= -257;
                onChanged();
                return this;
            }

            public Builder addAllowedPidsBytes(ByteString byteString) {
                if (byteString != null) {
                    ensureAllowedPidsIsMutable();
                    this.allowedPids_.add(byteString);
                    onChanged();
                    return this;
                }
                throw new NullPointerException();
            }

            private void ensureFailedPidsIsMutable() {
                if ((this.bitField0_ & 512) != 512) {
                    this.failedPids_ = new ArrayList(this.failedPids_);
                    this.bitField0_ |= 512;
                }
            }

            public List<ErrorCommand> getFailedPidsList() {
                RepeatedFieldBuilderV3<ErrorCommand, Builder, ErrorCommandOrBuilder> repeatedFieldBuilderV3 = this.failedPidsBuilder_;
                if (repeatedFieldBuilderV3 == null) {
                    return Collections.unmodifiableList(this.failedPids_);
                }
                return repeatedFieldBuilderV3.getMessageList();
            }

            public int getFailedPidsCount() {
                RepeatedFieldBuilderV3<ErrorCommand, Builder, ErrorCommandOrBuilder> repeatedFieldBuilderV3 = this.failedPidsBuilder_;
                if (repeatedFieldBuilderV3 == null) {
                    return this.failedPids_.size();
                }
                return repeatedFieldBuilderV3.getCount();
            }

            public ErrorCommand getFailedPids(int i) {
                RepeatedFieldBuilderV3<ErrorCommand, Builder, ErrorCommandOrBuilder> repeatedFieldBuilderV3 = this.failedPidsBuilder_;
                if (repeatedFieldBuilderV3 == null) {
                    return (ErrorCommand) this.failedPids_.get(i);
                }
                return (ErrorCommand) repeatedFieldBuilderV3.getMessage(i);
            }

            public Builder setFailedPids(int i, ErrorCommand errorCommand) {
                RepeatedFieldBuilderV3<ErrorCommand, Builder, ErrorCommandOrBuilder> repeatedFieldBuilderV3 = this.failedPidsBuilder_;
                if (repeatedFieldBuilderV3 != null) {
                    repeatedFieldBuilderV3.setMessage(i, errorCommand);
                } else if (errorCommand != null) {
                    ensureFailedPidsIsMutable();
                    this.failedPids_.set(i, errorCommand);
                    onChanged();
                } else {
                    throw new NullPointerException();
                }
                return this;
            }

            public Builder setFailedPids(int i, Builder builder) {
                RepeatedFieldBuilderV3<ErrorCommand, Builder, ErrorCommandOrBuilder> repeatedFieldBuilderV3 = this.failedPidsBuilder_;
                if (repeatedFieldBuilderV3 == null) {
                    ensureFailedPidsIsMutable();
                    this.failedPids_.set(i, builder.build());
                    onChanged();
                } else {
                    repeatedFieldBuilderV3.setMessage(i, builder.build());
                }
                return this;
            }

            public Builder addFailedPids(ErrorCommand errorCommand) {
                RepeatedFieldBuilderV3<ErrorCommand, Builder, ErrorCommandOrBuilder> repeatedFieldBuilderV3 = this.failedPidsBuilder_;
                if (repeatedFieldBuilderV3 != null) {
                    repeatedFieldBuilderV3.addMessage(errorCommand);
                } else if (errorCommand != null) {
                    ensureFailedPidsIsMutable();
                    this.failedPids_.add(errorCommand);
                    onChanged();
                } else {
                    throw new NullPointerException();
                }
                return this;
            }

            public Builder addFailedPids(int i, ErrorCommand errorCommand) {
                RepeatedFieldBuilderV3<ErrorCommand, Builder, ErrorCommandOrBuilder> repeatedFieldBuilderV3 = this.failedPidsBuilder_;
                if (repeatedFieldBuilderV3 != null) {
                    repeatedFieldBuilderV3.addMessage(i, errorCommand);
                } else if (errorCommand != null) {
                    ensureFailedPidsIsMutable();
                    this.failedPids_.add(i, errorCommand);
                    onChanged();
                } else {
                    throw new NullPointerException();
                }
                return this;
            }

            public Builder addFailedPids(Builder builder) {
                RepeatedFieldBuilderV3<ErrorCommand, Builder, ErrorCommandOrBuilder> repeatedFieldBuilderV3 = this.failedPidsBuilder_;
                if (repeatedFieldBuilderV3 == null) {
                    ensureFailedPidsIsMutable();
                    this.failedPids_.add(builder.build());
                    onChanged();
                } else {
                    repeatedFieldBuilderV3.addMessage(builder.build());
                }
                return this;
            }

            public Builder addFailedPids(int i, Builder builder) {
                RepeatedFieldBuilderV3<ErrorCommand, Builder, ErrorCommandOrBuilder> repeatedFieldBuilderV3 = this.failedPidsBuilder_;
                if (repeatedFieldBuilderV3 == null) {
                    ensureFailedPidsIsMutable();
                    this.failedPids_.add(i, builder.build());
                    onChanged();
                } else {
                    repeatedFieldBuilderV3.addMessage(i, builder.build());
                }
                return this;
            }

            public Builder addAllFailedPids(Iterable<? extends ErrorCommand> iterable) {
                RepeatedFieldBuilderV3<ErrorCommand, Builder, ErrorCommandOrBuilder> repeatedFieldBuilderV3 = this.failedPidsBuilder_;
                if (repeatedFieldBuilderV3 == null) {
                    ensureFailedPidsIsMutable();
                    com.google.protobuf.AbstractMessageLite.Builder.addAll((Iterable) iterable, (List) this.failedPids_);
                    onChanged();
                } else {
                    repeatedFieldBuilderV3.addAllMessages(iterable);
                }
                return this;
            }

            public Builder clearFailedPids() {
                RepeatedFieldBuilderV3<ErrorCommand, Builder, ErrorCommandOrBuilder> repeatedFieldBuilderV3 = this.failedPidsBuilder_;
                if (repeatedFieldBuilderV3 == null) {
                    this.failedPids_ = Collections.emptyList();
                    this.bitField0_ &= -513;
                    onChanged();
                } else {
                    repeatedFieldBuilderV3.clear();
                }
                return this;
            }

            public Builder removeFailedPids(int i) {
                RepeatedFieldBuilderV3<ErrorCommand, Builder, ErrorCommandOrBuilder> repeatedFieldBuilderV3 = this.failedPidsBuilder_;
                if (repeatedFieldBuilderV3 == null) {
                    ensureFailedPidsIsMutable();
                    this.failedPids_.remove(i);
                    onChanged();
                } else {
                    repeatedFieldBuilderV3.remove(i);
                }
                return this;
            }

            public Builder getFailedPidsBuilder(int i) {
                return (Builder) getFailedPidsFieldBuilder().getBuilder(i);
            }

            public ErrorCommandOrBuilder getFailedPidsOrBuilder(int i) {
                RepeatedFieldBuilderV3<ErrorCommand, Builder, ErrorCommandOrBuilder> repeatedFieldBuilderV3 = this.failedPidsBuilder_;
                if (repeatedFieldBuilderV3 == null) {
                    return (ErrorCommandOrBuilder) this.failedPids_.get(i);
                }
                return (ErrorCommandOrBuilder) repeatedFieldBuilderV3.getMessageOrBuilder(i);
            }

            public List<? extends ErrorCommandOrBuilder> getFailedPidsOrBuilderList() {
                RepeatedFieldBuilderV3<ErrorCommand, Builder, ErrorCommandOrBuilder> repeatedFieldBuilderV3 = this.failedPidsBuilder_;
                if (repeatedFieldBuilderV3 != null) {
                    return repeatedFieldBuilderV3.getMessageOrBuilderList();
                }
                return Collections.unmodifiableList(this.failedPids_);
            }

            public Builder addFailedPidsBuilder() {
                return (Builder) getFailedPidsFieldBuilder().addBuilder(ErrorCommand.getDefaultInstance());
            }

            public Builder addFailedPidsBuilder(int i) {
                return (Builder) getFailedPidsFieldBuilder().addBuilder(i, ErrorCommand.getDefaultInstance());
            }

            public List<Builder> getFailedPidsBuilderList() {
                return getFailedPidsFieldBuilder().getBuilderList();
            }

            private RepeatedFieldBuilderV3<ErrorCommand, Builder, ErrorCommandOrBuilder> getFailedPidsFieldBuilder() {
                if (this.failedPidsBuilder_ == null) {
                    this.failedPidsBuilder_ = new RepeatedFieldBuilderV3<>(this.failedPids_, (this.bitField0_ & 512) == 512, getParentForChildren(), isClean());
                    this.failedPids_ = null;
                }
                return this.failedPidsBuilder_;
            }

            public boolean hasT() {
                return (this.bitField0_ & 1024) == 1024;
            }

            public long getT() {
                return this.t_;
            }

            public Builder setT(long j) {
                this.bitField0_ |= 1024;
                this.t_ = j;
                onChanged();
                return this;
            }

            public Builder clearT() {
                this.bitField0_ &= -1025;
                this.t_ = 0;
                onChanged();
                return this;
            }

            public boolean hasN() {
                return (this.bitField0_ & 2048) == 2048;
            }

            public String getN() {
                Object obj = this.n_;
                if (obj instanceof String) {
                    return (String) obj;
                }
                ByteString byteString = (ByteString) obj;
                String stringUtf8 = byteString.toStringUtf8();
                if (byteString.isValidUtf8()) {
                    this.n_ = stringUtf8;
                }
                return stringUtf8;
            }

            public ByteString getNBytes() {
                Object obj = this.n_;
                if (!(obj instanceof String)) {
                    return (ByteString) obj;
                }
                ByteString copyFromUtf8 = ByteString.copyFromUtf8((String) obj);
                this.n_ = copyFromUtf8;
                return copyFromUtf8;
            }

            public Builder setN(String str) {
                if (str != null) {
                    this.bitField0_ |= 2048;
                    this.n_ = str;
                    onChanged();
                    return this;
                }
                throw new NullPointerException();
            }

            public Builder clearN() {
                this.bitField0_ &= -2049;
                this.n_ = BlacklistCommand.getDefaultInstance().getN();
                onChanged();
                return this;
            }

            public Builder setNBytes(ByteString byteString) {
                if (byteString != null) {
                    this.bitField0_ |= 2048;
                    this.n_ = byteString;
                    onChanged();
                    return this;
                }
                throw new NullPointerException();
            }

            public boolean hasS() {
                return (this.bitField0_ & 4096) == 4096;
            }

            public String getS() {
                Object obj = this.s_;
                if (obj instanceof String) {
                    return (String) obj;
                }
                ByteString byteString = (ByteString) obj;
                String stringUtf8 = byteString.toStringUtf8();
                if (byteString.isValidUtf8()) {
                    this.s_ = stringUtf8;
                }
                return stringUtf8;
            }

            public ByteString getSBytes() {
                Object obj = this.s_;
                if (!(obj instanceof String)) {
                    return (ByteString) obj;
                }
                ByteString copyFromUtf8 = ByteString.copyFromUtf8((String) obj);
                this.s_ = copyFromUtf8;
                return copyFromUtf8;
            }

            public Builder setS(String str) {
                if (str != null) {
                    this.bitField0_ |= 4096;
                    this.s_ = str;
                    onChanged();
                    return this;
                }
                throw new NullPointerException();
            }

            public Builder clearS() {
                this.bitField0_ &= -4097;
                this.s_ = BlacklistCommand.getDefaultInstance().getS();
                onChanged();
                return this;
            }

            public Builder setSBytes(ByteString byteString) {
                if (byteString != null) {
                    this.bitField0_ |= 4096;
                    this.s_ = byteString;
                    onChanged();
                    return this;
                }
                throw new NullPointerException();
            }

            public final Builder setUnknownFields(UnknownFieldSet unknownFieldSet) {
                return (Builder) super.setUnknownFields(unknownFieldSet);
            }

            public final Builder mergeUnknownFields(UnknownFieldSet unknownFieldSet) {
                return (Builder) super.mergeUnknownFields(unknownFieldSet);
            }
        }

        private BlacklistCommand(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
            super(builder);
            this.memoizedIsInitialized = -1;
        }

        private BlacklistCommand() {
            this.memoizedIsInitialized = -1;
            String str = "";
            this.srcCid_ = str;
            this.toPids_ = LazyStringArrayList.EMPTY;
            this.srcPid_ = str;
            this.toCids_ = LazyStringArrayList.EMPTY;
            this.limit_ = 0;
            this.next_ = str;
            this.blockedPids_ = LazyStringArrayList.EMPTY;
            this.blockedCids_ = LazyStringArrayList.EMPTY;
            this.allowedPids_ = LazyStringArrayList.EMPTY;
            this.failedPids_ = Collections.emptyList();
            this.t_ = 0;
            this.n_ = str;
            this.s_ = str;
        }

        public final UnknownFieldSet getUnknownFields() {
            return this.unknownFields;
        }

        private BlacklistCommand(CodedInputStream codedInputStream, ExtensionRegistryLite extensionRegistryLite) throws InvalidProtocolBufferException {
            this();
            com.google.protobuf.UnknownFieldSet.Builder newBuilder = UnknownFieldSet.newBuilder();
            boolean z = false;
            boolean z2 = false;
            while (!z) {
                try {
                    int readTag = codedInputStream.readTag();
                    switch (readTag) {
                        case 0:
                            z = true;
                            break;
                        case 10:
                            ByteString readBytes = codedInputStream.readBytes();
                            this.bitField0_ = 1 | this.bitField0_;
                            this.srcCid_ = readBytes;
                            break;
                        case 18:
                            ByteString readBytes2 = codedInputStream.readBytes();
                            if (!(z2 & true)) {
                                this.toPids_ = new LazyStringArrayList();
                                z2 |= true;
                            }
                            this.toPids_.add(readBytes2);
                            break;
                        case 26:
                            ByteString readBytes3 = codedInputStream.readBytes();
                            this.bitField0_ |= 2;
                            this.srcPid_ = readBytes3;
                            break;
                        case 34:
                            ByteString readBytes4 = codedInputStream.readBytes();
                            if (!(z2 & true)) {
                                this.toCids_ = new LazyStringArrayList();
                                z2 |= true;
                            }
                            this.toCids_.add(readBytes4);
                            break;
                        case 40:
                            this.bitField0_ |= 4;
                            this.limit_ = codedInputStream.readInt32();
                            break;
                        case 50:
                            ByteString readBytes5 = codedInputStream.readBytes();
                            this.bitField0_ |= 8;
                            this.next_ = readBytes5;
                            break;
                        case 66:
                            ByteString readBytes6 = codedInputStream.readBytes();
                            if (!(z2 & true)) {
                                this.blockedPids_ = new LazyStringArrayList();
                                z2 |= true;
                            }
                            this.blockedPids_.add(readBytes6);
                            break;
                        case 74:
                            ByteString readBytes7 = codedInputStream.readBytes();
                            if (!(z2 & true)) {
                                this.blockedCids_ = new LazyStringArrayList();
                                z2 |= true;
                            }
                            this.blockedCids_.add(readBytes7);
                            break;
                        case 82:
                            ByteString readBytes8 = codedInputStream.readBytes();
                            if (!(z2 & true)) {
                                this.allowedPids_ = new LazyStringArrayList();
                                z2 |= true;
                            }
                            this.allowedPids_.add(readBytes8);
                            break;
                        case 90:
                            if (!(z2 & true)) {
                                this.failedPids_ = new ArrayList();
                                z2 |= true;
                            }
                            this.failedPids_.add(codedInputStream.readMessage(ErrorCommand.PARSER, extensionRegistryLite));
                            break;
                        case 96:
                            this.bitField0_ |= 16;
                            this.t_ = codedInputStream.readInt64();
                            break;
                        case 106:
                            ByteString readBytes9 = codedInputStream.readBytes();
                            this.bitField0_ |= 32;
                            this.n_ = readBytes9;
                            break;
                        case 114:
                            ByteString readBytes10 = codedInputStream.readBytes();
                            this.bitField0_ |= 64;
                            this.s_ = readBytes10;
                            break;
                        default:
                            if (parseUnknownField(codedInputStream, newBuilder, extensionRegistryLite, readTag)) {
                                break;
                            }
                            z = true;
                            break;
                    }
                } catch (InvalidProtocolBufferException e) {
                    throw e.setUnfinishedMessage(this);
                } catch (IOException e2) {
                    throw new InvalidProtocolBufferException(e2).setUnfinishedMessage(this);
                } catch (Throwable th) {
                    if (z2 & true) {
                        this.toPids_ = this.toPids_.getUnmodifiableView();
                    }
                    if (z2 & true) {
                        this.toCids_ = this.toCids_.getUnmodifiableView();
                    }
                    if (z2 & true) {
                        this.blockedPids_ = this.blockedPids_.getUnmodifiableView();
                    }
                    if (z2 & true) {
                        this.blockedCids_ = this.blockedCids_.getUnmodifiableView();
                    }
                    if (z2 & true) {
                        this.allowedPids_ = this.allowedPids_.getUnmodifiableView();
                    }
                    if (z2 & true) {
                        this.failedPids_ = Collections.unmodifiableList(this.failedPids_);
                    }
                    this.unknownFields = newBuilder.build();
                    makeExtensionsImmutable();
                    throw th;
                }
            }
            if (z2 & true) {
                this.toPids_ = this.toPids_.getUnmodifiableView();
            }
            if (z2 & true) {
                this.toCids_ = this.toCids_.getUnmodifiableView();
            }
            if (z2 & true) {
                this.blockedPids_ = this.blockedPids_.getUnmodifiableView();
            }
            if (z2 & true) {
                this.blockedCids_ = this.blockedCids_.getUnmodifiableView();
            }
            if (z2 & true) {
                this.allowedPids_ = this.allowedPids_.getUnmodifiableView();
            }
            if (z2 & true) {
                this.failedPids_ = Collections.unmodifiableList(this.failedPids_);
            }
            this.unknownFields = newBuilder.build();
            makeExtensionsImmutable();
        }

        public static final Descriptor getDescriptor() {
            return Messages.internal_static_com_avos_avoscloud_BlacklistCommand_descriptor;
        }

        /* access modifiers changed from: protected */
        public FieldAccessorTable internalGetFieldAccessorTable() {
            return Messages.internal_static_com_avos_avoscloud_BlacklistCommand_fieldAccessorTable.ensureFieldAccessorsInitialized(BlacklistCommand.class, Builder.class);
        }

        public boolean hasSrcCid() {
            return (this.bitField0_ & 1) == 1;
        }

        public String getSrcCid() {
            Object obj = this.srcCid_;
            if (obj instanceof String) {
                return (String) obj;
            }
            ByteString byteString = (ByteString) obj;
            String stringUtf8 = byteString.toStringUtf8();
            if (byteString.isValidUtf8()) {
                this.srcCid_ = stringUtf8;
            }
            return stringUtf8;
        }

        public ByteString getSrcCidBytes() {
            Object obj = this.srcCid_;
            if (!(obj instanceof String)) {
                return (ByteString) obj;
            }
            ByteString copyFromUtf8 = ByteString.copyFromUtf8((String) obj);
            this.srcCid_ = copyFromUtf8;
            return copyFromUtf8;
        }

        public ProtocolStringList getToPidsList() {
            return this.toPids_;
        }

        public int getToPidsCount() {
            return this.toPids_.size();
        }

        public String getToPids(int i) {
            return (String) this.toPids_.get(i);
        }

        public ByteString getToPidsBytes(int i) {
            return this.toPids_.getByteString(i);
        }

        public boolean hasSrcPid() {
            return (this.bitField0_ & 2) == 2;
        }

        public String getSrcPid() {
            Object obj = this.srcPid_;
            if (obj instanceof String) {
                return (String) obj;
            }
            ByteString byteString = (ByteString) obj;
            String stringUtf8 = byteString.toStringUtf8();
            if (byteString.isValidUtf8()) {
                this.srcPid_ = stringUtf8;
            }
            return stringUtf8;
        }

        public ByteString getSrcPidBytes() {
            Object obj = this.srcPid_;
            if (!(obj instanceof String)) {
                return (ByteString) obj;
            }
            ByteString copyFromUtf8 = ByteString.copyFromUtf8((String) obj);
            this.srcPid_ = copyFromUtf8;
            return copyFromUtf8;
        }

        public ProtocolStringList getToCidsList() {
            return this.toCids_;
        }

        public int getToCidsCount() {
            return this.toCids_.size();
        }

        public String getToCids(int i) {
            return (String) this.toCids_.get(i);
        }

        public ByteString getToCidsBytes(int i) {
            return this.toCids_.getByteString(i);
        }

        public boolean hasLimit() {
            return (this.bitField0_ & 4) == 4;
        }

        public int getLimit() {
            return this.limit_;
        }

        public boolean hasNext() {
            return (this.bitField0_ & 8) == 8;
        }

        public String getNext() {
            Object obj = this.next_;
            if (obj instanceof String) {
                return (String) obj;
            }
            ByteString byteString = (ByteString) obj;
            String stringUtf8 = byteString.toStringUtf8();
            if (byteString.isValidUtf8()) {
                this.next_ = stringUtf8;
            }
            return stringUtf8;
        }

        public ByteString getNextBytes() {
            Object obj = this.next_;
            if (!(obj instanceof String)) {
                return (ByteString) obj;
            }
            ByteString copyFromUtf8 = ByteString.copyFromUtf8((String) obj);
            this.next_ = copyFromUtf8;
            return copyFromUtf8;
        }

        public ProtocolStringList getBlockedPidsList() {
            return this.blockedPids_;
        }

        public int getBlockedPidsCount() {
            return this.blockedPids_.size();
        }

        public String getBlockedPids(int i) {
            return (String) this.blockedPids_.get(i);
        }

        public ByteString getBlockedPidsBytes(int i) {
            return this.blockedPids_.getByteString(i);
        }

        public ProtocolStringList getBlockedCidsList() {
            return this.blockedCids_;
        }

        public int getBlockedCidsCount() {
            return this.blockedCids_.size();
        }

        public String getBlockedCids(int i) {
            return (String) this.blockedCids_.get(i);
        }

        public ByteString getBlockedCidsBytes(int i) {
            return this.blockedCids_.getByteString(i);
        }

        public ProtocolStringList getAllowedPidsList() {
            return this.allowedPids_;
        }

        public int getAllowedPidsCount() {
            return this.allowedPids_.size();
        }

        public String getAllowedPids(int i) {
            return (String) this.allowedPids_.get(i);
        }

        public ByteString getAllowedPidsBytes(int i) {
            return this.allowedPids_.getByteString(i);
        }

        public List<ErrorCommand> getFailedPidsList() {
            return this.failedPids_;
        }

        public List<? extends ErrorCommandOrBuilder> getFailedPidsOrBuilderList() {
            return this.failedPids_;
        }

        public int getFailedPidsCount() {
            return this.failedPids_.size();
        }

        public ErrorCommand getFailedPids(int i) {
            return (ErrorCommand) this.failedPids_.get(i);
        }

        public ErrorCommandOrBuilder getFailedPidsOrBuilder(int i) {
            return (ErrorCommandOrBuilder) this.failedPids_.get(i);
        }

        public boolean hasT() {
            return (this.bitField0_ & 16) == 16;
        }

        public long getT() {
            return this.t_;
        }

        public boolean hasN() {
            return (this.bitField0_ & 32) == 32;
        }

        public String getN() {
            Object obj = this.n_;
            if (obj instanceof String) {
                return (String) obj;
            }
            ByteString byteString = (ByteString) obj;
            String stringUtf8 = byteString.toStringUtf8();
            if (byteString.isValidUtf8()) {
                this.n_ = stringUtf8;
            }
            return stringUtf8;
        }

        public ByteString getNBytes() {
            Object obj = this.n_;
            if (!(obj instanceof String)) {
                return (ByteString) obj;
            }
            ByteString copyFromUtf8 = ByteString.copyFromUtf8((String) obj);
            this.n_ = copyFromUtf8;
            return copyFromUtf8;
        }

        public boolean hasS() {
            return (this.bitField0_ & 64) == 64;
        }

        public String getS() {
            Object obj = this.s_;
            if (obj instanceof String) {
                return (String) obj;
            }
            ByteString byteString = (ByteString) obj;
            String stringUtf8 = byteString.toStringUtf8();
            if (byteString.isValidUtf8()) {
                this.s_ = stringUtf8;
            }
            return stringUtf8;
        }

        public ByteString getSBytes() {
            Object obj = this.s_;
            if (!(obj instanceof String)) {
                return (ByteString) obj;
            }
            ByteString copyFromUtf8 = ByteString.copyFromUtf8((String) obj);
            this.s_ = copyFromUtf8;
            return copyFromUtf8;
        }

        public final boolean isInitialized() {
            byte b = this.memoizedIsInitialized;
            if (b == 1) {
                return true;
            }
            if (b == 0) {
                return false;
            }
            for (int i = 0; i < getFailedPidsCount(); i++) {
                if (!getFailedPids(i).isInitialized()) {
                    this.memoizedIsInitialized = 0;
                    return false;
                }
            }
            this.memoizedIsInitialized = 1;
            return true;
        }

        public void writeTo(CodedOutputStream codedOutputStream) throws IOException {
            if ((this.bitField0_ & 1) == 1) {
                GeneratedMessageV3.writeString(codedOutputStream, 1, this.srcCid_);
            }
            for (int i = 0; i < this.toPids_.size(); i++) {
                GeneratedMessageV3.writeString(codedOutputStream, 2, this.toPids_.getRaw(i));
            }
            if ((this.bitField0_ & 2) == 2) {
                GeneratedMessageV3.writeString(codedOutputStream, 3, this.srcPid_);
            }
            for (int i2 = 0; i2 < this.toCids_.size(); i2++) {
                GeneratedMessageV3.writeString(codedOutputStream, 4, this.toCids_.getRaw(i2));
            }
            if ((this.bitField0_ & 4) == 4) {
                codedOutputStream.writeInt32(5, this.limit_);
            }
            if ((this.bitField0_ & 8) == 8) {
                GeneratedMessageV3.writeString(codedOutputStream, 6, this.next_);
            }
            for (int i3 = 0; i3 < this.blockedPids_.size(); i3++) {
                GeneratedMessageV3.writeString(codedOutputStream, 8, this.blockedPids_.getRaw(i3));
            }
            for (int i4 = 0; i4 < this.blockedCids_.size(); i4++) {
                GeneratedMessageV3.writeString(codedOutputStream, 9, this.blockedCids_.getRaw(i4));
            }
            for (int i5 = 0; i5 < this.allowedPids_.size(); i5++) {
                GeneratedMessageV3.writeString(codedOutputStream, 10, this.allowedPids_.getRaw(i5));
            }
            for (int i6 = 0; i6 < this.failedPids_.size(); i6++) {
                codedOutputStream.writeMessage(11, (MessageLite) this.failedPids_.get(i6));
            }
            if ((this.bitField0_ & 16) == 16) {
                codedOutputStream.writeInt64(12, this.t_);
            }
            if ((this.bitField0_ & 32) == 32) {
                GeneratedMessageV3.writeString(codedOutputStream, 13, this.n_);
            }
            if ((this.bitField0_ & 64) == 64) {
                GeneratedMessageV3.writeString(codedOutputStream, 14, this.s_);
            }
            this.unknownFields.writeTo(codedOutputStream);
        }

        public int getSerializedSize() {
            int i = this.memoizedSize;
            if (i != -1) {
                return i;
            }
            int computeStringSize = (this.bitField0_ & 1) == 1 ? GeneratedMessageV3.computeStringSize(1, this.srcCid_) + 0 : 0;
            int i2 = 0;
            for (int i3 = 0; i3 < this.toPids_.size(); i3++) {
                i2 += computeStringSizeNoTag(this.toPids_.getRaw(i3));
            }
            int size = computeStringSize + i2 + (getToPidsList().size() * 1);
            if ((this.bitField0_ & 2) == 2) {
                size += GeneratedMessageV3.computeStringSize(3, this.srcPid_);
            }
            int i4 = 0;
            for (int i5 = 0; i5 < this.toCids_.size(); i5++) {
                i4 += computeStringSizeNoTag(this.toCids_.getRaw(i5));
            }
            int size2 = size + i4 + (getToCidsList().size() * 1);
            if ((this.bitField0_ & 4) == 4) {
                size2 += CodedOutputStream.computeInt32Size(5, this.limit_);
            }
            if ((this.bitField0_ & 8) == 8) {
                size2 += GeneratedMessageV3.computeStringSize(6, this.next_);
            }
            int i6 = 0;
            for (int i7 = 0; i7 < this.blockedPids_.size(); i7++) {
                i6 += computeStringSizeNoTag(this.blockedPids_.getRaw(i7));
            }
            int size3 = size2 + i6 + (getBlockedPidsList().size() * 1);
            int i8 = 0;
            for (int i9 = 0; i9 < this.blockedCids_.size(); i9++) {
                i8 += computeStringSizeNoTag(this.blockedCids_.getRaw(i9));
            }
            int size4 = size3 + i8 + (getBlockedCidsList().size() * 1);
            int i10 = 0;
            for (int i11 = 0; i11 < this.allowedPids_.size(); i11++) {
                i10 += computeStringSizeNoTag(this.allowedPids_.getRaw(i11));
            }
            int size5 = size4 + i10 + (getAllowedPidsList().size() * 1);
            for (int i12 = 0; i12 < this.failedPids_.size(); i12++) {
                size5 += CodedOutputStream.computeMessageSize(11, (MessageLite) this.failedPids_.get(i12));
            }
            if ((this.bitField0_ & 16) == 16) {
                size5 += CodedOutputStream.computeInt64Size(12, this.t_);
            }
            if ((this.bitField0_ & 32) == 32) {
                size5 += GeneratedMessageV3.computeStringSize(13, this.n_);
            }
            if ((this.bitField0_ & 64) == 64) {
                size5 += GeneratedMessageV3.computeStringSize(14, this.s_);
            }
            int serializedSize = size5 + this.unknownFields.getSerializedSize();
            this.memoizedSize = serializedSize;
            return serializedSize;
        }

        public boolean equals(Object obj) {
            boolean z = true;
            if (obj == this) {
                return true;
            }
            if (!(obj instanceof BlacklistCommand)) {
                return super.equals(obj);
            }
            BlacklistCommand blacklistCommand = (BlacklistCommand) obj;
            boolean z2 = hasSrcCid() == blacklistCommand.hasSrcCid();
            if (hasSrcCid()) {
                z2 = z2 && getSrcCid().equals(blacklistCommand.getSrcCid());
            }
            boolean z3 = (z2 && getToPidsList().equals(blacklistCommand.getToPidsList())) && hasSrcPid() == blacklistCommand.hasSrcPid();
            if (hasSrcPid()) {
                z3 = z3 && getSrcPid().equals(blacklistCommand.getSrcPid());
            }
            boolean z4 = (z3 && getToCidsList().equals(blacklistCommand.getToCidsList())) && hasLimit() == blacklistCommand.hasLimit();
            if (hasLimit()) {
                z4 = z4 && getLimit() == blacklistCommand.getLimit();
            }
            boolean z5 = z4 && hasNext() == blacklistCommand.hasNext();
            if (hasNext()) {
                z5 = z5 && getNext().equals(blacklistCommand.getNext());
            }
            boolean z6 = ((((z5 && getBlockedPidsList().equals(blacklistCommand.getBlockedPidsList())) && getBlockedCidsList().equals(blacklistCommand.getBlockedCidsList())) && getAllowedPidsList().equals(blacklistCommand.getAllowedPidsList())) && getFailedPidsList().equals(blacklistCommand.getFailedPidsList())) && hasT() == blacklistCommand.hasT();
            if (hasT()) {
                z6 = z6 && getT() == blacklistCommand.getT();
            }
            boolean z7 = z6 && hasN() == blacklistCommand.hasN();
            if (hasN()) {
                z7 = z7 && getN().equals(blacklistCommand.getN());
            }
            boolean z8 = z7 && hasS() == blacklistCommand.hasS();
            if (hasS()) {
                z8 = z8 && getS().equals(blacklistCommand.getS());
            }
            if (!z8 || !this.unknownFields.equals(blacklistCommand.unknownFields)) {
                z = false;
            }
            return z;
        }

        public int hashCode() {
            if (this.memoizedHashCode != 0) {
                return this.memoizedHashCode;
            }
            int hashCode = 779 + getDescriptor().hashCode();
            if (hasSrcCid()) {
                hashCode = (((hashCode * 37) + 1) * 53) + getSrcCid().hashCode();
            }
            if (getToPidsCount() > 0) {
                hashCode = (((hashCode * 37) + 2) * 53) + getToPidsList().hashCode();
            }
            if (hasSrcPid()) {
                hashCode = (((hashCode * 37) + 3) * 53) + getSrcPid().hashCode();
            }
            if (getToCidsCount() > 0) {
                hashCode = (((hashCode * 37) + 4) * 53) + getToCidsList().hashCode();
            }
            if (hasLimit()) {
                hashCode = (((hashCode * 37) + 5) * 53) + getLimit();
            }
            if (hasNext()) {
                hashCode = (((hashCode * 37) + 6) * 53) + getNext().hashCode();
            }
            if (getBlockedPidsCount() > 0) {
                hashCode = (((hashCode * 37) + 8) * 53) + getBlockedPidsList().hashCode();
            }
            if (getBlockedCidsCount() > 0) {
                hashCode = (((hashCode * 37) + 9) * 53) + getBlockedCidsList().hashCode();
            }
            if (getAllowedPidsCount() > 0) {
                hashCode = (((hashCode * 37) + 10) * 53) + getAllowedPidsList().hashCode();
            }
            if (getFailedPidsCount() > 0) {
                hashCode = (((hashCode * 37) + 11) * 53) + getFailedPidsList().hashCode();
            }
            if (hasT()) {
                hashCode = (((hashCode * 37) + 12) * 53) + Internal.hashLong(getT());
            }
            if (hasN()) {
                hashCode = (((hashCode * 37) + 13) * 53) + getN().hashCode();
            }
            if (hasS()) {
                hashCode = (((hashCode * 37) + 14) * 53) + getS().hashCode();
            }
            int hashCode2 = (hashCode * 29) + this.unknownFields.hashCode();
            this.memoizedHashCode = hashCode2;
            return hashCode2;
        }

        public static BlacklistCommand parseFrom(ByteBuffer byteBuffer) throws InvalidProtocolBufferException {
            return (BlacklistCommand) PARSER.parseFrom(byteBuffer);
        }

        public static BlacklistCommand parseFrom(ByteBuffer byteBuffer, ExtensionRegistryLite extensionRegistryLite) throws InvalidProtocolBufferException {
            return (BlacklistCommand) PARSER.parseFrom(byteBuffer, extensionRegistryLite);
        }

        public static BlacklistCommand parseFrom(ByteString byteString) throws InvalidProtocolBufferException {
            return (BlacklistCommand) PARSER.parseFrom(byteString);
        }

        public static BlacklistCommand parseFrom(ByteString byteString, ExtensionRegistryLite extensionRegistryLite) throws InvalidProtocolBufferException {
            return (BlacklistCommand) PARSER.parseFrom(byteString, extensionRegistryLite);
        }

        public static BlacklistCommand parseFrom(byte[] bArr) throws InvalidProtocolBufferException {
            return (BlacklistCommand) PARSER.parseFrom(bArr);
        }

        public static BlacklistCommand parseFrom(byte[] bArr, ExtensionRegistryLite extensionRegistryLite) throws InvalidProtocolBufferException {
            return (BlacklistCommand) PARSER.parseFrom(bArr, extensionRegistryLite);
        }

        public static BlacklistCommand parseFrom(InputStream inputStream) throws IOException {
            return (BlacklistCommand) GeneratedMessageV3.parseWithIOException(PARSER, inputStream);
        }

        public static BlacklistCommand parseFrom(InputStream inputStream, ExtensionRegistryLite extensionRegistryLite) throws IOException {
            return (BlacklistCommand) GeneratedMessageV3.parseWithIOException(PARSER, inputStream, extensionRegistryLite);
        }

        public static BlacklistCommand parseDelimitedFrom(InputStream inputStream) throws IOException {
            return (BlacklistCommand) GeneratedMessageV3.parseDelimitedWithIOException(PARSER, inputStream);
        }

        public static BlacklistCommand parseDelimitedFrom(InputStream inputStream, ExtensionRegistryLite extensionRegistryLite) throws IOException {
            return (BlacklistCommand) GeneratedMessageV3.parseDelimitedWithIOException(PARSER, inputStream, extensionRegistryLite);
        }

        public static BlacklistCommand parseFrom(CodedInputStream codedInputStream) throws IOException {
            return (BlacklistCommand) GeneratedMessageV3.parseWithIOException(PARSER, codedInputStream);
        }

        public static BlacklistCommand parseFrom(CodedInputStream codedInputStream, ExtensionRegistryLite extensionRegistryLite) throws IOException {
            return (BlacklistCommand) GeneratedMessageV3.parseWithIOException(PARSER, codedInputStream, extensionRegistryLite);
        }

        public Builder newBuilderForType() {
            return newBuilder();
        }

        public static Builder newBuilder() {
            return DEFAULT_INSTANCE.toBuilder();
        }

        public static Builder newBuilder(BlacklistCommand blacklistCommand) {
            return DEFAULT_INSTANCE.toBuilder().mergeFrom(blacklistCommand);
        }

        public Builder toBuilder() {
            if (this == DEFAULT_INSTANCE) {
                return new Builder();
            }
            return new Builder().mergeFrom(this);
        }

        /* access modifiers changed from: protected */
        public Builder newBuilderForType(BuilderParent builderParent) {
            return new Builder(builderParent);
        }

        public static BlacklistCommand getDefaultInstance() {
            return DEFAULT_INSTANCE;
        }

        public static Parser<BlacklistCommand> parser() {
            return PARSER;
        }

        public Parser<BlacklistCommand> getParserForType() {
            return PARSER;
        }

        public BlacklistCommand getDefaultInstanceForType() {
            return DEFAULT_INSTANCE;
        }
    }

    public interface BlacklistCommandOrBuilder extends MessageOrBuilder {
        String getAllowedPids(int i);

        ByteString getAllowedPidsBytes(int i);

        int getAllowedPidsCount();

        List<String> getAllowedPidsList();

        String getBlockedCids(int i);

        ByteString getBlockedCidsBytes(int i);

        int getBlockedCidsCount();

        List<String> getBlockedCidsList();

        String getBlockedPids(int i);

        ByteString getBlockedPidsBytes(int i);

        int getBlockedPidsCount();

        List<String> getBlockedPidsList();

        ErrorCommand getFailedPids(int i);

        int getFailedPidsCount();

        List<ErrorCommand> getFailedPidsList();

        ErrorCommandOrBuilder getFailedPidsOrBuilder(int i);

        List<? extends ErrorCommandOrBuilder> getFailedPidsOrBuilderList();

        int getLimit();

        String getN();

        ByteString getNBytes();

        String getNext();

        ByteString getNextBytes();

        String getS();

        ByteString getSBytes();

        String getSrcCid();

        ByteString getSrcCidBytes();

        String getSrcPid();

        ByteString getSrcPidBytes();

        long getT();

        String getToCids(int i);

        ByteString getToCidsBytes(int i);

        int getToCidsCount();

        List<String> getToCidsList();

        String getToPids(int i);

        ByteString getToPidsBytes(int i);

        int getToPidsCount();

        List<String> getToPidsList();

        boolean hasLimit();

        boolean hasN();

        boolean hasNext();

        boolean hasS();

        boolean hasSrcCid();

        boolean hasSrcPid();

        boolean hasT();
    }

    public enum CommandType implements ProtocolMessageEnum {
        session(0),
        conv(1),
        direct(2),
        ack(3),
        rcp(4),
        unread(5),
        logs(6),
        error(7),
        login(8),
        data(9),
        room(10),
        read(11),
        presence(12),
        report(13),
        echo(14),
        loggedin(15),
        logout(16),
        loggedout(17),
        patch(18),
        pubsub(19),
        blacklist(20);
        
        private static final CommandType[] VALUES = null;
        public static final int ack_VALUE = 3;
        public static final int blacklist_VALUE = 20;
        public static final int conv_VALUE = 1;
        public static final int data_VALUE = 9;
        public static final int direct_VALUE = 2;
        public static final int echo_VALUE = 14;
        public static final int error_VALUE = 7;
        private static final EnumLiteMap<CommandType> internalValueMap = null;
        public static final int loggedin_VALUE = 15;
        public static final int loggedout_VALUE = 17;
        public static final int login_VALUE = 8;
        public static final int logout_VALUE = 16;
        public static final int logs_VALUE = 6;
        public static final int patch_VALUE = 18;
        public static final int presence_VALUE = 12;
        public static final int pubsub_VALUE = 19;
        public static final int rcp_VALUE = 4;
        public static final int read_VALUE = 11;
        public static final int report_VALUE = 13;
        public static final int room_VALUE = 10;
        public static final int session_VALUE = 0;
        public static final int unread_VALUE = 5;
        private final int value;

        static {
            internalValueMap = new EnumLiteMap<CommandType>() {
                public CommandType findValueByNumber(int i) {
                    return CommandType.forNumber(i);
                }
            };
            VALUES = values();
        }

        public final int getNumber() {
            return this.value;
        }

        @Deprecated
        public static CommandType valueOf(int i) {
            return forNumber(i);
        }

        public static CommandType forNumber(int i) {
            switch (i) {
                case 0:
                    return session;
                case 1:
                    return conv;
                case 2:
                    return direct;
                case 3:
                    return ack;
                case 4:
                    return rcp;
                case 5:
                    return unread;
                case 6:
                    return logs;
                case 7:
                    return error;
                case 8:
                    return login;
                case 9:
                    return data;
                case 10:
                    return room;
                case 11:
                    return read;
                case 12:
                    return presence;
                case 13:
                    return report;
                case 14:
                    return echo;
                case 15:
                    return loggedin;
                case 16:
                    return logout;
                case 17:
                    return loggedout;
                case 18:
                    return patch;
                case 19:
                    return pubsub;
                case 20:
                    return blacklist;
                default:
                    return null;
            }
        }

        public static EnumLiteMap<CommandType> internalGetValueMap() {
            return internalValueMap;
        }

        public final EnumValueDescriptor getValueDescriptor() {
            return (EnumValueDescriptor) getDescriptor().getValues().get(ordinal());
        }

        public final EnumDescriptor getDescriptorForType() {
            return getDescriptor();
        }

        public static final EnumDescriptor getDescriptor() {
            return (EnumDescriptor) Messages.getDescriptor().getEnumTypes().get(0);
        }

        public static CommandType valueOf(EnumValueDescriptor enumValueDescriptor) {
            if (enumValueDescriptor.getType() == getDescriptor()) {
                return VALUES[enumValueDescriptor.getIndex()];
            }
            throw new IllegalArgumentException("EnumValueDescriptor is not for this type.");
        }

        private CommandType(int i) {
            this.value = i;
        }
    }

    public static final class ConvCommand extends GeneratedMessageV3 implements ConvCommandOrBuilder {
        public static final int ALLOWEDPIDS_FIELD_NUMBER = 30;
        public static final int ATTR_FIELD_NUMBER = 103;
        public static final int CDATE_FIELD_NUMBER = 5;
        public static final int CIDS_FIELD_NUMBER = 25;
        public static final int CID_FIELD_NUMBER = 4;
        public static final int COUNT_FIELD_NUMBER = 11;
        private static final ConvCommand DEFAULT_INSTANCE = new ConvCommand();
        public static final int FAILEDPIDS_FIELD_NUMBER = 31;
        public static final int FLAG_FIELD_NUMBER = 10;
        public static final int INFO_FIELD_NUMBER = 26;
        public static final int INITBY_FIELD_NUMBER = 6;
        public static final int LIMIT_FIELD_NUMBER = 8;
        public static final int MAXACKTIMESTAMP_FIELD_NUMBER = 22;
        public static final int MAXREADTIMESTAMP_FIELD_NUMBER = 21;
        public static final int MAXREADTUPLES_FIELD_NUMBER = 24;
        public static final int M_FIELD_NUMBER = 1;
        public static final int NEXT_FIELD_NUMBER = 40;
        public static final int N_FIELD_NUMBER = 14;
        @Deprecated
        public static final Parser<ConvCommand> PARSER = new AbstractParser<ConvCommand>() {
            public ConvCommand parsePartialFrom(CodedInputStream codedInputStream, ExtensionRegistryLite extensionRegistryLite) throws InvalidProtocolBufferException {
                return new ConvCommand(codedInputStream, extensionRegistryLite);
            }
        };
        public static final int QUERYALLMEMBERS_FIELD_NUMBER = 23;
        public static final int RESULTS_FIELD_NUMBER = 100;
        public static final int SKIP_FIELD_NUMBER = 9;
        public static final int SORT_FIELD_NUMBER = 7;
        public static final int STATUSPUB_FIELD_NUMBER = 17;
        public static final int STATUSSUB_FIELD_NUMBER = 16;
        public static final int STATUSTTL_FIELD_NUMBER = 18;
        public static final int S_FIELD_NUMBER = 15;
        public static final int TARGETCLIENTID_FIELD_NUMBER = 20;
        public static final int TEMPCONVIDS_FIELD_NUMBER = 29;
        public static final int TEMPCONVTTL_FIELD_NUMBER = 28;
        public static final int TEMPCONV_FIELD_NUMBER = 27;
        public static final int TRANSIENT_FIELD_NUMBER = 2;
        public static final int T_FIELD_NUMBER = 13;
        public static final int UDATE_FIELD_NUMBER = 12;
        public static final int UNIQUEID_FIELD_NUMBER = 19;
        public static final int UNIQUE_FIELD_NUMBER = 3;
        public static final int WHERE_FIELD_NUMBER = 101;
        private static final long serialVersionUID = 0;
        /* access modifiers changed from: private */
        public LazyStringList allowedPids_;
        /* access modifiers changed from: private */
        public JsonObjectMessage attr_;
        /* access modifiers changed from: private */
        public int bitField0_;
        /* access modifiers changed from: private */
        public volatile Object cdate_;
        /* access modifiers changed from: private */
        public volatile Object cid_;
        /* access modifiers changed from: private */
        public LazyStringList cids_;
        /* access modifiers changed from: private */
        public int count_;
        /* access modifiers changed from: private */
        public List<ErrorCommand> failedPids_;
        /* access modifiers changed from: private */
        public int flag_;
        /* access modifiers changed from: private */
        public ConvMemberInfo info_;
        /* access modifiers changed from: private */
        public volatile Object initBy_;
        /* access modifiers changed from: private */
        public int limit_;
        /* access modifiers changed from: private */
        public LazyStringList m_;
        /* access modifiers changed from: private */
        public long maxAckTimestamp_;
        /* access modifiers changed from: private */
        public long maxReadTimestamp_;
        /* access modifiers changed from: private */
        public List<MaxReadTuple> maxReadTuples_;
        private byte memoizedIsInitialized;
        /* access modifiers changed from: private */
        public volatile Object n_;
        /* access modifiers changed from: private */
        public volatile Object next_;
        /* access modifiers changed from: private */
        public boolean queryAllMembers_;
        /* access modifiers changed from: private */
        public JsonObjectMessage results_;
        /* access modifiers changed from: private */
        public volatile Object s_;
        /* access modifiers changed from: private */
        public int skip_;
        /* access modifiers changed from: private */
        public volatile Object sort_;
        /* access modifiers changed from: private */
        public boolean statusPub_;
        /* access modifiers changed from: private */
        public boolean statusSub_;
        /* access modifiers changed from: private */
        public int statusTTL_;
        /* access modifiers changed from: private */
        public long t_;
        /* access modifiers changed from: private */
        public volatile Object targetClientId_;
        /* access modifiers changed from: private */
        public LazyStringList tempConvIds_;
        /* access modifiers changed from: private */
        public int tempConvTTL_;
        /* access modifiers changed from: private */
        public boolean tempConv_;
        /* access modifiers changed from: private */
        public boolean transient_;
        /* access modifiers changed from: private */
        public volatile Object udate_;
        /* access modifiers changed from: private */
        public volatile Object uniqueId_;
        /* access modifiers changed from: private */
        public boolean unique_;
        /* access modifiers changed from: private */
        public JsonObjectMessage where_;

        public static final class Builder extends com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements ConvCommandOrBuilder {
            private LazyStringList allowedPids_;
            private SingleFieldBuilderV3<JsonObjectMessage, Builder, JsonObjectMessageOrBuilder> attrBuilder_;
            private JsonObjectMessage attr_;
            private int bitField0_;
            private int bitField1_;
            private Object cdate_;
            private Object cid_;
            private LazyStringList cids_;
            private int count_;
            private RepeatedFieldBuilderV3<ErrorCommand, Builder, ErrorCommandOrBuilder> failedPidsBuilder_;
            private List<ErrorCommand> failedPids_;
            private int flag_;
            private SingleFieldBuilderV3<ConvMemberInfo, Builder, ConvMemberInfoOrBuilder> infoBuilder_;
            private ConvMemberInfo info_;
            private Object initBy_;
            private int limit_;
            private LazyStringList m_;
            private long maxAckTimestamp_;
            private long maxReadTimestamp_;
            private RepeatedFieldBuilderV3<MaxReadTuple, Builder, MaxReadTupleOrBuilder> maxReadTuplesBuilder_;
            private List<MaxReadTuple> maxReadTuples_;
            private Object n_;
            private Object next_;
            private boolean queryAllMembers_;
            private SingleFieldBuilderV3<JsonObjectMessage, Builder, JsonObjectMessageOrBuilder> resultsBuilder_;
            private JsonObjectMessage results_;
            private Object s_;
            private int skip_;
            private Object sort_;
            private boolean statusPub_;
            private boolean statusSub_;
            private int statusTTL_;
            private long t_;
            private Object targetClientId_;
            private LazyStringList tempConvIds_;
            private int tempConvTTL_;
            private boolean tempConv_;
            private boolean transient_;
            private Object udate_;
            private Object uniqueId_;
            private boolean unique_;
            private SingleFieldBuilderV3<JsonObjectMessage, Builder, JsonObjectMessageOrBuilder> whereBuilder_;
            private JsonObjectMessage where_;

            public static final Descriptor getDescriptor() {
                return Messages.internal_static_com_avos_avoscloud_ConvCommand_descriptor;
            }

            /* access modifiers changed from: protected */
            public FieldAccessorTable internalGetFieldAccessorTable() {
                return Messages.internal_static_com_avos_avoscloud_ConvCommand_fieldAccessorTable.ensureFieldAccessorsInitialized(ConvCommand.class, Builder.class);
            }

            private Builder() {
                this.m_ = LazyStringArrayList.EMPTY;
                String str = "";
                this.cid_ = str;
                this.cdate_ = str;
                this.initBy_ = str;
                this.sort_ = str;
                this.udate_ = str;
                this.n_ = str;
                this.s_ = str;
                this.uniqueId_ = str;
                this.targetClientId_ = str;
                this.maxReadTuples_ = Collections.emptyList();
                this.cids_ = LazyStringArrayList.EMPTY;
                this.info_ = null;
                this.tempConvIds_ = LazyStringArrayList.EMPTY;
                this.allowedPids_ = LazyStringArrayList.EMPTY;
                this.failedPids_ = Collections.emptyList();
                this.next_ = str;
                this.results_ = null;
                this.where_ = null;
                this.attr_ = null;
                maybeForceBuilderInitialization();
            }

            private Builder(BuilderParent builderParent) {
                super(builderParent);
                this.m_ = LazyStringArrayList.EMPTY;
                String str = "";
                this.cid_ = str;
                this.cdate_ = str;
                this.initBy_ = str;
                this.sort_ = str;
                this.udate_ = str;
                this.n_ = str;
                this.s_ = str;
                this.uniqueId_ = str;
                this.targetClientId_ = str;
                this.maxReadTuples_ = Collections.emptyList();
                this.cids_ = LazyStringArrayList.EMPTY;
                this.info_ = null;
                this.tempConvIds_ = LazyStringArrayList.EMPTY;
                this.allowedPids_ = LazyStringArrayList.EMPTY;
                this.failedPids_ = Collections.emptyList();
                this.next_ = str;
                this.results_ = null;
                this.where_ = null;
                this.attr_ = null;
                maybeForceBuilderInitialization();
            }

            private void maybeForceBuilderInitialization() {
                if (ConvCommand.alwaysUseFieldBuilders) {
                    getMaxReadTuplesFieldBuilder();
                    getInfoFieldBuilder();
                    getFailedPidsFieldBuilder();
                    getResultsFieldBuilder();
                    getWhereFieldBuilder();
                    getAttrFieldBuilder();
                }
            }

            public Builder clear() {
                super.clear();
                this.m_ = LazyStringArrayList.EMPTY;
                this.bitField0_ &= -2;
                this.transient_ = false;
                this.bitField0_ &= -3;
                this.unique_ = false;
                this.bitField0_ &= -5;
                String str = "";
                this.cid_ = str;
                this.bitField0_ &= -9;
                this.cdate_ = str;
                this.bitField0_ &= -17;
                this.initBy_ = str;
                this.bitField0_ &= -33;
                this.sort_ = str;
                this.bitField0_ &= -65;
                this.limit_ = 0;
                this.bitField0_ &= -129;
                this.skip_ = 0;
                this.bitField0_ &= -257;
                this.flag_ = 0;
                this.bitField0_ &= -513;
                this.count_ = 0;
                this.bitField0_ &= -1025;
                this.udate_ = str;
                this.bitField0_ &= -2049;
                this.t_ = 0;
                this.bitField0_ &= -4097;
                this.n_ = str;
                this.bitField0_ &= -8193;
                this.s_ = str;
                this.bitField0_ &= -16385;
                this.statusSub_ = false;
                this.bitField0_ &= -32769;
                this.statusPub_ = false;
                this.bitField0_ &= CommandPacket.UNSUPPORTED_OPERATION;
                this.statusTTL_ = 0;
                this.bitField0_ &= -131073;
                this.uniqueId_ = str;
                this.bitField0_ &= -262145;
                this.targetClientId_ = str;
                this.bitField0_ &= -524289;
                this.maxReadTimestamp_ = 0;
                this.bitField0_ &= -1048577;
                this.maxAckTimestamp_ = 0;
                this.bitField0_ &= -2097153;
                this.queryAllMembers_ = false;
                this.bitField0_ &= -4194305;
                RepeatedFieldBuilderV3<MaxReadTuple, Builder, MaxReadTupleOrBuilder> repeatedFieldBuilderV3 = this.maxReadTuplesBuilder_;
                if (repeatedFieldBuilderV3 == null) {
                    this.maxReadTuples_ = Collections.emptyList();
                    this.bitField0_ &= -8388609;
                } else {
                    repeatedFieldBuilderV3.clear();
                }
                this.cids_ = LazyStringArrayList.EMPTY;
                this.bitField0_ &= -16777217;
                SingleFieldBuilderV3<ConvMemberInfo, Builder, ConvMemberInfoOrBuilder> singleFieldBuilderV3 = this.infoBuilder_;
                if (singleFieldBuilderV3 == null) {
                    this.info_ = null;
                } else {
                    singleFieldBuilderV3.clear();
                }
                this.bitField0_ &= -33554433;
                this.tempConv_ = false;
                this.bitField0_ &= -67108865;
                this.tempConvTTL_ = 0;
                this.bitField0_ &= -134217729;
                this.tempConvIds_ = LazyStringArrayList.EMPTY;
                this.bitField0_ &= -268435457;
                this.allowedPids_ = LazyStringArrayList.EMPTY;
                this.bitField0_ &= -536870913;
                RepeatedFieldBuilderV3<ErrorCommand, Builder, ErrorCommandOrBuilder> repeatedFieldBuilderV32 = this.failedPidsBuilder_;
                if (repeatedFieldBuilderV32 == null) {
                    this.failedPids_ = Collections.emptyList();
                    this.bitField0_ &= -1073741825;
                } else {
                    repeatedFieldBuilderV32.clear();
                }
                this.next_ = str;
                this.bitField0_ &= Integer.MAX_VALUE;
                SingleFieldBuilderV3<JsonObjectMessage, Builder, JsonObjectMessageOrBuilder> singleFieldBuilderV32 = this.resultsBuilder_;
                if (singleFieldBuilderV32 == null) {
                    this.results_ = null;
                } else {
                    singleFieldBuilderV32.clear();
                }
                this.bitField1_ &= -2;
                SingleFieldBuilderV3<JsonObjectMessage, Builder, JsonObjectMessageOrBuilder> singleFieldBuilderV33 = this.whereBuilder_;
                if (singleFieldBuilderV33 == null) {
                    this.where_ = null;
                } else {
                    singleFieldBuilderV33.clear();
                }
                this.bitField1_ &= -3;
                SingleFieldBuilderV3<JsonObjectMessage, Builder, JsonObjectMessageOrBuilder> singleFieldBuilderV34 = this.attrBuilder_;
                if (singleFieldBuilderV34 == null) {
                    this.attr_ = null;
                } else {
                    singleFieldBuilderV34.clear();
                }
                this.bitField1_ &= -5;
                return this;
            }

            public Descriptor getDescriptorForType() {
                return Messages.internal_static_com_avos_avoscloud_ConvCommand_descriptor;
            }

            public ConvCommand getDefaultInstanceForType() {
                return ConvCommand.getDefaultInstance();
            }

            public ConvCommand build() {
                ConvCommand buildPartial = buildPartial();
                if (buildPartial.isInitialized()) {
                    return buildPartial;
                }
                throw newUninitializedMessageException(buildPartial);
            }

            public ConvCommand buildPartial() {
                ConvCommand convCommand = new ConvCommand((com.google.protobuf.GeneratedMessageV3.Builder) this);
                int i = this.bitField0_;
                int i2 = this.bitField1_;
                if ((i & 1) == 1) {
                    this.m_ = this.m_.getUnmodifiableView();
                    this.bitField0_ &= -2;
                }
                convCommand.m_ = this.m_;
                int i3 = (i & 2) == 2 ? 1 : 0;
                convCommand.transient_ = this.transient_;
                if ((i & 4) == 4) {
                    i3 |= 2;
                }
                convCommand.unique_ = this.unique_;
                if ((i & 8) == 8) {
                    i3 |= 4;
                }
                convCommand.cid_ = this.cid_;
                if ((i & 16) == 16) {
                    i3 |= 8;
                }
                convCommand.cdate_ = this.cdate_;
                if ((i & 32) == 32) {
                    i3 |= 16;
                }
                convCommand.initBy_ = this.initBy_;
                if ((i & 64) == 64) {
                    i3 |= 32;
                }
                convCommand.sort_ = this.sort_;
                if ((i & 128) == 128) {
                    i3 |= 64;
                }
                convCommand.limit_ = this.limit_;
                if ((i & 256) == 256) {
                    i3 |= 128;
                }
                convCommand.skip_ = this.skip_;
                if ((i & 512) == 512) {
                    i3 |= 256;
                }
                convCommand.flag_ = this.flag_;
                if ((i & 1024) == 1024) {
                    i3 |= 512;
                }
                convCommand.count_ = this.count_;
                if ((i & 2048) == 2048) {
                    i3 |= 1024;
                }
                convCommand.udate_ = this.udate_;
                if ((i & 4096) == 4096) {
                    i3 |= 2048;
                }
                convCommand.t_ = this.t_;
                if ((i & 8192) == 8192) {
                    i3 |= 4096;
                }
                convCommand.n_ = this.n_;
                if ((i & 16384) == 16384) {
                    i3 |= 8192;
                }
                convCommand.s_ = this.s_;
                if ((32768 & i) == 32768) {
                    i3 |= 16384;
                }
                convCommand.statusSub_ = this.statusSub_;
                if ((65536 & i) == 65536) {
                    i3 |= 32768;
                }
                convCommand.statusPub_ = this.statusPub_;
                if ((131072 & i) == 131072) {
                    i3 |= 65536;
                }
                convCommand.statusTTL_ = this.statusTTL_;
                if ((262144 & i) == 262144) {
                    i3 |= 131072;
                }
                convCommand.uniqueId_ = this.uniqueId_;
                if ((524288 & i) == 524288) {
                    i3 |= 262144;
                }
                convCommand.targetClientId_ = this.targetClientId_;
                if ((1048576 & i) == 1048576) {
                    i3 |= 524288;
                }
                convCommand.maxReadTimestamp_ = this.maxReadTimestamp_;
                if ((2097152 & i) == 2097152) {
                    i3 |= 1048576;
                }
                convCommand.maxAckTimestamp_ = this.maxAckTimestamp_;
                if ((4194304 & i) == 4194304) {
                    i3 |= 2097152;
                }
                convCommand.queryAllMembers_ = this.queryAllMembers_;
                RepeatedFieldBuilderV3<MaxReadTuple, Builder, MaxReadTupleOrBuilder> repeatedFieldBuilderV3 = this.maxReadTuplesBuilder_;
                if (repeatedFieldBuilderV3 == null) {
                    if ((this.bitField0_ & 8388608) == 8388608) {
                        this.maxReadTuples_ = Collections.unmodifiableList(this.maxReadTuples_);
                        this.bitField0_ &= -8388609;
                    }
                    convCommand.maxReadTuples_ = this.maxReadTuples_;
                } else {
                    convCommand.maxReadTuples_ = repeatedFieldBuilderV3.build();
                }
                if ((this.bitField0_ & 16777216) == 16777216) {
                    this.cids_ = this.cids_.getUnmodifiableView();
                    this.bitField0_ &= -16777217;
                }
                convCommand.cids_ = this.cids_;
                if ((33554432 & i) == 33554432) {
                    i3 |= 4194304;
                }
                SingleFieldBuilderV3<ConvMemberInfo, Builder, ConvMemberInfoOrBuilder> singleFieldBuilderV3 = this.infoBuilder_;
                if (singleFieldBuilderV3 == null) {
                    convCommand.info_ = this.info_;
                } else {
                    convCommand.info_ = (ConvMemberInfo) singleFieldBuilderV3.build();
                }
                if ((67108864 & i) == 67108864) {
                    i3 |= 8388608;
                }
                convCommand.tempConv_ = this.tempConv_;
                if ((134217728 & i) == 134217728) {
                    i3 |= 16777216;
                }
                convCommand.tempConvTTL_ = this.tempConvTTL_;
                if ((this.bitField0_ & C.ENCODING_PCM_MU_LAW) == 268435456) {
                    this.tempConvIds_ = this.tempConvIds_.getUnmodifiableView();
                    this.bitField0_ &= -268435457;
                }
                convCommand.tempConvIds_ = this.tempConvIds_;
                if ((this.bitField0_ & 536870912) == 536870912) {
                    this.allowedPids_ = this.allowedPids_.getUnmodifiableView();
                    this.bitField0_ &= -536870913;
                }
                convCommand.allowedPids_ = this.allowedPids_;
                RepeatedFieldBuilderV3<ErrorCommand, Builder, ErrorCommandOrBuilder> repeatedFieldBuilderV32 = this.failedPidsBuilder_;
                if (repeatedFieldBuilderV32 == null) {
                    if ((this.bitField0_ & 1073741824) == 1073741824) {
                        this.failedPids_ = Collections.unmodifiableList(this.failedPids_);
                        this.bitField0_ &= -1073741825;
                    }
                    convCommand.failedPids_ = this.failedPids_;
                } else {
                    convCommand.failedPids_ = repeatedFieldBuilderV32.build();
                }
                if ((i & Integer.MIN_VALUE) == Integer.MIN_VALUE) {
                    i3 |= 33554432;
                }
                convCommand.next_ = this.next_;
                if ((i2 & 1) == 1) {
                    i3 |= 67108864;
                }
                SingleFieldBuilderV3<JsonObjectMessage, Builder, JsonObjectMessageOrBuilder> singleFieldBuilderV32 = this.resultsBuilder_;
                if (singleFieldBuilderV32 == null) {
                    convCommand.results_ = this.results_;
                } else {
                    convCommand.results_ = (JsonObjectMessage) singleFieldBuilderV32.build();
                }
                if ((i2 & 2) == 2) {
                    i3 |= 134217728;
                }
                SingleFieldBuilderV3<JsonObjectMessage, Builder, JsonObjectMessageOrBuilder> singleFieldBuilderV33 = this.whereBuilder_;
                if (singleFieldBuilderV33 == null) {
                    convCommand.where_ = this.where_;
                } else {
                    convCommand.where_ = (JsonObjectMessage) singleFieldBuilderV33.build();
                }
                if ((i2 & 4) == 4) {
                    i3 |= C.ENCODING_PCM_MU_LAW;
                }
                SingleFieldBuilderV3<JsonObjectMessage, Builder, JsonObjectMessageOrBuilder> singleFieldBuilderV34 = this.attrBuilder_;
                if (singleFieldBuilderV34 == null) {
                    convCommand.attr_ = this.attr_;
                } else {
                    convCommand.attr_ = (JsonObjectMessage) singleFieldBuilderV34.build();
                }
                convCommand.bitField0_ = i3;
                onBuilt();
                return convCommand;
            }

            public Builder clone() {
                return (Builder) super.clone();
            }

            public Builder setField(FieldDescriptor fieldDescriptor, Object obj) {
                return (Builder) super.setField(fieldDescriptor, obj);
            }

            public Builder clearField(FieldDescriptor fieldDescriptor) {
                return (Builder) super.clearField(fieldDescriptor);
            }

            public Builder clearOneof(OneofDescriptor oneofDescriptor) {
                return (Builder) super.clearOneof(oneofDescriptor);
            }

            public Builder setRepeatedField(FieldDescriptor fieldDescriptor, int i, Object obj) {
                return (Builder) super.setRepeatedField(fieldDescriptor, i, obj);
            }

            public Builder addRepeatedField(FieldDescriptor fieldDescriptor, Object obj) {
                return (Builder) super.addRepeatedField(fieldDescriptor, obj);
            }

            public Builder mergeFrom(Message message) {
                if (message instanceof ConvCommand) {
                    return mergeFrom((ConvCommand) message);
                }
                super.mergeFrom(message);
                return this;
            }

            public Builder mergeFrom(ConvCommand convCommand) {
                if (convCommand == ConvCommand.getDefaultInstance()) {
                    return this;
                }
                if (!convCommand.m_.isEmpty()) {
                    if (this.m_.isEmpty()) {
                        this.m_ = convCommand.m_;
                        this.bitField0_ &= -2;
                    } else {
                        ensureMIsMutable();
                        this.m_.addAll(convCommand.m_);
                    }
                    onChanged();
                }
                if (convCommand.hasTransient()) {
                    setTransient(convCommand.getTransient());
                }
                if (convCommand.hasUnique()) {
                    setUnique(convCommand.getUnique());
                }
                if (convCommand.hasCid()) {
                    this.bitField0_ |= 8;
                    this.cid_ = convCommand.cid_;
                    onChanged();
                }
                if (convCommand.hasCdate()) {
                    this.bitField0_ |= 16;
                    this.cdate_ = convCommand.cdate_;
                    onChanged();
                }
                if (convCommand.hasInitBy()) {
                    this.bitField0_ |= 32;
                    this.initBy_ = convCommand.initBy_;
                    onChanged();
                }
                if (convCommand.hasSort()) {
                    this.bitField0_ |= 64;
                    this.sort_ = convCommand.sort_;
                    onChanged();
                }
                if (convCommand.hasLimit()) {
                    setLimit(convCommand.getLimit());
                }
                if (convCommand.hasSkip()) {
                    setSkip(convCommand.getSkip());
                }
                if (convCommand.hasFlag()) {
                    setFlag(convCommand.getFlag());
                }
                if (convCommand.hasCount()) {
                    setCount(convCommand.getCount());
                }
                if (convCommand.hasUdate()) {
                    this.bitField0_ |= 2048;
                    this.udate_ = convCommand.udate_;
                    onChanged();
                }
                if (convCommand.hasT()) {
                    setT(convCommand.getT());
                }
                if (convCommand.hasN()) {
                    this.bitField0_ |= 8192;
                    this.n_ = convCommand.n_;
                    onChanged();
                }
                if (convCommand.hasS()) {
                    this.bitField0_ |= 16384;
                    this.s_ = convCommand.s_;
                    onChanged();
                }
                if (convCommand.hasStatusSub()) {
                    setStatusSub(convCommand.getStatusSub());
                }
                if (convCommand.hasStatusPub()) {
                    setStatusPub(convCommand.getStatusPub());
                }
                if (convCommand.hasStatusTTL()) {
                    setStatusTTL(convCommand.getStatusTTL());
                }
                if (convCommand.hasUniqueId()) {
                    this.bitField0_ |= 262144;
                    this.uniqueId_ = convCommand.uniqueId_;
                    onChanged();
                }
                if (convCommand.hasTargetClientId()) {
                    this.bitField0_ |= 524288;
                    this.targetClientId_ = convCommand.targetClientId_;
                    onChanged();
                }
                if (convCommand.hasMaxReadTimestamp()) {
                    setMaxReadTimestamp(convCommand.getMaxReadTimestamp());
                }
                if (convCommand.hasMaxAckTimestamp()) {
                    setMaxAckTimestamp(convCommand.getMaxAckTimestamp());
                }
                if (convCommand.hasQueryAllMembers()) {
                    setQueryAllMembers(convCommand.getQueryAllMembers());
                }
                RepeatedFieldBuilderV3<ErrorCommand, Builder, ErrorCommandOrBuilder> repeatedFieldBuilderV3 = null;
                if (this.maxReadTuplesBuilder_ == null) {
                    if (!convCommand.maxReadTuples_.isEmpty()) {
                        if (this.maxReadTuples_.isEmpty()) {
                            this.maxReadTuples_ = convCommand.maxReadTuples_;
                            this.bitField0_ &= -8388609;
                        } else {
                            ensureMaxReadTuplesIsMutable();
                            this.maxReadTuples_.addAll(convCommand.maxReadTuples_);
                        }
                        onChanged();
                    }
                } else if (!convCommand.maxReadTuples_.isEmpty()) {
                    if (this.maxReadTuplesBuilder_.isEmpty()) {
                        this.maxReadTuplesBuilder_.dispose();
                        this.maxReadTuplesBuilder_ = null;
                        this.maxReadTuples_ = convCommand.maxReadTuples_;
                        this.bitField0_ &= -8388609;
                        this.maxReadTuplesBuilder_ = ConvCommand.alwaysUseFieldBuilders ? getMaxReadTuplesFieldBuilder() : null;
                    } else {
                        this.maxReadTuplesBuilder_.addAllMessages(convCommand.maxReadTuples_);
                    }
                }
                if (!convCommand.cids_.isEmpty()) {
                    if (this.cids_.isEmpty()) {
                        this.cids_ = convCommand.cids_;
                        this.bitField0_ &= -16777217;
                    } else {
                        ensureCidsIsMutable();
                        this.cids_.addAll(convCommand.cids_);
                    }
                    onChanged();
                }
                if (convCommand.hasInfo()) {
                    mergeInfo(convCommand.getInfo());
                }
                if (convCommand.hasTempConv()) {
                    setTempConv(convCommand.getTempConv());
                }
                if (convCommand.hasTempConvTTL()) {
                    setTempConvTTL(convCommand.getTempConvTTL());
                }
                if (!convCommand.tempConvIds_.isEmpty()) {
                    if (this.tempConvIds_.isEmpty()) {
                        this.tempConvIds_ = convCommand.tempConvIds_;
                        this.bitField0_ &= -268435457;
                    } else {
                        ensureTempConvIdsIsMutable();
                        this.tempConvIds_.addAll(convCommand.tempConvIds_);
                    }
                    onChanged();
                }
                if (!convCommand.allowedPids_.isEmpty()) {
                    if (this.allowedPids_.isEmpty()) {
                        this.allowedPids_ = convCommand.allowedPids_;
                        this.bitField0_ &= -536870913;
                    } else {
                        ensureAllowedPidsIsMutable();
                        this.allowedPids_.addAll(convCommand.allowedPids_);
                    }
                    onChanged();
                }
                if (this.failedPidsBuilder_ == null) {
                    if (!convCommand.failedPids_.isEmpty()) {
                        if (this.failedPids_.isEmpty()) {
                            this.failedPids_ = convCommand.failedPids_;
                            this.bitField0_ &= -1073741825;
                        } else {
                            ensureFailedPidsIsMutable();
                            this.failedPids_.addAll(convCommand.failedPids_);
                        }
                        onChanged();
                    }
                } else if (!convCommand.failedPids_.isEmpty()) {
                    if (this.failedPidsBuilder_.isEmpty()) {
                        this.failedPidsBuilder_.dispose();
                        this.failedPidsBuilder_ = null;
                        this.failedPids_ = convCommand.failedPids_;
                        this.bitField0_ &= -1073741825;
                        if (ConvCommand.alwaysUseFieldBuilders) {
                            repeatedFieldBuilderV3 = getFailedPidsFieldBuilder();
                        }
                        this.failedPidsBuilder_ = repeatedFieldBuilderV3;
                    } else {
                        this.failedPidsBuilder_.addAllMessages(convCommand.failedPids_);
                    }
                }
                if (convCommand.hasNext()) {
                    this.bitField0_ |= Integer.MIN_VALUE;
                    this.next_ = convCommand.next_;
                    onChanged();
                }
                if (convCommand.hasResults()) {
                    mergeResults(convCommand.getResults());
                }
                if (convCommand.hasWhere()) {
                    mergeWhere(convCommand.getWhere());
                }
                if (convCommand.hasAttr()) {
                    mergeAttr(convCommand.getAttr());
                }
                mergeUnknownFields(convCommand.unknownFields);
                onChanged();
                return this;
            }

            public final boolean isInitialized() {
                for (int i = 0; i < getFailedPidsCount(); i++) {
                    if (!getFailedPids(i).isInitialized()) {
                        return false;
                    }
                }
                if (hasResults() && !getResults().isInitialized()) {
                    return false;
                }
                if (hasWhere() && !getWhere().isInitialized()) {
                    return false;
                }
                if (!hasAttr() || getAttr().isInitialized()) {
                    return true;
                }
                return false;
            }

            /* JADX WARNING: Removed duplicated region for block: B:16:0x0021  */
            /* Code decompiled incorrectly, please refer to instructions dump. */
            public com.avos.avoscloud.Messages.ConvCommand.Builder mergeFrom(com.google.protobuf.CodedInputStream r3, com.google.protobuf.ExtensionRegistryLite r4) throws java.io.IOException {
                /*
                    r2 = this;
                    r0 = 0
                    com.google.protobuf.Parser<com.avos.avoscloud.Messages$ConvCommand> r1 = com.avos.avoscloud.Messages.ConvCommand.PARSER     // Catch:{ InvalidProtocolBufferException -> 0x0011 }
                    java.lang.Object r3 = r1.parsePartialFrom(r3, r4)     // Catch:{ InvalidProtocolBufferException -> 0x0011 }
                    com.avos.avoscloud.Messages$ConvCommand r3 = (com.avos.avoscloud.Messages.ConvCommand) r3     // Catch:{ InvalidProtocolBufferException -> 0x0011 }
                    if (r3 == 0) goto L_0x000e
                    r2.mergeFrom(r3)
                L_0x000e:
                    return r2
                L_0x000f:
                    r3 = move-exception
                    goto L_0x001f
                L_0x0011:
                    r3 = move-exception
                    com.google.protobuf.MessageLite r4 = r3.getUnfinishedMessage()     // Catch:{ all -> 0x000f }
                    com.avos.avoscloud.Messages$ConvCommand r4 = (com.avos.avoscloud.Messages.ConvCommand) r4     // Catch:{ all -> 0x000f }
                    java.io.IOException r3 = r3.unwrapIOException()     // Catch:{ all -> 0x001d }
                    throw r3     // Catch:{ all -> 0x001d }
                L_0x001d:
                    r3 = move-exception
                    r0 = r4
                L_0x001f:
                    if (r0 == 0) goto L_0x0024
                    r2.mergeFrom(r0)
                L_0x0024:
                    throw r3
                */
                throw new UnsupportedOperationException("Method not decompiled: com.avos.avoscloud.Messages.ConvCommand.Builder.mergeFrom(com.google.protobuf.CodedInputStream, com.google.protobuf.ExtensionRegistryLite):com.avos.avoscloud.Messages$ConvCommand$Builder");
            }

            private void ensureMIsMutable() {
                if ((this.bitField0_ & 1) != 1) {
                    this.m_ = new LazyStringArrayList(this.m_);
                    this.bitField0_ |= 1;
                }
            }

            public ProtocolStringList getMList() {
                return this.m_.getUnmodifiableView();
            }

            public int getMCount() {
                return this.m_.size();
            }

            public String getM(int i) {
                return (String) this.m_.get(i);
            }

            public ByteString getMBytes(int i) {
                return this.m_.getByteString(i);
            }

            public Builder setM(int i, String str) {
                if (str != null) {
                    ensureMIsMutable();
                    this.m_.set(i, str);
                    onChanged();
                    return this;
                }
                throw new NullPointerException();
            }

            public Builder addM(String str) {
                if (str != null) {
                    ensureMIsMutable();
                    this.m_.add(str);
                    onChanged();
                    return this;
                }
                throw new NullPointerException();
            }

            public Builder addAllM(Iterable<String> iterable) {
                ensureMIsMutable();
                com.google.protobuf.AbstractMessageLite.Builder.addAll((Iterable) iterable, (List) this.m_);
                onChanged();
                return this;
            }

            public Builder clearM() {
                this.m_ = LazyStringArrayList.EMPTY;
                this.bitField0_ &= -2;
                onChanged();
                return this;
            }

            public Builder addMBytes(ByteString byteString) {
                if (byteString != null) {
                    ensureMIsMutable();
                    this.m_.add(byteString);
                    onChanged();
                    return this;
                }
                throw new NullPointerException();
            }

            public boolean hasTransient() {
                return (this.bitField0_ & 2) == 2;
            }

            public boolean getTransient() {
                return this.transient_;
            }

            public Builder setTransient(boolean z) {
                this.bitField0_ |= 2;
                this.transient_ = z;
                onChanged();
                return this;
            }

            public Builder clearTransient() {
                this.bitField0_ &= -3;
                this.transient_ = false;
                onChanged();
                return this;
            }

            public boolean hasUnique() {
                return (this.bitField0_ & 4) == 4;
            }

            public boolean getUnique() {
                return this.unique_;
            }

            public Builder setUnique(boolean z) {
                this.bitField0_ |= 4;
                this.unique_ = z;
                onChanged();
                return this;
            }

            public Builder clearUnique() {
                this.bitField0_ &= -5;
                this.unique_ = false;
                onChanged();
                return this;
            }

            public boolean hasCid() {
                return (this.bitField0_ & 8) == 8;
            }

            public String getCid() {
                Object obj = this.cid_;
                if (obj instanceof String) {
                    return (String) obj;
                }
                ByteString byteString = (ByteString) obj;
                String stringUtf8 = byteString.toStringUtf8();
                if (byteString.isValidUtf8()) {
                    this.cid_ = stringUtf8;
                }
                return stringUtf8;
            }

            public ByteString getCidBytes() {
                Object obj = this.cid_;
                if (!(obj instanceof String)) {
                    return (ByteString) obj;
                }
                ByteString copyFromUtf8 = ByteString.copyFromUtf8((String) obj);
                this.cid_ = copyFromUtf8;
                return copyFromUtf8;
            }

            public Builder setCid(String str) {
                if (str != null) {
                    this.bitField0_ |= 8;
                    this.cid_ = str;
                    onChanged();
                    return this;
                }
                throw new NullPointerException();
            }

            public Builder clearCid() {
                this.bitField0_ &= -9;
                this.cid_ = ConvCommand.getDefaultInstance().getCid();
                onChanged();
                return this;
            }

            public Builder setCidBytes(ByteString byteString) {
                if (byteString != null) {
                    this.bitField0_ |= 8;
                    this.cid_ = byteString;
                    onChanged();
                    return this;
                }
                throw new NullPointerException();
            }

            public boolean hasCdate() {
                return (this.bitField0_ & 16) == 16;
            }

            public String getCdate() {
                Object obj = this.cdate_;
                if (obj instanceof String) {
                    return (String) obj;
                }
                ByteString byteString = (ByteString) obj;
                String stringUtf8 = byteString.toStringUtf8();
                if (byteString.isValidUtf8()) {
                    this.cdate_ = stringUtf8;
                }
                return stringUtf8;
            }

            public ByteString getCdateBytes() {
                Object obj = this.cdate_;
                if (!(obj instanceof String)) {
                    return (ByteString) obj;
                }
                ByteString copyFromUtf8 = ByteString.copyFromUtf8((String) obj);
                this.cdate_ = copyFromUtf8;
                return copyFromUtf8;
            }

            public Builder setCdate(String str) {
                if (str != null) {
                    this.bitField0_ |= 16;
                    this.cdate_ = str;
                    onChanged();
                    return this;
                }
                throw new NullPointerException();
            }

            public Builder clearCdate() {
                this.bitField0_ &= -17;
                this.cdate_ = ConvCommand.getDefaultInstance().getCdate();
                onChanged();
                return this;
            }

            public Builder setCdateBytes(ByteString byteString) {
                if (byteString != null) {
                    this.bitField0_ |= 16;
                    this.cdate_ = byteString;
                    onChanged();
                    return this;
                }
                throw new NullPointerException();
            }

            public boolean hasInitBy() {
                return (this.bitField0_ & 32) == 32;
            }

            public String getInitBy() {
                Object obj = this.initBy_;
                if (obj instanceof String) {
                    return (String) obj;
                }
                ByteString byteString = (ByteString) obj;
                String stringUtf8 = byteString.toStringUtf8();
                if (byteString.isValidUtf8()) {
                    this.initBy_ = stringUtf8;
                }
                return stringUtf8;
            }

            public ByteString getInitByBytes() {
                Object obj = this.initBy_;
                if (!(obj instanceof String)) {
                    return (ByteString) obj;
                }
                ByteString copyFromUtf8 = ByteString.copyFromUtf8((String) obj);
                this.initBy_ = copyFromUtf8;
                return copyFromUtf8;
            }

            public Builder setInitBy(String str) {
                if (str != null) {
                    this.bitField0_ |= 32;
                    this.initBy_ = str;
                    onChanged();
                    return this;
                }
                throw new NullPointerException();
            }

            public Builder clearInitBy() {
                this.bitField0_ &= -33;
                this.initBy_ = ConvCommand.getDefaultInstance().getInitBy();
                onChanged();
                return this;
            }

            public Builder setInitByBytes(ByteString byteString) {
                if (byteString != null) {
                    this.bitField0_ |= 32;
                    this.initBy_ = byteString;
                    onChanged();
                    return this;
                }
                throw new NullPointerException();
            }

            public boolean hasSort() {
                return (this.bitField0_ & 64) == 64;
            }

            public String getSort() {
                Object obj = this.sort_;
                if (obj instanceof String) {
                    return (String) obj;
                }
                ByteString byteString = (ByteString) obj;
                String stringUtf8 = byteString.toStringUtf8();
                if (byteString.isValidUtf8()) {
                    this.sort_ = stringUtf8;
                }
                return stringUtf8;
            }

            public ByteString getSortBytes() {
                Object obj = this.sort_;
                if (!(obj instanceof String)) {
                    return (ByteString) obj;
                }
                ByteString copyFromUtf8 = ByteString.copyFromUtf8((String) obj);
                this.sort_ = copyFromUtf8;
                return copyFromUtf8;
            }

            public Builder setSort(String str) {
                if (str != null) {
                    this.bitField0_ |= 64;
                    this.sort_ = str;
                    onChanged();
                    return this;
                }
                throw new NullPointerException();
            }

            public Builder clearSort() {
                this.bitField0_ &= -65;
                this.sort_ = ConvCommand.getDefaultInstance().getSort();
                onChanged();
                return this;
            }

            public Builder setSortBytes(ByteString byteString) {
                if (byteString != null) {
                    this.bitField0_ |= 64;
                    this.sort_ = byteString;
                    onChanged();
                    return this;
                }
                throw new NullPointerException();
            }

            public boolean hasLimit() {
                return (this.bitField0_ & 128) == 128;
            }

            public int getLimit() {
                return this.limit_;
            }

            public Builder setLimit(int i) {
                this.bitField0_ |= 128;
                this.limit_ = i;
                onChanged();
                return this;
            }

            public Builder clearLimit() {
                this.bitField0_ &= -129;
                this.limit_ = 0;
                onChanged();
                return this;
            }

            public boolean hasSkip() {
                return (this.bitField0_ & 256) == 256;
            }

            public int getSkip() {
                return this.skip_;
            }

            public Builder setSkip(int i) {
                this.bitField0_ |= 256;
                this.skip_ = i;
                onChanged();
                return this;
            }

            public Builder clearSkip() {
                this.bitField0_ &= -257;
                this.skip_ = 0;
                onChanged();
                return this;
            }

            public boolean hasFlag() {
                return (this.bitField0_ & 512) == 512;
            }

            public int getFlag() {
                return this.flag_;
            }

            public Builder setFlag(int i) {
                this.bitField0_ |= 512;
                this.flag_ = i;
                onChanged();
                return this;
            }

            public Builder clearFlag() {
                this.bitField0_ &= -513;
                this.flag_ = 0;
                onChanged();
                return this;
            }

            public boolean hasCount() {
                return (this.bitField0_ & 1024) == 1024;
            }

            public int getCount() {
                return this.count_;
            }

            public Builder setCount(int i) {
                this.bitField0_ |= 1024;
                this.count_ = i;
                onChanged();
                return this;
            }

            public Builder clearCount() {
                this.bitField0_ &= -1025;
                this.count_ = 0;
                onChanged();
                return this;
            }

            public boolean hasUdate() {
                return (this.bitField0_ & 2048) == 2048;
            }

            public String getUdate() {
                Object obj = this.udate_;
                if (obj instanceof String) {
                    return (String) obj;
                }
                ByteString byteString = (ByteString) obj;
                String stringUtf8 = byteString.toStringUtf8();
                if (byteString.isValidUtf8()) {
                    this.udate_ = stringUtf8;
                }
                return stringUtf8;
            }

            public ByteString getUdateBytes() {
                Object obj = this.udate_;
                if (!(obj instanceof String)) {
                    return (ByteString) obj;
                }
                ByteString copyFromUtf8 = ByteString.copyFromUtf8((String) obj);
                this.udate_ = copyFromUtf8;
                return copyFromUtf8;
            }

            public Builder setUdate(String str) {
                if (str != null) {
                    this.bitField0_ |= 2048;
                    this.udate_ = str;
                    onChanged();
                    return this;
                }
                throw new NullPointerException();
            }

            public Builder clearUdate() {
                this.bitField0_ &= -2049;
                this.udate_ = ConvCommand.getDefaultInstance().getUdate();
                onChanged();
                return this;
            }

            public Builder setUdateBytes(ByteString byteString) {
                if (byteString != null) {
                    this.bitField0_ |= 2048;
                    this.udate_ = byteString;
                    onChanged();
                    return this;
                }
                throw new NullPointerException();
            }

            public boolean hasT() {
                return (this.bitField0_ & 4096) == 4096;
            }

            public long getT() {
                return this.t_;
            }

            public Builder setT(long j) {
                this.bitField0_ |= 4096;
                this.t_ = j;
                onChanged();
                return this;
            }

            public Builder clearT() {
                this.bitField0_ &= -4097;
                this.t_ = 0;
                onChanged();
                return this;
            }

            public boolean hasN() {
                return (this.bitField0_ & 8192) == 8192;
            }

            public String getN() {
                Object obj = this.n_;
                if (obj instanceof String) {
                    return (String) obj;
                }
                ByteString byteString = (ByteString) obj;
                String stringUtf8 = byteString.toStringUtf8();
                if (byteString.isValidUtf8()) {
                    this.n_ = stringUtf8;
                }
                return stringUtf8;
            }

            public ByteString getNBytes() {
                Object obj = this.n_;
                if (!(obj instanceof String)) {
                    return (ByteString) obj;
                }
                ByteString copyFromUtf8 = ByteString.copyFromUtf8((String) obj);
                this.n_ = copyFromUtf8;
                return copyFromUtf8;
            }

            public Builder setN(String str) {
                if (str != null) {
                    this.bitField0_ |= 8192;
                    this.n_ = str;
                    onChanged();
                    return this;
                }
                throw new NullPointerException();
            }

            public Builder clearN() {
                this.bitField0_ &= -8193;
                this.n_ = ConvCommand.getDefaultInstance().getN();
                onChanged();
                return this;
            }

            public Builder setNBytes(ByteString byteString) {
                if (byteString != null) {
                    this.bitField0_ |= 8192;
                    this.n_ = byteString;
                    onChanged();
                    return this;
                }
                throw new NullPointerException();
            }

            public boolean hasS() {
                return (this.bitField0_ & 16384) == 16384;
            }

            public String getS() {
                Object obj = this.s_;
                if (obj instanceof String) {
                    return (String) obj;
                }
                ByteString byteString = (ByteString) obj;
                String stringUtf8 = byteString.toStringUtf8();
                if (byteString.isValidUtf8()) {
                    this.s_ = stringUtf8;
                }
                return stringUtf8;
            }

            public ByteString getSBytes() {
                Object obj = this.s_;
                if (!(obj instanceof String)) {
                    return (ByteString) obj;
                }
                ByteString copyFromUtf8 = ByteString.copyFromUtf8((String) obj);
                this.s_ = copyFromUtf8;
                return copyFromUtf8;
            }

            public Builder setS(String str) {
                if (str != null) {
                    this.bitField0_ |= 16384;
                    this.s_ = str;
                    onChanged();
                    return this;
                }
                throw new NullPointerException();
            }

            public Builder clearS() {
                this.bitField0_ &= -16385;
                this.s_ = ConvCommand.getDefaultInstance().getS();
                onChanged();
                return this;
            }

            public Builder setSBytes(ByteString byteString) {
                if (byteString != null) {
                    this.bitField0_ |= 16384;
                    this.s_ = byteString;
                    onChanged();
                    return this;
                }
                throw new NullPointerException();
            }

            public boolean hasStatusSub() {
                return (this.bitField0_ & 32768) == 32768;
            }

            public boolean getStatusSub() {
                return this.statusSub_;
            }

            public Builder setStatusSub(boolean z) {
                this.bitField0_ |= 32768;
                this.statusSub_ = z;
                onChanged();
                return this;
            }

            public Builder clearStatusSub() {
                this.bitField0_ &= -32769;
                this.statusSub_ = false;
                onChanged();
                return this;
            }

            public boolean hasStatusPub() {
                return (this.bitField0_ & 65536) == 65536;
            }

            public boolean getStatusPub() {
                return this.statusPub_;
            }

            public Builder setStatusPub(boolean z) {
                this.bitField0_ |= 65536;
                this.statusPub_ = z;
                onChanged();
                return this;
            }

            public Builder clearStatusPub() {
                this.bitField0_ &= CommandPacket.UNSUPPORTED_OPERATION;
                this.statusPub_ = false;
                onChanged();
                return this;
            }

            public boolean hasStatusTTL() {
                return (this.bitField0_ & 131072) == 131072;
            }

            public int getStatusTTL() {
                return this.statusTTL_;
            }

            public Builder setStatusTTL(int i) {
                this.bitField0_ |= 131072;
                this.statusTTL_ = i;
                onChanged();
                return this;
            }

            public Builder clearStatusTTL() {
                this.bitField0_ &= -131073;
                this.statusTTL_ = 0;
                onChanged();
                return this;
            }

            public boolean hasUniqueId() {
                return (this.bitField0_ & 262144) == 262144;
            }

            public String getUniqueId() {
                Object obj = this.uniqueId_;
                if (obj instanceof String) {
                    return (String) obj;
                }
                ByteString byteString = (ByteString) obj;
                String stringUtf8 = byteString.toStringUtf8();
                if (byteString.isValidUtf8()) {
                    this.uniqueId_ = stringUtf8;
                }
                return stringUtf8;
            }

            public ByteString getUniqueIdBytes() {
                Object obj = this.uniqueId_;
                if (!(obj instanceof String)) {
                    return (ByteString) obj;
                }
                ByteString copyFromUtf8 = ByteString.copyFromUtf8((String) obj);
                this.uniqueId_ = copyFromUtf8;
                return copyFromUtf8;
            }

            public Builder setUniqueId(String str) {
                if (str != null) {
                    this.bitField0_ |= 262144;
                    this.uniqueId_ = str;
                    onChanged();
                    return this;
                }
                throw new NullPointerException();
            }

            public Builder clearUniqueId() {
                this.bitField0_ &= -262145;
                this.uniqueId_ = ConvCommand.getDefaultInstance().getUniqueId();
                onChanged();
                return this;
            }

            public Builder setUniqueIdBytes(ByteString byteString) {
                if (byteString != null) {
                    this.bitField0_ |= 262144;
                    this.uniqueId_ = byteString;
                    onChanged();
                    return this;
                }
                throw new NullPointerException();
            }

            public boolean hasTargetClientId() {
                return (this.bitField0_ & 524288) == 524288;
            }

            public String getTargetClientId() {
                Object obj = this.targetClientId_;
                if (obj instanceof String) {
                    return (String) obj;
                }
                ByteString byteString = (ByteString) obj;
                String stringUtf8 = byteString.toStringUtf8();
                if (byteString.isValidUtf8()) {
                    this.targetClientId_ = stringUtf8;
                }
                return stringUtf8;
            }

            public ByteString getTargetClientIdBytes() {
                Object obj = this.targetClientId_;
                if (!(obj instanceof String)) {
                    return (ByteString) obj;
                }
                ByteString copyFromUtf8 = ByteString.copyFromUtf8((String) obj);
                this.targetClientId_ = copyFromUtf8;
                return copyFromUtf8;
            }

            public Builder setTargetClientId(String str) {
                if (str != null) {
                    this.bitField0_ |= 524288;
                    this.targetClientId_ = str;
                    onChanged();
                    return this;
                }
                throw new NullPointerException();
            }

            public Builder clearTargetClientId() {
                this.bitField0_ &= -524289;
                this.targetClientId_ = ConvCommand.getDefaultInstance().getTargetClientId();
                onChanged();
                return this;
            }

            public Builder setTargetClientIdBytes(ByteString byteString) {
                if (byteString != null) {
                    this.bitField0_ |= 524288;
                    this.targetClientId_ = byteString;
                    onChanged();
                    return this;
                }
                throw new NullPointerException();
            }

            public boolean hasMaxReadTimestamp() {
                return (this.bitField0_ & 1048576) == 1048576;
            }

            public long getMaxReadTimestamp() {
                return this.maxReadTimestamp_;
            }

            public Builder setMaxReadTimestamp(long j) {
                this.bitField0_ |= 1048576;
                this.maxReadTimestamp_ = j;
                onChanged();
                return this;
            }

            public Builder clearMaxReadTimestamp() {
                this.bitField0_ &= -1048577;
                this.maxReadTimestamp_ = 0;
                onChanged();
                return this;
            }

            public boolean hasMaxAckTimestamp() {
                return (this.bitField0_ & 2097152) == 2097152;
            }

            public long getMaxAckTimestamp() {
                return this.maxAckTimestamp_;
            }

            public Builder setMaxAckTimestamp(long j) {
                this.bitField0_ |= 2097152;
                this.maxAckTimestamp_ = j;
                onChanged();
                return this;
            }

            public Builder clearMaxAckTimestamp() {
                this.bitField0_ &= -2097153;
                this.maxAckTimestamp_ = 0;
                onChanged();
                return this;
            }

            public boolean hasQueryAllMembers() {
                return (this.bitField0_ & 4194304) == 4194304;
            }

            public boolean getQueryAllMembers() {
                return this.queryAllMembers_;
            }

            public Builder setQueryAllMembers(boolean z) {
                this.bitField0_ |= 4194304;
                this.queryAllMembers_ = z;
                onChanged();
                return this;
            }

            public Builder clearQueryAllMembers() {
                this.bitField0_ &= -4194305;
                this.queryAllMembers_ = false;
                onChanged();
                return this;
            }

            private void ensureMaxReadTuplesIsMutable() {
                if ((this.bitField0_ & 8388608) != 8388608) {
                    this.maxReadTuples_ = new ArrayList(this.maxReadTuples_);
                    this.bitField0_ |= 8388608;
                }
            }

            public List<MaxReadTuple> getMaxReadTuplesList() {
                RepeatedFieldBuilderV3<MaxReadTuple, Builder, MaxReadTupleOrBuilder> repeatedFieldBuilderV3 = this.maxReadTuplesBuilder_;
                if (repeatedFieldBuilderV3 == null) {
                    return Collections.unmodifiableList(this.maxReadTuples_);
                }
                return repeatedFieldBuilderV3.getMessageList();
            }

            public int getMaxReadTuplesCount() {
                RepeatedFieldBuilderV3<MaxReadTuple, Builder, MaxReadTupleOrBuilder> repeatedFieldBuilderV3 = this.maxReadTuplesBuilder_;
                if (repeatedFieldBuilderV3 == null) {
                    return this.maxReadTuples_.size();
                }
                return repeatedFieldBuilderV3.getCount();
            }

            public MaxReadTuple getMaxReadTuples(int i) {
                RepeatedFieldBuilderV3<MaxReadTuple, Builder, MaxReadTupleOrBuilder> repeatedFieldBuilderV3 = this.maxReadTuplesBuilder_;
                if (repeatedFieldBuilderV3 == null) {
                    return (MaxReadTuple) this.maxReadTuples_.get(i);
                }
                return (MaxReadTuple) repeatedFieldBuilderV3.getMessage(i);
            }

            public Builder setMaxReadTuples(int i, MaxReadTuple maxReadTuple) {
                RepeatedFieldBuilderV3<MaxReadTuple, Builder, MaxReadTupleOrBuilder> repeatedFieldBuilderV3 = this.maxReadTuplesBuilder_;
                if (repeatedFieldBuilderV3 != null) {
                    repeatedFieldBuilderV3.setMessage(i, maxReadTuple);
                } else if (maxReadTuple != null) {
                    ensureMaxReadTuplesIsMutable();
                    this.maxReadTuples_.set(i, maxReadTuple);
                    onChanged();
                } else {
                    throw new NullPointerException();
                }
                return this;
            }

            public Builder setMaxReadTuples(int i, Builder builder) {
                RepeatedFieldBuilderV3<MaxReadTuple, Builder, MaxReadTupleOrBuilder> repeatedFieldBuilderV3 = this.maxReadTuplesBuilder_;
                if (repeatedFieldBuilderV3 == null) {
                    ensureMaxReadTuplesIsMutable();
                    this.maxReadTuples_.set(i, builder.build());
                    onChanged();
                } else {
                    repeatedFieldBuilderV3.setMessage(i, builder.build());
                }
                return this;
            }

            public Builder addMaxReadTuples(MaxReadTuple maxReadTuple) {
                RepeatedFieldBuilderV3<MaxReadTuple, Builder, MaxReadTupleOrBuilder> repeatedFieldBuilderV3 = this.maxReadTuplesBuilder_;
                if (repeatedFieldBuilderV3 != null) {
                    repeatedFieldBuilderV3.addMessage(maxReadTuple);
                } else if (maxReadTuple != null) {
                    ensureMaxReadTuplesIsMutable();
                    this.maxReadTuples_.add(maxReadTuple);
                    onChanged();
                } else {
                    throw new NullPointerException();
                }
                return this;
            }

            public Builder addMaxReadTuples(int i, MaxReadTuple maxReadTuple) {
                RepeatedFieldBuilderV3<MaxReadTuple, Builder, MaxReadTupleOrBuilder> repeatedFieldBuilderV3 = this.maxReadTuplesBuilder_;
                if (repeatedFieldBuilderV3 != null) {
                    repeatedFieldBuilderV3.addMessage(i, maxReadTuple);
                } else if (maxReadTuple != null) {
                    ensureMaxReadTuplesIsMutable();
                    this.maxReadTuples_.add(i, maxReadTuple);
                    onChanged();
                } else {
                    throw new NullPointerException();
                }
                return this;
            }

            public Builder addMaxReadTuples(Builder builder) {
                RepeatedFieldBuilderV3<MaxReadTuple, Builder, MaxReadTupleOrBuilder> repeatedFieldBuilderV3 = this.maxReadTuplesBuilder_;
                if (repeatedFieldBuilderV3 == null) {
                    ensureMaxReadTuplesIsMutable();
                    this.maxReadTuples_.add(builder.build());
                    onChanged();
                } else {
                    repeatedFieldBuilderV3.addMessage(builder.build());
                }
                return this;
            }

            public Builder addMaxReadTuples(int i, Builder builder) {
                RepeatedFieldBuilderV3<MaxReadTuple, Builder, MaxReadTupleOrBuilder> repeatedFieldBuilderV3 = this.maxReadTuplesBuilder_;
                if (repeatedFieldBuilderV3 == null) {
                    ensureMaxReadTuplesIsMutable();
                    this.maxReadTuples_.add(i, builder.build());
                    onChanged();
                } else {
                    repeatedFieldBuilderV3.addMessage(i, builder.build());
                }
                return this;
            }

            public Builder addAllMaxReadTuples(Iterable<? extends MaxReadTuple> iterable) {
                RepeatedFieldBuilderV3<MaxReadTuple, Builder, MaxReadTupleOrBuilder> repeatedFieldBuilderV3 = this.maxReadTuplesBuilder_;
                if (repeatedFieldBuilderV3 == null) {
                    ensureMaxReadTuplesIsMutable();
                    com.google.protobuf.AbstractMessageLite.Builder.addAll((Iterable) iterable, (List) this.maxReadTuples_);
                    onChanged();
                } else {
                    repeatedFieldBuilderV3.addAllMessages(iterable);
                }
                return this;
            }

            public Builder clearMaxReadTuples() {
                RepeatedFieldBuilderV3<MaxReadTuple, Builder, MaxReadTupleOrBuilder> repeatedFieldBuilderV3 = this.maxReadTuplesBuilder_;
                if (repeatedFieldBuilderV3 == null) {
                    this.maxReadTuples_ = Collections.emptyList();
                    this.bitField0_ &= -8388609;
                    onChanged();
                } else {
                    repeatedFieldBuilderV3.clear();
                }
                return this;
            }

            public Builder removeMaxReadTuples(int i) {
                RepeatedFieldBuilderV3<MaxReadTuple, Builder, MaxReadTupleOrBuilder> repeatedFieldBuilderV3 = this.maxReadTuplesBuilder_;
                if (repeatedFieldBuilderV3 == null) {
                    ensureMaxReadTuplesIsMutable();
                    this.maxReadTuples_.remove(i);
                    onChanged();
                } else {
                    repeatedFieldBuilderV3.remove(i);
                }
                return this;
            }

            public Builder getMaxReadTuplesBuilder(int i) {
                return (Builder) getMaxReadTuplesFieldBuilder().getBuilder(i);
            }

            public MaxReadTupleOrBuilder getMaxReadTuplesOrBuilder(int i) {
                RepeatedFieldBuilderV3<MaxReadTuple, Builder, MaxReadTupleOrBuilder> repeatedFieldBuilderV3 = this.maxReadTuplesBuilder_;
                if (repeatedFieldBuilderV3 == null) {
                    return (MaxReadTupleOrBuilder) this.maxReadTuples_.get(i);
                }
                return (MaxReadTupleOrBuilder) repeatedFieldBuilderV3.getMessageOrBuilder(i);
            }

            public List<? extends MaxReadTupleOrBuilder> getMaxReadTuplesOrBuilderList() {
                RepeatedFieldBuilderV3<MaxReadTuple, Builder, MaxReadTupleOrBuilder> repeatedFieldBuilderV3 = this.maxReadTuplesBuilder_;
                if (repeatedFieldBuilderV3 != null) {
                    return repeatedFieldBuilderV3.getMessageOrBuilderList();
                }
                return Collections.unmodifiableList(this.maxReadTuples_);
            }

            public Builder addMaxReadTuplesBuilder() {
                return (Builder) getMaxReadTuplesFieldBuilder().addBuilder(MaxReadTuple.getDefaultInstance());
            }

            public Builder addMaxReadTuplesBuilder(int i) {
                return (Builder) getMaxReadTuplesFieldBuilder().addBuilder(i, MaxReadTuple.getDefaultInstance());
            }

            public List<Builder> getMaxReadTuplesBuilderList() {
                return getMaxReadTuplesFieldBuilder().getBuilderList();
            }

            private RepeatedFieldBuilderV3<MaxReadTuple, Builder, MaxReadTupleOrBuilder> getMaxReadTuplesFieldBuilder() {
                if (this.maxReadTuplesBuilder_ == null) {
                    this.maxReadTuplesBuilder_ = new RepeatedFieldBuilderV3<>(this.maxReadTuples_, (this.bitField0_ & 8388608) == 8388608, getParentForChildren(), isClean());
                    this.maxReadTuples_ = null;
                }
                return this.maxReadTuplesBuilder_;
            }

            private void ensureCidsIsMutable() {
                if ((this.bitField0_ & 16777216) != 16777216) {
                    this.cids_ = new LazyStringArrayList(this.cids_);
                    this.bitField0_ |= 16777216;
                }
            }

            public ProtocolStringList getCidsList() {
                return this.cids_.getUnmodifiableView();
            }

            public int getCidsCount() {
                return this.cids_.size();
            }

            public String getCids(int i) {
                return (String) this.cids_.get(i);
            }

            public ByteString getCidsBytes(int i) {
                return this.cids_.getByteString(i);
            }

            public Builder setCids(int i, String str) {
                if (str != null) {
                    ensureCidsIsMutable();
                    this.cids_.set(i, str);
                    onChanged();
                    return this;
                }
                throw new NullPointerException();
            }

            public Builder addCids(String str) {
                if (str != null) {
                    ensureCidsIsMutable();
                    this.cids_.add(str);
                    onChanged();
                    return this;
                }
                throw new NullPointerException();
            }

            public Builder addAllCids(Iterable<String> iterable) {
                ensureCidsIsMutable();
                com.google.protobuf.AbstractMessageLite.Builder.addAll((Iterable) iterable, (List) this.cids_);
                onChanged();
                return this;
            }

            public Builder clearCids() {
                this.cids_ = LazyStringArrayList.EMPTY;
                this.bitField0_ &= -16777217;
                onChanged();
                return this;
            }

            public Builder addCidsBytes(ByteString byteString) {
                if (byteString != null) {
                    ensureCidsIsMutable();
                    this.cids_.add(byteString);
                    onChanged();
                    return this;
                }
                throw new NullPointerException();
            }

            public boolean hasInfo() {
                return (this.bitField0_ & 33554432) == 33554432;
            }

            public ConvMemberInfo getInfo() {
                SingleFieldBuilderV3<ConvMemberInfo, Builder, ConvMemberInfoOrBuilder> singleFieldBuilderV3 = this.infoBuilder_;
                if (singleFieldBuilderV3 != null) {
                    return (ConvMemberInfo) singleFieldBuilderV3.getMessage();
                }
                ConvMemberInfo convMemberInfo = this.info_;
                if (convMemberInfo == null) {
                    convMemberInfo = ConvMemberInfo.getDefaultInstance();
                }
                return convMemberInfo;
            }

            public Builder setInfo(ConvMemberInfo convMemberInfo) {
                SingleFieldBuilderV3<ConvMemberInfo, Builder, ConvMemberInfoOrBuilder> singleFieldBuilderV3 = this.infoBuilder_;
                if (singleFieldBuilderV3 != null) {
                    singleFieldBuilderV3.setMessage(convMemberInfo);
                } else if (convMemberInfo != null) {
                    this.info_ = convMemberInfo;
                    onChanged();
                } else {
                    throw new NullPointerException();
                }
                this.bitField0_ |= 33554432;
                return this;
            }

            public Builder setInfo(Builder builder) {
                SingleFieldBuilderV3<ConvMemberInfo, Builder, ConvMemberInfoOrBuilder> singleFieldBuilderV3 = this.infoBuilder_;
                if (singleFieldBuilderV3 == null) {
                    this.info_ = builder.build();
                    onChanged();
                } else {
                    singleFieldBuilderV3.setMessage(builder.build());
                }
                this.bitField0_ |= 33554432;
                return this;
            }

            public Builder mergeInfo(ConvMemberInfo convMemberInfo) {
                SingleFieldBuilderV3<ConvMemberInfo, Builder, ConvMemberInfoOrBuilder> singleFieldBuilderV3 = this.infoBuilder_;
                if (singleFieldBuilderV3 == null) {
                    if ((this.bitField0_ & 33554432) == 33554432) {
                        ConvMemberInfo convMemberInfo2 = this.info_;
                        if (!(convMemberInfo2 == null || convMemberInfo2 == ConvMemberInfo.getDefaultInstance())) {
                            this.info_ = ConvMemberInfo.newBuilder(this.info_).mergeFrom(convMemberInfo).buildPartial();
                            onChanged();
                        }
                    }
                    this.info_ = convMemberInfo;
                    onChanged();
                } else {
                    singleFieldBuilderV3.mergeFrom(convMemberInfo);
                }
                this.bitField0_ |= 33554432;
                return this;
            }

            public Builder clearInfo() {
                SingleFieldBuilderV3<ConvMemberInfo, Builder, ConvMemberInfoOrBuilder> singleFieldBuilderV3 = this.infoBuilder_;
                if (singleFieldBuilderV3 == null) {
                    this.info_ = null;
                    onChanged();
                } else {
                    singleFieldBuilderV3.clear();
                }
                this.bitField0_ &= -33554433;
                return this;
            }

            public Builder getInfoBuilder() {
                this.bitField0_ |= 33554432;
                onChanged();
                return (Builder) getInfoFieldBuilder().getBuilder();
            }

            public ConvMemberInfoOrBuilder getInfoOrBuilder() {
                SingleFieldBuilderV3<ConvMemberInfo, Builder, ConvMemberInfoOrBuilder> singleFieldBuilderV3 = this.infoBuilder_;
                if (singleFieldBuilderV3 != null) {
                    return (ConvMemberInfoOrBuilder) singleFieldBuilderV3.getMessageOrBuilder();
                }
                ConvMemberInfo convMemberInfo = this.info_;
                if (convMemberInfo == null) {
                    convMemberInfo = ConvMemberInfo.getDefaultInstance();
                }
                return convMemberInfo;
            }

            private SingleFieldBuilderV3<ConvMemberInfo, Builder, ConvMemberInfoOrBuilder> getInfoFieldBuilder() {
                if (this.infoBuilder_ == null) {
                    this.infoBuilder_ = new SingleFieldBuilderV3<>(getInfo(), getParentForChildren(), isClean());
                    this.info_ = null;
                }
                return this.infoBuilder_;
            }

            public boolean hasTempConv() {
                return (this.bitField0_ & 67108864) == 67108864;
            }

            public boolean getTempConv() {
                return this.tempConv_;
            }

            public Builder setTempConv(boolean z) {
                this.bitField0_ |= 67108864;
                this.tempConv_ = z;
                onChanged();
                return this;
            }

            public Builder clearTempConv() {
                this.bitField0_ &= -67108865;
                this.tempConv_ = false;
                onChanged();
                return this;
            }

            public boolean hasTempConvTTL() {
                return (this.bitField0_ & 134217728) == 134217728;
            }

            public int getTempConvTTL() {
                return this.tempConvTTL_;
            }

            public Builder setTempConvTTL(int i) {
                this.bitField0_ |= 134217728;
                this.tempConvTTL_ = i;
                onChanged();
                return this;
            }

            public Builder clearTempConvTTL() {
                this.bitField0_ &= -134217729;
                this.tempConvTTL_ = 0;
                onChanged();
                return this;
            }

            private void ensureTempConvIdsIsMutable() {
                if ((this.bitField0_ & C.ENCODING_PCM_MU_LAW) != 268435456) {
                    this.tempConvIds_ = new LazyStringArrayList(this.tempConvIds_);
                    this.bitField0_ |= C.ENCODING_PCM_MU_LAW;
                }
            }

            public ProtocolStringList getTempConvIdsList() {
                return this.tempConvIds_.getUnmodifiableView();
            }

            public int getTempConvIdsCount() {
                return this.tempConvIds_.size();
            }

            public String getTempConvIds(int i) {
                return (String) this.tempConvIds_.get(i);
            }

            public ByteString getTempConvIdsBytes(int i) {
                return this.tempConvIds_.getByteString(i);
            }

            public Builder setTempConvIds(int i, String str) {
                if (str != null) {
                    ensureTempConvIdsIsMutable();
                    this.tempConvIds_.set(i, str);
                    onChanged();
                    return this;
                }
                throw new NullPointerException();
            }

            public Builder addTempConvIds(String str) {
                if (str != null) {
                    ensureTempConvIdsIsMutable();
                    this.tempConvIds_.add(str);
                    onChanged();
                    return this;
                }
                throw new NullPointerException();
            }

            public Builder addAllTempConvIds(Iterable<String> iterable) {
                ensureTempConvIdsIsMutable();
                com.google.protobuf.AbstractMessageLite.Builder.addAll((Iterable) iterable, (List) this.tempConvIds_);
                onChanged();
                return this;
            }

            public Builder clearTempConvIds() {
                this.tempConvIds_ = LazyStringArrayList.EMPTY;
                this.bitField0_ &= -268435457;
                onChanged();
                return this;
            }

            public Builder addTempConvIdsBytes(ByteString byteString) {
                if (byteString != null) {
                    ensureTempConvIdsIsMutable();
                    this.tempConvIds_.add(byteString);
                    onChanged();
                    return this;
                }
                throw new NullPointerException();
            }

            private void ensureAllowedPidsIsMutable() {
                if ((this.bitField0_ & 536870912) != 536870912) {
                    this.allowedPids_ = new LazyStringArrayList(this.allowedPids_);
                    this.bitField0_ |= 536870912;
                }
            }

            public ProtocolStringList getAllowedPidsList() {
                return this.allowedPids_.getUnmodifiableView();
            }

            public int getAllowedPidsCount() {
                return this.allowedPids_.size();
            }

            public String getAllowedPids(int i) {
                return (String) this.allowedPids_.get(i);
            }

            public ByteString getAllowedPidsBytes(int i) {
                return this.allowedPids_.getByteString(i);
            }

            public Builder setAllowedPids(int i, String str) {
                if (str != null) {
                    ensureAllowedPidsIsMutable();
                    this.allowedPids_.set(i, str);
                    onChanged();
                    return this;
                }
                throw new NullPointerException();
            }

            public Builder addAllowedPids(String str) {
                if (str != null) {
                    ensureAllowedPidsIsMutable();
                    this.allowedPids_.add(str);
                    onChanged();
                    return this;
                }
                throw new NullPointerException();
            }

            public Builder addAllAllowedPids(Iterable<String> iterable) {
                ensureAllowedPidsIsMutable();
                com.google.protobuf.AbstractMessageLite.Builder.addAll((Iterable) iterable, (List) this.allowedPids_);
                onChanged();
                return this;
            }

            public Builder clearAllowedPids() {
                this.allowedPids_ = LazyStringArrayList.EMPTY;
                this.bitField0_ &= -536870913;
                onChanged();
                return this;
            }

            public Builder addAllowedPidsBytes(ByteString byteString) {
                if (byteString != null) {
                    ensureAllowedPidsIsMutable();
                    this.allowedPids_.add(byteString);
                    onChanged();
                    return this;
                }
                throw new NullPointerException();
            }

            private void ensureFailedPidsIsMutable() {
                if ((this.bitField0_ & 1073741824) != 1073741824) {
                    this.failedPids_ = new ArrayList(this.failedPids_);
                    this.bitField0_ |= 1073741824;
                }
            }

            public List<ErrorCommand> getFailedPidsList() {
                RepeatedFieldBuilderV3<ErrorCommand, Builder, ErrorCommandOrBuilder> repeatedFieldBuilderV3 = this.failedPidsBuilder_;
                if (repeatedFieldBuilderV3 == null) {
                    return Collections.unmodifiableList(this.failedPids_);
                }
                return repeatedFieldBuilderV3.getMessageList();
            }

            public int getFailedPidsCount() {
                RepeatedFieldBuilderV3<ErrorCommand, Builder, ErrorCommandOrBuilder> repeatedFieldBuilderV3 = this.failedPidsBuilder_;
                if (repeatedFieldBuilderV3 == null) {
                    return this.failedPids_.size();
                }
                return repeatedFieldBuilderV3.getCount();
            }

            public ErrorCommand getFailedPids(int i) {
                RepeatedFieldBuilderV3<ErrorCommand, Builder, ErrorCommandOrBuilder> repeatedFieldBuilderV3 = this.failedPidsBuilder_;
                if (repeatedFieldBuilderV3 == null) {
                    return (ErrorCommand) this.failedPids_.get(i);
                }
                return (ErrorCommand) repeatedFieldBuilderV3.getMessage(i);
            }

            public Builder setFailedPids(int i, ErrorCommand errorCommand) {
                RepeatedFieldBuilderV3<ErrorCommand, Builder, ErrorCommandOrBuilder> repeatedFieldBuilderV3 = this.failedPidsBuilder_;
                if (repeatedFieldBuilderV3 != null) {
                    repeatedFieldBuilderV3.setMessage(i, errorCommand);
                } else if (errorCommand != null) {
                    ensureFailedPidsIsMutable();
                    this.failedPids_.set(i, errorCommand);
                    onChanged();
                } else {
                    throw new NullPointerException();
                }
                return this;
            }

            public Builder setFailedPids(int i, Builder builder) {
                RepeatedFieldBuilderV3<ErrorCommand, Builder, ErrorCommandOrBuilder> repeatedFieldBuilderV3 = this.failedPidsBuilder_;
                if (repeatedFieldBuilderV3 == null) {
                    ensureFailedPidsIsMutable();
                    this.failedPids_.set(i, builder.build());
                    onChanged();
                } else {
                    repeatedFieldBuilderV3.setMessage(i, builder.build());
                }
                return this;
            }

            public Builder addFailedPids(ErrorCommand errorCommand) {
                RepeatedFieldBuilderV3<ErrorCommand, Builder, ErrorCommandOrBuilder> repeatedFieldBuilderV3 = this.failedPidsBuilder_;
                if (repeatedFieldBuilderV3 != null) {
                    repeatedFieldBuilderV3.addMessage(errorCommand);
                } else if (errorCommand != null) {
                    ensureFailedPidsIsMutable();
                    this.failedPids_.add(errorCommand);
                    onChanged();
                } else {
                    throw new NullPointerException();
                }
                return this;
            }

            public Builder addFailedPids(int i, ErrorCommand errorCommand) {
                RepeatedFieldBuilderV3<ErrorCommand, Builder, ErrorCommandOrBuilder> repeatedFieldBuilderV3 = this.failedPidsBuilder_;
                if (repeatedFieldBuilderV3 != null) {
                    repeatedFieldBuilderV3.addMessage(i, errorCommand);
                } else if (errorCommand != null) {
                    ensureFailedPidsIsMutable();
                    this.failedPids_.add(i, errorCommand);
                    onChanged();
                } else {
                    throw new NullPointerException();
                }
                return this;
            }

            public Builder addFailedPids(Builder builder) {
                RepeatedFieldBuilderV3<ErrorCommand, Builder, ErrorCommandOrBuilder> repeatedFieldBuilderV3 = this.failedPidsBuilder_;
                if (repeatedFieldBuilderV3 == null) {
                    ensureFailedPidsIsMutable();
                    this.failedPids_.add(builder.build());
                    onChanged();
                } else {
                    repeatedFieldBuilderV3.addMessage(builder.build());
                }
                return this;
            }

            public Builder addFailedPids(int i, Builder builder) {
                RepeatedFieldBuilderV3<ErrorCommand, Builder, ErrorCommandOrBuilder> repeatedFieldBuilderV3 = this.failedPidsBuilder_;
                if (repeatedFieldBuilderV3 == null) {
                    ensureFailedPidsIsMutable();
                    this.failedPids_.add(i, builder.build());
                    onChanged();
                } else {
                    repeatedFieldBuilderV3.addMessage(i, builder.build());
                }
                return this;
            }

            public Builder addAllFailedPids(Iterable<? extends ErrorCommand> iterable) {
                RepeatedFieldBuilderV3<ErrorCommand, Builder, ErrorCommandOrBuilder> repeatedFieldBuilderV3 = this.failedPidsBuilder_;
                if (repeatedFieldBuilderV3 == null) {
                    ensureFailedPidsIsMutable();
                    com.google.protobuf.AbstractMessageLite.Builder.addAll((Iterable) iterable, (List) this.failedPids_);
                    onChanged();
                } else {
                    repeatedFieldBuilderV3.addAllMessages(iterable);
                }
                return this;
            }

            public Builder clearFailedPids() {
                RepeatedFieldBuilderV3<ErrorCommand, Builder, ErrorCommandOrBuilder> repeatedFieldBuilderV3 = this.failedPidsBuilder_;
                if (repeatedFieldBuilderV3 == null) {
                    this.failedPids_ = Collections.emptyList();
                    this.bitField0_ &= -1073741825;
                    onChanged();
                } else {
                    repeatedFieldBuilderV3.clear();
                }
                return this;
            }

            public Builder removeFailedPids(int i) {
                RepeatedFieldBuilderV3<ErrorCommand, Builder, ErrorCommandOrBuilder> repeatedFieldBuilderV3 = this.failedPidsBuilder_;
                if (repeatedFieldBuilderV3 == null) {
                    ensureFailedPidsIsMutable();
                    this.failedPids_.remove(i);
                    onChanged();
                } else {
                    repeatedFieldBuilderV3.remove(i);
                }
                return this;
            }

            public Builder getFailedPidsBuilder(int i) {
                return (Builder) getFailedPidsFieldBuilder().getBuilder(i);
            }

            public ErrorCommandOrBuilder getFailedPidsOrBuilder(int i) {
                RepeatedFieldBuilderV3<ErrorCommand, Builder, ErrorCommandOrBuilder> repeatedFieldBuilderV3 = this.failedPidsBuilder_;
                if (repeatedFieldBuilderV3 == null) {
                    return (ErrorCommandOrBuilder) this.failedPids_.get(i);
                }
                return (ErrorCommandOrBuilder) repeatedFieldBuilderV3.getMessageOrBuilder(i);
            }

            public List<? extends ErrorCommandOrBuilder> getFailedPidsOrBuilderList() {
                RepeatedFieldBuilderV3<ErrorCommand, Builder, ErrorCommandOrBuilder> repeatedFieldBuilderV3 = this.failedPidsBuilder_;
                if (repeatedFieldBuilderV3 != null) {
                    return repeatedFieldBuilderV3.getMessageOrBuilderList();
                }
                return Collections.unmodifiableList(this.failedPids_);
            }

            public Builder addFailedPidsBuilder() {
                return (Builder) getFailedPidsFieldBuilder().addBuilder(ErrorCommand.getDefaultInstance());
            }

            public Builder addFailedPidsBuilder(int i) {
                return (Builder) getFailedPidsFieldBuilder().addBuilder(i, ErrorCommand.getDefaultInstance());
            }

            public List<Builder> getFailedPidsBuilderList() {
                return getFailedPidsFieldBuilder().getBuilderList();
            }

            private RepeatedFieldBuilderV3<ErrorCommand, Builder, ErrorCommandOrBuilder> getFailedPidsFieldBuilder() {
                if (this.failedPidsBuilder_ == null) {
                    this.failedPidsBuilder_ = new RepeatedFieldBuilderV3<>(this.failedPids_, (this.bitField0_ & 1073741824) == 1073741824, getParentForChildren(), isClean());
                    this.failedPids_ = null;
                }
                return this.failedPidsBuilder_;
            }

            public boolean hasNext() {
                return (this.bitField0_ & Integer.MIN_VALUE) == Integer.MIN_VALUE;
            }

            public String getNext() {
                Object obj = this.next_;
                if (obj instanceof String) {
                    return (String) obj;
                }
                ByteString byteString = (ByteString) obj;
                String stringUtf8 = byteString.toStringUtf8();
                if (byteString.isValidUtf8()) {
                    this.next_ = stringUtf8;
                }
                return stringUtf8;
            }

            public ByteString getNextBytes() {
                Object obj = this.next_;
                if (!(obj instanceof String)) {
                    return (ByteString) obj;
                }
                ByteString copyFromUtf8 = ByteString.copyFromUtf8((String) obj);
                this.next_ = copyFromUtf8;
                return copyFromUtf8;
            }

            public Builder setNext(String str) {
                if (str != null) {
                    this.bitField0_ |= Integer.MIN_VALUE;
                    this.next_ = str;
                    onChanged();
                    return this;
                }
                throw new NullPointerException();
            }

            public Builder clearNext() {
                this.bitField0_ &= Integer.MAX_VALUE;
                this.next_ = ConvCommand.getDefaultInstance().getNext();
                onChanged();
                return this;
            }

            public Builder setNextBytes(ByteString byteString) {
                if (byteString != null) {
                    this.bitField0_ |= Integer.MIN_VALUE;
                    this.next_ = byteString;
                    onChanged();
                    return this;
                }
                throw new NullPointerException();
            }

            public boolean hasResults() {
                return (this.bitField1_ & 1) == 1;
            }

            public JsonObjectMessage getResults() {
                SingleFieldBuilderV3<JsonObjectMessage, Builder, JsonObjectMessageOrBuilder> singleFieldBuilderV3 = this.resultsBuilder_;
                if (singleFieldBuilderV3 != null) {
                    return (JsonObjectMessage) singleFieldBuilderV3.getMessage();
                }
                JsonObjectMessage jsonObjectMessage = this.results_;
                if (jsonObjectMessage == null) {
                    jsonObjectMessage = JsonObjectMessage.getDefaultInstance();
                }
                return jsonObjectMessage;
            }

            public Builder setResults(JsonObjectMessage jsonObjectMessage) {
                SingleFieldBuilderV3<JsonObjectMessage, Builder, JsonObjectMessageOrBuilder> singleFieldBuilderV3 = this.resultsBuilder_;
                if (singleFieldBuilderV3 != null) {
                    singleFieldBuilderV3.setMessage(jsonObjectMessage);
                } else if (jsonObjectMessage != null) {
                    this.results_ = jsonObjectMessage;
                    onChanged();
                } else {
                    throw new NullPointerException();
                }
                this.bitField1_ |= 1;
                return this;
            }

            public Builder setResults(Builder builder) {
                SingleFieldBuilderV3<JsonObjectMessage, Builder, JsonObjectMessageOrBuilder> singleFieldBuilderV3 = this.resultsBuilder_;
                if (singleFieldBuilderV3 == null) {
                    this.results_ = builder.build();
                    onChanged();
                } else {
                    singleFieldBuilderV3.setMessage(builder.build());
                }
                this.bitField1_ |= 1;
                return this;
            }

            public Builder mergeResults(JsonObjectMessage jsonObjectMessage) {
                SingleFieldBuilderV3<JsonObjectMessage, Builder, JsonObjectMessageOrBuilder> singleFieldBuilderV3 = this.resultsBuilder_;
                if (singleFieldBuilderV3 == null) {
                    if ((this.bitField1_ & 1) == 1) {
                        JsonObjectMessage jsonObjectMessage2 = this.results_;
                        if (!(jsonObjectMessage2 == null || jsonObjectMessage2 == JsonObjectMessage.getDefaultInstance())) {
                            this.results_ = JsonObjectMessage.newBuilder(this.results_).mergeFrom(jsonObjectMessage).buildPartial();
                            onChanged();
                        }
                    }
                    this.results_ = jsonObjectMessage;
                    onChanged();
                } else {
                    singleFieldBuilderV3.mergeFrom(jsonObjectMessage);
                }
                this.bitField1_ |= 1;
                return this;
            }

            public Builder clearResults() {
                SingleFieldBuilderV3<JsonObjectMessage, Builder, JsonObjectMessageOrBuilder> singleFieldBuilderV3 = this.resultsBuilder_;
                if (singleFieldBuilderV3 == null) {
                    this.results_ = null;
                    onChanged();
                } else {
                    singleFieldBuilderV3.clear();
                }
                this.bitField1_ &= -2;
                return this;
            }

            public Builder getResultsBuilder() {
                this.bitField1_ |= 1;
                onChanged();
                return (Builder) getResultsFieldBuilder().getBuilder();
            }

            public JsonObjectMessageOrBuilder getResultsOrBuilder() {
                SingleFieldBuilderV3<JsonObjectMessage, Builder, JsonObjectMessageOrBuilder> singleFieldBuilderV3 = this.resultsBuilder_;
                if (singleFieldBuilderV3 != null) {
                    return (JsonObjectMessageOrBuilder) singleFieldBuilderV3.getMessageOrBuilder();
                }
                JsonObjectMessage jsonObjectMessage = this.results_;
                if (jsonObjectMessage == null) {
                    jsonObjectMessage = JsonObjectMessage.getDefaultInstance();
                }
                return jsonObjectMessage;
            }

            private SingleFieldBuilderV3<JsonObjectMessage, Builder, JsonObjectMessageOrBuilder> getResultsFieldBuilder() {
                if (this.resultsBuilder_ == null) {
                    this.resultsBuilder_ = new SingleFieldBuilderV3<>(getResults(), getParentForChildren(), isClean());
                    this.results_ = null;
                }
                return this.resultsBuilder_;
            }

            public boolean hasWhere() {
                return (this.bitField1_ & 2) == 2;
            }

            public JsonObjectMessage getWhere() {
                SingleFieldBuilderV3<JsonObjectMessage, Builder, JsonObjectMessageOrBuilder> singleFieldBuilderV3 = this.whereBuilder_;
                if (singleFieldBuilderV3 != null) {
                    return (JsonObjectMessage) singleFieldBuilderV3.getMessage();
                }
                JsonObjectMessage jsonObjectMessage = this.where_;
                if (jsonObjectMessage == null) {
                    jsonObjectMessage = JsonObjectMessage.getDefaultInstance();
                }
                return jsonObjectMessage;
            }

            public Builder setWhere(JsonObjectMessage jsonObjectMessage) {
                SingleFieldBuilderV3<JsonObjectMessage, Builder, JsonObjectMessageOrBuilder> singleFieldBuilderV3 = this.whereBuilder_;
                if (singleFieldBuilderV3 != null) {
                    singleFieldBuilderV3.setMessage(jsonObjectMessage);
                } else if (jsonObjectMessage != null) {
                    this.where_ = jsonObjectMessage;
                    onChanged();
                } else {
                    throw new NullPointerException();
                }
                this.bitField1_ |= 2;
                return this;
            }

            public Builder setWhere(Builder builder) {
                SingleFieldBuilderV3<JsonObjectMessage, Builder, JsonObjectMessageOrBuilder> singleFieldBuilderV3 = this.whereBuilder_;
                if (singleFieldBuilderV3 == null) {
                    this.where_ = builder.build();
                    onChanged();
                } else {
                    singleFieldBuilderV3.setMessage(builder.build());
                }
                this.bitField1_ |= 2;
                return this;
            }

            public Builder mergeWhere(JsonObjectMessage jsonObjectMessage) {
                SingleFieldBuilderV3<JsonObjectMessage, Builder, JsonObjectMessageOrBuilder> singleFieldBuilderV3 = this.whereBuilder_;
                if (singleFieldBuilderV3 == null) {
                    if ((this.bitField1_ & 2) == 2) {
                        JsonObjectMessage jsonObjectMessage2 = this.where_;
                        if (!(jsonObjectMessage2 == null || jsonObjectMessage2 == JsonObjectMessage.getDefaultInstance())) {
                            this.where_ = JsonObjectMessage.newBuilder(this.where_).mergeFrom(jsonObjectMessage).buildPartial();
                            onChanged();
                        }
                    }
                    this.where_ = jsonObjectMessage;
                    onChanged();
                } else {
                    singleFieldBuilderV3.mergeFrom(jsonObjectMessage);
                }
                this.bitField1_ |= 2;
                return this;
            }

            public Builder clearWhere() {
                SingleFieldBuilderV3<JsonObjectMessage, Builder, JsonObjectMessageOrBuilder> singleFieldBuilderV3 = this.whereBuilder_;
                if (singleFieldBuilderV3 == null) {
                    this.where_ = null;
                    onChanged();
                } else {
                    singleFieldBuilderV3.clear();
                }
                this.bitField1_ &= -3;
                return this;
            }

            public Builder getWhereBuilder() {
                this.bitField1_ |= 2;
                onChanged();
                return (Builder) getWhereFieldBuilder().getBuilder();
            }

            public JsonObjectMessageOrBuilder getWhereOrBuilder() {
                SingleFieldBuilderV3<JsonObjectMessage, Builder, JsonObjectMessageOrBuilder> singleFieldBuilderV3 = this.whereBuilder_;
                if (singleFieldBuilderV3 != null) {
                    return (JsonObjectMessageOrBuilder) singleFieldBuilderV3.getMessageOrBuilder();
                }
                JsonObjectMessage jsonObjectMessage = this.where_;
                if (jsonObjectMessage == null) {
                    jsonObjectMessage = JsonObjectMessage.getDefaultInstance();
                }
                return jsonObjectMessage;
            }

            private SingleFieldBuilderV3<JsonObjectMessage, Builder, JsonObjectMessageOrBuilder> getWhereFieldBuilder() {
                if (this.whereBuilder_ == null) {
                    this.whereBuilder_ = new SingleFieldBuilderV3<>(getWhere(), getParentForChildren(), isClean());
                    this.where_ = null;
                }
                return this.whereBuilder_;
            }

            public boolean hasAttr() {
                return (this.bitField1_ & 4) == 4;
            }

            public JsonObjectMessage getAttr() {
                SingleFieldBuilderV3<JsonObjectMessage, Builder, JsonObjectMessageOrBuilder> singleFieldBuilderV3 = this.attrBuilder_;
                if (singleFieldBuilderV3 != null) {
                    return (JsonObjectMessage) singleFieldBuilderV3.getMessage();
                }
                JsonObjectMessage jsonObjectMessage = this.attr_;
                if (jsonObjectMessage == null) {
                    jsonObjectMessage = JsonObjectMessage.getDefaultInstance();
                }
                return jsonObjectMessage;
            }

            public Builder setAttr(JsonObjectMessage jsonObjectMessage) {
                SingleFieldBuilderV3<JsonObjectMessage, Builder, JsonObjectMessageOrBuilder> singleFieldBuilderV3 = this.attrBuilder_;
                if (singleFieldBuilderV3 != null) {
                    singleFieldBuilderV3.setMessage(jsonObjectMessage);
                } else if (jsonObjectMessage != null) {
                    this.attr_ = jsonObjectMessage;
                    onChanged();
                } else {
                    throw new NullPointerException();
                }
                this.bitField1_ |= 4;
                return this;
            }

            public Builder setAttr(Builder builder) {
                SingleFieldBuilderV3<JsonObjectMessage, Builder, JsonObjectMessageOrBuilder> singleFieldBuilderV3 = this.attrBuilder_;
                if (singleFieldBuilderV3 == null) {
                    this.attr_ = builder.build();
                    onChanged();
                } else {
                    singleFieldBuilderV3.setMessage(builder.build());
                }
                this.bitField1_ |= 4;
                return this;
            }

            public Builder mergeAttr(JsonObjectMessage jsonObjectMessage) {
                SingleFieldBuilderV3<JsonObjectMessage, Builder, JsonObjectMessageOrBuilder> singleFieldBuilderV3 = this.attrBuilder_;
                if (singleFieldBuilderV3 == null) {
                    if ((this.bitField1_ & 4) == 4) {
                        JsonObjectMessage jsonObjectMessage2 = this.attr_;
                        if (!(jsonObjectMessage2 == null || jsonObjectMessage2 == JsonObjectMessage.getDefaultInstance())) {
                            this.attr_ = JsonObjectMessage.newBuilder(this.attr_).mergeFrom(jsonObjectMessage).buildPartial();
                            onChanged();
                        }
                    }
                    this.attr_ = jsonObjectMessage;
                    onChanged();
                } else {
                    singleFieldBuilderV3.mergeFrom(jsonObjectMessage);
                }
                this.bitField1_ |= 4;
                return this;
            }

            public Builder clearAttr() {
                SingleFieldBuilderV3<JsonObjectMessage, Builder, JsonObjectMessageOrBuilder> singleFieldBuilderV3 = this.attrBuilder_;
                if (singleFieldBuilderV3 == null) {
                    this.attr_ = null;
                    onChanged();
                } else {
                    singleFieldBuilderV3.clear();
                }
                this.bitField1_ &= -5;
                return this;
            }

            public Builder getAttrBuilder() {
                this.bitField1_ |= 4;
                onChanged();
                return (Builder) getAttrFieldBuilder().getBuilder();
            }

            public JsonObjectMessageOrBuilder getAttrOrBuilder() {
                SingleFieldBuilderV3<JsonObjectMessage, Builder, JsonObjectMessageOrBuilder> singleFieldBuilderV3 = this.attrBuilder_;
                if (singleFieldBuilderV3 != null) {
                    return (JsonObjectMessageOrBuilder) singleFieldBuilderV3.getMessageOrBuilder();
                }
                JsonObjectMessage jsonObjectMessage = this.attr_;
                if (jsonObjectMessage == null) {
                    jsonObjectMessage = JsonObjectMessage.getDefaultInstance();
                }
                return jsonObjectMessage;
            }

            private SingleFieldBuilderV3<JsonObjectMessage, Builder, JsonObjectMessageOrBuilder> getAttrFieldBuilder() {
                if (this.attrBuilder_ == null) {
                    this.attrBuilder_ = new SingleFieldBuilderV3<>(getAttr(), getParentForChildren(), isClean());
                    this.attr_ = null;
                }
                return this.attrBuilder_;
            }

            public final Builder setUnknownFields(UnknownFieldSet unknownFieldSet) {
                return (Builder) super.setUnknownFields(unknownFieldSet);
            }

            public final Builder mergeUnknownFields(UnknownFieldSet unknownFieldSet) {
                return (Builder) super.mergeUnknownFields(unknownFieldSet);
            }
        }

        private ConvCommand(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
            super(builder);
            this.memoizedIsInitialized = -1;
        }

        private ConvCommand() {
            this.memoizedIsInitialized = -1;
            this.m_ = LazyStringArrayList.EMPTY;
            this.transient_ = false;
            this.unique_ = false;
            String str = "";
            this.cid_ = str;
            this.cdate_ = str;
            this.initBy_ = str;
            this.sort_ = str;
            this.limit_ = 0;
            this.skip_ = 0;
            this.flag_ = 0;
            this.count_ = 0;
            this.udate_ = str;
            this.t_ = 0;
            this.n_ = str;
            this.s_ = str;
            this.statusSub_ = false;
            this.statusPub_ = false;
            this.statusTTL_ = 0;
            this.uniqueId_ = str;
            this.targetClientId_ = str;
            this.maxReadTimestamp_ = 0;
            this.maxAckTimestamp_ = 0;
            this.queryAllMembers_ = false;
            this.maxReadTuples_ = Collections.emptyList();
            this.cids_ = LazyStringArrayList.EMPTY;
            this.tempConv_ = false;
            this.tempConvTTL_ = 0;
            this.tempConvIds_ = LazyStringArrayList.EMPTY;
            this.allowedPids_ = LazyStringArrayList.EMPTY;
            this.failedPids_ = Collections.emptyList();
            this.next_ = str;
        }

        public final UnknownFieldSet getUnknownFields() {
            return this.unknownFields;
        }

        /* JADX WARNING: type inference failed for: r10v0 */
        /* JADX WARNING: type inference failed for: r10v32, types: [com.avos.avoscloud.Messages$ConvMemberInfo$Builder] */
        /* JADX WARNING: type inference failed for: r10v33, types: [com.avos.avoscloud.Messages$ConvMemberInfo$Builder] */
        /* JADX WARNING: type inference failed for: r10v44, types: [com.avos.avoscloud.Messages$JsonObjectMessage$Builder] */
        /* JADX WARNING: type inference failed for: r10v45, types: [com.avos.avoscloud.Messages$JsonObjectMessage$Builder] */
        /* JADX WARNING: type inference failed for: r10v46, types: [com.avos.avoscloud.Messages$JsonObjectMessage$Builder] */
        /* JADX WARNING: type inference failed for: r10v47, types: [com.avos.avoscloud.Messages$JsonObjectMessage$Builder] */
        /* JADX WARNING: type inference failed for: r10v48, types: [com.avos.avoscloud.Messages$JsonObjectMessage$Builder] */
        /* JADX WARNING: type inference failed for: r10v49, types: [com.avos.avoscloud.Messages$JsonObjectMessage$Builder] */
        /* JADX WARNING: type inference failed for: r10v50 */
        /* JADX WARNING: type inference failed for: r10v51 */
        /* JADX WARNING: type inference failed for: r10v52 */
        /* JADX WARNING: type inference failed for: r10v53 */
        /* JADX WARNING: Multi-variable type inference failed. Error: jadx.core.utils.exceptions.JadxRuntimeException: No candidate types for var: r10v0
          assigns: [?[int, float, boolean, short, byte, char, OBJECT, ARRAY], com.avos.avoscloud.Messages$JsonObjectMessage$Builder, com.avos.avoscloud.Messages$ConvMemberInfo$Builder]
          uses: [?[int, boolean, OBJECT, ARRAY, byte, short, char], com.avos.avoscloud.Messages$ConvMemberInfo$Builder, com.avos.avoscloud.Messages$JsonObjectMessage$Builder]
          mth insns count: 369
        	at jadx.core.dex.visitors.typeinference.TypeSearch.fillTypeCandidates(TypeSearch.java:237)
        	at java.util.ArrayList.forEach(ArrayList.java:1257)
        	at jadx.core.dex.visitors.typeinference.TypeSearch.run(TypeSearch.java:53)
        	at jadx.core.dex.visitors.typeinference.TypeInferenceVisitor.runMultiVariableSearch(TypeInferenceVisitor.java:99)
        	at jadx.core.dex.visitors.typeinference.TypeInferenceVisitor.visit(TypeInferenceVisitor.java:92)
        	at jadx.core.dex.visitors.DepthTraversal.visit(DepthTraversal.java:27)
        	at jadx.core.dex.visitors.DepthTraversal.lambda$visit$1(DepthTraversal.java:14)
        	at java.util.ArrayList.forEach(ArrayList.java:1257)
        	at jadx.core.dex.visitors.DepthTraversal.visit(DepthTraversal.java:14)
        	at jadx.core.dex.visitors.DepthTraversal.lambda$visit$0(DepthTraversal.java:13)
        	at java.util.ArrayList.forEach(ArrayList.java:1257)
        	at jadx.core.dex.visitors.DepthTraversal.visit(DepthTraversal.java:13)
        	at jadx.core.ProcessClass.process(ProcessClass.java:30)
        	at jadx.core.ProcessClass.lambda$processDependencies$0(ProcessClass.java:49)
        	at java.util.ArrayList.forEach(ArrayList.java:1257)
        	at jadx.core.ProcessClass.processDependencies(ProcessClass.java:49)
        	at jadx.core.ProcessClass.process(ProcessClass.java:35)
        	at jadx.api.JadxDecompiler.processClass(JadxDecompiler.java:311)
        	at jadx.api.JavaClass.decompile(JavaClass.java:62)
        	at jadx.api.JadxDecompiler.lambda$appendSourcesSave$0(JadxDecompiler.java:217)
         */
        /* JADX WARNING: Unknown variable types count: 5 */
        /* Code decompiled incorrectly, please refer to instructions dump. */
        private ConvCommand(com.google.protobuf.CodedInputStream r13, com.google.protobuf.ExtensionRegistryLite r14) throws com.google.protobuf.InvalidProtocolBufferException {
            /*
                r12 = this;
                r12.<init>()
                com.google.protobuf.UnknownFieldSet$Builder r0 = com.google.protobuf.UnknownFieldSet.newBuilder()
                r1 = 0
                r2 = 0
            L_0x0009:
                r3 = 536870912(0x20000000, float:1.0842022E-19)
                r4 = 1073741824(0x40000000, float:2.0)
                r5 = 16777216(0x1000000, float:2.3509887E-38)
                r6 = 8388608(0x800000, float:1.17549435E-38)
                r7 = 268435456(0x10000000, float:2.5243549E-29)
                r8 = 1
                if (r1 != 0) goto L_0x032a
                int r9 = r13.readTag()     // Catch:{ InvalidProtocolBufferException -> 0x02d2, IOException -> 0x02c7 }
                r10 = 0
                switch(r9) {
                    case 0: goto L_0x02bf;
                    case 10: goto L_0x02a7;
                    case 16: goto L_0x029a;
                    case 24: goto L_0x028c;
                    case 34: goto L_0x027e;
                    case 42: goto L_0x0270;
                    case 50: goto L_0x0262;
                    case 58: goto L_0x0254;
                    case 64: goto L_0x0246;
                    case 72: goto L_0x0238;
                    case 80: goto L_0x022a;
                    case 88: goto L_0x021c;
                    case 98: goto L_0x020e;
                    case 104: goto L_0x0200;
                    case 114: goto L_0x01f2;
                    case 122: goto L_0x01e4;
                    case 128: goto L_0x01d6;
                    case 136: goto L_0x01c6;
                    case 144: goto L_0x01b7;
                    case 154: goto L_0x01a8;
                    case 162: goto L_0x0199;
                    case 168: goto L_0x018a;
                    case 176: goto L_0x017b;
                    case 184: goto L_0x016c;
                    case 194: goto L_0x0153;
                    case 202: goto L_0x013c;
                    case 210: goto L_0x0111;
                    case 216: goto L_0x0104;
                    case 224: goto L_0x00f7;
                    case 234: goto L_0x00e0;
                    case 242: goto L_0x00c9;
                    case 250: goto L_0x00b0;
                    case 322: goto L_0x00a1;
                    case 802: goto L_0x0076;
                    case 810: goto L_0x004c;
                    case 826: goto L_0x0024;
                    default: goto L_0x001e;
                }     // Catch:{ InvalidProtocolBufferException -> 0x02d2, IOException -> 0x02c7 }
            L_0x001e:
                boolean r3 = r12.parseUnknownField(r13, r0, r14, r9)     // Catch:{ InvalidProtocolBufferException -> 0x02d2, IOException -> 0x02c7 }
                goto L_0x02c2
            L_0x0024:
                int r9 = r12.bitField0_     // Catch:{ InvalidProtocolBufferException -> 0x02d2, IOException -> 0x02c7 }
                r9 = r9 & r7
                if (r9 != r7) goto L_0x002f
                com.avos.avoscloud.Messages$JsonObjectMessage r9 = r12.attr_     // Catch:{ InvalidProtocolBufferException -> 0x02d2, IOException -> 0x02c7 }
                com.avos.avoscloud.Messages$JsonObjectMessage$Builder r10 = r9.toBuilder()     // Catch:{ InvalidProtocolBufferException -> 0x02d2, IOException -> 0x02c7 }
            L_0x002f:
                com.google.protobuf.Parser<com.avos.avoscloud.Messages$JsonObjectMessage> r9 = com.avos.avoscloud.Messages.JsonObjectMessage.PARSER     // Catch:{ InvalidProtocolBufferException -> 0x02d2, IOException -> 0x02c7 }
                com.google.protobuf.MessageLite r9 = r13.readMessage(r9, r14)     // Catch:{ InvalidProtocolBufferException -> 0x02d2, IOException -> 0x02c7 }
                com.avos.avoscloud.Messages$JsonObjectMessage r9 = (com.avos.avoscloud.Messages.JsonObjectMessage) r9     // Catch:{ InvalidProtocolBufferException -> 0x02d2, IOException -> 0x02c7 }
                r12.attr_ = r9     // Catch:{ InvalidProtocolBufferException -> 0x02d2, IOException -> 0x02c7 }
                if (r10 == 0) goto L_0x0046
                com.avos.avoscloud.Messages$JsonObjectMessage r9 = r12.attr_     // Catch:{ InvalidProtocolBufferException -> 0x02d2, IOException -> 0x02c7 }
                r10.mergeFrom(r9)     // Catch:{ InvalidProtocolBufferException -> 0x02d2, IOException -> 0x02c7 }
                com.avos.avoscloud.Messages$JsonObjectMessage r9 = r10.buildPartial()     // Catch:{ InvalidProtocolBufferException -> 0x02d2, IOException -> 0x02c7 }
                r12.attr_ = r9     // Catch:{ InvalidProtocolBufferException -> 0x02d2, IOException -> 0x02c7 }
            L_0x0046:
                int r9 = r12.bitField0_     // Catch:{ InvalidProtocolBufferException -> 0x02d2, IOException -> 0x02c7 }
                r9 = r9 | r7
                r12.bitField0_ = r9     // Catch:{ InvalidProtocolBufferException -> 0x02d2, IOException -> 0x02c7 }
                goto L_0x0009
            L_0x004c:
                int r9 = r12.bitField0_     // Catch:{ InvalidProtocolBufferException -> 0x02d2, IOException -> 0x02c7 }
                r11 = 134217728(0x8000000, float:3.85186E-34)
                r9 = r9 & r11
                if (r9 != r11) goto L_0x0059
                com.avos.avoscloud.Messages$JsonObjectMessage r9 = r12.where_     // Catch:{ InvalidProtocolBufferException -> 0x02d2, IOException -> 0x02c7 }
                com.avos.avoscloud.Messages$JsonObjectMessage$Builder r10 = r9.toBuilder()     // Catch:{ InvalidProtocolBufferException -> 0x02d2, IOException -> 0x02c7 }
            L_0x0059:
                com.google.protobuf.Parser<com.avos.avoscloud.Messages$JsonObjectMessage> r9 = com.avos.avoscloud.Messages.JsonObjectMessage.PARSER     // Catch:{ InvalidProtocolBufferException -> 0x02d2, IOException -> 0x02c7 }
                com.google.protobuf.MessageLite r9 = r13.readMessage(r9, r14)     // Catch:{ InvalidProtocolBufferException -> 0x02d2, IOException -> 0x02c7 }
                com.avos.avoscloud.Messages$JsonObjectMessage r9 = (com.avos.avoscloud.Messages.JsonObjectMessage) r9     // Catch:{ InvalidProtocolBufferException -> 0x02d2, IOException -> 0x02c7 }
                r12.where_ = r9     // Catch:{ InvalidProtocolBufferException -> 0x02d2, IOException -> 0x02c7 }
                if (r10 == 0) goto L_0x0070
                com.avos.avoscloud.Messages$JsonObjectMessage r9 = r12.where_     // Catch:{ InvalidProtocolBufferException -> 0x02d2, IOException -> 0x02c7 }
                r10.mergeFrom(r9)     // Catch:{ InvalidProtocolBufferException -> 0x02d2, IOException -> 0x02c7 }
                com.avos.avoscloud.Messages$JsonObjectMessage r9 = r10.buildPartial()     // Catch:{ InvalidProtocolBufferException -> 0x02d2, IOException -> 0x02c7 }
                r12.where_ = r9     // Catch:{ InvalidProtocolBufferException -> 0x02d2, IOException -> 0x02c7 }
            L_0x0070:
                int r9 = r12.bitField0_     // Catch:{ InvalidProtocolBufferException -> 0x02d2, IOException -> 0x02c7 }
                r9 = r9 | r11
                r12.bitField0_ = r9     // Catch:{ InvalidProtocolBufferException -> 0x02d2, IOException -> 0x02c7 }
                goto L_0x0009
            L_0x0076:
                int r9 = r12.bitField0_     // Catch:{ InvalidProtocolBufferException -> 0x02d2, IOException -> 0x02c7 }
                r11 = 67108864(0x4000000, float:1.5046328E-36)
                r9 = r9 & r11
                if (r9 != r11) goto L_0x0083
                com.avos.avoscloud.Messages$JsonObjectMessage r9 = r12.results_     // Catch:{ InvalidProtocolBufferException -> 0x02d2, IOException -> 0x02c7 }
                com.avos.avoscloud.Messages$JsonObjectMessage$Builder r10 = r9.toBuilder()     // Catch:{ InvalidProtocolBufferException -> 0x02d2, IOException -> 0x02c7 }
            L_0x0083:
                com.google.protobuf.Parser<com.avos.avoscloud.Messages$JsonObjectMessage> r9 = com.avos.avoscloud.Messages.JsonObjectMessage.PARSER     // Catch:{ InvalidProtocolBufferException -> 0x02d2, IOException -> 0x02c7 }
                com.google.protobuf.MessageLite r9 = r13.readMessage(r9, r14)     // Catch:{ InvalidProtocolBufferException -> 0x02d2, IOException -> 0x02c7 }
                com.avos.avoscloud.Messages$JsonObjectMessage r9 = (com.avos.avoscloud.Messages.JsonObjectMessage) r9     // Catch:{ InvalidProtocolBufferException -> 0x02d2, IOException -> 0x02c7 }
                r12.results_ = r9     // Catch:{ InvalidProtocolBufferException -> 0x02d2, IOException -> 0x02c7 }
                if (r10 == 0) goto L_0x009a
                com.avos.avoscloud.Messages$JsonObjectMessage r9 = r12.results_     // Catch:{ InvalidProtocolBufferException -> 0x02d2, IOException -> 0x02c7 }
                r10.mergeFrom(r9)     // Catch:{ InvalidProtocolBufferException -> 0x02d2, IOException -> 0x02c7 }
                com.avos.avoscloud.Messages$JsonObjectMessage r9 = r10.buildPartial()     // Catch:{ InvalidProtocolBufferException -> 0x02d2, IOException -> 0x02c7 }
                r12.results_ = r9     // Catch:{ InvalidProtocolBufferException -> 0x02d2, IOException -> 0x02c7 }
            L_0x009a:
                int r9 = r12.bitField0_     // Catch:{ InvalidProtocolBufferException -> 0x02d2, IOException -> 0x02c7 }
                r9 = r9 | r11
                r12.bitField0_ = r9     // Catch:{ InvalidProtocolBufferException -> 0x02d2, IOException -> 0x02c7 }
                goto L_0x0009
            L_0x00a1:
                com.google.protobuf.ByteString r9 = r13.readBytes()     // Catch:{ InvalidProtocolBufferException -> 0x02d2, IOException -> 0x02c7 }
                int r10 = r12.bitField0_     // Catch:{ InvalidProtocolBufferException -> 0x02d2, IOException -> 0x02c7 }
                r11 = 33554432(0x2000000, float:9.403955E-38)
                r10 = r10 | r11
                r12.bitField0_ = r10     // Catch:{ InvalidProtocolBufferException -> 0x02d2, IOException -> 0x02c7 }
                r12.next_ = r9     // Catch:{ InvalidProtocolBufferException -> 0x02d2, IOException -> 0x02c7 }
                goto L_0x0009
            L_0x00b0:
                r9 = r2 & r4
                if (r9 == r4) goto L_0x00bc
                java.util.ArrayList r9 = new java.util.ArrayList     // Catch:{ InvalidProtocolBufferException -> 0x02d2, IOException -> 0x02c7 }
                r9.<init>()     // Catch:{ InvalidProtocolBufferException -> 0x02d2, IOException -> 0x02c7 }
                r12.failedPids_ = r9     // Catch:{ InvalidProtocolBufferException -> 0x02d2, IOException -> 0x02c7 }
                r2 = r2 | r4
            L_0x00bc:
                java.util.List<com.avos.avoscloud.Messages$ErrorCommand> r9 = r12.failedPids_     // Catch:{ InvalidProtocolBufferException -> 0x02d2, IOException -> 0x02c7 }
                com.google.protobuf.Parser<com.avos.avoscloud.Messages$ErrorCommand> r10 = com.avos.avoscloud.Messages.ErrorCommand.PARSER     // Catch:{ InvalidProtocolBufferException -> 0x02d2, IOException -> 0x02c7 }
                com.google.protobuf.MessageLite r10 = r13.readMessage(r10, r14)     // Catch:{ InvalidProtocolBufferException -> 0x02d2, IOException -> 0x02c7 }
                r9.add(r10)     // Catch:{ InvalidProtocolBufferException -> 0x02d2, IOException -> 0x02c7 }
                goto L_0x0009
            L_0x00c9:
                com.google.protobuf.ByteString r9 = r13.readBytes()     // Catch:{ InvalidProtocolBufferException -> 0x02d2, IOException -> 0x02c7 }
                r10 = r2 & r3
                if (r10 == r3) goto L_0x00d9
                com.google.protobuf.LazyStringArrayList r10 = new com.google.protobuf.LazyStringArrayList     // Catch:{ InvalidProtocolBufferException -> 0x02d2, IOException -> 0x02c7 }
                r10.<init>()     // Catch:{ InvalidProtocolBufferException -> 0x02d2, IOException -> 0x02c7 }
                r12.allowedPids_ = r10     // Catch:{ InvalidProtocolBufferException -> 0x02d2, IOException -> 0x02c7 }
                r2 = r2 | r3
            L_0x00d9:
                com.google.protobuf.LazyStringList r10 = r12.allowedPids_     // Catch:{ InvalidProtocolBufferException -> 0x02d2, IOException -> 0x02c7 }
                r10.add(r9)     // Catch:{ InvalidProtocolBufferException -> 0x02d2, IOException -> 0x02c7 }
                goto L_0x0009
            L_0x00e0:
                com.google.protobuf.ByteString r9 = r13.readBytes()     // Catch:{ InvalidProtocolBufferException -> 0x02d2, IOException -> 0x02c7 }
                r10 = r2 & r7
                if (r10 == r7) goto L_0x00f0
                com.google.protobuf.LazyStringArrayList r10 = new com.google.protobuf.LazyStringArrayList     // Catch:{ InvalidProtocolBufferException -> 0x02d2, IOException -> 0x02c7 }
                r10.<init>()     // Catch:{ InvalidProtocolBufferException -> 0x02d2, IOException -> 0x02c7 }
                r12.tempConvIds_ = r10     // Catch:{ InvalidProtocolBufferException -> 0x02d2, IOException -> 0x02c7 }
                r2 = r2 | r7
            L_0x00f0:
                com.google.protobuf.LazyStringList r10 = r12.tempConvIds_     // Catch:{ InvalidProtocolBufferException -> 0x02d2, IOException -> 0x02c7 }
                r10.add(r9)     // Catch:{ InvalidProtocolBufferException -> 0x02d2, IOException -> 0x02c7 }
                goto L_0x0009
            L_0x00f7:
                int r9 = r12.bitField0_     // Catch:{ InvalidProtocolBufferException -> 0x02d2, IOException -> 0x02c7 }
                r9 = r9 | r5
                r12.bitField0_ = r9     // Catch:{ InvalidProtocolBufferException -> 0x02d2, IOException -> 0x02c7 }
                int r9 = r13.readInt32()     // Catch:{ InvalidProtocolBufferException -> 0x02d2, IOException -> 0x02c7 }
                r12.tempConvTTL_ = r9     // Catch:{ InvalidProtocolBufferException -> 0x02d2, IOException -> 0x02c7 }
                goto L_0x0009
            L_0x0104:
                int r9 = r12.bitField0_     // Catch:{ InvalidProtocolBufferException -> 0x02d2, IOException -> 0x02c7 }
                r9 = r9 | r6
                r12.bitField0_ = r9     // Catch:{ InvalidProtocolBufferException -> 0x02d2, IOException -> 0x02c7 }
                boolean r9 = r13.readBool()     // Catch:{ InvalidProtocolBufferException -> 0x02d2, IOException -> 0x02c7 }
                r12.tempConv_ = r9     // Catch:{ InvalidProtocolBufferException -> 0x02d2, IOException -> 0x02c7 }
                goto L_0x0009
            L_0x0111:
                int r9 = r12.bitField0_     // Catch:{ InvalidProtocolBufferException -> 0x02d2, IOException -> 0x02c7 }
                r11 = 4194304(0x400000, float:5.877472E-39)
                r9 = r9 & r11
                if (r9 != r11) goto L_0x011e
                com.avos.avoscloud.Messages$ConvMemberInfo r9 = r12.info_     // Catch:{ InvalidProtocolBufferException -> 0x02d2, IOException -> 0x02c7 }
                com.avos.avoscloud.Messages$ConvMemberInfo$Builder r10 = r9.toBuilder()     // Catch:{ InvalidProtocolBufferException -> 0x02d2, IOException -> 0x02c7 }
            L_0x011e:
                com.google.protobuf.Parser<com.avos.avoscloud.Messages$ConvMemberInfo> r9 = com.avos.avoscloud.Messages.ConvMemberInfo.PARSER     // Catch:{ InvalidProtocolBufferException -> 0x02d2, IOException -> 0x02c7 }
                com.google.protobuf.MessageLite r9 = r13.readMessage(r9, r14)     // Catch:{ InvalidProtocolBufferException -> 0x02d2, IOException -> 0x02c7 }
                com.avos.avoscloud.Messages$ConvMemberInfo r9 = (com.avos.avoscloud.Messages.ConvMemberInfo) r9     // Catch:{ InvalidProtocolBufferException -> 0x02d2, IOException -> 0x02c7 }
                r12.info_ = r9     // Catch:{ InvalidProtocolBufferException -> 0x02d2, IOException -> 0x02c7 }
                if (r10 == 0) goto L_0x0135
                com.avos.avoscloud.Messages$ConvMemberInfo r9 = r12.info_     // Catch:{ InvalidProtocolBufferException -> 0x02d2, IOException -> 0x02c7 }
                r10.mergeFrom(r9)     // Catch:{ InvalidProtocolBufferException -> 0x02d2, IOException -> 0x02c7 }
                com.avos.avoscloud.Messages$ConvMemberInfo r9 = r10.buildPartial()     // Catch:{ InvalidProtocolBufferException -> 0x02d2, IOException -> 0x02c7 }
                r12.info_ = r9     // Catch:{ InvalidProtocolBufferException -> 0x02d2, IOException -> 0x02c7 }
            L_0x0135:
                int r9 = r12.bitField0_     // Catch:{ InvalidProtocolBufferException -> 0x02d2, IOException -> 0x02c7 }
                r9 = r9 | r11
                r12.bitField0_ = r9     // Catch:{ InvalidProtocolBufferException -> 0x02d2, IOException -> 0x02c7 }
                goto L_0x0009
            L_0x013c:
                com.google.protobuf.ByteString r9 = r13.readBytes()     // Catch:{ InvalidProtocolBufferException -> 0x02d2, IOException -> 0x02c7 }
                r10 = r2 & r5
                if (r10 == r5) goto L_0x014c
                com.google.protobuf.LazyStringArrayList r10 = new com.google.protobuf.LazyStringArrayList     // Catch:{ InvalidProtocolBufferException -> 0x02d2, IOException -> 0x02c7 }
                r10.<init>()     // Catch:{ InvalidProtocolBufferException -> 0x02d2, IOException -> 0x02c7 }
                r12.cids_ = r10     // Catch:{ InvalidProtocolBufferException -> 0x02d2, IOException -> 0x02c7 }
                r2 = r2 | r5
            L_0x014c:
                com.google.protobuf.LazyStringList r10 = r12.cids_     // Catch:{ InvalidProtocolBufferException -> 0x02d2, IOException -> 0x02c7 }
                r10.add(r9)     // Catch:{ InvalidProtocolBufferException -> 0x02d2, IOException -> 0x02c7 }
                goto L_0x0009
            L_0x0153:
                r9 = r2 & r6
                if (r9 == r6) goto L_0x015f
                java.util.ArrayList r9 = new java.util.ArrayList     // Catch:{ InvalidProtocolBufferException -> 0x02d2, IOException -> 0x02c7 }
                r9.<init>()     // Catch:{ InvalidProtocolBufferException -> 0x02d2, IOException -> 0x02c7 }
                r12.maxReadTuples_ = r9     // Catch:{ InvalidProtocolBufferException -> 0x02d2, IOException -> 0x02c7 }
                r2 = r2 | r6
            L_0x015f:
                java.util.List<com.avos.avoscloud.Messages$MaxReadTuple> r9 = r12.maxReadTuples_     // Catch:{ InvalidProtocolBufferException -> 0x02d2, IOException -> 0x02c7 }
                com.google.protobuf.Parser<com.avos.avoscloud.Messages$MaxReadTuple> r10 = com.avos.avoscloud.Messages.MaxReadTuple.PARSER     // Catch:{ InvalidProtocolBufferException -> 0x02d2, IOException -> 0x02c7 }
                com.google.protobuf.MessageLite r10 = r13.readMessage(r10, r14)     // Catch:{ InvalidProtocolBufferException -> 0x02d2, IOException -> 0x02c7 }
                r9.add(r10)     // Catch:{ InvalidProtocolBufferException -> 0x02d2, IOException -> 0x02c7 }
                goto L_0x0009
            L_0x016c:
                int r9 = r12.bitField0_     // Catch:{ InvalidProtocolBufferException -> 0x02d2, IOException -> 0x02c7 }
                r10 = 2097152(0x200000, float:2.938736E-39)
                r9 = r9 | r10
                r12.bitField0_ = r9     // Catch:{ InvalidProtocolBufferException -> 0x02d2, IOException -> 0x02c7 }
                boolean r9 = r13.readBool()     // Catch:{ InvalidProtocolBufferException -> 0x02d2, IOException -> 0x02c7 }
                r12.queryAllMembers_ = r9     // Catch:{ InvalidProtocolBufferException -> 0x02d2, IOException -> 0x02c7 }
                goto L_0x0009
            L_0x017b:
                int r9 = r12.bitField0_     // Catch:{ InvalidProtocolBufferException -> 0x02d2, IOException -> 0x02c7 }
                r10 = 1048576(0x100000, float:1.469368E-39)
                r9 = r9 | r10
                r12.bitField0_ = r9     // Catch:{ InvalidProtocolBufferException -> 0x02d2, IOException -> 0x02c7 }
                long r9 = r13.readInt64()     // Catch:{ InvalidProtocolBufferException -> 0x02d2, IOException -> 0x02c7 }
                r12.maxAckTimestamp_ = r9     // Catch:{ InvalidProtocolBufferException -> 0x02d2, IOException -> 0x02c7 }
                goto L_0x0009
            L_0x018a:
                int r9 = r12.bitField0_     // Catch:{ InvalidProtocolBufferException -> 0x02d2, IOException -> 0x02c7 }
                r10 = 524288(0x80000, float:7.34684E-40)
                r9 = r9 | r10
                r12.bitField0_ = r9     // Catch:{ InvalidProtocolBufferException -> 0x02d2, IOException -> 0x02c7 }
                long r9 = r13.readInt64()     // Catch:{ InvalidProtocolBufferException -> 0x02d2, IOException -> 0x02c7 }
                r12.maxReadTimestamp_ = r9     // Catch:{ InvalidProtocolBufferException -> 0x02d2, IOException -> 0x02c7 }
                goto L_0x0009
            L_0x0199:
                com.google.protobuf.ByteString r9 = r13.readBytes()     // Catch:{ InvalidProtocolBufferException -> 0x02d2, IOException -> 0x02c7 }
                int r10 = r12.bitField0_     // Catch:{ InvalidProtocolBufferException -> 0x02d2, IOException -> 0x02c7 }
                r11 = 262144(0x40000, float:3.67342E-40)
                r10 = r10 | r11
                r12.bitField0_ = r10     // Catch:{ InvalidProtocolBufferException -> 0x02d2, IOException -> 0x02c7 }
                r12.targetClientId_ = r9     // Catch:{ InvalidProtocolBufferException -> 0x02d2, IOException -> 0x02c7 }
                goto L_0x0009
            L_0x01a8:
                com.google.protobuf.ByteString r9 = r13.readBytes()     // Catch:{ InvalidProtocolBufferException -> 0x02d2, IOException -> 0x02c7 }
                int r10 = r12.bitField0_     // Catch:{ InvalidProtocolBufferException -> 0x02d2, IOException -> 0x02c7 }
                r11 = 131072(0x20000, float:1.83671E-40)
                r10 = r10 | r11
                r12.bitField0_ = r10     // Catch:{ InvalidProtocolBufferException -> 0x02d2, IOException -> 0x02c7 }
                r12.uniqueId_ = r9     // Catch:{ InvalidProtocolBufferException -> 0x02d2, IOException -> 0x02c7 }
                goto L_0x0009
            L_0x01b7:
                int r9 = r12.bitField0_     // Catch:{ InvalidProtocolBufferException -> 0x02d2, IOException -> 0x02c7 }
                r10 = 65536(0x10000, float:9.18355E-41)
                r9 = r9 | r10
                r12.bitField0_ = r9     // Catch:{ InvalidProtocolBufferException -> 0x02d2, IOException -> 0x02c7 }
                int r9 = r13.readInt32()     // Catch:{ InvalidProtocolBufferException -> 0x02d2, IOException -> 0x02c7 }
                r12.statusTTL_ = r9     // Catch:{ InvalidProtocolBufferException -> 0x02d2, IOException -> 0x02c7 }
                goto L_0x0009
            L_0x01c6:
                int r9 = r12.bitField0_     // Catch:{ InvalidProtocolBufferException -> 0x02d2, IOException -> 0x02c7 }
                r10 = 32768(0x8000, float:4.5918E-41)
                r9 = r9 | r10
                r12.bitField0_ = r9     // Catch:{ InvalidProtocolBufferException -> 0x02d2, IOException -> 0x02c7 }
                boolean r9 = r13.readBool()     // Catch:{ InvalidProtocolBufferException -> 0x02d2, IOException -> 0x02c7 }
                r12.statusPub_ = r9     // Catch:{ InvalidProtocolBufferException -> 0x02d2, IOException -> 0x02c7 }
                goto L_0x0009
            L_0x01d6:
                int r9 = r12.bitField0_     // Catch:{ InvalidProtocolBufferException -> 0x02d2, IOException -> 0x02c7 }
                r9 = r9 | 16384(0x4000, float:2.2959E-41)
                r12.bitField0_ = r9     // Catch:{ InvalidProtocolBufferException -> 0x02d2, IOException -> 0x02c7 }
                boolean r9 = r13.readBool()     // Catch:{ InvalidProtocolBufferException -> 0x02d2, IOException -> 0x02c7 }
                r12.statusSub_ = r9     // Catch:{ InvalidProtocolBufferException -> 0x02d2, IOException -> 0x02c7 }
                goto L_0x0009
            L_0x01e4:
                com.google.protobuf.ByteString r9 = r13.readBytes()     // Catch:{ InvalidProtocolBufferException -> 0x02d2, IOException -> 0x02c7 }
                int r10 = r12.bitField0_     // Catch:{ InvalidProtocolBufferException -> 0x02d2, IOException -> 0x02c7 }
                r10 = r10 | 8192(0x2000, float:1.14794E-41)
                r12.bitField0_ = r10     // Catch:{ InvalidProtocolBufferException -> 0x02d2, IOException -> 0x02c7 }
                r12.s_ = r9     // Catch:{ InvalidProtocolBufferException -> 0x02d2, IOException -> 0x02c7 }
                goto L_0x0009
            L_0x01f2:
                com.google.protobuf.ByteString r9 = r13.readBytes()     // Catch:{ InvalidProtocolBufferException -> 0x02d2, IOException -> 0x02c7 }
                int r10 = r12.bitField0_     // Catch:{ InvalidProtocolBufferException -> 0x02d2, IOException -> 0x02c7 }
                r10 = r10 | 4096(0x1000, float:5.74E-42)
                r12.bitField0_ = r10     // Catch:{ InvalidProtocolBufferException -> 0x02d2, IOException -> 0x02c7 }
                r12.n_ = r9     // Catch:{ InvalidProtocolBufferException -> 0x02d2, IOException -> 0x02c7 }
                goto L_0x0009
            L_0x0200:
                int r9 = r12.bitField0_     // Catch:{ InvalidProtocolBufferException -> 0x02d2, IOException -> 0x02c7 }
                r9 = r9 | 2048(0x800, float:2.87E-42)
                r12.bitField0_ = r9     // Catch:{ InvalidProtocolBufferException -> 0x02d2, IOException -> 0x02c7 }
                long r9 = r13.readInt64()     // Catch:{ InvalidProtocolBufferException -> 0x02d2, IOException -> 0x02c7 }
                r12.t_ = r9     // Catch:{ InvalidProtocolBufferException -> 0x02d2, IOException -> 0x02c7 }
                goto L_0x0009
            L_0x020e:
                com.google.protobuf.ByteString r9 = r13.readBytes()     // Catch:{ InvalidProtocolBufferException -> 0x02d2, IOException -> 0x02c7 }
                int r10 = r12.bitField0_     // Catch:{ InvalidProtocolBufferException -> 0x02d2, IOException -> 0x02c7 }
                r10 = r10 | 1024(0x400, float:1.435E-42)
                r12.bitField0_ = r10     // Catch:{ InvalidProtocolBufferException -> 0x02d2, IOException -> 0x02c7 }
                r12.udate_ = r9     // Catch:{ InvalidProtocolBufferException -> 0x02d2, IOException -> 0x02c7 }
                goto L_0x0009
            L_0x021c:
                int r9 = r12.bitField0_     // Catch:{ InvalidProtocolBufferException -> 0x02d2, IOException -> 0x02c7 }
                r9 = r9 | 512(0x200, float:7.175E-43)
                r12.bitField0_ = r9     // Catch:{ InvalidProtocolBufferException -> 0x02d2, IOException -> 0x02c7 }
                int r9 = r13.readInt32()     // Catch:{ InvalidProtocolBufferException -> 0x02d2, IOException -> 0x02c7 }
                r12.count_ = r9     // Catch:{ InvalidProtocolBufferException -> 0x02d2, IOException -> 0x02c7 }
                goto L_0x0009
            L_0x022a:
                int r9 = r12.bitField0_     // Catch:{ InvalidProtocolBufferException -> 0x02d2, IOException -> 0x02c7 }
                r9 = r9 | 256(0x100, float:3.59E-43)
                r12.bitField0_ = r9     // Catch:{ InvalidProtocolBufferException -> 0x02d2, IOException -> 0x02c7 }
                int r9 = r13.readInt32()     // Catch:{ InvalidProtocolBufferException -> 0x02d2, IOException -> 0x02c7 }
                r12.flag_ = r9     // Catch:{ InvalidProtocolBufferException -> 0x02d2, IOException -> 0x02c7 }
                goto L_0x0009
            L_0x0238:
                int r9 = r12.bitField0_     // Catch:{ InvalidProtocolBufferException -> 0x02d2, IOException -> 0x02c7 }
                r9 = r9 | 128(0x80, float:1.794E-43)
                r12.bitField0_ = r9     // Catch:{ InvalidProtocolBufferException -> 0x02d2, IOException -> 0x02c7 }
                int r9 = r13.readInt32()     // Catch:{ InvalidProtocolBufferException -> 0x02d2, IOException -> 0x02c7 }
                r12.skip_ = r9     // Catch:{ InvalidProtocolBufferException -> 0x02d2, IOException -> 0x02c7 }
                goto L_0x0009
            L_0x0246:
                int r9 = r12.bitField0_     // Catch:{ InvalidProtocolBufferException -> 0x02d2, IOException -> 0x02c7 }
                r9 = r9 | 64
                r12.bitField0_ = r9     // Catch:{ InvalidProtocolBufferException -> 0x02d2, IOException -> 0x02c7 }
                int r9 = r13.readInt32()     // Catch:{ InvalidProtocolBufferException -> 0x02d2, IOException -> 0x02c7 }
                r12.limit_ = r9     // Catch:{ InvalidProtocolBufferException -> 0x02d2, IOException -> 0x02c7 }
                goto L_0x0009
            L_0x0254:
                com.google.protobuf.ByteString r9 = r13.readBytes()     // Catch:{ InvalidProtocolBufferException -> 0x02d2, IOException -> 0x02c7 }
                int r10 = r12.bitField0_     // Catch:{ InvalidProtocolBufferException -> 0x02d2, IOException -> 0x02c7 }
                r10 = r10 | 32
                r12.bitField0_ = r10     // Catch:{ InvalidProtocolBufferException -> 0x02d2, IOException -> 0x02c7 }
                r12.sort_ = r9     // Catch:{ InvalidProtocolBufferException -> 0x02d2, IOException -> 0x02c7 }
                goto L_0x0009
            L_0x0262:
                com.google.protobuf.ByteString r9 = r13.readBytes()     // Catch:{ InvalidProtocolBufferException -> 0x02d2, IOException -> 0x02c7 }
                int r10 = r12.bitField0_     // Catch:{ InvalidProtocolBufferException -> 0x02d2, IOException -> 0x02c7 }
                r10 = r10 | 16
                r12.bitField0_ = r10     // Catch:{ InvalidProtocolBufferException -> 0x02d2, IOException -> 0x02c7 }
                r12.initBy_ = r9     // Catch:{ InvalidProtocolBufferException -> 0x02d2, IOException -> 0x02c7 }
                goto L_0x0009
            L_0x0270:
                com.google.protobuf.ByteString r9 = r13.readBytes()     // Catch:{ InvalidProtocolBufferException -> 0x02d2, IOException -> 0x02c7 }
                int r10 = r12.bitField0_     // Catch:{ InvalidProtocolBufferException -> 0x02d2, IOException -> 0x02c7 }
                r10 = r10 | 8
                r12.bitField0_ = r10     // Catch:{ InvalidProtocolBufferException -> 0x02d2, IOException -> 0x02c7 }
                r12.cdate_ = r9     // Catch:{ InvalidProtocolBufferException -> 0x02d2, IOException -> 0x02c7 }
                goto L_0x0009
            L_0x027e:
                com.google.protobuf.ByteString r9 = r13.readBytes()     // Catch:{ InvalidProtocolBufferException -> 0x02d2, IOException -> 0x02c7 }
                int r10 = r12.bitField0_     // Catch:{ InvalidProtocolBufferException -> 0x02d2, IOException -> 0x02c7 }
                r10 = r10 | 4
                r12.bitField0_ = r10     // Catch:{ InvalidProtocolBufferException -> 0x02d2, IOException -> 0x02c7 }
                r12.cid_ = r9     // Catch:{ InvalidProtocolBufferException -> 0x02d2, IOException -> 0x02c7 }
                goto L_0x0009
            L_0x028c:
                int r9 = r12.bitField0_     // Catch:{ InvalidProtocolBufferException -> 0x02d2, IOException -> 0x02c7 }
                r9 = r9 | 2
                r12.bitField0_ = r9     // Catch:{ InvalidProtocolBufferException -> 0x02d2, IOException -> 0x02c7 }
                boolean r9 = r13.readBool()     // Catch:{ InvalidProtocolBufferException -> 0x02d2, IOException -> 0x02c7 }
                r12.unique_ = r9     // Catch:{ InvalidProtocolBufferException -> 0x02d2, IOException -> 0x02c7 }
                goto L_0x0009
            L_0x029a:
                int r9 = r12.bitField0_     // Catch:{ InvalidProtocolBufferException -> 0x02d2, IOException -> 0x02c7 }
                r9 = r9 | r8
                r12.bitField0_ = r9     // Catch:{ InvalidProtocolBufferException -> 0x02d2, IOException -> 0x02c7 }
                boolean r9 = r13.readBool()     // Catch:{ InvalidProtocolBufferException -> 0x02d2, IOException -> 0x02c7 }
                r12.transient_ = r9     // Catch:{ InvalidProtocolBufferException -> 0x02d2, IOException -> 0x02c7 }
                goto L_0x0009
            L_0x02a7:
                com.google.protobuf.ByteString r9 = r13.readBytes()     // Catch:{ InvalidProtocolBufferException -> 0x02d2, IOException -> 0x02c7 }
                r10 = r2 & 1
                if (r10 == r8) goto L_0x02b8
                com.google.protobuf.LazyStringArrayList r10 = new com.google.protobuf.LazyStringArrayList     // Catch:{ InvalidProtocolBufferException -> 0x02d2, IOException -> 0x02c7 }
                r10.<init>()     // Catch:{ InvalidProtocolBufferException -> 0x02d2, IOException -> 0x02c7 }
                r12.m_ = r10     // Catch:{ InvalidProtocolBufferException -> 0x02d2, IOException -> 0x02c7 }
                r2 = r2 | 1
            L_0x02b8:
                com.google.protobuf.LazyStringList r10 = r12.m_     // Catch:{ InvalidProtocolBufferException -> 0x02d2, IOException -> 0x02c7 }
                r10.add(r9)     // Catch:{ InvalidProtocolBufferException -> 0x02d2, IOException -> 0x02c7 }
                goto L_0x0009
            L_0x02bf:
                r1 = 1
                goto L_0x0009
            L_0x02c2:
                if (r3 != 0) goto L_0x0009
                goto L_0x02bf
            L_0x02c5:
                r13 = move-exception
                goto L_0x02d8
            L_0x02c7:
                r13 = move-exception
                com.google.protobuf.InvalidProtocolBufferException r14 = new com.google.protobuf.InvalidProtocolBufferException     // Catch:{ all -> 0x02c5 }
                r14.<init>(r13)     // Catch:{ all -> 0x02c5 }
                com.google.protobuf.InvalidProtocolBufferException r13 = r14.setUnfinishedMessage(r12)     // Catch:{ all -> 0x02c5 }
                throw r13     // Catch:{ all -> 0x02c5 }
            L_0x02d2:
                r13 = move-exception
                com.google.protobuf.InvalidProtocolBufferException r13 = r13.setUnfinishedMessage(r12)     // Catch:{ all -> 0x02c5 }
                throw r13     // Catch:{ all -> 0x02c5 }
            L_0x02d8:
                r14 = r2 & 1
                if (r14 != r8) goto L_0x02e4
                com.google.protobuf.LazyStringList r14 = r12.m_
                com.google.protobuf.LazyStringList r14 = r14.getUnmodifiableView()
                r12.m_ = r14
            L_0x02e4:
                r14 = r2 & r6
                if (r14 != r6) goto L_0x02f0
                java.util.List<com.avos.avoscloud.Messages$MaxReadTuple> r14 = r12.maxReadTuples_
                java.util.List r14 = java.util.Collections.unmodifiableList(r14)
                r12.maxReadTuples_ = r14
            L_0x02f0:
                r14 = r2 & r5
                if (r14 != r5) goto L_0x02fc
                com.google.protobuf.LazyStringList r14 = r12.cids_
                com.google.protobuf.LazyStringList r14 = r14.getUnmodifiableView()
                r12.cids_ = r14
            L_0x02fc:
                r14 = r2 & r7
                if (r14 != r7) goto L_0x0308
                com.google.protobuf.LazyStringList r14 = r12.tempConvIds_
                com.google.protobuf.LazyStringList r14 = r14.getUnmodifiableView()
                r12.tempConvIds_ = r14
            L_0x0308:
                r14 = r2 & r3
                if (r14 != r3) goto L_0x0314
                com.google.protobuf.LazyStringList r14 = r12.allowedPids_
                com.google.protobuf.LazyStringList r14 = r14.getUnmodifiableView()
                r12.allowedPids_ = r14
            L_0x0314:
                r14 = r2 & r4
                if (r14 != r4) goto L_0x0320
                java.util.List<com.avos.avoscloud.Messages$ErrorCommand> r14 = r12.failedPids_
                java.util.List r14 = java.util.Collections.unmodifiableList(r14)
                r12.failedPids_ = r14
            L_0x0320:
                com.google.protobuf.UnknownFieldSet r14 = r0.build()
                r12.unknownFields = r14
                r12.makeExtensionsImmutable()
                throw r13
            L_0x032a:
                r13 = r2 & 1
                if (r13 != r8) goto L_0x0336
                com.google.protobuf.LazyStringList r13 = r12.m_
                com.google.protobuf.LazyStringList r13 = r13.getUnmodifiableView()
                r12.m_ = r13
            L_0x0336:
                r13 = r2 & r6
                if (r13 != r6) goto L_0x0342
                java.util.List<com.avos.avoscloud.Messages$MaxReadTuple> r13 = r12.maxReadTuples_
                java.util.List r13 = java.util.Collections.unmodifiableList(r13)
                r12.maxReadTuples_ = r13
            L_0x0342:
                r13 = r2 & r5
                if (r13 != r5) goto L_0x034e
                com.google.protobuf.LazyStringList r13 = r12.cids_
                com.google.protobuf.LazyStringList r13 = r13.getUnmodifiableView()
                r12.cids_ = r13
            L_0x034e:
                r13 = r2 & r7
                if (r13 != r7) goto L_0x035a
                com.google.protobuf.LazyStringList r13 = r12.tempConvIds_
                com.google.protobuf.LazyStringList r13 = r13.getUnmodifiableView()
                r12.tempConvIds_ = r13
            L_0x035a:
                r13 = r2 & r3
                if (r13 != r3) goto L_0x0366
                com.google.protobuf.LazyStringList r13 = r12.allowedPids_
                com.google.protobuf.LazyStringList r13 = r13.getUnmodifiableView()
                r12.allowedPids_ = r13
            L_0x0366:
                r13 = r2 & r4
                if (r13 != r4) goto L_0x0372
                java.util.List<com.avos.avoscloud.Messages$ErrorCommand> r13 = r12.failedPids_
                java.util.List r13 = java.util.Collections.unmodifiableList(r13)
                r12.failedPids_ = r13
            L_0x0372:
                com.google.protobuf.UnknownFieldSet r13 = r0.build()
                r12.unknownFields = r13
                r12.makeExtensionsImmutable()
                return
            */
            throw new UnsupportedOperationException("Method not decompiled: com.avos.avoscloud.Messages.ConvCommand.<init>(com.google.protobuf.CodedInputStream, com.google.protobuf.ExtensionRegistryLite):void");
        }

        public static final Descriptor getDescriptor() {
            return Messages.internal_static_com_avos_avoscloud_ConvCommand_descriptor;
        }

        /* access modifiers changed from: protected */
        public FieldAccessorTable internalGetFieldAccessorTable() {
            return Messages.internal_static_com_avos_avoscloud_ConvCommand_fieldAccessorTable.ensureFieldAccessorsInitialized(ConvCommand.class, Builder.class);
        }

        public ProtocolStringList getMList() {
            return this.m_;
        }

        public int getMCount() {
            return this.m_.size();
        }

        public String getM(int i) {
            return (String) this.m_.get(i);
        }

        public ByteString getMBytes(int i) {
            return this.m_.getByteString(i);
        }

        public boolean hasTransient() {
            return (this.bitField0_ & 1) == 1;
        }

        public boolean getTransient() {
            return this.transient_;
        }

        public boolean hasUnique() {
            return (this.bitField0_ & 2) == 2;
        }

        public boolean getUnique() {
            return this.unique_;
        }

        public boolean hasCid() {
            return (this.bitField0_ & 4) == 4;
        }

        public String getCid() {
            Object obj = this.cid_;
            if (obj instanceof String) {
                return (String) obj;
            }
            ByteString byteString = (ByteString) obj;
            String stringUtf8 = byteString.toStringUtf8();
            if (byteString.isValidUtf8()) {
                this.cid_ = stringUtf8;
            }
            return stringUtf8;
        }

        public ByteString getCidBytes() {
            Object obj = this.cid_;
            if (!(obj instanceof String)) {
                return (ByteString) obj;
            }
            ByteString copyFromUtf8 = ByteString.copyFromUtf8((String) obj);
            this.cid_ = copyFromUtf8;
            return copyFromUtf8;
        }

        public boolean hasCdate() {
            return (this.bitField0_ & 8) == 8;
        }

        public String getCdate() {
            Object obj = this.cdate_;
            if (obj instanceof String) {
                return (String) obj;
            }
            ByteString byteString = (ByteString) obj;
            String stringUtf8 = byteString.toStringUtf8();
            if (byteString.isValidUtf8()) {
                this.cdate_ = stringUtf8;
            }
            return stringUtf8;
        }

        public ByteString getCdateBytes() {
            Object obj = this.cdate_;
            if (!(obj instanceof String)) {
                return (ByteString) obj;
            }
            ByteString copyFromUtf8 = ByteString.copyFromUtf8((String) obj);
            this.cdate_ = copyFromUtf8;
            return copyFromUtf8;
        }

        public boolean hasInitBy() {
            return (this.bitField0_ & 16) == 16;
        }

        public String getInitBy() {
            Object obj = this.initBy_;
            if (obj instanceof String) {
                return (String) obj;
            }
            ByteString byteString = (ByteString) obj;
            String stringUtf8 = byteString.toStringUtf8();
            if (byteString.isValidUtf8()) {
                this.initBy_ = stringUtf8;
            }
            return stringUtf8;
        }

        public ByteString getInitByBytes() {
            Object obj = this.initBy_;
            if (!(obj instanceof String)) {
                return (ByteString) obj;
            }
            ByteString copyFromUtf8 = ByteString.copyFromUtf8((String) obj);
            this.initBy_ = copyFromUtf8;
            return copyFromUtf8;
        }

        public boolean hasSort() {
            return (this.bitField0_ & 32) == 32;
        }

        public String getSort() {
            Object obj = this.sort_;
            if (obj instanceof String) {
                return (String) obj;
            }
            ByteString byteString = (ByteString) obj;
            String stringUtf8 = byteString.toStringUtf8();
            if (byteString.isValidUtf8()) {
                this.sort_ = stringUtf8;
            }
            return stringUtf8;
        }

        public ByteString getSortBytes() {
            Object obj = this.sort_;
            if (!(obj instanceof String)) {
                return (ByteString) obj;
            }
            ByteString copyFromUtf8 = ByteString.copyFromUtf8((String) obj);
            this.sort_ = copyFromUtf8;
            return copyFromUtf8;
        }

        public boolean hasLimit() {
            return (this.bitField0_ & 64) == 64;
        }

        public int getLimit() {
            return this.limit_;
        }

        public boolean hasSkip() {
            return (this.bitField0_ & 128) == 128;
        }

        public int getSkip() {
            return this.skip_;
        }

        public boolean hasFlag() {
            return (this.bitField0_ & 256) == 256;
        }

        public int getFlag() {
            return this.flag_;
        }

        public boolean hasCount() {
            return (this.bitField0_ & 512) == 512;
        }

        public int getCount() {
            return this.count_;
        }

        public boolean hasUdate() {
            return (this.bitField0_ & 1024) == 1024;
        }

        public String getUdate() {
            Object obj = this.udate_;
            if (obj instanceof String) {
                return (String) obj;
            }
            ByteString byteString = (ByteString) obj;
            String stringUtf8 = byteString.toStringUtf8();
            if (byteString.isValidUtf8()) {
                this.udate_ = stringUtf8;
            }
            return stringUtf8;
        }

        public ByteString getUdateBytes() {
            Object obj = this.udate_;
            if (!(obj instanceof String)) {
                return (ByteString) obj;
            }
            ByteString copyFromUtf8 = ByteString.copyFromUtf8((String) obj);
            this.udate_ = copyFromUtf8;
            return copyFromUtf8;
        }

        public boolean hasT() {
            return (this.bitField0_ & 2048) == 2048;
        }

        public long getT() {
            return this.t_;
        }

        public boolean hasN() {
            return (this.bitField0_ & 4096) == 4096;
        }

        public String getN() {
            Object obj = this.n_;
            if (obj instanceof String) {
                return (String) obj;
            }
            ByteString byteString = (ByteString) obj;
            String stringUtf8 = byteString.toStringUtf8();
            if (byteString.isValidUtf8()) {
                this.n_ = stringUtf8;
            }
            return stringUtf8;
        }

        public ByteString getNBytes() {
            Object obj = this.n_;
            if (!(obj instanceof String)) {
                return (ByteString) obj;
            }
            ByteString copyFromUtf8 = ByteString.copyFromUtf8((String) obj);
            this.n_ = copyFromUtf8;
            return copyFromUtf8;
        }

        public boolean hasS() {
            return (this.bitField0_ & 8192) == 8192;
        }

        public String getS() {
            Object obj = this.s_;
            if (obj instanceof String) {
                return (String) obj;
            }
            ByteString byteString = (ByteString) obj;
            String stringUtf8 = byteString.toStringUtf8();
            if (byteString.isValidUtf8()) {
                this.s_ = stringUtf8;
            }
            return stringUtf8;
        }

        public ByteString getSBytes() {
            Object obj = this.s_;
            if (!(obj instanceof String)) {
                return (ByteString) obj;
            }
            ByteString copyFromUtf8 = ByteString.copyFromUtf8((String) obj);
            this.s_ = copyFromUtf8;
            return copyFromUtf8;
        }

        public boolean hasStatusSub() {
            return (this.bitField0_ & 16384) == 16384;
        }

        public boolean getStatusSub() {
            return this.statusSub_;
        }

        public boolean hasStatusPub() {
            return (this.bitField0_ & 32768) == 32768;
        }

        public boolean getStatusPub() {
            return this.statusPub_;
        }

        public boolean hasStatusTTL() {
            return (this.bitField0_ & 65536) == 65536;
        }

        public int getStatusTTL() {
            return this.statusTTL_;
        }

        public boolean hasUniqueId() {
            return (this.bitField0_ & 131072) == 131072;
        }

        public String getUniqueId() {
            Object obj = this.uniqueId_;
            if (obj instanceof String) {
                return (String) obj;
            }
            ByteString byteString = (ByteString) obj;
            String stringUtf8 = byteString.toStringUtf8();
            if (byteString.isValidUtf8()) {
                this.uniqueId_ = stringUtf8;
            }
            return stringUtf8;
        }

        public ByteString getUniqueIdBytes() {
            Object obj = this.uniqueId_;
            if (!(obj instanceof String)) {
                return (ByteString) obj;
            }
            ByteString copyFromUtf8 = ByteString.copyFromUtf8((String) obj);
            this.uniqueId_ = copyFromUtf8;
            return copyFromUtf8;
        }

        public boolean hasTargetClientId() {
            return (this.bitField0_ & 262144) == 262144;
        }

        public String getTargetClientId() {
            Object obj = this.targetClientId_;
            if (obj instanceof String) {
                return (String) obj;
            }
            ByteString byteString = (ByteString) obj;
            String stringUtf8 = byteString.toStringUtf8();
            if (byteString.isValidUtf8()) {
                this.targetClientId_ = stringUtf8;
            }
            return stringUtf8;
        }

        public ByteString getTargetClientIdBytes() {
            Object obj = this.targetClientId_;
            if (!(obj instanceof String)) {
                return (ByteString) obj;
            }
            ByteString copyFromUtf8 = ByteString.copyFromUtf8((String) obj);
            this.targetClientId_ = copyFromUtf8;
            return copyFromUtf8;
        }

        public boolean hasMaxReadTimestamp() {
            return (this.bitField0_ & 524288) == 524288;
        }

        public long getMaxReadTimestamp() {
            return this.maxReadTimestamp_;
        }

        public boolean hasMaxAckTimestamp() {
            return (this.bitField0_ & 1048576) == 1048576;
        }

        public long getMaxAckTimestamp() {
            return this.maxAckTimestamp_;
        }

        public boolean hasQueryAllMembers() {
            return (this.bitField0_ & 2097152) == 2097152;
        }

        public boolean getQueryAllMembers() {
            return this.queryAllMembers_;
        }

        public List<MaxReadTuple> getMaxReadTuplesList() {
            return this.maxReadTuples_;
        }

        public List<? extends MaxReadTupleOrBuilder> getMaxReadTuplesOrBuilderList() {
            return this.maxReadTuples_;
        }

        public int getMaxReadTuplesCount() {
            return this.maxReadTuples_.size();
        }

        public MaxReadTuple getMaxReadTuples(int i) {
            return (MaxReadTuple) this.maxReadTuples_.get(i);
        }

        public MaxReadTupleOrBuilder getMaxReadTuplesOrBuilder(int i) {
            return (MaxReadTupleOrBuilder) this.maxReadTuples_.get(i);
        }

        public ProtocolStringList getCidsList() {
            return this.cids_;
        }

        public int getCidsCount() {
            return this.cids_.size();
        }

        public String getCids(int i) {
            return (String) this.cids_.get(i);
        }

        public ByteString getCidsBytes(int i) {
            return this.cids_.getByteString(i);
        }

        public boolean hasInfo() {
            return (this.bitField0_ & 4194304) == 4194304;
        }

        public ConvMemberInfo getInfo() {
            ConvMemberInfo convMemberInfo = this.info_;
            return convMemberInfo == null ? ConvMemberInfo.getDefaultInstance() : convMemberInfo;
        }

        public ConvMemberInfoOrBuilder getInfoOrBuilder() {
            ConvMemberInfo convMemberInfo = this.info_;
            return convMemberInfo == null ? ConvMemberInfo.getDefaultInstance() : convMemberInfo;
        }

        public boolean hasTempConv() {
            return (this.bitField0_ & 8388608) == 8388608;
        }

        public boolean getTempConv() {
            return this.tempConv_;
        }

        public boolean hasTempConvTTL() {
            return (this.bitField0_ & 16777216) == 16777216;
        }

        public int getTempConvTTL() {
            return this.tempConvTTL_;
        }

        public ProtocolStringList getTempConvIdsList() {
            return this.tempConvIds_;
        }

        public int getTempConvIdsCount() {
            return this.tempConvIds_.size();
        }

        public String getTempConvIds(int i) {
            return (String) this.tempConvIds_.get(i);
        }

        public ByteString getTempConvIdsBytes(int i) {
            return this.tempConvIds_.getByteString(i);
        }

        public ProtocolStringList getAllowedPidsList() {
            return this.allowedPids_;
        }

        public int getAllowedPidsCount() {
            return this.allowedPids_.size();
        }

        public String getAllowedPids(int i) {
            return (String) this.allowedPids_.get(i);
        }

        public ByteString getAllowedPidsBytes(int i) {
            return this.allowedPids_.getByteString(i);
        }

        public List<ErrorCommand> getFailedPidsList() {
            return this.failedPids_;
        }

        public List<? extends ErrorCommandOrBuilder> getFailedPidsOrBuilderList() {
            return this.failedPids_;
        }

        public int getFailedPidsCount() {
            return this.failedPids_.size();
        }

        public ErrorCommand getFailedPids(int i) {
            return (ErrorCommand) this.failedPids_.get(i);
        }

        public ErrorCommandOrBuilder getFailedPidsOrBuilder(int i) {
            return (ErrorCommandOrBuilder) this.failedPids_.get(i);
        }

        public boolean hasNext() {
            return (this.bitField0_ & 33554432) == 33554432;
        }

        public String getNext() {
            Object obj = this.next_;
            if (obj instanceof String) {
                return (String) obj;
            }
            ByteString byteString = (ByteString) obj;
            String stringUtf8 = byteString.toStringUtf8();
            if (byteString.isValidUtf8()) {
                this.next_ = stringUtf8;
            }
            return stringUtf8;
        }

        public ByteString getNextBytes() {
            Object obj = this.next_;
            if (!(obj instanceof String)) {
                return (ByteString) obj;
            }
            ByteString copyFromUtf8 = ByteString.copyFromUtf8((String) obj);
            this.next_ = copyFromUtf8;
            return copyFromUtf8;
        }

        public boolean hasResults() {
            return (this.bitField0_ & 67108864) == 67108864;
        }

        public JsonObjectMessage getResults() {
            JsonObjectMessage jsonObjectMessage = this.results_;
            return jsonObjectMessage == null ? JsonObjectMessage.getDefaultInstance() : jsonObjectMessage;
        }

        public JsonObjectMessageOrBuilder getResultsOrBuilder() {
            JsonObjectMessage jsonObjectMessage = this.results_;
            return jsonObjectMessage == null ? JsonObjectMessage.getDefaultInstance() : jsonObjectMessage;
        }

        public boolean hasWhere() {
            return (this.bitField0_ & 134217728) == 134217728;
        }

        public JsonObjectMessage getWhere() {
            JsonObjectMessage jsonObjectMessage = this.where_;
            return jsonObjectMessage == null ? JsonObjectMessage.getDefaultInstance() : jsonObjectMessage;
        }

        public JsonObjectMessageOrBuilder getWhereOrBuilder() {
            JsonObjectMessage jsonObjectMessage = this.where_;
            return jsonObjectMessage == null ? JsonObjectMessage.getDefaultInstance() : jsonObjectMessage;
        }

        public boolean hasAttr() {
            return (this.bitField0_ & C.ENCODING_PCM_MU_LAW) == 268435456;
        }

        public JsonObjectMessage getAttr() {
            JsonObjectMessage jsonObjectMessage = this.attr_;
            return jsonObjectMessage == null ? JsonObjectMessage.getDefaultInstance() : jsonObjectMessage;
        }

        public JsonObjectMessageOrBuilder getAttrOrBuilder() {
            JsonObjectMessage jsonObjectMessage = this.attr_;
            return jsonObjectMessage == null ? JsonObjectMessage.getDefaultInstance() : jsonObjectMessage;
        }

        public final boolean isInitialized() {
            byte b = this.memoizedIsInitialized;
            if (b == 1) {
                return true;
            }
            if (b == 0) {
                return false;
            }
            for (int i = 0; i < getFailedPidsCount(); i++) {
                if (!getFailedPids(i).isInitialized()) {
                    this.memoizedIsInitialized = 0;
                    return false;
                }
            }
            if (hasResults() && !getResults().isInitialized()) {
                this.memoizedIsInitialized = 0;
                return false;
            } else if (hasWhere() && !getWhere().isInitialized()) {
                this.memoizedIsInitialized = 0;
                return false;
            } else if (!hasAttr() || getAttr().isInitialized()) {
                this.memoizedIsInitialized = 1;
                return true;
            } else {
                this.memoizedIsInitialized = 0;
                return false;
            }
        }

        public void writeTo(CodedOutputStream codedOutputStream) throws IOException {
            for (int i = 0; i < this.m_.size(); i++) {
                GeneratedMessageV3.writeString(codedOutputStream, 1, this.m_.getRaw(i));
            }
            if ((this.bitField0_ & 1) == 1) {
                codedOutputStream.writeBool(2, this.transient_);
            }
            if ((this.bitField0_ & 2) == 2) {
                codedOutputStream.writeBool(3, this.unique_);
            }
            if ((this.bitField0_ & 4) == 4) {
                GeneratedMessageV3.writeString(codedOutputStream, 4, this.cid_);
            }
            if ((this.bitField0_ & 8) == 8) {
                GeneratedMessageV3.writeString(codedOutputStream, 5, this.cdate_);
            }
            if ((this.bitField0_ & 16) == 16) {
                GeneratedMessageV3.writeString(codedOutputStream, 6, this.initBy_);
            }
            if ((this.bitField0_ & 32) == 32) {
                GeneratedMessageV3.writeString(codedOutputStream, 7, this.sort_);
            }
            if ((this.bitField0_ & 64) == 64) {
                codedOutputStream.writeInt32(8, this.limit_);
            }
            if ((this.bitField0_ & 128) == 128) {
                codedOutputStream.writeInt32(9, this.skip_);
            }
            if ((this.bitField0_ & 256) == 256) {
                codedOutputStream.writeInt32(10, this.flag_);
            }
            if ((this.bitField0_ & 512) == 512) {
                codedOutputStream.writeInt32(11, this.count_);
            }
            if ((this.bitField0_ & 1024) == 1024) {
                GeneratedMessageV3.writeString(codedOutputStream, 12, this.udate_);
            }
            if ((this.bitField0_ & 2048) == 2048) {
                codedOutputStream.writeInt64(13, this.t_);
            }
            if ((this.bitField0_ & 4096) == 4096) {
                GeneratedMessageV3.writeString(codedOutputStream, 14, this.n_);
            }
            if ((this.bitField0_ & 8192) == 8192) {
                GeneratedMessageV3.writeString(codedOutputStream, 15, this.s_);
            }
            if ((this.bitField0_ & 16384) == 16384) {
                codedOutputStream.writeBool(16, this.statusSub_);
            }
            if ((this.bitField0_ & 32768) == 32768) {
                codedOutputStream.writeBool(17, this.statusPub_);
            }
            if ((this.bitField0_ & 65536) == 65536) {
                codedOutputStream.writeInt32(18, this.statusTTL_);
            }
            if ((this.bitField0_ & 131072) == 131072) {
                GeneratedMessageV3.writeString(codedOutputStream, 19, this.uniqueId_);
            }
            if ((this.bitField0_ & 262144) == 262144) {
                GeneratedMessageV3.writeString(codedOutputStream, 20, this.targetClientId_);
            }
            if ((this.bitField0_ & 524288) == 524288) {
                codedOutputStream.writeInt64(21, this.maxReadTimestamp_);
            }
            if ((this.bitField0_ & 1048576) == 1048576) {
                codedOutputStream.writeInt64(22, this.maxAckTimestamp_);
            }
            if ((this.bitField0_ & 2097152) == 2097152) {
                codedOutputStream.writeBool(23, this.queryAllMembers_);
            }
            for (int i2 = 0; i2 < this.maxReadTuples_.size(); i2++) {
                codedOutputStream.writeMessage(24, (MessageLite) this.maxReadTuples_.get(i2));
            }
            for (int i3 = 0; i3 < this.cids_.size(); i3++) {
                GeneratedMessageV3.writeString(codedOutputStream, 25, this.cids_.getRaw(i3));
            }
            if ((this.bitField0_ & 4194304) == 4194304) {
                codedOutputStream.writeMessage(26, getInfo());
            }
            if ((this.bitField0_ & 8388608) == 8388608) {
                codedOutputStream.writeBool(27, this.tempConv_);
            }
            if ((this.bitField0_ & 16777216) == 16777216) {
                codedOutputStream.writeInt32(28, this.tempConvTTL_);
            }
            for (int i4 = 0; i4 < this.tempConvIds_.size(); i4++) {
                GeneratedMessageV3.writeString(codedOutputStream, 29, this.tempConvIds_.getRaw(i4));
            }
            for (int i5 = 0; i5 < this.allowedPids_.size(); i5++) {
                GeneratedMessageV3.writeString(codedOutputStream, 30, this.allowedPids_.getRaw(i5));
            }
            for (int i6 = 0; i6 < this.failedPids_.size(); i6++) {
                codedOutputStream.writeMessage(31, (MessageLite) this.failedPids_.get(i6));
            }
            if ((this.bitField0_ & 33554432) == 33554432) {
                GeneratedMessageV3.writeString(codedOutputStream, 40, this.next_);
            }
            if ((this.bitField0_ & 67108864) == 67108864) {
                codedOutputStream.writeMessage(100, getResults());
            }
            if ((this.bitField0_ & 134217728) == 134217728) {
                codedOutputStream.writeMessage(101, getWhere());
            }
            if ((this.bitField0_ & C.ENCODING_PCM_MU_LAW) == 268435456) {
                codedOutputStream.writeMessage(103, getAttr());
            }
            this.unknownFields.writeTo(codedOutputStream);
        }

        public int getSerializedSize() {
            int i = this.memoizedSize;
            if (i != -1) {
                return i;
            }
            int i2 = 0;
            for (int i3 = 0; i3 < this.m_.size(); i3++) {
                i2 += computeStringSizeNoTag(this.m_.getRaw(i3));
            }
            int size = i2 + 0 + (getMList().size() * 1);
            if ((this.bitField0_ & 1) == 1) {
                size += CodedOutputStream.computeBoolSize(2, this.transient_);
            }
            if ((this.bitField0_ & 2) == 2) {
                size += CodedOutputStream.computeBoolSize(3, this.unique_);
            }
            if ((this.bitField0_ & 4) == 4) {
                size += GeneratedMessageV3.computeStringSize(4, this.cid_);
            }
            if ((this.bitField0_ & 8) == 8) {
                size += GeneratedMessageV3.computeStringSize(5, this.cdate_);
            }
            if ((this.bitField0_ & 16) == 16) {
                size += GeneratedMessageV3.computeStringSize(6, this.initBy_);
            }
            if ((this.bitField0_ & 32) == 32) {
                size += GeneratedMessageV3.computeStringSize(7, this.sort_);
            }
            if ((this.bitField0_ & 64) == 64) {
                size += CodedOutputStream.computeInt32Size(8, this.limit_);
            }
            if ((this.bitField0_ & 128) == 128) {
                size += CodedOutputStream.computeInt32Size(9, this.skip_);
            }
            if ((this.bitField0_ & 256) == 256) {
                size += CodedOutputStream.computeInt32Size(10, this.flag_);
            }
            if ((this.bitField0_ & 512) == 512) {
                size += CodedOutputStream.computeInt32Size(11, this.count_);
            }
            if ((this.bitField0_ & 1024) == 1024) {
                size += GeneratedMessageV3.computeStringSize(12, this.udate_);
            }
            if ((this.bitField0_ & 2048) == 2048) {
                size += CodedOutputStream.computeInt64Size(13, this.t_);
            }
            if ((this.bitField0_ & 4096) == 4096) {
                size += GeneratedMessageV3.computeStringSize(14, this.n_);
            }
            if ((this.bitField0_ & 8192) == 8192) {
                size += GeneratedMessageV3.computeStringSize(15, this.s_);
            }
            if ((this.bitField0_ & 16384) == 16384) {
                size += CodedOutputStream.computeBoolSize(16, this.statusSub_);
            }
            if ((this.bitField0_ & 32768) == 32768) {
                size += CodedOutputStream.computeBoolSize(17, this.statusPub_);
            }
            if ((this.bitField0_ & 65536) == 65536) {
                size += CodedOutputStream.computeInt32Size(18, this.statusTTL_);
            }
            if ((this.bitField0_ & 131072) == 131072) {
                size += GeneratedMessageV3.computeStringSize(19, this.uniqueId_);
            }
            if ((this.bitField0_ & 262144) == 262144) {
                size += GeneratedMessageV3.computeStringSize(20, this.targetClientId_);
            }
            if ((this.bitField0_ & 524288) == 524288) {
                size += CodedOutputStream.computeInt64Size(21, this.maxReadTimestamp_);
            }
            if ((this.bitField0_ & 1048576) == 1048576) {
                size += CodedOutputStream.computeInt64Size(22, this.maxAckTimestamp_);
            }
            if ((this.bitField0_ & 2097152) == 2097152) {
                size += CodedOutputStream.computeBoolSize(23, this.queryAllMembers_);
            }
            for (int i4 = 0; i4 < this.maxReadTuples_.size(); i4++) {
                size += CodedOutputStream.computeMessageSize(24, (MessageLite) this.maxReadTuples_.get(i4));
            }
            int i5 = 0;
            for (int i6 = 0; i6 < this.cids_.size(); i6++) {
                i5 += computeStringSizeNoTag(this.cids_.getRaw(i6));
            }
            int size2 = size + i5 + (getCidsList().size() * 2);
            if ((this.bitField0_ & 4194304) == 4194304) {
                size2 += CodedOutputStream.computeMessageSize(26, getInfo());
            }
            if ((this.bitField0_ & 8388608) == 8388608) {
                size2 += CodedOutputStream.computeBoolSize(27, this.tempConv_);
            }
            if ((this.bitField0_ & 16777216) == 16777216) {
                size2 += CodedOutputStream.computeInt32Size(28, this.tempConvTTL_);
            }
            int i7 = 0;
            for (int i8 = 0; i8 < this.tempConvIds_.size(); i8++) {
                i7 += computeStringSizeNoTag(this.tempConvIds_.getRaw(i8));
            }
            int size3 = size2 + i7 + (getTempConvIdsList().size() * 2);
            int i9 = 0;
            for (int i10 = 0; i10 < this.allowedPids_.size(); i10++) {
                i9 += computeStringSizeNoTag(this.allowedPids_.getRaw(i10));
            }
            int size4 = size3 + i9 + (getAllowedPidsList().size() * 2);
            for (int i11 = 0; i11 < this.failedPids_.size(); i11++) {
                size4 += CodedOutputStream.computeMessageSize(31, (MessageLite) this.failedPids_.get(i11));
            }
            if ((this.bitField0_ & 33554432) == 33554432) {
                size4 += GeneratedMessageV3.computeStringSize(40, this.next_);
            }
            if ((this.bitField0_ & 67108864) == 67108864) {
                size4 += CodedOutputStream.computeMessageSize(100, getResults());
            }
            if ((this.bitField0_ & 134217728) == 134217728) {
                size4 += CodedOutputStream.computeMessageSize(101, getWhere());
            }
            if ((this.bitField0_ & C.ENCODING_PCM_MU_LAW) == 268435456) {
                size4 += CodedOutputStream.computeMessageSize(103, getAttr());
            }
            int serializedSize = size4 + this.unknownFields.getSerializedSize();
            this.memoizedSize = serializedSize;
            return serializedSize;
        }

        public boolean equals(Object obj) {
            boolean z = true;
            if (obj == this) {
                return true;
            }
            if (!(obj instanceof ConvCommand)) {
                return super.equals(obj);
            }
            ConvCommand convCommand = (ConvCommand) obj;
            boolean z2 = (getMList().equals(convCommand.getMList())) && hasTransient() == convCommand.hasTransient();
            if (hasTransient()) {
                z2 = z2 && getTransient() == convCommand.getTransient();
            }
            boolean z3 = z2 && hasUnique() == convCommand.hasUnique();
            if (hasUnique()) {
                z3 = z3 && getUnique() == convCommand.getUnique();
            }
            boolean z4 = z3 && hasCid() == convCommand.hasCid();
            if (hasCid()) {
                z4 = z4 && getCid().equals(convCommand.getCid());
            }
            boolean z5 = z4 && hasCdate() == convCommand.hasCdate();
            if (hasCdate()) {
                z5 = z5 && getCdate().equals(convCommand.getCdate());
            }
            boolean z6 = z5 && hasInitBy() == convCommand.hasInitBy();
            if (hasInitBy()) {
                z6 = z6 && getInitBy().equals(convCommand.getInitBy());
            }
            boolean z7 = z6 && hasSort() == convCommand.hasSort();
            if (hasSort()) {
                z7 = z7 && getSort().equals(convCommand.getSort());
            }
            boolean z8 = z7 && hasLimit() == convCommand.hasLimit();
            if (hasLimit()) {
                z8 = z8 && getLimit() == convCommand.getLimit();
            }
            boolean z9 = z8 && hasSkip() == convCommand.hasSkip();
            if (hasSkip()) {
                z9 = z9 && getSkip() == convCommand.getSkip();
            }
            boolean z10 = z9 && hasFlag() == convCommand.hasFlag();
            if (hasFlag()) {
                z10 = z10 && getFlag() == convCommand.getFlag();
            }
            boolean z11 = z10 && hasCount() == convCommand.hasCount();
            if (hasCount()) {
                z11 = z11 && getCount() == convCommand.getCount();
            }
            boolean z12 = z11 && hasUdate() == convCommand.hasUdate();
            if (hasUdate()) {
                z12 = z12 && getUdate().equals(convCommand.getUdate());
            }
            boolean z13 = z12 && hasT() == convCommand.hasT();
            if (hasT()) {
                z13 = z13 && getT() == convCommand.getT();
            }
            boolean z14 = z13 && hasN() == convCommand.hasN();
            if (hasN()) {
                z14 = z14 && getN().equals(convCommand.getN());
            }
            boolean z15 = z14 && hasS() == convCommand.hasS();
            if (hasS()) {
                z15 = z15 && getS().equals(convCommand.getS());
            }
            boolean z16 = z15 && hasStatusSub() == convCommand.hasStatusSub();
            if (hasStatusSub()) {
                z16 = z16 && getStatusSub() == convCommand.getStatusSub();
            }
            boolean z17 = z16 && hasStatusPub() == convCommand.hasStatusPub();
            if (hasStatusPub()) {
                z17 = z17 && getStatusPub() == convCommand.getStatusPub();
            }
            boolean z18 = z17 && hasStatusTTL() == convCommand.hasStatusTTL();
            if (hasStatusTTL()) {
                z18 = z18 && getStatusTTL() == convCommand.getStatusTTL();
            }
            boolean z19 = z18 && hasUniqueId() == convCommand.hasUniqueId();
            if (hasUniqueId()) {
                z19 = z19 && getUniqueId().equals(convCommand.getUniqueId());
            }
            boolean z20 = z19 && hasTargetClientId() == convCommand.hasTargetClientId();
            if (hasTargetClientId()) {
                z20 = z20 && getTargetClientId().equals(convCommand.getTargetClientId());
            }
            boolean z21 = z20 && hasMaxReadTimestamp() == convCommand.hasMaxReadTimestamp();
            if (hasMaxReadTimestamp()) {
                z21 = z21 && getMaxReadTimestamp() == convCommand.getMaxReadTimestamp();
            }
            boolean z22 = z21 && hasMaxAckTimestamp() == convCommand.hasMaxAckTimestamp();
            if (hasMaxAckTimestamp()) {
                z22 = z22 && getMaxAckTimestamp() == convCommand.getMaxAckTimestamp();
            }
            boolean z23 = z22 && hasQueryAllMembers() == convCommand.hasQueryAllMembers();
            if (hasQueryAllMembers()) {
                z23 = z23 && getQueryAllMembers() == convCommand.getQueryAllMembers();
            }
            boolean z24 = ((z23 && getMaxReadTuplesList().equals(convCommand.getMaxReadTuplesList())) && getCidsList().equals(convCommand.getCidsList())) && hasInfo() == convCommand.hasInfo();
            if (hasInfo()) {
                z24 = z24 && getInfo().equals(convCommand.getInfo());
            }
            boolean z25 = z24 && hasTempConv() == convCommand.hasTempConv();
            if (hasTempConv()) {
                z25 = z25 && getTempConv() == convCommand.getTempConv();
            }
            boolean z26 = z25 && hasTempConvTTL() == convCommand.hasTempConvTTL();
            if (hasTempConvTTL()) {
                z26 = z26 && getTempConvTTL() == convCommand.getTempConvTTL();
            }
            boolean z27 = (((z26 && getTempConvIdsList().equals(convCommand.getTempConvIdsList())) && getAllowedPidsList().equals(convCommand.getAllowedPidsList())) && getFailedPidsList().equals(convCommand.getFailedPidsList())) && hasNext() == convCommand.hasNext();
            if (hasNext()) {
                z27 = z27 && getNext().equals(convCommand.getNext());
            }
            boolean z28 = z27 && hasResults() == convCommand.hasResults();
            if (hasResults()) {
                z28 = z28 && getResults().equals(convCommand.getResults());
            }
            boolean z29 = z28 && hasWhere() == convCommand.hasWhere();
            if (hasWhere()) {
                z29 = z29 && getWhere().equals(convCommand.getWhere());
            }
            boolean z30 = z29 && hasAttr() == convCommand.hasAttr();
            if (hasAttr()) {
                z30 = z30 && getAttr().equals(convCommand.getAttr());
            }
            if (!z30 || !this.unknownFields.equals(convCommand.unknownFields)) {
                z = false;
            }
            return z;
        }

        public int hashCode() {
            if (this.memoizedHashCode != 0) {
                return this.memoizedHashCode;
            }
            int hashCode = 779 + getDescriptor().hashCode();
            if (getMCount() > 0) {
                hashCode = (((hashCode * 37) + 1) * 53) + getMList().hashCode();
            }
            if (hasTransient()) {
                hashCode = (((hashCode * 37) + 2) * 53) + Internal.hashBoolean(getTransient());
            }
            if (hasUnique()) {
                hashCode = (((hashCode * 37) + 3) * 53) + Internal.hashBoolean(getUnique());
            }
            if (hasCid()) {
                hashCode = (((hashCode * 37) + 4) * 53) + getCid().hashCode();
            }
            if (hasCdate()) {
                hashCode = (((hashCode * 37) + 5) * 53) + getCdate().hashCode();
            }
            if (hasInitBy()) {
                hashCode = (((hashCode * 37) + 6) * 53) + getInitBy().hashCode();
            }
            if (hasSort()) {
                hashCode = (((hashCode * 37) + 7) * 53) + getSort().hashCode();
            }
            if (hasLimit()) {
                hashCode = (((hashCode * 37) + 8) * 53) + getLimit();
            }
            if (hasSkip()) {
                hashCode = (((hashCode * 37) + 9) * 53) + getSkip();
            }
            if (hasFlag()) {
                hashCode = (((hashCode * 37) + 10) * 53) + getFlag();
            }
            if (hasCount()) {
                hashCode = (((hashCode * 37) + 11) * 53) + getCount();
            }
            if (hasUdate()) {
                hashCode = (((hashCode * 37) + 12) * 53) + getUdate().hashCode();
            }
            if (hasT()) {
                hashCode = (((hashCode * 37) + 13) * 53) + Internal.hashLong(getT());
            }
            if (hasN()) {
                hashCode = (((hashCode * 37) + 14) * 53) + getN().hashCode();
            }
            if (hasS()) {
                hashCode = (((hashCode * 37) + 15) * 53) + getS().hashCode();
            }
            if (hasStatusSub()) {
                hashCode = (((hashCode * 37) + 16) * 53) + Internal.hashBoolean(getStatusSub());
            }
            if (hasStatusPub()) {
                hashCode = (((hashCode * 37) + 17) * 53) + Internal.hashBoolean(getStatusPub());
            }
            if (hasStatusTTL()) {
                hashCode = (((hashCode * 37) + 18) * 53) + getStatusTTL();
            }
            if (hasUniqueId()) {
                hashCode = (((hashCode * 37) + 19) * 53) + getUniqueId().hashCode();
            }
            if (hasTargetClientId()) {
                hashCode = (((hashCode * 37) + 20) * 53) + getTargetClientId().hashCode();
            }
            if (hasMaxReadTimestamp()) {
                hashCode = (((hashCode * 37) + 21) * 53) + Internal.hashLong(getMaxReadTimestamp());
            }
            if (hasMaxAckTimestamp()) {
                hashCode = (((hashCode * 37) + 22) * 53) + Internal.hashLong(getMaxAckTimestamp());
            }
            if (hasQueryAllMembers()) {
                hashCode = (((hashCode * 37) + 23) * 53) + Internal.hashBoolean(getQueryAllMembers());
            }
            if (getMaxReadTuplesCount() > 0) {
                hashCode = (((hashCode * 37) + 24) * 53) + getMaxReadTuplesList().hashCode();
            }
            if (getCidsCount() > 0) {
                hashCode = (((hashCode * 37) + 25) * 53) + getCidsList().hashCode();
            }
            if (hasInfo()) {
                hashCode = (((hashCode * 37) + 26) * 53) + getInfo().hashCode();
            }
            if (hasTempConv()) {
                hashCode = (((hashCode * 37) + 27) * 53) + Internal.hashBoolean(getTempConv());
            }
            if (hasTempConvTTL()) {
                hashCode = (((hashCode * 37) + 28) * 53) + getTempConvTTL();
            }
            if (getTempConvIdsCount() > 0) {
                hashCode = (((hashCode * 37) + 29) * 53) + getTempConvIdsList().hashCode();
            }
            if (getAllowedPidsCount() > 0) {
                hashCode = (((hashCode * 37) + 30) * 53) + getAllowedPidsList().hashCode();
            }
            if (getFailedPidsCount() > 0) {
                hashCode = (((hashCode * 37) + 31) * 53) + getFailedPidsList().hashCode();
            }
            if (hasNext()) {
                hashCode = (((hashCode * 37) + 40) * 53) + getNext().hashCode();
            }
            if (hasResults()) {
                hashCode = (((hashCode * 37) + 100) * 53) + getResults().hashCode();
            }
            if (hasWhere()) {
                hashCode = (((hashCode * 37) + 101) * 53) + getWhere().hashCode();
            }
            if (hasAttr()) {
                hashCode = (((hashCode * 37) + 103) * 53) + getAttr().hashCode();
            }
            int hashCode2 = (hashCode * 29) + this.unknownFields.hashCode();
            this.memoizedHashCode = hashCode2;
            return hashCode2;
        }

        public static ConvCommand parseFrom(ByteBuffer byteBuffer) throws InvalidProtocolBufferException {
            return (ConvCommand) PARSER.parseFrom(byteBuffer);
        }

        public static ConvCommand parseFrom(ByteBuffer byteBuffer, ExtensionRegistryLite extensionRegistryLite) throws InvalidProtocolBufferException {
            return (ConvCommand) PARSER.parseFrom(byteBuffer, extensionRegistryLite);
        }

        public static ConvCommand parseFrom(ByteString byteString) throws InvalidProtocolBufferException {
            return (ConvCommand) PARSER.parseFrom(byteString);
        }

        public static ConvCommand parseFrom(ByteString byteString, ExtensionRegistryLite extensionRegistryLite) throws InvalidProtocolBufferException {
            return (ConvCommand) PARSER.parseFrom(byteString, extensionRegistryLite);
        }

        public static ConvCommand parseFrom(byte[] bArr) throws InvalidProtocolBufferException {
            return (ConvCommand) PARSER.parseFrom(bArr);
        }

        public static ConvCommand parseFrom(byte[] bArr, ExtensionRegistryLite extensionRegistryLite) throws InvalidProtocolBufferException {
            return (ConvCommand) PARSER.parseFrom(bArr, extensionRegistryLite);
        }

        public static ConvCommand parseFrom(InputStream inputStream) throws IOException {
            return (ConvCommand) GeneratedMessageV3.parseWithIOException(PARSER, inputStream);
        }

        public static ConvCommand parseFrom(InputStream inputStream, ExtensionRegistryLite extensionRegistryLite) throws IOException {
            return (ConvCommand) GeneratedMessageV3.parseWithIOException(PARSER, inputStream, extensionRegistryLite);
        }

        public static ConvCommand parseDelimitedFrom(InputStream inputStream) throws IOException {
            return (ConvCommand) GeneratedMessageV3.parseDelimitedWithIOException(PARSER, inputStream);
        }

        public static ConvCommand parseDelimitedFrom(InputStream inputStream, ExtensionRegistryLite extensionRegistryLite) throws IOException {
            return (ConvCommand) GeneratedMessageV3.parseDelimitedWithIOException(PARSER, inputStream, extensionRegistryLite);
        }

        public static ConvCommand parseFrom(CodedInputStream codedInputStream) throws IOException {
            return (ConvCommand) GeneratedMessageV3.parseWithIOException(PARSER, codedInputStream);
        }

        public static ConvCommand parseFrom(CodedInputStream codedInputStream, ExtensionRegistryLite extensionRegistryLite) throws IOException {
            return (ConvCommand) GeneratedMessageV3.parseWithIOException(PARSER, codedInputStream, extensionRegistryLite);
        }

        public Builder newBuilderForType() {
            return newBuilder();
        }

        public static Builder newBuilder() {
            return DEFAULT_INSTANCE.toBuilder();
        }

        public static Builder newBuilder(ConvCommand convCommand) {
            return DEFAULT_INSTANCE.toBuilder().mergeFrom(convCommand);
        }

        public Builder toBuilder() {
            if (this == DEFAULT_INSTANCE) {
                return new Builder();
            }
            return new Builder().mergeFrom(this);
        }

        /* access modifiers changed from: protected */
        public Builder newBuilderForType(BuilderParent builderParent) {
            return new Builder(builderParent);
        }

        public static ConvCommand getDefaultInstance() {
            return DEFAULT_INSTANCE;
        }

        public static Parser<ConvCommand> parser() {
            return PARSER;
        }

        public Parser<ConvCommand> getParserForType() {
            return PARSER;
        }

        public ConvCommand getDefaultInstanceForType() {
            return DEFAULT_INSTANCE;
        }
    }

    public interface ConvCommandOrBuilder extends MessageOrBuilder {
        String getAllowedPids(int i);

        ByteString getAllowedPidsBytes(int i);

        int getAllowedPidsCount();

        List<String> getAllowedPidsList();

        JsonObjectMessage getAttr();

        JsonObjectMessageOrBuilder getAttrOrBuilder();

        String getCdate();

        ByteString getCdateBytes();

        String getCid();

        ByteString getCidBytes();

        String getCids(int i);

        ByteString getCidsBytes(int i);

        int getCidsCount();

        List<String> getCidsList();

        int getCount();

        ErrorCommand getFailedPids(int i);

        int getFailedPidsCount();

        List<ErrorCommand> getFailedPidsList();

        ErrorCommandOrBuilder getFailedPidsOrBuilder(int i);

        List<? extends ErrorCommandOrBuilder> getFailedPidsOrBuilderList();

        int getFlag();

        ConvMemberInfo getInfo();

        ConvMemberInfoOrBuilder getInfoOrBuilder();

        String getInitBy();

        ByteString getInitByBytes();

        int getLimit();

        String getM(int i);

        ByteString getMBytes(int i);

        int getMCount();

        List<String> getMList();

        long getMaxAckTimestamp();

        long getMaxReadTimestamp();

        MaxReadTuple getMaxReadTuples(int i);

        int getMaxReadTuplesCount();

        List<MaxReadTuple> getMaxReadTuplesList();

        MaxReadTupleOrBuilder getMaxReadTuplesOrBuilder(int i);

        List<? extends MaxReadTupleOrBuilder> getMaxReadTuplesOrBuilderList();

        String getN();

        ByteString getNBytes();

        String getNext();

        ByteString getNextBytes();

        boolean getQueryAllMembers();

        JsonObjectMessage getResults();

        JsonObjectMessageOrBuilder getResultsOrBuilder();

        String getS();

        ByteString getSBytes();

        int getSkip();

        String getSort();

        ByteString getSortBytes();

        boolean getStatusPub();

        boolean getStatusSub();

        int getStatusTTL();

        long getT();

        String getTargetClientId();

        ByteString getTargetClientIdBytes();

        boolean getTempConv();

        String getTempConvIds(int i);

        ByteString getTempConvIdsBytes(int i);

        int getTempConvIdsCount();

        List<String> getTempConvIdsList();

        int getTempConvTTL();

        boolean getTransient();

        String getUdate();

        ByteString getUdateBytes();

        boolean getUnique();

        String getUniqueId();

        ByteString getUniqueIdBytes();

        JsonObjectMessage getWhere();

        JsonObjectMessageOrBuilder getWhereOrBuilder();

        boolean hasAttr();

        boolean hasCdate();

        boolean hasCid();

        boolean hasCount();

        boolean hasFlag();

        boolean hasInfo();

        boolean hasInitBy();

        boolean hasLimit();

        boolean hasMaxAckTimestamp();

        boolean hasMaxReadTimestamp();

        boolean hasN();

        boolean hasNext();

        boolean hasQueryAllMembers();

        boolean hasResults();

        boolean hasS();

        boolean hasSkip();

        boolean hasSort();

        boolean hasStatusPub();

        boolean hasStatusSub();

        boolean hasStatusTTL();

        boolean hasT();

        boolean hasTargetClientId();

        boolean hasTempConv();

        boolean hasTempConvTTL();

        boolean hasTransient();

        boolean hasUdate();

        boolean hasUnique();

        boolean hasUniqueId();

        boolean hasWhere();
    }

    public static final class ConvMemberInfo extends GeneratedMessageV3 implements ConvMemberInfoOrBuilder {
        private static final ConvMemberInfo DEFAULT_INSTANCE = new ConvMemberInfo();
        public static final int INFOID_FIELD_NUMBER = 3;
        @Deprecated
        public static final Parser<ConvMemberInfo> PARSER = new AbstractParser<ConvMemberInfo>() {
            public ConvMemberInfo parsePartialFrom(CodedInputStream codedInputStream, ExtensionRegistryLite extensionRegistryLite) throws InvalidProtocolBufferException {
                return new ConvMemberInfo(codedInputStream, extensionRegistryLite);
            }
        };
        public static final int PID_FIELD_NUMBER = 1;
        public static final int ROLE_FIELD_NUMBER = 2;
        private static final long serialVersionUID = 0;
        /* access modifiers changed from: private */
        public int bitField0_;
        /* access modifiers changed from: private */
        public volatile Object infoId_;
        private byte memoizedIsInitialized;
        /* access modifiers changed from: private */
        public volatile Object pid_;
        /* access modifiers changed from: private */
        public volatile Object role_;

        public static final class Builder extends com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements ConvMemberInfoOrBuilder {
            private int bitField0_;
            private Object infoId_;
            private Object pid_;
            private Object role_;

            public final boolean isInitialized() {
                return true;
            }

            public static final Descriptor getDescriptor() {
                return Messages.internal_static_com_avos_avoscloud_ConvMemberInfo_descriptor;
            }

            /* access modifiers changed from: protected */
            public FieldAccessorTable internalGetFieldAccessorTable() {
                return Messages.internal_static_com_avos_avoscloud_ConvMemberInfo_fieldAccessorTable.ensureFieldAccessorsInitialized(ConvMemberInfo.class, Builder.class);
            }

            private Builder() {
                String str = "";
                this.pid_ = str;
                this.role_ = str;
                this.infoId_ = str;
                maybeForceBuilderInitialization();
            }

            private Builder(BuilderParent builderParent) {
                super(builderParent);
                String str = "";
                this.pid_ = str;
                this.role_ = str;
                this.infoId_ = str;
                maybeForceBuilderInitialization();
            }

            private void maybeForceBuilderInitialization() {
                ConvMemberInfo.alwaysUseFieldBuilders;
            }

            public Builder clear() {
                super.clear();
                String str = "";
                this.pid_ = str;
                this.bitField0_ &= -2;
                this.role_ = str;
                this.bitField0_ &= -3;
                this.infoId_ = str;
                this.bitField0_ &= -5;
                return this;
            }

            public Descriptor getDescriptorForType() {
                return Messages.internal_static_com_avos_avoscloud_ConvMemberInfo_descriptor;
            }

            public ConvMemberInfo getDefaultInstanceForType() {
                return ConvMemberInfo.getDefaultInstance();
            }

            public ConvMemberInfo build() {
                ConvMemberInfo buildPartial = buildPartial();
                if (buildPartial.isInitialized()) {
                    return buildPartial;
                }
                throw newUninitializedMessageException(buildPartial);
            }

            public ConvMemberInfo buildPartial() {
                ConvMemberInfo convMemberInfo = new ConvMemberInfo((com.google.protobuf.GeneratedMessageV3.Builder) this);
                int i = this.bitField0_;
                int i2 = 1;
                if ((i & 1) != 1) {
                    i2 = 0;
                }
                convMemberInfo.pid_ = this.pid_;
                if ((i & 2) == 2) {
                    i2 |= 2;
                }
                convMemberInfo.role_ = this.role_;
                if ((i & 4) == 4) {
                    i2 |= 4;
                }
                convMemberInfo.infoId_ = this.infoId_;
                convMemberInfo.bitField0_ = i2;
                onBuilt();
                return convMemberInfo;
            }

            public Builder clone() {
                return (Builder) super.clone();
            }

            public Builder setField(FieldDescriptor fieldDescriptor, Object obj) {
                return (Builder) super.setField(fieldDescriptor, obj);
            }

            public Builder clearField(FieldDescriptor fieldDescriptor) {
                return (Builder) super.clearField(fieldDescriptor);
            }

            public Builder clearOneof(OneofDescriptor oneofDescriptor) {
                return (Builder) super.clearOneof(oneofDescriptor);
            }

            public Builder setRepeatedField(FieldDescriptor fieldDescriptor, int i, Object obj) {
                return (Builder) super.setRepeatedField(fieldDescriptor, i, obj);
            }

            public Builder addRepeatedField(FieldDescriptor fieldDescriptor, Object obj) {
                return (Builder) super.addRepeatedField(fieldDescriptor, obj);
            }

            public Builder mergeFrom(Message message) {
                if (message instanceof ConvMemberInfo) {
                    return mergeFrom((ConvMemberInfo) message);
                }
                super.mergeFrom(message);
                return this;
            }

            public Builder mergeFrom(ConvMemberInfo convMemberInfo) {
                if (convMemberInfo == ConvMemberInfo.getDefaultInstance()) {
                    return this;
                }
                if (convMemberInfo.hasPid()) {
                    this.bitField0_ |= 1;
                    this.pid_ = convMemberInfo.pid_;
                    onChanged();
                }
                if (convMemberInfo.hasRole()) {
                    this.bitField0_ |= 2;
                    this.role_ = convMemberInfo.role_;
                    onChanged();
                }
                if (convMemberInfo.hasInfoId()) {
                    this.bitField0_ |= 4;
                    this.infoId_ = convMemberInfo.infoId_;
                    onChanged();
                }
                mergeUnknownFields(convMemberInfo.unknownFields);
                onChanged();
                return this;
            }

            /* JADX WARNING: Removed duplicated region for block: B:16:0x0021  */
            /* Code decompiled incorrectly, please refer to instructions dump. */
            public com.avos.avoscloud.Messages.ConvMemberInfo.Builder mergeFrom(com.google.protobuf.CodedInputStream r3, com.google.protobuf.ExtensionRegistryLite r4) throws java.io.IOException {
                /*
                    r2 = this;
                    r0 = 0
                    com.google.protobuf.Parser<com.avos.avoscloud.Messages$ConvMemberInfo> r1 = com.avos.avoscloud.Messages.ConvMemberInfo.PARSER     // Catch:{ InvalidProtocolBufferException -> 0x0011 }
                    java.lang.Object r3 = r1.parsePartialFrom(r3, r4)     // Catch:{ InvalidProtocolBufferException -> 0x0011 }
                    com.avos.avoscloud.Messages$ConvMemberInfo r3 = (com.avos.avoscloud.Messages.ConvMemberInfo) r3     // Catch:{ InvalidProtocolBufferException -> 0x0011 }
                    if (r3 == 0) goto L_0x000e
                    r2.mergeFrom(r3)
                L_0x000e:
                    return r2
                L_0x000f:
                    r3 = move-exception
                    goto L_0x001f
                L_0x0011:
                    r3 = move-exception
                    com.google.protobuf.MessageLite r4 = r3.getUnfinishedMessage()     // Catch:{ all -> 0x000f }
                    com.avos.avoscloud.Messages$ConvMemberInfo r4 = (com.avos.avoscloud.Messages.ConvMemberInfo) r4     // Catch:{ all -> 0x000f }
                    java.io.IOException r3 = r3.unwrapIOException()     // Catch:{ all -> 0x001d }
                    throw r3     // Catch:{ all -> 0x001d }
                L_0x001d:
                    r3 = move-exception
                    r0 = r4
                L_0x001f:
                    if (r0 == 0) goto L_0x0024
                    r2.mergeFrom(r0)
                L_0x0024:
                    throw r3
                */
                throw new UnsupportedOperationException("Method not decompiled: com.avos.avoscloud.Messages.ConvMemberInfo.Builder.mergeFrom(com.google.protobuf.CodedInputStream, com.google.protobuf.ExtensionRegistryLite):com.avos.avoscloud.Messages$ConvMemberInfo$Builder");
            }

            public boolean hasPid() {
                return (this.bitField0_ & 1) == 1;
            }

            public String getPid() {
                Object obj = this.pid_;
                if (obj instanceof String) {
                    return (String) obj;
                }
                ByteString byteString = (ByteString) obj;
                String stringUtf8 = byteString.toStringUtf8();
                if (byteString.isValidUtf8()) {
                    this.pid_ = stringUtf8;
                }
                return stringUtf8;
            }

            public ByteString getPidBytes() {
                Object obj = this.pid_;
                if (!(obj instanceof String)) {
                    return (ByteString) obj;
                }
                ByteString copyFromUtf8 = ByteString.copyFromUtf8((String) obj);
                this.pid_ = copyFromUtf8;
                return copyFromUtf8;
            }

            public Builder setPid(String str) {
                if (str != null) {
                    this.bitField0_ |= 1;
                    this.pid_ = str;
                    onChanged();
                    return this;
                }
                throw new NullPointerException();
            }

            public Builder clearPid() {
                this.bitField0_ &= -2;
                this.pid_ = ConvMemberInfo.getDefaultInstance().getPid();
                onChanged();
                return this;
            }

            public Builder setPidBytes(ByteString byteString) {
                if (byteString != null) {
                    this.bitField0_ |= 1;
                    this.pid_ = byteString;
                    onChanged();
                    return this;
                }
                throw new NullPointerException();
            }

            public boolean hasRole() {
                return (this.bitField0_ & 2) == 2;
            }

            public String getRole() {
                Object obj = this.role_;
                if (obj instanceof String) {
                    return (String) obj;
                }
                ByteString byteString = (ByteString) obj;
                String stringUtf8 = byteString.toStringUtf8();
                if (byteString.isValidUtf8()) {
                    this.role_ = stringUtf8;
                }
                return stringUtf8;
            }

            public ByteString getRoleBytes() {
                Object obj = this.role_;
                if (!(obj instanceof String)) {
                    return (ByteString) obj;
                }
                ByteString copyFromUtf8 = ByteString.copyFromUtf8((String) obj);
                this.role_ = copyFromUtf8;
                return copyFromUtf8;
            }

            public Builder setRole(String str) {
                if (str != null) {
                    this.bitField0_ |= 2;
                    this.role_ = str;
                    onChanged();
                    return this;
                }
                throw new NullPointerException();
            }

            public Builder clearRole() {
                this.bitField0_ &= -3;
                this.role_ = ConvMemberInfo.getDefaultInstance().getRole();
                onChanged();
                return this;
            }

            public Builder setRoleBytes(ByteString byteString) {
                if (byteString != null) {
                    this.bitField0_ |= 2;
                    this.role_ = byteString;
                    onChanged();
                    return this;
                }
                throw new NullPointerException();
            }

            public boolean hasInfoId() {
                return (this.bitField0_ & 4) == 4;
            }

            public String getInfoId() {
                Object obj = this.infoId_;
                if (obj instanceof String) {
                    return (String) obj;
                }
                ByteString byteString = (ByteString) obj;
                String stringUtf8 = byteString.toStringUtf8();
                if (byteString.isValidUtf8()) {
                    this.infoId_ = stringUtf8;
                }
                return stringUtf8;
            }

            public ByteString getInfoIdBytes() {
                Object obj = this.infoId_;
                if (!(obj instanceof String)) {
                    return (ByteString) obj;
                }
                ByteString copyFromUtf8 = ByteString.copyFromUtf8((String) obj);
                this.infoId_ = copyFromUtf8;
                return copyFromUtf8;
            }

            public Builder setInfoId(String str) {
                if (str != null) {
                    this.bitField0_ |= 4;
                    this.infoId_ = str;
                    onChanged();
                    return this;
                }
                throw new NullPointerException();
            }

            public Builder clearInfoId() {
                this.bitField0_ &= -5;
                this.infoId_ = ConvMemberInfo.getDefaultInstance().getInfoId();
                onChanged();
                return this;
            }

            public Builder setInfoIdBytes(ByteString byteString) {
                if (byteString != null) {
                    this.bitField0_ |= 4;
                    this.infoId_ = byteString;
                    onChanged();
                    return this;
                }
                throw new NullPointerException();
            }

            public final Builder setUnknownFields(UnknownFieldSet unknownFieldSet) {
                return (Builder) super.setUnknownFields(unknownFieldSet);
            }

            public final Builder mergeUnknownFields(UnknownFieldSet unknownFieldSet) {
                return (Builder) super.mergeUnknownFields(unknownFieldSet);
            }
        }

        private ConvMemberInfo(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
            super(builder);
            this.memoizedIsInitialized = -1;
        }

        private ConvMemberInfo() {
            this.memoizedIsInitialized = -1;
            String str = "";
            this.pid_ = str;
            this.role_ = str;
            this.infoId_ = str;
        }

        public final UnknownFieldSet getUnknownFields() {
            return this.unknownFields;
        }

        private ConvMemberInfo(CodedInputStream codedInputStream, ExtensionRegistryLite extensionRegistryLite) throws InvalidProtocolBufferException {
            this();
            com.google.protobuf.UnknownFieldSet.Builder newBuilder = UnknownFieldSet.newBuilder();
            boolean z = false;
            while (!z) {
                try {
                    int readTag = codedInputStream.readTag();
                    if (readTag != 0) {
                        if (readTag == 10) {
                            ByteString readBytes = codedInputStream.readBytes();
                            this.bitField0_ = 1 | this.bitField0_;
                            this.pid_ = readBytes;
                        } else if (readTag == 18) {
                            ByteString readBytes2 = codedInputStream.readBytes();
                            this.bitField0_ |= 2;
                            this.role_ = readBytes2;
                        } else if (readTag == 26) {
                            ByteString readBytes3 = codedInputStream.readBytes();
                            this.bitField0_ |= 4;
                            this.infoId_ = readBytes3;
                        } else if (!parseUnknownField(codedInputStream, newBuilder, extensionRegistryLite, readTag)) {
                        }
                    }
                    z = true;
                } catch (InvalidProtocolBufferException e) {
                    throw e.setUnfinishedMessage(this);
                } catch (IOException e2) {
                    throw new InvalidProtocolBufferException(e2).setUnfinishedMessage(this);
                } catch (Throwable th) {
                    this.unknownFields = newBuilder.build();
                    makeExtensionsImmutable();
                    throw th;
                }
            }
            this.unknownFields = newBuilder.build();
            makeExtensionsImmutable();
        }

        public static final Descriptor getDescriptor() {
            return Messages.internal_static_com_avos_avoscloud_ConvMemberInfo_descriptor;
        }

        /* access modifiers changed from: protected */
        public FieldAccessorTable internalGetFieldAccessorTable() {
            return Messages.internal_static_com_avos_avoscloud_ConvMemberInfo_fieldAccessorTable.ensureFieldAccessorsInitialized(ConvMemberInfo.class, Builder.class);
        }

        public boolean hasPid() {
            return (this.bitField0_ & 1) == 1;
        }

        public String getPid() {
            Object obj = this.pid_;
            if (obj instanceof String) {
                return (String) obj;
            }
            ByteString byteString = (ByteString) obj;
            String stringUtf8 = byteString.toStringUtf8();
            if (byteString.isValidUtf8()) {
                this.pid_ = stringUtf8;
            }
            return stringUtf8;
        }

        public ByteString getPidBytes() {
            Object obj = this.pid_;
            if (!(obj instanceof String)) {
                return (ByteString) obj;
            }
            ByteString copyFromUtf8 = ByteString.copyFromUtf8((String) obj);
            this.pid_ = copyFromUtf8;
            return copyFromUtf8;
        }

        public boolean hasRole() {
            return (this.bitField0_ & 2) == 2;
        }

        public String getRole() {
            Object obj = this.role_;
            if (obj instanceof String) {
                return (String) obj;
            }
            ByteString byteString = (ByteString) obj;
            String stringUtf8 = byteString.toStringUtf8();
            if (byteString.isValidUtf8()) {
                this.role_ = stringUtf8;
            }
            return stringUtf8;
        }

        public ByteString getRoleBytes() {
            Object obj = this.role_;
            if (!(obj instanceof String)) {
                return (ByteString) obj;
            }
            ByteString copyFromUtf8 = ByteString.copyFromUtf8((String) obj);
            this.role_ = copyFromUtf8;
            return copyFromUtf8;
        }

        public boolean hasInfoId() {
            return (this.bitField0_ & 4) == 4;
        }

        public String getInfoId() {
            Object obj = this.infoId_;
            if (obj instanceof String) {
                return (String) obj;
            }
            ByteString byteString = (ByteString) obj;
            String stringUtf8 = byteString.toStringUtf8();
            if (byteString.isValidUtf8()) {
                this.infoId_ = stringUtf8;
            }
            return stringUtf8;
        }

        public ByteString getInfoIdBytes() {
            Object obj = this.infoId_;
            if (!(obj instanceof String)) {
                return (ByteString) obj;
            }
            ByteString copyFromUtf8 = ByteString.copyFromUtf8((String) obj);
            this.infoId_ = copyFromUtf8;
            return copyFromUtf8;
        }

        public final boolean isInitialized() {
            byte b = this.memoizedIsInitialized;
            if (b == 1) {
                return true;
            }
            if (b == 0) {
                return false;
            }
            this.memoizedIsInitialized = 1;
            return true;
        }

        public void writeTo(CodedOutputStream codedOutputStream) throws IOException {
            if ((this.bitField0_ & 1) == 1) {
                GeneratedMessageV3.writeString(codedOutputStream, 1, this.pid_);
            }
            if ((this.bitField0_ & 2) == 2) {
                GeneratedMessageV3.writeString(codedOutputStream, 2, this.role_);
            }
            if ((this.bitField0_ & 4) == 4) {
                GeneratedMessageV3.writeString(codedOutputStream, 3, this.infoId_);
            }
            this.unknownFields.writeTo(codedOutputStream);
        }

        public int getSerializedSize() {
            int i = this.memoizedSize;
            if (i != -1) {
                return i;
            }
            int i2 = 0;
            if ((this.bitField0_ & 1) == 1) {
                i2 = 0 + GeneratedMessageV3.computeStringSize(1, this.pid_);
            }
            if ((this.bitField0_ & 2) == 2) {
                i2 += GeneratedMessageV3.computeStringSize(2, this.role_);
            }
            if ((this.bitField0_ & 4) == 4) {
                i2 += GeneratedMessageV3.computeStringSize(3, this.infoId_);
            }
            int serializedSize = i2 + this.unknownFields.getSerializedSize();
            this.memoizedSize = serializedSize;
            return serializedSize;
        }

        public boolean equals(Object obj) {
            boolean z = true;
            if (obj == this) {
                return true;
            }
            if (!(obj instanceof ConvMemberInfo)) {
                return super.equals(obj);
            }
            ConvMemberInfo convMemberInfo = (ConvMemberInfo) obj;
            boolean z2 = hasPid() == convMemberInfo.hasPid();
            if (hasPid()) {
                z2 = z2 && getPid().equals(convMemberInfo.getPid());
            }
            boolean z3 = z2 && hasRole() == convMemberInfo.hasRole();
            if (hasRole()) {
                z3 = z3 && getRole().equals(convMemberInfo.getRole());
            }
            boolean z4 = z3 && hasInfoId() == convMemberInfo.hasInfoId();
            if (hasInfoId()) {
                z4 = z4 && getInfoId().equals(convMemberInfo.getInfoId());
            }
            if (!z4 || !this.unknownFields.equals(convMemberInfo.unknownFields)) {
                z = false;
            }
            return z;
        }

        public int hashCode() {
            if (this.memoizedHashCode != 0) {
                return this.memoizedHashCode;
            }
            int hashCode = 779 + getDescriptor().hashCode();
            if (hasPid()) {
                hashCode = (((hashCode * 37) + 1) * 53) + getPid().hashCode();
            }
            if (hasRole()) {
                hashCode = (((hashCode * 37) + 2) * 53) + getRole().hashCode();
            }
            if (hasInfoId()) {
                hashCode = (((hashCode * 37) + 3) * 53) + getInfoId().hashCode();
            }
            int hashCode2 = (hashCode * 29) + this.unknownFields.hashCode();
            this.memoizedHashCode = hashCode2;
            return hashCode2;
        }

        public static ConvMemberInfo parseFrom(ByteBuffer byteBuffer) throws InvalidProtocolBufferException {
            return (ConvMemberInfo) PARSER.parseFrom(byteBuffer);
        }

        public static ConvMemberInfo parseFrom(ByteBuffer byteBuffer, ExtensionRegistryLite extensionRegistryLite) throws InvalidProtocolBufferException {
            return (ConvMemberInfo) PARSER.parseFrom(byteBuffer, extensionRegistryLite);
        }

        public static ConvMemberInfo parseFrom(ByteString byteString) throws InvalidProtocolBufferException {
            return (ConvMemberInfo) PARSER.parseFrom(byteString);
        }

        public static ConvMemberInfo parseFrom(ByteString byteString, ExtensionRegistryLite extensionRegistryLite) throws InvalidProtocolBufferException {
            return (ConvMemberInfo) PARSER.parseFrom(byteString, extensionRegistryLite);
        }

        public static ConvMemberInfo parseFrom(byte[] bArr) throws InvalidProtocolBufferException {
            return (ConvMemberInfo) PARSER.parseFrom(bArr);
        }

        public static ConvMemberInfo parseFrom(byte[] bArr, ExtensionRegistryLite extensionRegistryLite) throws InvalidProtocolBufferException {
            return (ConvMemberInfo) PARSER.parseFrom(bArr, extensionRegistryLite);
        }

        public static ConvMemberInfo parseFrom(InputStream inputStream) throws IOException {
            return (ConvMemberInfo) GeneratedMessageV3.parseWithIOException(PARSER, inputStream);
        }

        public static ConvMemberInfo parseFrom(InputStream inputStream, ExtensionRegistryLite extensionRegistryLite) throws IOException {
            return (ConvMemberInfo) GeneratedMessageV3.parseWithIOException(PARSER, inputStream, extensionRegistryLite);
        }

        public static ConvMemberInfo parseDelimitedFrom(InputStream inputStream) throws IOException {
            return (ConvMemberInfo) GeneratedMessageV3.parseDelimitedWithIOException(PARSER, inputStream);
        }

        public static ConvMemberInfo parseDelimitedFrom(InputStream inputStream, ExtensionRegistryLite extensionRegistryLite) throws IOException {
            return (ConvMemberInfo) GeneratedMessageV3.parseDelimitedWithIOException(PARSER, inputStream, extensionRegistryLite);
        }

        public static ConvMemberInfo parseFrom(CodedInputStream codedInputStream) throws IOException {
            return (ConvMemberInfo) GeneratedMessageV3.parseWithIOException(PARSER, codedInputStream);
        }

        public static ConvMemberInfo parseFrom(CodedInputStream codedInputStream, ExtensionRegistryLite extensionRegistryLite) throws IOException {
            return (ConvMemberInfo) GeneratedMessageV3.parseWithIOException(PARSER, codedInputStream, extensionRegistryLite);
        }

        public Builder newBuilderForType() {
            return newBuilder();
        }

        public static Builder newBuilder() {
            return DEFAULT_INSTANCE.toBuilder();
        }

        public static Builder newBuilder(ConvMemberInfo convMemberInfo) {
            return DEFAULT_INSTANCE.toBuilder().mergeFrom(convMemberInfo);
        }

        public Builder toBuilder() {
            if (this == DEFAULT_INSTANCE) {
                return new Builder();
            }
            return new Builder().mergeFrom(this);
        }

        /* access modifiers changed from: protected */
        public Builder newBuilderForType(BuilderParent builderParent) {
            return new Builder(builderParent);
        }

        public static ConvMemberInfo getDefaultInstance() {
            return DEFAULT_INSTANCE;
        }

        public static Parser<ConvMemberInfo> parser() {
            return PARSER;
        }

        public Parser<ConvMemberInfo> getParserForType() {
            return PARSER;
        }

        public ConvMemberInfo getDefaultInstanceForType() {
            return DEFAULT_INSTANCE;
        }
    }

    public interface ConvMemberInfoOrBuilder extends MessageOrBuilder {
        String getInfoId();

        ByteString getInfoIdBytes();

        String getPid();

        ByteString getPidBytes();

        String getRole();

        ByteString getRoleBytes();

        boolean hasInfoId();

        boolean hasPid();

        boolean hasRole();
    }

    public static final class DataCommand extends GeneratedMessageV3 implements DataCommandOrBuilder {
        private static final DataCommand DEFAULT_INSTANCE = new DataCommand();
        public static final int IDS_FIELD_NUMBER = 1;
        public static final int MSG_FIELD_NUMBER = 2;
        public static final int OFFLINE_FIELD_NUMBER = 3;
        @Deprecated
        public static final Parser<DataCommand> PARSER = new AbstractParser<DataCommand>() {
            public DataCommand parsePartialFrom(CodedInputStream codedInputStream, ExtensionRegistryLite extensionRegistryLite) throws InvalidProtocolBufferException {
                return new DataCommand(codedInputStream, extensionRegistryLite);
            }
        };
        private static final long serialVersionUID = 0;
        /* access modifiers changed from: private */
        public int bitField0_;
        /* access modifiers changed from: private */
        public LazyStringList ids_;
        private byte memoizedIsInitialized;
        /* access modifiers changed from: private */
        public List<JsonObjectMessage> msg_;
        /* access modifiers changed from: private */
        public boolean offline_;

        public static final class Builder extends com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements DataCommandOrBuilder {
            private int bitField0_;
            private LazyStringList ids_;
            private RepeatedFieldBuilderV3<JsonObjectMessage, Builder, JsonObjectMessageOrBuilder> msgBuilder_;
            private List<JsonObjectMessage> msg_;
            private boolean offline_;

            public static final Descriptor getDescriptor() {
                return Messages.internal_static_com_avos_avoscloud_DataCommand_descriptor;
            }

            /* access modifiers changed from: protected */
            public FieldAccessorTable internalGetFieldAccessorTable() {
                return Messages.internal_static_com_avos_avoscloud_DataCommand_fieldAccessorTable.ensureFieldAccessorsInitialized(DataCommand.class, Builder.class);
            }

            private Builder() {
                this.ids_ = LazyStringArrayList.EMPTY;
                this.msg_ = Collections.emptyList();
                maybeForceBuilderInitialization();
            }

            private Builder(BuilderParent builderParent) {
                super(builderParent);
                this.ids_ = LazyStringArrayList.EMPTY;
                this.msg_ = Collections.emptyList();
                maybeForceBuilderInitialization();
            }

            private void maybeForceBuilderInitialization() {
                if (DataCommand.alwaysUseFieldBuilders) {
                    getMsgFieldBuilder();
                }
            }

            public Builder clear() {
                super.clear();
                this.ids_ = LazyStringArrayList.EMPTY;
                this.bitField0_ &= -2;
                RepeatedFieldBuilderV3<JsonObjectMessage, Builder, JsonObjectMessageOrBuilder> repeatedFieldBuilderV3 = this.msgBuilder_;
                if (repeatedFieldBuilderV3 == null) {
                    this.msg_ = Collections.emptyList();
                    this.bitField0_ &= -3;
                } else {
                    repeatedFieldBuilderV3.clear();
                }
                this.offline_ = false;
                this.bitField0_ &= -5;
                return this;
            }

            public Descriptor getDescriptorForType() {
                return Messages.internal_static_com_avos_avoscloud_DataCommand_descriptor;
            }

            public DataCommand getDefaultInstanceForType() {
                return DataCommand.getDefaultInstance();
            }

            public DataCommand build() {
                DataCommand buildPartial = buildPartial();
                if (buildPartial.isInitialized()) {
                    return buildPartial;
                }
                throw newUninitializedMessageException(buildPartial);
            }

            public DataCommand buildPartial() {
                DataCommand dataCommand = new DataCommand((com.google.protobuf.GeneratedMessageV3.Builder) this);
                int i = this.bitField0_;
                int i2 = 1;
                if ((i & 1) == 1) {
                    this.ids_ = this.ids_.getUnmodifiableView();
                    this.bitField0_ &= -2;
                }
                dataCommand.ids_ = this.ids_;
                RepeatedFieldBuilderV3<JsonObjectMessage, Builder, JsonObjectMessageOrBuilder> repeatedFieldBuilderV3 = this.msgBuilder_;
                if (repeatedFieldBuilderV3 == null) {
                    if ((this.bitField0_ & 2) == 2) {
                        this.msg_ = Collections.unmodifiableList(this.msg_);
                        this.bitField0_ &= -3;
                    }
                    dataCommand.msg_ = this.msg_;
                } else {
                    dataCommand.msg_ = repeatedFieldBuilderV3.build();
                }
                if ((i & 4) != 4) {
                    i2 = 0;
                }
                dataCommand.offline_ = this.offline_;
                dataCommand.bitField0_ = i2;
                onBuilt();
                return dataCommand;
            }

            public Builder clone() {
                return (Builder) super.clone();
            }

            public Builder setField(FieldDescriptor fieldDescriptor, Object obj) {
                return (Builder) super.setField(fieldDescriptor, obj);
            }

            public Builder clearField(FieldDescriptor fieldDescriptor) {
                return (Builder) super.clearField(fieldDescriptor);
            }

            public Builder clearOneof(OneofDescriptor oneofDescriptor) {
                return (Builder) super.clearOneof(oneofDescriptor);
            }

            public Builder setRepeatedField(FieldDescriptor fieldDescriptor, int i, Object obj) {
                return (Builder) super.setRepeatedField(fieldDescriptor, i, obj);
            }

            public Builder addRepeatedField(FieldDescriptor fieldDescriptor, Object obj) {
                return (Builder) super.addRepeatedField(fieldDescriptor, obj);
            }

            public Builder mergeFrom(Message message) {
                if (message instanceof DataCommand) {
                    return mergeFrom((DataCommand) message);
                }
                super.mergeFrom(message);
                return this;
            }

            public Builder mergeFrom(DataCommand dataCommand) {
                if (dataCommand == DataCommand.getDefaultInstance()) {
                    return this;
                }
                if (!dataCommand.ids_.isEmpty()) {
                    if (this.ids_.isEmpty()) {
                        this.ids_ = dataCommand.ids_;
                        this.bitField0_ &= -2;
                    } else {
                        ensureIdsIsMutable();
                        this.ids_.addAll(dataCommand.ids_);
                    }
                    onChanged();
                }
                if (this.msgBuilder_ == null) {
                    if (!dataCommand.msg_.isEmpty()) {
                        if (this.msg_.isEmpty()) {
                            this.msg_ = dataCommand.msg_;
                            this.bitField0_ &= -3;
                        } else {
                            ensureMsgIsMutable();
                            this.msg_.addAll(dataCommand.msg_);
                        }
                        onChanged();
                    }
                } else if (!dataCommand.msg_.isEmpty()) {
                    if (this.msgBuilder_.isEmpty()) {
                        this.msgBuilder_.dispose();
                        RepeatedFieldBuilderV3<JsonObjectMessage, Builder, JsonObjectMessageOrBuilder> repeatedFieldBuilderV3 = null;
                        this.msgBuilder_ = null;
                        this.msg_ = dataCommand.msg_;
                        this.bitField0_ &= -3;
                        if (DataCommand.alwaysUseFieldBuilders) {
                            repeatedFieldBuilderV3 = getMsgFieldBuilder();
                        }
                        this.msgBuilder_ = repeatedFieldBuilderV3;
                    } else {
                        this.msgBuilder_.addAllMessages(dataCommand.msg_);
                    }
                }
                if (dataCommand.hasOffline()) {
                    setOffline(dataCommand.getOffline());
                }
                mergeUnknownFields(dataCommand.unknownFields);
                onChanged();
                return this;
            }

            public final boolean isInitialized() {
                for (int i = 0; i < getMsgCount(); i++) {
                    if (!getMsg(i).isInitialized()) {
                        return false;
                    }
                }
                return true;
            }

            /* JADX WARNING: Removed duplicated region for block: B:16:0x0021  */
            /* Code decompiled incorrectly, please refer to instructions dump. */
            public com.avos.avoscloud.Messages.DataCommand.Builder mergeFrom(com.google.protobuf.CodedInputStream r3, com.google.protobuf.ExtensionRegistryLite r4) throws java.io.IOException {
                /*
                    r2 = this;
                    r0 = 0
                    com.google.protobuf.Parser<com.avos.avoscloud.Messages$DataCommand> r1 = com.avos.avoscloud.Messages.DataCommand.PARSER     // Catch:{ InvalidProtocolBufferException -> 0x0011 }
                    java.lang.Object r3 = r1.parsePartialFrom(r3, r4)     // Catch:{ InvalidProtocolBufferException -> 0x0011 }
                    com.avos.avoscloud.Messages$DataCommand r3 = (com.avos.avoscloud.Messages.DataCommand) r3     // Catch:{ InvalidProtocolBufferException -> 0x0011 }
                    if (r3 == 0) goto L_0x000e
                    r2.mergeFrom(r3)
                L_0x000e:
                    return r2
                L_0x000f:
                    r3 = move-exception
                    goto L_0x001f
                L_0x0011:
                    r3 = move-exception
                    com.google.protobuf.MessageLite r4 = r3.getUnfinishedMessage()     // Catch:{ all -> 0x000f }
                    com.avos.avoscloud.Messages$DataCommand r4 = (com.avos.avoscloud.Messages.DataCommand) r4     // Catch:{ all -> 0x000f }
                    java.io.IOException r3 = r3.unwrapIOException()     // Catch:{ all -> 0x001d }
                    throw r3     // Catch:{ all -> 0x001d }
                L_0x001d:
                    r3 = move-exception
                    r0 = r4
                L_0x001f:
                    if (r0 == 0) goto L_0x0024
                    r2.mergeFrom(r0)
                L_0x0024:
                    throw r3
                */
                throw new UnsupportedOperationException("Method not decompiled: com.avos.avoscloud.Messages.DataCommand.Builder.mergeFrom(com.google.protobuf.CodedInputStream, com.google.protobuf.ExtensionRegistryLite):com.avos.avoscloud.Messages$DataCommand$Builder");
            }

            private void ensureIdsIsMutable() {
                if ((this.bitField0_ & 1) != 1) {
                    this.ids_ = new LazyStringArrayList(this.ids_);
                    this.bitField0_ |= 1;
                }
            }

            public ProtocolStringList getIdsList() {
                return this.ids_.getUnmodifiableView();
            }

            public int getIdsCount() {
                return this.ids_.size();
            }

            public String getIds(int i) {
                return (String) this.ids_.get(i);
            }

            public ByteString getIdsBytes(int i) {
                return this.ids_.getByteString(i);
            }

            public Builder setIds(int i, String str) {
                if (str != null) {
                    ensureIdsIsMutable();
                    this.ids_.set(i, str);
                    onChanged();
                    return this;
                }
                throw new NullPointerException();
            }

            public Builder addIds(String str) {
                if (str != null) {
                    ensureIdsIsMutable();
                    this.ids_.add(str);
                    onChanged();
                    return this;
                }
                throw new NullPointerException();
            }

            public Builder addAllIds(Iterable<String> iterable) {
                ensureIdsIsMutable();
                com.google.protobuf.AbstractMessageLite.Builder.addAll((Iterable) iterable, (List) this.ids_);
                onChanged();
                return this;
            }

            public Builder clearIds() {
                this.ids_ = LazyStringArrayList.EMPTY;
                this.bitField0_ &= -2;
                onChanged();
                return this;
            }

            public Builder addIdsBytes(ByteString byteString) {
                if (byteString != null) {
                    ensureIdsIsMutable();
                    this.ids_.add(byteString);
                    onChanged();
                    return this;
                }
                throw new NullPointerException();
            }

            private void ensureMsgIsMutable() {
                if ((this.bitField0_ & 2) != 2) {
                    this.msg_ = new ArrayList(this.msg_);
                    this.bitField0_ |= 2;
                }
            }

            public List<JsonObjectMessage> getMsgList() {
                RepeatedFieldBuilderV3<JsonObjectMessage, Builder, JsonObjectMessageOrBuilder> repeatedFieldBuilderV3 = this.msgBuilder_;
                if (repeatedFieldBuilderV3 == null) {
                    return Collections.unmodifiableList(this.msg_);
                }
                return repeatedFieldBuilderV3.getMessageList();
            }

            public int getMsgCount() {
                RepeatedFieldBuilderV3<JsonObjectMessage, Builder, JsonObjectMessageOrBuilder> repeatedFieldBuilderV3 = this.msgBuilder_;
                if (repeatedFieldBuilderV3 == null) {
                    return this.msg_.size();
                }
                return repeatedFieldBuilderV3.getCount();
            }

            public JsonObjectMessage getMsg(int i) {
                RepeatedFieldBuilderV3<JsonObjectMessage, Builder, JsonObjectMessageOrBuilder> repeatedFieldBuilderV3 = this.msgBuilder_;
                if (repeatedFieldBuilderV3 == null) {
                    return (JsonObjectMessage) this.msg_.get(i);
                }
                return (JsonObjectMessage) repeatedFieldBuilderV3.getMessage(i);
            }

            public Builder setMsg(int i, JsonObjectMessage jsonObjectMessage) {
                RepeatedFieldBuilderV3<JsonObjectMessage, Builder, JsonObjectMessageOrBuilder> repeatedFieldBuilderV3 = this.msgBuilder_;
                if (repeatedFieldBuilderV3 != null) {
                    repeatedFieldBuilderV3.setMessage(i, jsonObjectMessage);
                } else if (jsonObjectMessage != null) {
                    ensureMsgIsMutable();
                    this.msg_.set(i, jsonObjectMessage);
                    onChanged();
                } else {
                    throw new NullPointerException();
                }
                return this;
            }

            public Builder setMsg(int i, Builder builder) {
                RepeatedFieldBuilderV3<JsonObjectMessage, Builder, JsonObjectMessageOrBuilder> repeatedFieldBuilderV3 = this.msgBuilder_;
                if (repeatedFieldBuilderV3 == null) {
                    ensureMsgIsMutable();
                    this.msg_.set(i, builder.build());
                    onChanged();
                } else {
                    repeatedFieldBuilderV3.setMessage(i, builder.build());
                }
                return this;
            }

            public Builder addMsg(JsonObjectMessage jsonObjectMessage) {
                RepeatedFieldBuilderV3<JsonObjectMessage, Builder, JsonObjectMessageOrBuilder> repeatedFieldBuilderV3 = this.msgBuilder_;
                if (repeatedFieldBuilderV3 != null) {
                    repeatedFieldBuilderV3.addMessage(jsonObjectMessage);
                } else if (jsonObjectMessage != null) {
                    ensureMsgIsMutable();
                    this.msg_.add(jsonObjectMessage);
                    onChanged();
                } else {
                    throw new NullPointerException();
                }
                return this;
            }

            public Builder addMsg(int i, JsonObjectMessage jsonObjectMessage) {
                RepeatedFieldBuilderV3<JsonObjectMessage, Builder, JsonObjectMessageOrBuilder> repeatedFieldBuilderV3 = this.msgBuilder_;
                if (repeatedFieldBuilderV3 != null) {
                    repeatedFieldBuilderV3.addMessage(i, jsonObjectMessage);
                } else if (jsonObjectMessage != null) {
                    ensureMsgIsMutable();
                    this.msg_.add(i, jsonObjectMessage);
                    onChanged();
                } else {
                    throw new NullPointerException();
                }
                return this;
            }

            public Builder addMsg(Builder builder) {
                RepeatedFieldBuilderV3<JsonObjectMessage, Builder, JsonObjectMessageOrBuilder> repeatedFieldBuilderV3 = this.msgBuilder_;
                if (repeatedFieldBuilderV3 == null) {
                    ensureMsgIsMutable();
                    this.msg_.add(builder.build());
                    onChanged();
                } else {
                    repeatedFieldBuilderV3.addMessage(builder.build());
                }
                return this;
            }

            public Builder addMsg(int i, Builder builder) {
                RepeatedFieldBuilderV3<JsonObjectMessage, Builder, JsonObjectMessageOrBuilder> repeatedFieldBuilderV3 = this.msgBuilder_;
                if (repeatedFieldBuilderV3 == null) {
                    ensureMsgIsMutable();
                    this.msg_.add(i, builder.build());
                    onChanged();
                } else {
                    repeatedFieldBuilderV3.addMessage(i, builder.build());
                }
                return this;
            }

            public Builder addAllMsg(Iterable<? extends JsonObjectMessage> iterable) {
                RepeatedFieldBuilderV3<JsonObjectMessage, Builder, JsonObjectMessageOrBuilder> repeatedFieldBuilderV3 = this.msgBuilder_;
                if (repeatedFieldBuilderV3 == null) {
                    ensureMsgIsMutable();
                    com.google.protobuf.AbstractMessageLite.Builder.addAll((Iterable) iterable, (List) this.msg_);
                    onChanged();
                } else {
                    repeatedFieldBuilderV3.addAllMessages(iterable);
                }
                return this;
            }

            public Builder clearMsg() {
                RepeatedFieldBuilderV3<JsonObjectMessage, Builder, JsonObjectMessageOrBuilder> repeatedFieldBuilderV3 = this.msgBuilder_;
                if (repeatedFieldBuilderV3 == null) {
                    this.msg_ = Collections.emptyList();
                    this.bitField0_ &= -3;
                    onChanged();
                } else {
                    repeatedFieldBuilderV3.clear();
                }
                return this;
            }

            public Builder removeMsg(int i) {
                RepeatedFieldBuilderV3<JsonObjectMessage, Builder, JsonObjectMessageOrBuilder> repeatedFieldBuilderV3 = this.msgBuilder_;
                if (repeatedFieldBuilderV3 == null) {
                    ensureMsgIsMutable();
                    this.msg_.remove(i);
                    onChanged();
                } else {
                    repeatedFieldBuilderV3.remove(i);
                }
                return this;
            }

            public Builder getMsgBuilder(int i) {
                return (Builder) getMsgFieldBuilder().getBuilder(i);
            }

            public JsonObjectMessageOrBuilder getMsgOrBuilder(int i) {
                RepeatedFieldBuilderV3<JsonObjectMessage, Builder, JsonObjectMessageOrBuilder> repeatedFieldBuilderV3 = this.msgBuilder_;
                if (repeatedFieldBuilderV3 == null) {
                    return (JsonObjectMessageOrBuilder) this.msg_.get(i);
                }
                return (JsonObjectMessageOrBuilder) repeatedFieldBuilderV3.getMessageOrBuilder(i);
            }

            public List<? extends JsonObjectMessageOrBuilder> getMsgOrBuilderList() {
                RepeatedFieldBuilderV3<JsonObjectMessage, Builder, JsonObjectMessageOrBuilder> repeatedFieldBuilderV3 = this.msgBuilder_;
                if (repeatedFieldBuilderV3 != null) {
                    return repeatedFieldBuilderV3.getMessageOrBuilderList();
                }
                return Collections.unmodifiableList(this.msg_);
            }

            public Builder addMsgBuilder() {
                return (Builder) getMsgFieldBuilder().addBuilder(JsonObjectMessage.getDefaultInstance());
            }

            public Builder addMsgBuilder(int i) {
                return (Builder) getMsgFieldBuilder().addBuilder(i, JsonObjectMessage.getDefaultInstance());
            }

            public List<Builder> getMsgBuilderList() {
                return getMsgFieldBuilder().getBuilderList();
            }

            private RepeatedFieldBuilderV3<JsonObjectMessage, Builder, JsonObjectMessageOrBuilder> getMsgFieldBuilder() {
                if (this.msgBuilder_ == null) {
                    this.msgBuilder_ = new RepeatedFieldBuilderV3<>(this.msg_, (this.bitField0_ & 2) == 2, getParentForChildren(), isClean());
                    this.msg_ = null;
                }
                return this.msgBuilder_;
            }

            public boolean hasOffline() {
                return (this.bitField0_ & 4) == 4;
            }

            public boolean getOffline() {
                return this.offline_;
            }

            public Builder setOffline(boolean z) {
                this.bitField0_ |= 4;
                this.offline_ = z;
                onChanged();
                return this;
            }

            public Builder clearOffline() {
                this.bitField0_ &= -5;
                this.offline_ = false;
                onChanged();
                return this;
            }

            public final Builder setUnknownFields(UnknownFieldSet unknownFieldSet) {
                return (Builder) super.setUnknownFields(unknownFieldSet);
            }

            public final Builder mergeUnknownFields(UnknownFieldSet unknownFieldSet) {
                return (Builder) super.mergeUnknownFields(unknownFieldSet);
            }
        }

        private DataCommand(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
            super(builder);
            this.memoizedIsInitialized = -1;
        }

        private DataCommand() {
            this.memoizedIsInitialized = -1;
            this.ids_ = LazyStringArrayList.EMPTY;
            this.msg_ = Collections.emptyList();
            this.offline_ = false;
        }

        public final UnknownFieldSet getUnknownFields() {
            return this.unknownFields;
        }

        private DataCommand(CodedInputStream codedInputStream, ExtensionRegistryLite extensionRegistryLite) throws InvalidProtocolBufferException {
            this();
            com.google.protobuf.UnknownFieldSet.Builder newBuilder = UnknownFieldSet.newBuilder();
            boolean z = false;
            boolean z2 = false;
            while (!z) {
                try {
                    int readTag = codedInputStream.readTag();
                    if (readTag != 0) {
                        if (readTag == 10) {
                            ByteString readBytes = codedInputStream.readBytes();
                            if (!z2 || !true) {
                                this.ids_ = new LazyStringArrayList();
                                z2 |= true;
                            }
                            this.ids_.add(readBytes);
                        } else if (readTag == 18) {
                            if (!(z2 & true)) {
                                this.msg_ = new ArrayList();
                                z2 |= true;
                            }
                            this.msg_.add(codedInputStream.readMessage(JsonObjectMessage.PARSER, extensionRegistryLite));
                        } else if (readTag == 24) {
                            this.bitField0_ |= 1;
                            this.offline_ = codedInputStream.readBool();
                        } else if (!parseUnknownField(codedInputStream, newBuilder, extensionRegistryLite, readTag)) {
                        }
                    }
                    z = true;
                } catch (InvalidProtocolBufferException e) {
                    throw e.setUnfinishedMessage(this);
                } catch (IOException e2) {
                    throw new InvalidProtocolBufferException(e2).setUnfinishedMessage(this);
                } catch (Throwable th) {
                    if (z2 && true) {
                        this.ids_ = this.ids_.getUnmodifiableView();
                    }
                    if (z2 & true) {
                        this.msg_ = Collections.unmodifiableList(this.msg_);
                    }
                    this.unknownFields = newBuilder.build();
                    makeExtensionsImmutable();
                    throw th;
                }
            }
            if (z2 && true) {
                this.ids_ = this.ids_.getUnmodifiableView();
            }
            if (z2 & true) {
                this.msg_ = Collections.unmodifiableList(this.msg_);
            }
            this.unknownFields = newBuilder.build();
            makeExtensionsImmutable();
        }

        public static final Descriptor getDescriptor() {
            return Messages.internal_static_com_avos_avoscloud_DataCommand_descriptor;
        }

        /* access modifiers changed from: protected */
        public FieldAccessorTable internalGetFieldAccessorTable() {
            return Messages.internal_static_com_avos_avoscloud_DataCommand_fieldAccessorTable.ensureFieldAccessorsInitialized(DataCommand.class, Builder.class);
        }

        public ProtocolStringList getIdsList() {
            return this.ids_;
        }

        public int getIdsCount() {
            return this.ids_.size();
        }

        public String getIds(int i) {
            return (String) this.ids_.get(i);
        }

        public ByteString getIdsBytes(int i) {
            return this.ids_.getByteString(i);
        }

        public List<JsonObjectMessage> getMsgList() {
            return this.msg_;
        }

        public List<? extends JsonObjectMessageOrBuilder> getMsgOrBuilderList() {
            return this.msg_;
        }

        public int getMsgCount() {
            return this.msg_.size();
        }

        public JsonObjectMessage getMsg(int i) {
            return (JsonObjectMessage) this.msg_.get(i);
        }

        public JsonObjectMessageOrBuilder getMsgOrBuilder(int i) {
            return (JsonObjectMessageOrBuilder) this.msg_.get(i);
        }

        public boolean hasOffline() {
            return (this.bitField0_ & 1) == 1;
        }

        public boolean getOffline() {
            return this.offline_;
        }

        public final boolean isInitialized() {
            byte b = this.memoizedIsInitialized;
            if (b == 1) {
                return true;
            }
            if (b == 0) {
                return false;
            }
            for (int i = 0; i < getMsgCount(); i++) {
                if (!getMsg(i).isInitialized()) {
                    this.memoizedIsInitialized = 0;
                    return false;
                }
            }
            this.memoizedIsInitialized = 1;
            return true;
        }

        public void writeTo(CodedOutputStream codedOutputStream) throws IOException {
            for (int i = 0; i < this.ids_.size(); i++) {
                GeneratedMessageV3.writeString(codedOutputStream, 1, this.ids_.getRaw(i));
            }
            for (int i2 = 0; i2 < this.msg_.size(); i2++) {
                codedOutputStream.writeMessage(2, (MessageLite) this.msg_.get(i2));
            }
            if ((this.bitField0_ & 1) == 1) {
                codedOutputStream.writeBool(3, this.offline_);
            }
            this.unknownFields.writeTo(codedOutputStream);
        }

        public int getSerializedSize() {
            int i = this.memoizedSize;
            if (i != -1) {
                return i;
            }
            int i2 = 0;
            for (int i3 = 0; i3 < this.ids_.size(); i3++) {
                i2 += computeStringSizeNoTag(this.ids_.getRaw(i3));
            }
            int size = i2 + 0 + (getIdsList().size() * 1);
            for (int i4 = 0; i4 < this.msg_.size(); i4++) {
                size += CodedOutputStream.computeMessageSize(2, (MessageLite) this.msg_.get(i4));
            }
            if ((this.bitField0_ & 1) == 1) {
                size += CodedOutputStream.computeBoolSize(3, this.offline_);
            }
            int serializedSize = size + this.unknownFields.getSerializedSize();
            this.memoizedSize = serializedSize;
            return serializedSize;
        }

        public boolean equals(Object obj) {
            boolean z = true;
            if (obj == this) {
                return true;
            }
            if (!(obj instanceof DataCommand)) {
                return super.equals(obj);
            }
            DataCommand dataCommand = (DataCommand) obj;
            boolean z2 = ((getIdsList().equals(dataCommand.getIdsList())) && getMsgList().equals(dataCommand.getMsgList())) && hasOffline() == dataCommand.hasOffline();
            if (hasOffline()) {
                z2 = z2 && getOffline() == dataCommand.getOffline();
            }
            if (!z2 || !this.unknownFields.equals(dataCommand.unknownFields)) {
                z = false;
            }
            return z;
        }

        public int hashCode() {
            if (this.memoizedHashCode != 0) {
                return this.memoizedHashCode;
            }
            int hashCode = 779 + getDescriptor().hashCode();
            if (getIdsCount() > 0) {
                hashCode = (((hashCode * 37) + 1) * 53) + getIdsList().hashCode();
            }
            if (getMsgCount() > 0) {
                hashCode = (((hashCode * 37) + 2) * 53) + getMsgList().hashCode();
            }
            if (hasOffline()) {
                hashCode = (((hashCode * 37) + 3) * 53) + Internal.hashBoolean(getOffline());
            }
            int hashCode2 = (hashCode * 29) + this.unknownFields.hashCode();
            this.memoizedHashCode = hashCode2;
            return hashCode2;
        }

        public static DataCommand parseFrom(ByteBuffer byteBuffer) throws InvalidProtocolBufferException {
            return (DataCommand) PARSER.parseFrom(byteBuffer);
        }

        public static DataCommand parseFrom(ByteBuffer byteBuffer, ExtensionRegistryLite extensionRegistryLite) throws InvalidProtocolBufferException {
            return (DataCommand) PARSER.parseFrom(byteBuffer, extensionRegistryLite);
        }

        public static DataCommand parseFrom(ByteString byteString) throws InvalidProtocolBufferException {
            return (DataCommand) PARSER.parseFrom(byteString);
        }

        public static DataCommand parseFrom(ByteString byteString, ExtensionRegistryLite extensionRegistryLite) throws InvalidProtocolBufferException {
            return (DataCommand) PARSER.parseFrom(byteString, extensionRegistryLite);
        }

        public static DataCommand parseFrom(byte[] bArr) throws InvalidProtocolBufferException {
            return (DataCommand) PARSER.parseFrom(bArr);
        }

        public static DataCommand parseFrom(byte[] bArr, ExtensionRegistryLite extensionRegistryLite) throws InvalidProtocolBufferException {
            return (DataCommand) PARSER.parseFrom(bArr, extensionRegistryLite);
        }

        public static DataCommand parseFrom(InputStream inputStream) throws IOException {
            return (DataCommand) GeneratedMessageV3.parseWithIOException(PARSER, inputStream);
        }

        public static DataCommand parseFrom(InputStream inputStream, ExtensionRegistryLite extensionRegistryLite) throws IOException {
            return (DataCommand) GeneratedMessageV3.parseWithIOException(PARSER, inputStream, extensionRegistryLite);
        }

        public static DataCommand parseDelimitedFrom(InputStream inputStream) throws IOException {
            return (DataCommand) GeneratedMessageV3.parseDelimitedWithIOException(PARSER, inputStream);
        }

        public static DataCommand parseDelimitedFrom(InputStream inputStream, ExtensionRegistryLite extensionRegistryLite) throws IOException {
            return (DataCommand) GeneratedMessageV3.parseDelimitedWithIOException(PARSER, inputStream, extensionRegistryLite);
        }

        public static DataCommand parseFrom(CodedInputStream codedInputStream) throws IOException {
            return (DataCommand) GeneratedMessageV3.parseWithIOException(PARSER, codedInputStream);
        }

        public static DataCommand parseFrom(CodedInputStream codedInputStream, ExtensionRegistryLite extensionRegistryLite) throws IOException {
            return (DataCommand) GeneratedMessageV3.parseWithIOException(PARSER, codedInputStream, extensionRegistryLite);
        }

        public Builder newBuilderForType() {
            return newBuilder();
        }

        public static Builder newBuilder() {
            return DEFAULT_INSTANCE.toBuilder();
        }

        public static Builder newBuilder(DataCommand dataCommand) {
            return DEFAULT_INSTANCE.toBuilder().mergeFrom(dataCommand);
        }

        public Builder toBuilder() {
            if (this == DEFAULT_INSTANCE) {
                return new Builder();
            }
            return new Builder().mergeFrom(this);
        }

        /* access modifiers changed from: protected */
        public Builder newBuilderForType(BuilderParent builderParent) {
            return new Builder(builderParent);
        }

        public static DataCommand getDefaultInstance() {
            return DEFAULT_INSTANCE;
        }

        public static Parser<DataCommand> parser() {
            return PARSER;
        }

        public Parser<DataCommand> getParserForType() {
            return PARSER;
        }

        public DataCommand getDefaultInstanceForType() {
            return DEFAULT_INSTANCE;
        }
    }

    public interface DataCommandOrBuilder extends MessageOrBuilder {
        String getIds(int i);

        ByteString getIdsBytes(int i);

        int getIdsCount();

        List<String> getIdsList();

        JsonObjectMessage getMsg(int i);

        int getMsgCount();

        List<JsonObjectMessage> getMsgList();

        JsonObjectMessageOrBuilder getMsgOrBuilder(int i);

        List<? extends JsonObjectMessageOrBuilder> getMsgOrBuilderList();

        boolean getOffline();

        boolean hasOffline();
    }

    public static final class DirectCommand extends GeneratedMessageV3 implements DirectCommandOrBuilder {
        public static final int BINARYMSG_FIELD_NUMBER = 19;
        public static final int CID_FIELD_NUMBER = 11;
        public static final int CONVTYPE_FIELD_NUMBER = 22;
        private static final DirectCommand DEFAULT_INSTANCE = new DirectCommand();
        public static final int DT_FIELD_NUMBER = 14;
        public static final int FROMPEERID_FIELD_NUMBER = 3;
        public static final int HASMORE_FIELD_NUMBER = 6;
        public static final int ID_FIELD_NUMBER = 12;
        public static final int MENTIONALL_FIELD_NUMBER = 21;
        public static final int MENTIONPIDS_FIELD_NUMBER = 20;
        public static final int MSG_FIELD_NUMBER = 1;
        public static final int OFFLINE_FIELD_NUMBER = 5;
        @Deprecated
        public static final Parser<DirectCommand> PARSER = new AbstractParser<DirectCommand>() {
            public DirectCommand parsePartialFrom(CodedInputStream codedInputStream, ExtensionRegistryLite extensionRegistryLite) throws InvalidProtocolBufferException {
                return new DirectCommand(codedInputStream, extensionRegistryLite);
            }
        };
        public static final int PATCHTIMESTAMP_FIELD_NUMBER = 18;
        public static final int PUSHDATA_FIELD_NUMBER = 16;
        public static final int ROOMID_FIELD_NUMBER = 15;
        public static final int R_FIELD_NUMBER = 10;
        public static final int TIMESTAMP_FIELD_NUMBER = 4;
        public static final int TOPEERIDS_FIELD_NUMBER = 7;
        public static final int TRANSIENT_FIELD_NUMBER = 13;
        public static final int UID_FIELD_NUMBER = 2;
        public static final int WILL_FIELD_NUMBER = 17;
        private static final long serialVersionUID = 0;
        /* access modifiers changed from: private */
        public ByteString binaryMsg_;
        /* access modifiers changed from: private */
        public int bitField0_;
        /* access modifiers changed from: private */
        public volatile Object cid_;
        /* access modifiers changed from: private */
        public int convType_;
        /* access modifiers changed from: private */
        public volatile Object dt_;
        /* access modifiers changed from: private */
        public volatile Object fromPeerId_;
        /* access modifiers changed from: private */
        public boolean hasMore_;
        /* access modifiers changed from: private */
        public volatile Object id_;
        private byte memoizedIsInitialized;
        /* access modifiers changed from: private */
        public boolean mentionAll_;
        /* access modifiers changed from: private */
        public LazyStringList mentionPids_;
        /* access modifiers changed from: private */
        public volatile Object msg_;
        /* access modifiers changed from: private */
        public boolean offline_;
        /* access modifiers changed from: private */
        public long patchTimestamp_;
        /* access modifiers changed from: private */
        public volatile Object pushData_;
        /* access modifiers changed from: private */
        public boolean r_;
        /* access modifiers changed from: private */
        public volatile Object roomId_;
        /* access modifiers changed from: private */
        public long timestamp_;
        /* access modifiers changed from: private */
        public LazyStringList toPeerIds_;
        /* access modifiers changed from: private */
        public boolean transient_;
        /* access modifiers changed from: private */
        public volatile Object uid_;
        /* access modifiers changed from: private */
        public boolean will_;

        public static final class Builder extends com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements DirectCommandOrBuilder {
            private ByteString binaryMsg_;
            private int bitField0_;
            private Object cid_;
            private int convType_;
            private Object dt_;
            private Object fromPeerId_;
            private boolean hasMore_;
            private Object id_;
            private boolean mentionAll_;
            private LazyStringList mentionPids_;
            private Object msg_;
            private boolean offline_;
            private long patchTimestamp_;
            private Object pushData_;
            private boolean r_;
            private Object roomId_;
            private long timestamp_;
            private LazyStringList toPeerIds_;
            private boolean transient_;
            private Object uid_;
            private boolean will_;

            public final boolean isInitialized() {
                return true;
            }

            public static final Descriptor getDescriptor() {
                return Messages.internal_static_com_avos_avoscloud_DirectCommand_descriptor;
            }

            /* access modifiers changed from: protected */
            public FieldAccessorTable internalGetFieldAccessorTable() {
                return Messages.internal_static_com_avos_avoscloud_DirectCommand_fieldAccessorTable.ensureFieldAccessorsInitialized(DirectCommand.class, Builder.class);
            }

            private Builder() {
                String str = "";
                this.msg_ = str;
                this.uid_ = str;
                this.fromPeerId_ = str;
                this.toPeerIds_ = LazyStringArrayList.EMPTY;
                this.cid_ = str;
                this.id_ = str;
                this.dt_ = str;
                this.roomId_ = str;
                this.pushData_ = str;
                this.binaryMsg_ = ByteString.EMPTY;
                this.mentionPids_ = LazyStringArrayList.EMPTY;
                maybeForceBuilderInitialization();
            }

            private Builder(BuilderParent builderParent) {
                super(builderParent);
                String str = "";
                this.msg_ = str;
                this.uid_ = str;
                this.fromPeerId_ = str;
                this.toPeerIds_ = LazyStringArrayList.EMPTY;
                this.cid_ = str;
                this.id_ = str;
                this.dt_ = str;
                this.roomId_ = str;
                this.pushData_ = str;
                this.binaryMsg_ = ByteString.EMPTY;
                this.mentionPids_ = LazyStringArrayList.EMPTY;
                maybeForceBuilderInitialization();
            }

            private void maybeForceBuilderInitialization() {
                DirectCommand.alwaysUseFieldBuilders;
            }

            public Builder clear() {
                super.clear();
                String str = "";
                this.msg_ = str;
                this.bitField0_ &= -2;
                this.uid_ = str;
                this.bitField0_ &= -3;
                this.fromPeerId_ = str;
                this.bitField0_ &= -5;
                this.timestamp_ = 0;
                this.bitField0_ &= -9;
                this.offline_ = false;
                this.bitField0_ &= -17;
                this.hasMore_ = false;
                this.bitField0_ &= -33;
                this.toPeerIds_ = LazyStringArrayList.EMPTY;
                this.bitField0_ &= -65;
                this.r_ = false;
                this.bitField0_ &= -129;
                this.cid_ = str;
                this.bitField0_ &= -257;
                this.id_ = str;
                this.bitField0_ &= -513;
                this.transient_ = false;
                this.bitField0_ &= -1025;
                this.dt_ = str;
                this.bitField0_ &= -2049;
                this.roomId_ = str;
                this.bitField0_ &= -4097;
                this.pushData_ = str;
                this.bitField0_ &= -8193;
                this.will_ = false;
                this.bitField0_ &= -16385;
                this.patchTimestamp_ = 0;
                this.bitField0_ &= -32769;
                this.binaryMsg_ = ByteString.EMPTY;
                this.bitField0_ &= CommandPacket.UNSUPPORTED_OPERATION;
                this.mentionPids_ = LazyStringArrayList.EMPTY;
                this.bitField0_ &= -131073;
                this.mentionAll_ = false;
                this.bitField0_ &= -262145;
                this.convType_ = 0;
                this.bitField0_ &= -524289;
                return this;
            }

            public Descriptor getDescriptorForType() {
                return Messages.internal_static_com_avos_avoscloud_DirectCommand_descriptor;
            }

            public DirectCommand getDefaultInstanceForType() {
                return DirectCommand.getDefaultInstance();
            }

            public DirectCommand build() {
                DirectCommand buildPartial = buildPartial();
                if (buildPartial.isInitialized()) {
                    return buildPartial;
                }
                throw newUninitializedMessageException(buildPartial);
            }

            public DirectCommand buildPartial() {
                DirectCommand directCommand = new DirectCommand((com.google.protobuf.GeneratedMessageV3.Builder) this);
                int i = this.bitField0_;
                int i2 = 1;
                if ((i & 1) != 1) {
                    i2 = 0;
                }
                directCommand.msg_ = this.msg_;
                if ((i & 2) == 2) {
                    i2 |= 2;
                }
                directCommand.uid_ = this.uid_;
                if ((i & 4) == 4) {
                    i2 |= 4;
                }
                directCommand.fromPeerId_ = this.fromPeerId_;
                if ((i & 8) == 8) {
                    i2 |= 8;
                }
                directCommand.timestamp_ = this.timestamp_;
                if ((i & 16) == 16) {
                    i2 |= 16;
                }
                directCommand.offline_ = this.offline_;
                if ((i & 32) == 32) {
                    i2 |= 32;
                }
                directCommand.hasMore_ = this.hasMore_;
                if ((this.bitField0_ & 64) == 64) {
                    this.toPeerIds_ = this.toPeerIds_.getUnmodifiableView();
                    this.bitField0_ &= -65;
                }
                directCommand.toPeerIds_ = this.toPeerIds_;
                if ((i & 128) == 128) {
                    i2 |= 64;
                }
                directCommand.r_ = this.r_;
                if ((i & 256) == 256) {
                    i2 |= 128;
                }
                directCommand.cid_ = this.cid_;
                if ((i & 512) == 512) {
                    i2 |= 256;
                }
                directCommand.id_ = this.id_;
                if ((i & 1024) == 1024) {
                    i2 |= 512;
                }
                directCommand.transient_ = this.transient_;
                if ((i & 2048) == 2048) {
                    i2 |= 1024;
                }
                directCommand.dt_ = this.dt_;
                if ((i & 4096) == 4096) {
                    i2 |= 2048;
                }
                directCommand.roomId_ = this.roomId_;
                if ((i & 8192) == 8192) {
                    i2 |= 4096;
                }
                directCommand.pushData_ = this.pushData_;
                if ((i & 16384) == 16384) {
                    i2 |= 8192;
                }
                directCommand.will_ = this.will_;
                if ((32768 & i) == 32768) {
                    i2 |= 16384;
                }
                directCommand.patchTimestamp_ = this.patchTimestamp_;
                if ((65536 & i) == 65536) {
                    i2 |= 32768;
                }
                directCommand.binaryMsg_ = this.binaryMsg_;
                if ((this.bitField0_ & 131072) == 131072) {
                    this.mentionPids_ = this.mentionPids_.getUnmodifiableView();
                    this.bitField0_ &= -131073;
                }
                directCommand.mentionPids_ = this.mentionPids_;
                if ((262144 & i) == 262144) {
                    i2 |= 65536;
                }
                directCommand.mentionAll_ = this.mentionAll_;
                if ((i & 524288) == 524288) {
                    i2 |= 131072;
                }
                directCommand.convType_ = this.convType_;
                directCommand.bitField0_ = i2;
                onBuilt();
                return directCommand;
            }

            public Builder clone() {
                return (Builder) super.clone();
            }

            public Builder setField(FieldDescriptor fieldDescriptor, Object obj) {
                return (Builder) super.setField(fieldDescriptor, obj);
            }

            public Builder clearField(FieldDescriptor fieldDescriptor) {
                return (Builder) super.clearField(fieldDescriptor);
            }

            public Builder clearOneof(OneofDescriptor oneofDescriptor) {
                return (Builder) super.clearOneof(oneofDescriptor);
            }

            public Builder setRepeatedField(FieldDescriptor fieldDescriptor, int i, Object obj) {
                return (Builder) super.setRepeatedField(fieldDescriptor, i, obj);
            }

            public Builder addRepeatedField(FieldDescriptor fieldDescriptor, Object obj) {
                return (Builder) super.addRepeatedField(fieldDescriptor, obj);
            }

            public Builder mergeFrom(Message message) {
                if (message instanceof DirectCommand) {
                    return mergeFrom((DirectCommand) message);
                }
                super.mergeFrom(message);
                return this;
            }

            public Builder mergeFrom(DirectCommand directCommand) {
                if (directCommand == DirectCommand.getDefaultInstance()) {
                    return this;
                }
                if (directCommand.hasMsg()) {
                    this.bitField0_ |= 1;
                    this.msg_ = directCommand.msg_;
                    onChanged();
                }
                if (directCommand.hasUid()) {
                    this.bitField0_ |= 2;
                    this.uid_ = directCommand.uid_;
                    onChanged();
                }
                if (directCommand.hasFromPeerId()) {
                    this.bitField0_ |= 4;
                    this.fromPeerId_ = directCommand.fromPeerId_;
                    onChanged();
                }
                if (directCommand.hasTimestamp()) {
                    setTimestamp(directCommand.getTimestamp());
                }
                if (directCommand.hasOffline()) {
                    setOffline(directCommand.getOffline());
                }
                if (directCommand.hasHasMore()) {
                    setHasMore(directCommand.getHasMore());
                }
                if (!directCommand.toPeerIds_.isEmpty()) {
                    if (this.toPeerIds_.isEmpty()) {
                        this.toPeerIds_ = directCommand.toPeerIds_;
                        this.bitField0_ &= -65;
                    } else {
                        ensureToPeerIdsIsMutable();
                        this.toPeerIds_.addAll(directCommand.toPeerIds_);
                    }
                    onChanged();
                }
                if (directCommand.hasR()) {
                    setR(directCommand.getR());
                }
                if (directCommand.hasCid()) {
                    this.bitField0_ |= 256;
                    this.cid_ = directCommand.cid_;
                    onChanged();
                }
                if (directCommand.hasId()) {
                    this.bitField0_ |= 512;
                    this.id_ = directCommand.id_;
                    onChanged();
                }
                if (directCommand.hasTransient()) {
                    setTransient(directCommand.getTransient());
                }
                if (directCommand.hasDt()) {
                    this.bitField0_ |= 2048;
                    this.dt_ = directCommand.dt_;
                    onChanged();
                }
                if (directCommand.hasRoomId()) {
                    this.bitField0_ |= 4096;
                    this.roomId_ = directCommand.roomId_;
                    onChanged();
                }
                if (directCommand.hasPushData()) {
                    this.bitField0_ |= 8192;
                    this.pushData_ = directCommand.pushData_;
                    onChanged();
                }
                if (directCommand.hasWill()) {
                    setWill(directCommand.getWill());
                }
                if (directCommand.hasPatchTimestamp()) {
                    setPatchTimestamp(directCommand.getPatchTimestamp());
                }
                if (directCommand.hasBinaryMsg()) {
                    setBinaryMsg(directCommand.getBinaryMsg());
                }
                if (!directCommand.mentionPids_.isEmpty()) {
                    if (this.mentionPids_.isEmpty()) {
                        this.mentionPids_ = directCommand.mentionPids_;
                        this.bitField0_ &= -131073;
                    } else {
                        ensureMentionPidsIsMutable();
                        this.mentionPids_.addAll(directCommand.mentionPids_);
                    }
                    onChanged();
                }
                if (directCommand.hasMentionAll()) {
                    setMentionAll(directCommand.getMentionAll());
                }
                if (directCommand.hasConvType()) {
                    setConvType(directCommand.getConvType());
                }
                mergeUnknownFields(directCommand.unknownFields);
                onChanged();
                return this;
            }

            /* JADX WARNING: Removed duplicated region for block: B:16:0x0021  */
            /* Code decompiled incorrectly, please refer to instructions dump. */
            public com.avos.avoscloud.Messages.DirectCommand.Builder mergeFrom(com.google.protobuf.CodedInputStream r3, com.google.protobuf.ExtensionRegistryLite r4) throws java.io.IOException {
                /*
                    r2 = this;
                    r0 = 0
                    com.google.protobuf.Parser<com.avos.avoscloud.Messages$DirectCommand> r1 = com.avos.avoscloud.Messages.DirectCommand.PARSER     // Catch:{ InvalidProtocolBufferException -> 0x0011 }
                    java.lang.Object r3 = r1.parsePartialFrom(r3, r4)     // Catch:{ InvalidProtocolBufferException -> 0x0011 }
                    com.avos.avoscloud.Messages$DirectCommand r3 = (com.avos.avoscloud.Messages.DirectCommand) r3     // Catch:{ InvalidProtocolBufferException -> 0x0011 }
                    if (r3 == 0) goto L_0x000e
                    r2.mergeFrom(r3)
                L_0x000e:
                    return r2
                L_0x000f:
                    r3 = move-exception
                    goto L_0x001f
                L_0x0011:
                    r3 = move-exception
                    com.google.protobuf.MessageLite r4 = r3.getUnfinishedMessage()     // Catch:{ all -> 0x000f }
                    com.avos.avoscloud.Messages$DirectCommand r4 = (com.avos.avoscloud.Messages.DirectCommand) r4     // Catch:{ all -> 0x000f }
                    java.io.IOException r3 = r3.unwrapIOException()     // Catch:{ all -> 0x001d }
                    throw r3     // Catch:{ all -> 0x001d }
                L_0x001d:
                    r3 = move-exception
                    r0 = r4
                L_0x001f:
                    if (r0 == 0) goto L_0x0024
                    r2.mergeFrom(r0)
                L_0x0024:
                    throw r3
                */
                throw new UnsupportedOperationException("Method not decompiled: com.avos.avoscloud.Messages.DirectCommand.Builder.mergeFrom(com.google.protobuf.CodedInputStream, com.google.protobuf.ExtensionRegistryLite):com.avos.avoscloud.Messages$DirectCommand$Builder");
            }

            public boolean hasMsg() {
                return (this.bitField0_ & 1) == 1;
            }

            public String getMsg() {
                Object obj = this.msg_;
                if (obj instanceof String) {
                    return (String) obj;
                }
                ByteString byteString = (ByteString) obj;
                String stringUtf8 = byteString.toStringUtf8();
                if (byteString.isValidUtf8()) {
                    this.msg_ = stringUtf8;
                }
                return stringUtf8;
            }

            public ByteString getMsgBytes() {
                Object obj = this.msg_;
                if (!(obj instanceof String)) {
                    return (ByteString) obj;
                }
                ByteString copyFromUtf8 = ByteString.copyFromUtf8((String) obj);
                this.msg_ = copyFromUtf8;
                return copyFromUtf8;
            }

            public Builder setMsg(String str) {
                if (str != null) {
                    this.bitField0_ |= 1;
                    this.msg_ = str;
                    onChanged();
                    return this;
                }
                throw new NullPointerException();
            }

            public Builder clearMsg() {
                this.bitField0_ &= -2;
                this.msg_ = DirectCommand.getDefaultInstance().getMsg();
                onChanged();
                return this;
            }

            public Builder setMsgBytes(ByteString byteString) {
                if (byteString != null) {
                    this.bitField0_ |= 1;
                    this.msg_ = byteString;
                    onChanged();
                    return this;
                }
                throw new NullPointerException();
            }

            public boolean hasUid() {
                return (this.bitField0_ & 2) == 2;
            }

            public String getUid() {
                Object obj = this.uid_;
                if (obj instanceof String) {
                    return (String) obj;
                }
                ByteString byteString = (ByteString) obj;
                String stringUtf8 = byteString.toStringUtf8();
                if (byteString.isValidUtf8()) {
                    this.uid_ = stringUtf8;
                }
                return stringUtf8;
            }

            public ByteString getUidBytes() {
                Object obj = this.uid_;
                if (!(obj instanceof String)) {
                    return (ByteString) obj;
                }
                ByteString copyFromUtf8 = ByteString.copyFromUtf8((String) obj);
                this.uid_ = copyFromUtf8;
                return copyFromUtf8;
            }

            public Builder setUid(String str) {
                if (str != null) {
                    this.bitField0_ |= 2;
                    this.uid_ = str;
                    onChanged();
                    return this;
                }
                throw new NullPointerException();
            }

            public Builder clearUid() {
                this.bitField0_ &= -3;
                this.uid_ = DirectCommand.getDefaultInstance().getUid();
                onChanged();
                return this;
            }

            public Builder setUidBytes(ByteString byteString) {
                if (byteString != null) {
                    this.bitField0_ |= 2;
                    this.uid_ = byteString;
                    onChanged();
                    return this;
                }
                throw new NullPointerException();
            }

            public boolean hasFromPeerId() {
                return (this.bitField0_ & 4) == 4;
            }

            public String getFromPeerId() {
                Object obj = this.fromPeerId_;
                if (obj instanceof String) {
                    return (String) obj;
                }
                ByteString byteString = (ByteString) obj;
                String stringUtf8 = byteString.toStringUtf8();
                if (byteString.isValidUtf8()) {
                    this.fromPeerId_ = stringUtf8;
                }
                return stringUtf8;
            }

            public ByteString getFromPeerIdBytes() {
                Object obj = this.fromPeerId_;
                if (!(obj instanceof String)) {
                    return (ByteString) obj;
                }
                ByteString copyFromUtf8 = ByteString.copyFromUtf8((String) obj);
                this.fromPeerId_ = copyFromUtf8;
                return copyFromUtf8;
            }

            public Builder setFromPeerId(String str) {
                if (str != null) {
                    this.bitField0_ |= 4;
                    this.fromPeerId_ = str;
                    onChanged();
                    return this;
                }
                throw new NullPointerException();
            }

            public Builder clearFromPeerId() {
                this.bitField0_ &= -5;
                this.fromPeerId_ = DirectCommand.getDefaultInstance().getFromPeerId();
                onChanged();
                return this;
            }

            public Builder setFromPeerIdBytes(ByteString byteString) {
                if (byteString != null) {
                    this.bitField0_ |= 4;
                    this.fromPeerId_ = byteString;
                    onChanged();
                    return this;
                }
                throw new NullPointerException();
            }

            public boolean hasTimestamp() {
                return (this.bitField0_ & 8) == 8;
            }

            public long getTimestamp() {
                return this.timestamp_;
            }

            public Builder setTimestamp(long j) {
                this.bitField0_ |= 8;
                this.timestamp_ = j;
                onChanged();
                return this;
            }

            public Builder clearTimestamp() {
                this.bitField0_ &= -9;
                this.timestamp_ = 0;
                onChanged();
                return this;
            }

            public boolean hasOffline() {
                return (this.bitField0_ & 16) == 16;
            }

            public boolean getOffline() {
                return this.offline_;
            }

            public Builder setOffline(boolean z) {
                this.bitField0_ |= 16;
                this.offline_ = z;
                onChanged();
                return this;
            }

            public Builder clearOffline() {
                this.bitField0_ &= -17;
                this.offline_ = false;
                onChanged();
                return this;
            }

            public boolean hasHasMore() {
                return (this.bitField0_ & 32) == 32;
            }

            public boolean getHasMore() {
                return this.hasMore_;
            }

            public Builder setHasMore(boolean z) {
                this.bitField0_ |= 32;
                this.hasMore_ = z;
                onChanged();
                return this;
            }

            public Builder clearHasMore() {
                this.bitField0_ &= -33;
                this.hasMore_ = false;
                onChanged();
                return this;
            }

            private void ensureToPeerIdsIsMutable() {
                if ((this.bitField0_ & 64) != 64) {
                    this.toPeerIds_ = new LazyStringArrayList(this.toPeerIds_);
                    this.bitField0_ |= 64;
                }
            }

            public ProtocolStringList getToPeerIdsList() {
                return this.toPeerIds_.getUnmodifiableView();
            }

            public int getToPeerIdsCount() {
                return this.toPeerIds_.size();
            }

            public String getToPeerIds(int i) {
                return (String) this.toPeerIds_.get(i);
            }

            public ByteString getToPeerIdsBytes(int i) {
                return this.toPeerIds_.getByteString(i);
            }

            public Builder setToPeerIds(int i, String str) {
                if (str != null) {
                    ensureToPeerIdsIsMutable();
                    this.toPeerIds_.set(i, str);
                    onChanged();
                    return this;
                }
                throw new NullPointerException();
            }

            public Builder addToPeerIds(String str) {
                if (str != null) {
                    ensureToPeerIdsIsMutable();
                    this.toPeerIds_.add(str);
                    onChanged();
                    return this;
                }
                throw new NullPointerException();
            }

            public Builder addAllToPeerIds(Iterable<String> iterable) {
                ensureToPeerIdsIsMutable();
                com.google.protobuf.AbstractMessageLite.Builder.addAll((Iterable) iterable, (List) this.toPeerIds_);
                onChanged();
                return this;
            }

            public Builder clearToPeerIds() {
                this.toPeerIds_ = LazyStringArrayList.EMPTY;
                this.bitField0_ &= -65;
                onChanged();
                return this;
            }

            public Builder addToPeerIdsBytes(ByteString byteString) {
                if (byteString != null) {
                    ensureToPeerIdsIsMutable();
                    this.toPeerIds_.add(byteString);
                    onChanged();
                    return this;
                }
                throw new NullPointerException();
            }

            public boolean hasR() {
                return (this.bitField0_ & 128) == 128;
            }

            public boolean getR() {
                return this.r_;
            }

            public Builder setR(boolean z) {
                this.bitField0_ |= 128;
                this.r_ = z;
                onChanged();
                return this;
            }

            public Builder clearR() {
                this.bitField0_ &= -129;
                this.r_ = false;
                onChanged();
                return this;
            }

            public boolean hasCid() {
                return (this.bitField0_ & 256) == 256;
            }

            public String getCid() {
                Object obj = this.cid_;
                if (obj instanceof String) {
                    return (String) obj;
                }
                ByteString byteString = (ByteString) obj;
                String stringUtf8 = byteString.toStringUtf8();
                if (byteString.isValidUtf8()) {
                    this.cid_ = stringUtf8;
                }
                return stringUtf8;
            }

            public ByteString getCidBytes() {
                Object obj = this.cid_;
                if (!(obj instanceof String)) {
                    return (ByteString) obj;
                }
                ByteString copyFromUtf8 = ByteString.copyFromUtf8((String) obj);
                this.cid_ = copyFromUtf8;
                return copyFromUtf8;
            }

            public Builder setCid(String str) {
                if (str != null) {
                    this.bitField0_ |= 256;
                    this.cid_ = str;
                    onChanged();
                    return this;
                }
                throw new NullPointerException();
            }

            public Builder clearCid() {
                this.bitField0_ &= -257;
                this.cid_ = DirectCommand.getDefaultInstance().getCid();
                onChanged();
                return this;
            }

            public Builder setCidBytes(ByteString byteString) {
                if (byteString != null) {
                    this.bitField0_ |= 256;
                    this.cid_ = byteString;
                    onChanged();
                    return this;
                }
                throw new NullPointerException();
            }

            public boolean hasId() {
                return (this.bitField0_ & 512) == 512;
            }

            public String getId() {
                Object obj = this.id_;
                if (obj instanceof String) {
                    return (String) obj;
                }
                ByteString byteString = (ByteString) obj;
                String stringUtf8 = byteString.toStringUtf8();
                if (byteString.isValidUtf8()) {
                    this.id_ = stringUtf8;
                }
                return stringUtf8;
            }

            public ByteString getIdBytes() {
                Object obj = this.id_;
                if (!(obj instanceof String)) {
                    return (ByteString) obj;
                }
                ByteString copyFromUtf8 = ByteString.copyFromUtf8((String) obj);
                this.id_ = copyFromUtf8;
                return copyFromUtf8;
            }

            public Builder setId(String str) {
                if (str != null) {
                    this.bitField0_ |= 512;
                    this.id_ = str;
                    onChanged();
                    return this;
                }
                throw new NullPointerException();
            }

            public Builder clearId() {
                this.bitField0_ &= -513;
                this.id_ = DirectCommand.getDefaultInstance().getId();
                onChanged();
                return this;
            }

            public Builder setIdBytes(ByteString byteString) {
                if (byteString != null) {
                    this.bitField0_ |= 512;
                    this.id_ = byteString;
                    onChanged();
                    return this;
                }
                throw new NullPointerException();
            }

            public boolean hasTransient() {
                return (this.bitField0_ & 1024) == 1024;
            }

            public boolean getTransient() {
                return this.transient_;
            }

            public Builder setTransient(boolean z) {
                this.bitField0_ |= 1024;
                this.transient_ = z;
                onChanged();
                return this;
            }

            public Builder clearTransient() {
                this.bitField0_ &= -1025;
                this.transient_ = false;
                onChanged();
                return this;
            }

            public boolean hasDt() {
                return (this.bitField0_ & 2048) == 2048;
            }

            public String getDt() {
                Object obj = this.dt_;
                if (obj instanceof String) {
                    return (String) obj;
                }
                ByteString byteString = (ByteString) obj;
                String stringUtf8 = byteString.toStringUtf8();
                if (byteString.isValidUtf8()) {
                    this.dt_ = stringUtf8;
                }
                return stringUtf8;
            }

            public ByteString getDtBytes() {
                Object obj = this.dt_;
                if (!(obj instanceof String)) {
                    return (ByteString) obj;
                }
                ByteString copyFromUtf8 = ByteString.copyFromUtf8((String) obj);
                this.dt_ = copyFromUtf8;
                return copyFromUtf8;
            }

            public Builder setDt(String str) {
                if (str != null) {
                    this.bitField0_ |= 2048;
                    this.dt_ = str;
                    onChanged();
                    return this;
                }
                throw new NullPointerException();
            }

            public Builder clearDt() {
                this.bitField0_ &= -2049;
                this.dt_ = DirectCommand.getDefaultInstance().getDt();
                onChanged();
                return this;
            }

            public Builder setDtBytes(ByteString byteString) {
                if (byteString != null) {
                    this.bitField0_ |= 2048;
                    this.dt_ = byteString;
                    onChanged();
                    return this;
                }
                throw new NullPointerException();
            }

            public boolean hasRoomId() {
                return (this.bitField0_ & 4096) == 4096;
            }

            public String getRoomId() {
                Object obj = this.roomId_;
                if (obj instanceof String) {
                    return (String) obj;
                }
                ByteString byteString = (ByteString) obj;
                String stringUtf8 = byteString.toStringUtf8();
                if (byteString.isValidUtf8()) {
                    this.roomId_ = stringUtf8;
                }
                return stringUtf8;
            }

            public ByteString getRoomIdBytes() {
                Object obj = this.roomId_;
                if (!(obj instanceof String)) {
                    return (ByteString) obj;
                }
                ByteString copyFromUtf8 = ByteString.copyFromUtf8((String) obj);
                this.roomId_ = copyFromUtf8;
                return copyFromUtf8;
            }

            public Builder setRoomId(String str) {
                if (str != null) {
                    this.bitField0_ |= 4096;
                    this.roomId_ = str;
                    onChanged();
                    return this;
                }
                throw new NullPointerException();
            }

            public Builder clearRoomId() {
                this.bitField0_ &= -4097;
                this.roomId_ = DirectCommand.getDefaultInstance().getRoomId();
                onChanged();
                return this;
            }

            public Builder setRoomIdBytes(ByteString byteString) {
                if (byteString != null) {
                    this.bitField0_ |= 4096;
                    this.roomId_ = byteString;
                    onChanged();
                    return this;
                }
                throw new NullPointerException();
            }

            public boolean hasPushData() {
                return (this.bitField0_ & 8192) == 8192;
            }

            public String getPushData() {
                Object obj = this.pushData_;
                if (obj instanceof String) {
                    return (String) obj;
                }
                ByteString byteString = (ByteString) obj;
                String stringUtf8 = byteString.toStringUtf8();
                if (byteString.isValidUtf8()) {
                    this.pushData_ = stringUtf8;
                }
                return stringUtf8;
            }

            public ByteString getPushDataBytes() {
                Object obj = this.pushData_;
                if (!(obj instanceof String)) {
                    return (ByteString) obj;
                }
                ByteString copyFromUtf8 = ByteString.copyFromUtf8((String) obj);
                this.pushData_ = copyFromUtf8;
                return copyFromUtf8;
            }

            public Builder setPushData(String str) {
                if (str != null) {
                    this.bitField0_ |= 8192;
                    this.pushData_ = str;
                    onChanged();
                    return this;
                }
                throw new NullPointerException();
            }

            public Builder clearPushData() {
                this.bitField0_ &= -8193;
                this.pushData_ = DirectCommand.getDefaultInstance().getPushData();
                onChanged();
                return this;
            }

            public Builder setPushDataBytes(ByteString byteString) {
                if (byteString != null) {
                    this.bitField0_ |= 8192;
                    this.pushData_ = byteString;
                    onChanged();
                    return this;
                }
                throw new NullPointerException();
            }

            public boolean hasWill() {
                return (this.bitField0_ & 16384) == 16384;
            }

            public boolean getWill() {
                return this.will_;
            }

            public Builder setWill(boolean z) {
                this.bitField0_ |= 16384;
                this.will_ = z;
                onChanged();
                return this;
            }

            public Builder clearWill() {
                this.bitField0_ &= -16385;
                this.will_ = false;
                onChanged();
                return this;
            }

            public boolean hasPatchTimestamp() {
                return (this.bitField0_ & 32768) == 32768;
            }

            public long getPatchTimestamp() {
                return this.patchTimestamp_;
            }

            public Builder setPatchTimestamp(long j) {
                this.bitField0_ |= 32768;
                this.patchTimestamp_ = j;
                onChanged();
                return this;
            }

            public Builder clearPatchTimestamp() {
                this.bitField0_ &= -32769;
                this.patchTimestamp_ = 0;
                onChanged();
                return this;
            }

            public boolean hasBinaryMsg() {
                return (this.bitField0_ & 65536) == 65536;
            }

            public ByteString getBinaryMsg() {
                return this.binaryMsg_;
            }

            public Builder setBinaryMsg(ByteString byteString) {
                if (byteString != null) {
                    this.bitField0_ |= 65536;
                    this.binaryMsg_ = byteString;
                    onChanged();
                    return this;
                }
                throw new NullPointerException();
            }

            public Builder clearBinaryMsg() {
                this.bitField0_ &= CommandPacket.UNSUPPORTED_OPERATION;
                this.binaryMsg_ = DirectCommand.getDefaultInstance().getBinaryMsg();
                onChanged();
                return this;
            }

            private void ensureMentionPidsIsMutable() {
                if ((this.bitField0_ & 131072) != 131072) {
                    this.mentionPids_ = new LazyStringArrayList(this.mentionPids_);
                    this.bitField0_ |= 131072;
                }
            }

            public ProtocolStringList getMentionPidsList() {
                return this.mentionPids_.getUnmodifiableView();
            }

            public int getMentionPidsCount() {
                return this.mentionPids_.size();
            }

            public String getMentionPids(int i) {
                return (String) this.mentionPids_.get(i);
            }

            public ByteString getMentionPidsBytes(int i) {
                return this.mentionPids_.getByteString(i);
            }

            public Builder setMentionPids(int i, String str) {
                if (str != null) {
                    ensureMentionPidsIsMutable();
                    this.mentionPids_.set(i, str);
                    onChanged();
                    return this;
                }
                throw new NullPointerException();
            }

            public Builder addMentionPids(String str) {
                if (str != null) {
                    ensureMentionPidsIsMutable();
                    this.mentionPids_.add(str);
                    onChanged();
                    return this;
                }
                throw new NullPointerException();
            }

            public Builder addAllMentionPids(Iterable<String> iterable) {
                ensureMentionPidsIsMutable();
                com.google.protobuf.AbstractMessageLite.Builder.addAll((Iterable) iterable, (List) this.mentionPids_);
                onChanged();
                return this;
            }

            public Builder clearMentionPids() {
                this.mentionPids_ = LazyStringArrayList.EMPTY;
                this.bitField0_ &= -131073;
                onChanged();
                return this;
            }

            public Builder addMentionPidsBytes(ByteString byteString) {
                if (byteString != null) {
                    ensureMentionPidsIsMutable();
                    this.mentionPids_.add(byteString);
                    onChanged();
                    return this;
                }
                throw new NullPointerException();
            }

            public boolean hasMentionAll() {
                return (this.bitField0_ & 262144) == 262144;
            }

            public boolean getMentionAll() {
                return this.mentionAll_;
            }

            public Builder setMentionAll(boolean z) {
                this.bitField0_ |= 262144;
                this.mentionAll_ = z;
                onChanged();
                return this;
            }

            public Builder clearMentionAll() {
                this.bitField0_ &= -262145;
                this.mentionAll_ = false;
                onChanged();
                return this;
            }

            public boolean hasConvType() {
                return (this.bitField0_ & 524288) == 524288;
            }

            public int getConvType() {
                return this.convType_;
            }

            public Builder setConvType(int i) {
                this.bitField0_ |= 524288;
                this.convType_ = i;
                onChanged();
                return this;
            }

            public Builder clearConvType() {
                this.bitField0_ &= -524289;
                this.convType_ = 0;
                onChanged();
                return this;
            }

            public final Builder setUnknownFields(UnknownFieldSet unknownFieldSet) {
                return (Builder) super.setUnknownFields(unknownFieldSet);
            }

            public final Builder mergeUnknownFields(UnknownFieldSet unknownFieldSet) {
                return (Builder) super.mergeUnknownFields(unknownFieldSet);
            }
        }

        private DirectCommand(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
            super(builder);
            this.memoizedIsInitialized = -1;
        }

        private DirectCommand() {
            this.memoizedIsInitialized = -1;
            String str = "";
            this.msg_ = str;
            this.uid_ = str;
            this.fromPeerId_ = str;
            this.timestamp_ = 0;
            this.offline_ = false;
            this.hasMore_ = false;
            this.toPeerIds_ = LazyStringArrayList.EMPTY;
            this.r_ = false;
            this.cid_ = str;
            this.id_ = str;
            this.transient_ = false;
            this.dt_ = str;
            this.roomId_ = str;
            this.pushData_ = str;
            this.will_ = false;
            this.patchTimestamp_ = 0;
            this.binaryMsg_ = ByteString.EMPTY;
            this.mentionPids_ = LazyStringArrayList.EMPTY;
            this.mentionAll_ = false;
            this.convType_ = 0;
        }

        public final UnknownFieldSet getUnknownFields() {
            return this.unknownFields;
        }

        private DirectCommand(CodedInputStream codedInputStream, ExtensionRegistryLite extensionRegistryLite) throws InvalidProtocolBufferException {
            this();
            com.google.protobuf.UnknownFieldSet.Builder newBuilder = UnknownFieldSet.newBuilder();
            boolean z = false;
            boolean z2 = false;
            while (!z) {
                try {
                    int readTag = codedInputStream.readTag();
                    switch (readTag) {
                        case 0:
                            z = true;
                            break;
                        case 10:
                            ByteString readBytes = codedInputStream.readBytes();
                            this.bitField0_ = 1 | this.bitField0_;
                            this.msg_ = readBytes;
                            break;
                        case 18:
                            ByteString readBytes2 = codedInputStream.readBytes();
                            this.bitField0_ |= 2;
                            this.uid_ = readBytes2;
                            break;
                        case 26:
                            ByteString readBytes3 = codedInputStream.readBytes();
                            this.bitField0_ |= 4;
                            this.fromPeerId_ = readBytes3;
                            break;
                        case 32:
                            this.bitField0_ |= 8;
                            this.timestamp_ = codedInputStream.readInt64();
                            break;
                        case 40:
                            this.bitField0_ |= 16;
                            this.offline_ = codedInputStream.readBool();
                            break;
                        case 48:
                            this.bitField0_ |= 32;
                            this.hasMore_ = codedInputStream.readBool();
                            break;
                        case 58:
                            ByteString readBytes4 = codedInputStream.readBytes();
                            if (!(z2 & true)) {
                                this.toPeerIds_ = new LazyStringArrayList();
                                z2 |= true;
                            }
                            this.toPeerIds_.add(readBytes4);
                            break;
                        case 80:
                            this.bitField0_ |= 64;
                            this.r_ = codedInputStream.readBool();
                            break;
                        case 90:
                            ByteString readBytes5 = codedInputStream.readBytes();
                            this.bitField0_ |= 128;
                            this.cid_ = readBytes5;
                            break;
                        case 98:
                            ByteString readBytes6 = codedInputStream.readBytes();
                            this.bitField0_ |= 256;
                            this.id_ = readBytes6;
                            break;
                        case 104:
                            this.bitField0_ |= 512;
                            this.transient_ = codedInputStream.readBool();
                            break;
                        case 114:
                            ByteString readBytes7 = codedInputStream.readBytes();
                            this.bitField0_ |= 1024;
                            this.dt_ = readBytes7;
                            break;
                        case 122:
                            ByteString readBytes8 = codedInputStream.readBytes();
                            this.bitField0_ |= 2048;
                            this.roomId_ = readBytes8;
                            break;
                        case TsExtractor.TS_STREAM_TYPE_HDMV_DTS /*130*/:
                            ByteString readBytes9 = codedInputStream.readBytes();
                            this.bitField0_ |= 4096;
                            this.pushData_ = readBytes9;
                            break;
                        case 136:
                            this.bitField0_ |= 8192;
                            this.will_ = codedInputStream.readBool();
                            break;
                        case IjkMediaMeta.FF_PROFILE_H264_HIGH_444 /*144*/:
                            this.bitField0_ |= 16384;
                            this.patchTimestamp_ = codedInputStream.readInt64();
                            break;
                        case Opcodes.IFNE /*154*/:
                            this.bitField0_ |= 32768;
                            this.binaryMsg_ = codedInputStream.readBytes();
                            break;
                        case 162:
                            ByteString readBytes10 = codedInputStream.readBytes();
                            if (!(z2 & true)) {
                                this.mentionPids_ = new LazyStringArrayList();
                                z2 |= true;
                            }
                            this.mentionPids_.add(readBytes10);
                            break;
                        case 168:
                            this.bitField0_ |= 65536;
                            this.mentionAll_ = codedInputStream.readBool();
                            break;
                        case 176:
                            this.bitField0_ |= 131072;
                            this.convType_ = codedInputStream.readInt32();
                            break;
                        default:
                            if (parseUnknownField(codedInputStream, newBuilder, extensionRegistryLite, readTag)) {
                                break;
                            }
                            z = true;
                            break;
                    }
                } catch (InvalidProtocolBufferException e) {
                    throw e.setUnfinishedMessage(this);
                } catch (IOException e2) {
                    throw new InvalidProtocolBufferException(e2).setUnfinishedMessage(this);
                } catch (Throwable th) {
                    if (z2 & true) {
                        this.toPeerIds_ = this.toPeerIds_.getUnmodifiableView();
                    }
                    if (z2 & true) {
                        this.mentionPids_ = this.mentionPids_.getUnmodifiableView();
                    }
                    this.unknownFields = newBuilder.build();
                    makeExtensionsImmutable();
                    throw th;
                }
            }
            if (z2 & true) {
                this.toPeerIds_ = this.toPeerIds_.getUnmodifiableView();
            }
            if (z2 & true) {
                this.mentionPids_ = this.mentionPids_.getUnmodifiableView();
            }
            this.unknownFields = newBuilder.build();
            makeExtensionsImmutable();
        }

        public static final Descriptor getDescriptor() {
            return Messages.internal_static_com_avos_avoscloud_DirectCommand_descriptor;
        }

        /* access modifiers changed from: protected */
        public FieldAccessorTable internalGetFieldAccessorTable() {
            return Messages.internal_static_com_avos_avoscloud_DirectCommand_fieldAccessorTable.ensureFieldAccessorsInitialized(DirectCommand.class, Builder.class);
        }

        public boolean hasMsg() {
            return (this.bitField0_ & 1) == 1;
        }

        public String getMsg() {
            Object obj = this.msg_;
            if (obj instanceof String) {
                return (String) obj;
            }
            ByteString byteString = (ByteString) obj;
            String stringUtf8 = byteString.toStringUtf8();
            if (byteString.isValidUtf8()) {
                this.msg_ = stringUtf8;
            }
            return stringUtf8;
        }

        public ByteString getMsgBytes() {
            Object obj = this.msg_;
            if (!(obj instanceof String)) {
                return (ByteString) obj;
            }
            ByteString copyFromUtf8 = ByteString.copyFromUtf8((String) obj);
            this.msg_ = copyFromUtf8;
            return copyFromUtf8;
        }

        public boolean hasUid() {
            return (this.bitField0_ & 2) == 2;
        }

        public String getUid() {
            Object obj = this.uid_;
            if (obj instanceof String) {
                return (String) obj;
            }
            ByteString byteString = (ByteString) obj;
            String stringUtf8 = byteString.toStringUtf8();
            if (byteString.isValidUtf8()) {
                this.uid_ = stringUtf8;
            }
            return stringUtf8;
        }

        public ByteString getUidBytes() {
            Object obj = this.uid_;
            if (!(obj instanceof String)) {
                return (ByteString) obj;
            }
            ByteString copyFromUtf8 = ByteString.copyFromUtf8((String) obj);
            this.uid_ = copyFromUtf8;
            return copyFromUtf8;
        }

        public boolean hasFromPeerId() {
            return (this.bitField0_ & 4) == 4;
        }

        public String getFromPeerId() {
            Object obj = this.fromPeerId_;
            if (obj instanceof String) {
                return (String) obj;
            }
            ByteString byteString = (ByteString) obj;
            String stringUtf8 = byteString.toStringUtf8();
            if (byteString.isValidUtf8()) {
                this.fromPeerId_ = stringUtf8;
            }
            return stringUtf8;
        }

        public ByteString getFromPeerIdBytes() {
            Object obj = this.fromPeerId_;
            if (!(obj instanceof String)) {
                return (ByteString) obj;
            }
            ByteString copyFromUtf8 = ByteString.copyFromUtf8((String) obj);
            this.fromPeerId_ = copyFromUtf8;
            return copyFromUtf8;
        }

        public boolean hasTimestamp() {
            return (this.bitField0_ & 8) == 8;
        }

        public long getTimestamp() {
            return this.timestamp_;
        }

        public boolean hasOffline() {
            return (this.bitField0_ & 16) == 16;
        }

        public boolean getOffline() {
            return this.offline_;
        }

        public boolean hasHasMore() {
            return (this.bitField0_ & 32) == 32;
        }

        public boolean getHasMore() {
            return this.hasMore_;
        }

        public ProtocolStringList getToPeerIdsList() {
            return this.toPeerIds_;
        }

        public int getToPeerIdsCount() {
            return this.toPeerIds_.size();
        }

        public String getToPeerIds(int i) {
            return (String) this.toPeerIds_.get(i);
        }

        public ByteString getToPeerIdsBytes(int i) {
            return this.toPeerIds_.getByteString(i);
        }

        public boolean hasR() {
            return (this.bitField0_ & 64) == 64;
        }

        public boolean getR() {
            return this.r_;
        }

        public boolean hasCid() {
            return (this.bitField0_ & 128) == 128;
        }

        public String getCid() {
            Object obj = this.cid_;
            if (obj instanceof String) {
                return (String) obj;
            }
            ByteString byteString = (ByteString) obj;
            String stringUtf8 = byteString.toStringUtf8();
            if (byteString.isValidUtf8()) {
                this.cid_ = stringUtf8;
            }
            return stringUtf8;
        }

        public ByteString getCidBytes() {
            Object obj = this.cid_;
            if (!(obj instanceof String)) {
                return (ByteString) obj;
            }
            ByteString copyFromUtf8 = ByteString.copyFromUtf8((String) obj);
            this.cid_ = copyFromUtf8;
            return copyFromUtf8;
        }

        public boolean hasId() {
            return (this.bitField0_ & 256) == 256;
        }

        public String getId() {
            Object obj = this.id_;
            if (obj instanceof String) {
                return (String) obj;
            }
            ByteString byteString = (ByteString) obj;
            String stringUtf8 = byteString.toStringUtf8();
            if (byteString.isValidUtf8()) {
                this.id_ = stringUtf8;
            }
            return stringUtf8;
        }

        public ByteString getIdBytes() {
            Object obj = this.id_;
            if (!(obj instanceof String)) {
                return (ByteString) obj;
            }
            ByteString copyFromUtf8 = ByteString.copyFromUtf8((String) obj);
            this.id_ = copyFromUtf8;
            return copyFromUtf8;
        }

        public boolean hasTransient() {
            return (this.bitField0_ & 512) == 512;
        }

        public boolean getTransient() {
            return this.transient_;
        }

        public boolean hasDt() {
            return (this.bitField0_ & 1024) == 1024;
        }

        public String getDt() {
            Object obj = this.dt_;
            if (obj instanceof String) {
                return (String) obj;
            }
            ByteString byteString = (ByteString) obj;
            String stringUtf8 = byteString.toStringUtf8();
            if (byteString.isValidUtf8()) {
                this.dt_ = stringUtf8;
            }
            return stringUtf8;
        }

        public ByteString getDtBytes() {
            Object obj = this.dt_;
            if (!(obj instanceof String)) {
                return (ByteString) obj;
            }
            ByteString copyFromUtf8 = ByteString.copyFromUtf8((String) obj);
            this.dt_ = copyFromUtf8;
            return copyFromUtf8;
        }

        public boolean hasRoomId() {
            return (this.bitField0_ & 2048) == 2048;
        }

        public String getRoomId() {
            Object obj = this.roomId_;
            if (obj instanceof String) {
                return (String) obj;
            }
            ByteString byteString = (ByteString) obj;
            String stringUtf8 = byteString.toStringUtf8();
            if (byteString.isValidUtf8()) {
                this.roomId_ = stringUtf8;
            }
            return stringUtf8;
        }

        public ByteString getRoomIdBytes() {
            Object obj = this.roomId_;
            if (!(obj instanceof String)) {
                return (ByteString) obj;
            }
            ByteString copyFromUtf8 = ByteString.copyFromUtf8((String) obj);
            this.roomId_ = copyFromUtf8;
            return copyFromUtf8;
        }

        public boolean hasPushData() {
            return (this.bitField0_ & 4096) == 4096;
        }

        public String getPushData() {
            Object obj = this.pushData_;
            if (obj instanceof String) {
                return (String) obj;
            }
            ByteString byteString = (ByteString) obj;
            String stringUtf8 = byteString.toStringUtf8();
            if (byteString.isValidUtf8()) {
                this.pushData_ = stringUtf8;
            }
            return stringUtf8;
        }

        public ByteString getPushDataBytes() {
            Object obj = this.pushData_;
            if (!(obj instanceof String)) {
                return (ByteString) obj;
            }
            ByteString copyFromUtf8 = ByteString.copyFromUtf8((String) obj);
            this.pushData_ = copyFromUtf8;
            return copyFromUtf8;
        }

        public boolean hasWill() {
            return (this.bitField0_ & 8192) == 8192;
        }

        public boolean getWill() {
            return this.will_;
        }

        public boolean hasPatchTimestamp() {
            return (this.bitField0_ & 16384) == 16384;
        }

        public long getPatchTimestamp() {
            return this.patchTimestamp_;
        }

        public boolean hasBinaryMsg() {
            return (this.bitField0_ & 32768) == 32768;
        }

        public ByteString getBinaryMsg() {
            return this.binaryMsg_;
        }

        public ProtocolStringList getMentionPidsList() {
            return this.mentionPids_;
        }

        public int getMentionPidsCount() {
            return this.mentionPids_.size();
        }

        public String getMentionPids(int i) {
            return (String) this.mentionPids_.get(i);
        }

        public ByteString getMentionPidsBytes(int i) {
            return this.mentionPids_.getByteString(i);
        }

        public boolean hasMentionAll() {
            return (this.bitField0_ & 65536) == 65536;
        }

        public boolean getMentionAll() {
            return this.mentionAll_;
        }

        public boolean hasConvType() {
            return (this.bitField0_ & 131072) == 131072;
        }

        public int getConvType() {
            return this.convType_;
        }

        public final boolean isInitialized() {
            byte b = this.memoizedIsInitialized;
            if (b == 1) {
                return true;
            }
            if (b == 0) {
                return false;
            }
            this.memoizedIsInitialized = 1;
            return true;
        }

        public void writeTo(CodedOutputStream codedOutputStream) throws IOException {
            if ((this.bitField0_ & 1) == 1) {
                GeneratedMessageV3.writeString(codedOutputStream, 1, this.msg_);
            }
            if ((this.bitField0_ & 2) == 2) {
                GeneratedMessageV3.writeString(codedOutputStream, 2, this.uid_);
            }
            if ((this.bitField0_ & 4) == 4) {
                GeneratedMessageV3.writeString(codedOutputStream, 3, this.fromPeerId_);
            }
            if ((this.bitField0_ & 8) == 8) {
                codedOutputStream.writeInt64(4, this.timestamp_);
            }
            if ((this.bitField0_ & 16) == 16) {
                codedOutputStream.writeBool(5, this.offline_);
            }
            if ((this.bitField0_ & 32) == 32) {
                codedOutputStream.writeBool(6, this.hasMore_);
            }
            for (int i = 0; i < this.toPeerIds_.size(); i++) {
                GeneratedMessageV3.writeString(codedOutputStream, 7, this.toPeerIds_.getRaw(i));
            }
            if ((this.bitField0_ & 64) == 64) {
                codedOutputStream.writeBool(10, this.r_);
            }
            if ((this.bitField0_ & 128) == 128) {
                GeneratedMessageV3.writeString(codedOutputStream, 11, this.cid_);
            }
            if ((this.bitField0_ & 256) == 256) {
                GeneratedMessageV3.writeString(codedOutputStream, 12, this.id_);
            }
            if ((this.bitField0_ & 512) == 512) {
                codedOutputStream.writeBool(13, this.transient_);
            }
            if ((this.bitField0_ & 1024) == 1024) {
                GeneratedMessageV3.writeString(codedOutputStream, 14, this.dt_);
            }
            if ((this.bitField0_ & 2048) == 2048) {
                GeneratedMessageV3.writeString(codedOutputStream, 15, this.roomId_);
            }
            if ((this.bitField0_ & 4096) == 4096) {
                GeneratedMessageV3.writeString(codedOutputStream, 16, this.pushData_);
            }
            if ((this.bitField0_ & 8192) == 8192) {
                codedOutputStream.writeBool(17, this.will_);
            }
            if ((this.bitField0_ & 16384) == 16384) {
                codedOutputStream.writeInt64(18, this.patchTimestamp_);
            }
            if ((this.bitField0_ & 32768) == 32768) {
                codedOutputStream.writeBytes(19, this.binaryMsg_);
            }
            for (int i2 = 0; i2 < this.mentionPids_.size(); i2++) {
                GeneratedMessageV3.writeString(codedOutputStream, 20, this.mentionPids_.getRaw(i2));
            }
            if ((this.bitField0_ & 65536) == 65536) {
                codedOutputStream.writeBool(21, this.mentionAll_);
            }
            if ((this.bitField0_ & 131072) == 131072) {
                codedOutputStream.writeInt32(22, this.convType_);
            }
            this.unknownFields.writeTo(codedOutputStream);
        }

        public int getSerializedSize() {
            int i = this.memoizedSize;
            if (i != -1) {
                return i;
            }
            int computeStringSize = (this.bitField0_ & 1) == 1 ? GeneratedMessageV3.computeStringSize(1, this.msg_) + 0 : 0;
            if ((this.bitField0_ & 2) == 2) {
                computeStringSize += GeneratedMessageV3.computeStringSize(2, this.uid_);
            }
            if ((this.bitField0_ & 4) == 4) {
                computeStringSize += GeneratedMessageV3.computeStringSize(3, this.fromPeerId_);
            }
            if ((this.bitField0_ & 8) == 8) {
                computeStringSize += CodedOutputStream.computeInt64Size(4, this.timestamp_);
            }
            if ((this.bitField0_ & 16) == 16) {
                computeStringSize += CodedOutputStream.computeBoolSize(5, this.offline_);
            }
            if ((this.bitField0_ & 32) == 32) {
                computeStringSize += CodedOutputStream.computeBoolSize(6, this.hasMore_);
            }
            int i2 = 0;
            for (int i3 = 0; i3 < this.toPeerIds_.size(); i3++) {
                i2 += computeStringSizeNoTag(this.toPeerIds_.getRaw(i3));
            }
            int size = computeStringSize + i2 + (getToPeerIdsList().size() * 1);
            if ((this.bitField0_ & 64) == 64) {
                size += CodedOutputStream.computeBoolSize(10, this.r_);
            }
            if ((this.bitField0_ & 128) == 128) {
                size += GeneratedMessageV3.computeStringSize(11, this.cid_);
            }
            if ((this.bitField0_ & 256) == 256) {
                size += GeneratedMessageV3.computeStringSize(12, this.id_);
            }
            if ((this.bitField0_ & 512) == 512) {
                size += CodedOutputStream.computeBoolSize(13, this.transient_);
            }
            if ((this.bitField0_ & 1024) == 1024) {
                size += GeneratedMessageV3.computeStringSize(14, this.dt_);
            }
            if ((this.bitField0_ & 2048) == 2048) {
                size += GeneratedMessageV3.computeStringSize(15, this.roomId_);
            }
            if ((this.bitField0_ & 4096) == 4096) {
                size += GeneratedMessageV3.computeStringSize(16, this.pushData_);
            }
            if ((this.bitField0_ & 8192) == 8192) {
                size += CodedOutputStream.computeBoolSize(17, this.will_);
            }
            if ((this.bitField0_ & 16384) == 16384) {
                size += CodedOutputStream.computeInt64Size(18, this.patchTimestamp_);
            }
            if ((this.bitField0_ & 32768) == 32768) {
                size += CodedOutputStream.computeBytesSize(19, this.binaryMsg_);
            }
            int i4 = 0;
            for (int i5 = 0; i5 < this.mentionPids_.size(); i5++) {
                i4 += computeStringSizeNoTag(this.mentionPids_.getRaw(i5));
            }
            int size2 = size + i4 + (getMentionPidsList().size() * 2);
            if ((this.bitField0_ & 65536) == 65536) {
                size2 += CodedOutputStream.computeBoolSize(21, this.mentionAll_);
            }
            if ((this.bitField0_ & 131072) == 131072) {
                size2 += CodedOutputStream.computeInt32Size(22, this.convType_);
            }
            int serializedSize = size2 + this.unknownFields.getSerializedSize();
            this.memoizedSize = serializedSize;
            return serializedSize;
        }

        public boolean equals(Object obj) {
            boolean z = true;
            if (obj == this) {
                return true;
            }
            if (!(obj instanceof DirectCommand)) {
                return super.equals(obj);
            }
            DirectCommand directCommand = (DirectCommand) obj;
            boolean z2 = hasMsg() == directCommand.hasMsg();
            if (hasMsg()) {
                z2 = z2 && getMsg().equals(directCommand.getMsg());
            }
            boolean z3 = z2 && hasUid() == directCommand.hasUid();
            if (hasUid()) {
                z3 = z3 && getUid().equals(directCommand.getUid());
            }
            boolean z4 = z3 && hasFromPeerId() == directCommand.hasFromPeerId();
            if (hasFromPeerId()) {
                z4 = z4 && getFromPeerId().equals(directCommand.getFromPeerId());
            }
            boolean z5 = z4 && hasTimestamp() == directCommand.hasTimestamp();
            if (hasTimestamp()) {
                z5 = z5 && getTimestamp() == directCommand.getTimestamp();
            }
            boolean z6 = z5 && hasOffline() == directCommand.hasOffline();
            if (hasOffline()) {
                z6 = z6 && getOffline() == directCommand.getOffline();
            }
            boolean z7 = z6 && hasHasMore() == directCommand.hasHasMore();
            if (hasHasMore()) {
                z7 = z7 && getHasMore() == directCommand.getHasMore();
            }
            boolean z8 = (z7 && getToPeerIdsList().equals(directCommand.getToPeerIdsList())) && hasR() == directCommand.hasR();
            if (hasR()) {
                z8 = z8 && getR() == directCommand.getR();
            }
            boolean z9 = z8 && hasCid() == directCommand.hasCid();
            if (hasCid()) {
                z9 = z9 && getCid().equals(directCommand.getCid());
            }
            boolean z10 = z9 && hasId() == directCommand.hasId();
            if (hasId()) {
                z10 = z10 && getId().equals(directCommand.getId());
            }
            boolean z11 = z10 && hasTransient() == directCommand.hasTransient();
            if (hasTransient()) {
                z11 = z11 && getTransient() == directCommand.getTransient();
            }
            boolean z12 = z11 && hasDt() == directCommand.hasDt();
            if (hasDt()) {
                z12 = z12 && getDt().equals(directCommand.getDt());
            }
            boolean z13 = z12 && hasRoomId() == directCommand.hasRoomId();
            if (hasRoomId()) {
                z13 = z13 && getRoomId().equals(directCommand.getRoomId());
            }
            boolean z14 = z13 && hasPushData() == directCommand.hasPushData();
            if (hasPushData()) {
                z14 = z14 && getPushData().equals(directCommand.getPushData());
            }
            boolean z15 = z14 && hasWill() == directCommand.hasWill();
            if (hasWill()) {
                z15 = z15 && getWill() == directCommand.getWill();
            }
            boolean z16 = z15 && hasPatchTimestamp() == directCommand.hasPatchTimestamp();
            if (hasPatchTimestamp()) {
                z16 = z16 && getPatchTimestamp() == directCommand.getPatchTimestamp();
            }
            boolean z17 = z16 && hasBinaryMsg() == directCommand.hasBinaryMsg();
            if (hasBinaryMsg()) {
                z17 = z17 && getBinaryMsg().equals(directCommand.getBinaryMsg());
            }
            boolean z18 = (z17 && getMentionPidsList().equals(directCommand.getMentionPidsList())) && hasMentionAll() == directCommand.hasMentionAll();
            if (hasMentionAll()) {
                z18 = z18 && getMentionAll() == directCommand.getMentionAll();
            }
            boolean z19 = z18 && hasConvType() == directCommand.hasConvType();
            if (hasConvType()) {
                z19 = z19 && getConvType() == directCommand.getConvType();
            }
            if (!z19 || !this.unknownFields.equals(directCommand.unknownFields)) {
                z = false;
            }
            return z;
        }

        public int hashCode() {
            if (this.memoizedHashCode != 0) {
                return this.memoizedHashCode;
            }
            int hashCode = 779 + getDescriptor().hashCode();
            if (hasMsg()) {
                hashCode = (((hashCode * 37) + 1) * 53) + getMsg().hashCode();
            }
            if (hasUid()) {
                hashCode = (((hashCode * 37) + 2) * 53) + getUid().hashCode();
            }
            if (hasFromPeerId()) {
                hashCode = (((hashCode * 37) + 3) * 53) + getFromPeerId().hashCode();
            }
            if (hasTimestamp()) {
                hashCode = (((hashCode * 37) + 4) * 53) + Internal.hashLong(getTimestamp());
            }
            if (hasOffline()) {
                hashCode = (((hashCode * 37) + 5) * 53) + Internal.hashBoolean(getOffline());
            }
            if (hasHasMore()) {
                hashCode = (((hashCode * 37) + 6) * 53) + Internal.hashBoolean(getHasMore());
            }
            if (getToPeerIdsCount() > 0) {
                hashCode = (((hashCode * 37) + 7) * 53) + getToPeerIdsList().hashCode();
            }
            if (hasR()) {
                hashCode = (((hashCode * 37) + 10) * 53) + Internal.hashBoolean(getR());
            }
            if (hasCid()) {
                hashCode = (((hashCode * 37) + 11) * 53) + getCid().hashCode();
            }
            if (hasId()) {
                hashCode = (((hashCode * 37) + 12) * 53) + getId().hashCode();
            }
            if (hasTransient()) {
                hashCode = (((hashCode * 37) + 13) * 53) + Internal.hashBoolean(getTransient());
            }
            if (hasDt()) {
                hashCode = (((hashCode * 37) + 14) * 53) + getDt().hashCode();
            }
            if (hasRoomId()) {
                hashCode = (((hashCode * 37) + 15) * 53) + getRoomId().hashCode();
            }
            if (hasPushData()) {
                hashCode = (((hashCode * 37) + 16) * 53) + getPushData().hashCode();
            }
            if (hasWill()) {
                hashCode = (((hashCode * 37) + 17) * 53) + Internal.hashBoolean(getWill());
            }
            if (hasPatchTimestamp()) {
                hashCode = (((hashCode * 37) + 18) * 53) + Internal.hashLong(getPatchTimestamp());
            }
            if (hasBinaryMsg()) {
                hashCode = (((hashCode * 37) + 19) * 53) + getBinaryMsg().hashCode();
            }
            if (getMentionPidsCount() > 0) {
                hashCode = (((hashCode * 37) + 20) * 53) + getMentionPidsList().hashCode();
            }
            if (hasMentionAll()) {
                hashCode = (((hashCode * 37) + 21) * 53) + Internal.hashBoolean(getMentionAll());
            }
            if (hasConvType()) {
                hashCode = (((hashCode * 37) + 22) * 53) + getConvType();
            }
            int hashCode2 = (hashCode * 29) + this.unknownFields.hashCode();
            this.memoizedHashCode = hashCode2;
            return hashCode2;
        }

        public static DirectCommand parseFrom(ByteBuffer byteBuffer) throws InvalidProtocolBufferException {
            return (DirectCommand) PARSER.parseFrom(byteBuffer);
        }

        public static DirectCommand parseFrom(ByteBuffer byteBuffer, ExtensionRegistryLite extensionRegistryLite) throws InvalidProtocolBufferException {
            return (DirectCommand) PARSER.parseFrom(byteBuffer, extensionRegistryLite);
        }

        public static DirectCommand parseFrom(ByteString byteString) throws InvalidProtocolBufferException {
            return (DirectCommand) PARSER.parseFrom(byteString);
        }

        public static DirectCommand parseFrom(ByteString byteString, ExtensionRegistryLite extensionRegistryLite) throws InvalidProtocolBufferException {
            return (DirectCommand) PARSER.parseFrom(byteString, extensionRegistryLite);
        }

        public static DirectCommand parseFrom(byte[] bArr) throws InvalidProtocolBufferException {
            return (DirectCommand) PARSER.parseFrom(bArr);
        }

        public static DirectCommand parseFrom(byte[] bArr, ExtensionRegistryLite extensionRegistryLite) throws InvalidProtocolBufferException {
            return (DirectCommand) PARSER.parseFrom(bArr, extensionRegistryLite);
        }

        public static DirectCommand parseFrom(InputStream inputStream) throws IOException {
            return (DirectCommand) GeneratedMessageV3.parseWithIOException(PARSER, inputStream);
        }

        public static DirectCommand parseFrom(InputStream inputStream, ExtensionRegistryLite extensionRegistryLite) throws IOException {
            return (DirectCommand) GeneratedMessageV3.parseWithIOException(PARSER, inputStream, extensionRegistryLite);
        }

        public static DirectCommand parseDelimitedFrom(InputStream inputStream) throws IOException {
            return (DirectCommand) GeneratedMessageV3.parseDelimitedWithIOException(PARSER, inputStream);
        }

        public static DirectCommand parseDelimitedFrom(InputStream inputStream, ExtensionRegistryLite extensionRegistryLite) throws IOException {
            return (DirectCommand) GeneratedMessageV3.parseDelimitedWithIOException(PARSER, inputStream, extensionRegistryLite);
        }

        public static DirectCommand parseFrom(CodedInputStream codedInputStream) throws IOException {
            return (DirectCommand) GeneratedMessageV3.parseWithIOException(PARSER, codedInputStream);
        }

        public static DirectCommand parseFrom(CodedInputStream codedInputStream, ExtensionRegistryLite extensionRegistryLite) throws IOException {
            return (DirectCommand) GeneratedMessageV3.parseWithIOException(PARSER, codedInputStream, extensionRegistryLite);
        }

        public Builder newBuilderForType() {
            return newBuilder();
        }

        public static Builder newBuilder() {
            return DEFAULT_INSTANCE.toBuilder();
        }

        public static Builder newBuilder(DirectCommand directCommand) {
            return DEFAULT_INSTANCE.toBuilder().mergeFrom(directCommand);
        }

        public Builder toBuilder() {
            if (this == DEFAULT_INSTANCE) {
                return new Builder();
            }
            return new Builder().mergeFrom(this);
        }

        /* access modifiers changed from: protected */
        public Builder newBuilderForType(BuilderParent builderParent) {
            return new Builder(builderParent);
        }

        public static DirectCommand getDefaultInstance() {
            return DEFAULT_INSTANCE;
        }

        public static Parser<DirectCommand> parser() {
            return PARSER;
        }

        public Parser<DirectCommand> getParserForType() {
            return PARSER;
        }

        public DirectCommand getDefaultInstanceForType() {
            return DEFAULT_INSTANCE;
        }
    }

    public interface DirectCommandOrBuilder extends MessageOrBuilder {
        ByteString getBinaryMsg();

        String getCid();

        ByteString getCidBytes();

        int getConvType();

        String getDt();

        ByteString getDtBytes();

        String getFromPeerId();

        ByteString getFromPeerIdBytes();

        boolean getHasMore();

        String getId();

        ByteString getIdBytes();

        boolean getMentionAll();

        String getMentionPids(int i);

        ByteString getMentionPidsBytes(int i);

        int getMentionPidsCount();

        List<String> getMentionPidsList();

        String getMsg();

        ByteString getMsgBytes();

        boolean getOffline();

        long getPatchTimestamp();

        String getPushData();

        ByteString getPushDataBytes();

        boolean getR();

        String getRoomId();

        ByteString getRoomIdBytes();

        long getTimestamp();

        String getToPeerIds(int i);

        ByteString getToPeerIdsBytes(int i);

        int getToPeerIdsCount();

        List<String> getToPeerIdsList();

        boolean getTransient();

        String getUid();

        ByteString getUidBytes();

        boolean getWill();

        boolean hasBinaryMsg();

        boolean hasCid();

        boolean hasConvType();

        boolean hasDt();

        boolean hasFromPeerId();

        boolean hasHasMore();

        boolean hasId();

        boolean hasMentionAll();

        boolean hasMsg();

        boolean hasOffline();

        boolean hasPatchTimestamp();

        boolean hasPushData();

        boolean hasR();

        boolean hasRoomId();

        boolean hasTimestamp();

        boolean hasTransient();

        boolean hasUid();

        boolean hasWill();
    }

    public static final class ErrorCommand extends GeneratedMessageV3 implements ErrorCommandOrBuilder {
        public static final int APPCODE_FIELD_NUMBER = 3;
        public static final int CODE_FIELD_NUMBER = 1;
        private static final ErrorCommand DEFAULT_INSTANCE = new ErrorCommand();
        public static final int DETAIL_FIELD_NUMBER = 4;
        @Deprecated
        public static final Parser<ErrorCommand> PARSER = new AbstractParser<ErrorCommand>() {
            public ErrorCommand parsePartialFrom(CodedInputStream codedInputStream, ExtensionRegistryLite extensionRegistryLite) throws InvalidProtocolBufferException {
                return new ErrorCommand(codedInputStream, extensionRegistryLite);
            }
        };
        public static final int PIDS_FIELD_NUMBER = 5;
        public static final int REASON_FIELD_NUMBER = 2;
        private static final long serialVersionUID = 0;
        /* access modifiers changed from: private */
        public int appCode_;
        /* access modifiers changed from: private */
        public int bitField0_;
        /* access modifiers changed from: private */
        public int code_;
        /* access modifiers changed from: private */
        public volatile Object detail_;
        private byte memoizedIsInitialized;
        /* access modifiers changed from: private */
        public LazyStringList pids_;
        /* access modifiers changed from: private */
        public volatile Object reason_;

        public static final class Builder extends com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements ErrorCommandOrBuilder {
            private int appCode_;
            private int bitField0_;
            private int code_;
            private Object detail_;
            private LazyStringList pids_;
            private Object reason_;

            public static final Descriptor getDescriptor() {
                return Messages.internal_static_com_avos_avoscloud_ErrorCommand_descriptor;
            }

            /* access modifiers changed from: protected */
            public FieldAccessorTable internalGetFieldAccessorTable() {
                return Messages.internal_static_com_avos_avoscloud_ErrorCommand_fieldAccessorTable.ensureFieldAccessorsInitialized(ErrorCommand.class, Builder.class);
            }

            private Builder() {
                String str = "";
                this.reason_ = str;
                this.detail_ = str;
                this.pids_ = LazyStringArrayList.EMPTY;
                maybeForceBuilderInitialization();
            }

            private Builder(BuilderParent builderParent) {
                super(builderParent);
                String str = "";
                this.reason_ = str;
                this.detail_ = str;
                this.pids_ = LazyStringArrayList.EMPTY;
                maybeForceBuilderInitialization();
            }

            private void maybeForceBuilderInitialization() {
                ErrorCommand.alwaysUseFieldBuilders;
            }

            public Builder clear() {
                super.clear();
                this.code_ = 0;
                this.bitField0_ &= -2;
                String str = "";
                this.reason_ = str;
                this.bitField0_ &= -3;
                this.appCode_ = 0;
                this.bitField0_ &= -5;
                this.detail_ = str;
                this.bitField0_ &= -9;
                this.pids_ = LazyStringArrayList.EMPTY;
                this.bitField0_ &= -17;
                return this;
            }

            public Descriptor getDescriptorForType() {
                return Messages.internal_static_com_avos_avoscloud_ErrorCommand_descriptor;
            }

            public ErrorCommand getDefaultInstanceForType() {
                return ErrorCommand.getDefaultInstance();
            }

            public ErrorCommand build() {
                ErrorCommand buildPartial = buildPartial();
                if (buildPartial.isInitialized()) {
                    return buildPartial;
                }
                throw newUninitializedMessageException(buildPartial);
            }

            public ErrorCommand buildPartial() {
                ErrorCommand errorCommand = new ErrorCommand((com.google.protobuf.GeneratedMessageV3.Builder) this);
                int i = this.bitField0_;
                int i2 = 1;
                if ((i & 1) != 1) {
                    i2 = 0;
                }
                errorCommand.code_ = this.code_;
                if ((i & 2) == 2) {
                    i2 |= 2;
                }
                errorCommand.reason_ = this.reason_;
                if ((i & 4) == 4) {
                    i2 |= 4;
                }
                errorCommand.appCode_ = this.appCode_;
                if ((i & 8) == 8) {
                    i2 |= 8;
                }
                errorCommand.detail_ = this.detail_;
                if ((this.bitField0_ & 16) == 16) {
                    this.pids_ = this.pids_.getUnmodifiableView();
                    this.bitField0_ &= -17;
                }
                errorCommand.pids_ = this.pids_;
                errorCommand.bitField0_ = i2;
                onBuilt();
                return errorCommand;
            }

            public Builder clone() {
                return (Builder) super.clone();
            }

            public Builder setField(FieldDescriptor fieldDescriptor, Object obj) {
                return (Builder) super.setField(fieldDescriptor, obj);
            }

            public Builder clearField(FieldDescriptor fieldDescriptor) {
                return (Builder) super.clearField(fieldDescriptor);
            }

            public Builder clearOneof(OneofDescriptor oneofDescriptor) {
                return (Builder) super.clearOneof(oneofDescriptor);
            }

            public Builder setRepeatedField(FieldDescriptor fieldDescriptor, int i, Object obj) {
                return (Builder) super.setRepeatedField(fieldDescriptor, i, obj);
            }

            public Builder addRepeatedField(FieldDescriptor fieldDescriptor, Object obj) {
                return (Builder) super.addRepeatedField(fieldDescriptor, obj);
            }

            public Builder mergeFrom(Message message) {
                if (message instanceof ErrorCommand) {
                    return mergeFrom((ErrorCommand) message);
                }
                super.mergeFrom(message);
                return this;
            }

            public Builder mergeFrom(ErrorCommand errorCommand) {
                if (errorCommand == ErrorCommand.getDefaultInstance()) {
                    return this;
                }
                if (errorCommand.hasCode()) {
                    setCode(errorCommand.getCode());
                }
                if (errorCommand.hasReason()) {
                    this.bitField0_ |= 2;
                    this.reason_ = errorCommand.reason_;
                    onChanged();
                }
                if (errorCommand.hasAppCode()) {
                    setAppCode(errorCommand.getAppCode());
                }
                if (errorCommand.hasDetail()) {
                    this.bitField0_ |= 8;
                    this.detail_ = errorCommand.detail_;
                    onChanged();
                }
                if (!errorCommand.pids_.isEmpty()) {
                    if (this.pids_.isEmpty()) {
                        this.pids_ = errorCommand.pids_;
                        this.bitField0_ &= -17;
                    } else {
                        ensurePidsIsMutable();
                        this.pids_.addAll(errorCommand.pids_);
                    }
                    onChanged();
                }
                mergeUnknownFields(errorCommand.unknownFields);
                onChanged();
                return this;
            }

            public final boolean isInitialized() {
                if (hasCode() && hasReason()) {
                    return true;
                }
                return false;
            }

            /* JADX WARNING: Removed duplicated region for block: B:16:0x0021  */
            /* Code decompiled incorrectly, please refer to instructions dump. */
            public com.avos.avoscloud.Messages.ErrorCommand.Builder mergeFrom(com.google.protobuf.CodedInputStream r3, com.google.protobuf.ExtensionRegistryLite r4) throws java.io.IOException {
                /*
                    r2 = this;
                    r0 = 0
                    com.google.protobuf.Parser<com.avos.avoscloud.Messages$ErrorCommand> r1 = com.avos.avoscloud.Messages.ErrorCommand.PARSER     // Catch:{ InvalidProtocolBufferException -> 0x0011 }
                    java.lang.Object r3 = r1.parsePartialFrom(r3, r4)     // Catch:{ InvalidProtocolBufferException -> 0x0011 }
                    com.avos.avoscloud.Messages$ErrorCommand r3 = (com.avos.avoscloud.Messages.ErrorCommand) r3     // Catch:{ InvalidProtocolBufferException -> 0x0011 }
                    if (r3 == 0) goto L_0x000e
                    r2.mergeFrom(r3)
                L_0x000e:
                    return r2
                L_0x000f:
                    r3 = move-exception
                    goto L_0x001f
                L_0x0011:
                    r3 = move-exception
                    com.google.protobuf.MessageLite r4 = r3.getUnfinishedMessage()     // Catch:{ all -> 0x000f }
                    com.avos.avoscloud.Messages$ErrorCommand r4 = (com.avos.avoscloud.Messages.ErrorCommand) r4     // Catch:{ all -> 0x000f }
                    java.io.IOException r3 = r3.unwrapIOException()     // Catch:{ all -> 0x001d }
                    throw r3     // Catch:{ all -> 0x001d }
                L_0x001d:
                    r3 = move-exception
                    r0 = r4
                L_0x001f:
                    if (r0 == 0) goto L_0x0024
                    r2.mergeFrom(r0)
                L_0x0024:
                    throw r3
                */
                throw new UnsupportedOperationException("Method not decompiled: com.avos.avoscloud.Messages.ErrorCommand.Builder.mergeFrom(com.google.protobuf.CodedInputStream, com.google.protobuf.ExtensionRegistryLite):com.avos.avoscloud.Messages$ErrorCommand$Builder");
            }

            public boolean hasCode() {
                return (this.bitField0_ & 1) == 1;
            }

            public int getCode() {
                return this.code_;
            }

            public Builder setCode(int i) {
                this.bitField0_ |= 1;
                this.code_ = i;
                onChanged();
                return this;
            }

            public Builder clearCode() {
                this.bitField0_ &= -2;
                this.code_ = 0;
                onChanged();
                return this;
            }

            public boolean hasReason() {
                return (this.bitField0_ & 2) == 2;
            }

            public String getReason() {
                Object obj = this.reason_;
                if (obj instanceof String) {
                    return (String) obj;
                }
                ByteString byteString = (ByteString) obj;
                String stringUtf8 = byteString.toStringUtf8();
                if (byteString.isValidUtf8()) {
                    this.reason_ = stringUtf8;
                }
                return stringUtf8;
            }

            public ByteString getReasonBytes() {
                Object obj = this.reason_;
                if (!(obj instanceof String)) {
                    return (ByteString) obj;
                }
                ByteString copyFromUtf8 = ByteString.copyFromUtf8((String) obj);
                this.reason_ = copyFromUtf8;
                return copyFromUtf8;
            }

            public Builder setReason(String str) {
                if (str != null) {
                    this.bitField0_ |= 2;
                    this.reason_ = str;
                    onChanged();
                    return this;
                }
                throw new NullPointerException();
            }

            public Builder clearReason() {
                this.bitField0_ &= -3;
                this.reason_ = ErrorCommand.getDefaultInstance().getReason();
                onChanged();
                return this;
            }

            public Builder setReasonBytes(ByteString byteString) {
                if (byteString != null) {
                    this.bitField0_ |= 2;
                    this.reason_ = byteString;
                    onChanged();
                    return this;
                }
                throw new NullPointerException();
            }

            public boolean hasAppCode() {
                return (this.bitField0_ & 4) == 4;
            }

            public int getAppCode() {
                return this.appCode_;
            }

            public Builder setAppCode(int i) {
                this.bitField0_ |= 4;
                this.appCode_ = i;
                onChanged();
                return this;
            }

            public Builder clearAppCode() {
                this.bitField0_ &= -5;
                this.appCode_ = 0;
                onChanged();
                return this;
            }

            public boolean hasDetail() {
                return (this.bitField0_ & 8) == 8;
            }

            public String getDetail() {
                Object obj = this.detail_;
                if (obj instanceof String) {
                    return (String) obj;
                }
                ByteString byteString = (ByteString) obj;
                String stringUtf8 = byteString.toStringUtf8();
                if (byteString.isValidUtf8()) {
                    this.detail_ = stringUtf8;
                }
                return stringUtf8;
            }

            public ByteString getDetailBytes() {
                Object obj = this.detail_;
                if (!(obj instanceof String)) {
                    return (ByteString) obj;
                }
                ByteString copyFromUtf8 = ByteString.copyFromUtf8((String) obj);
                this.detail_ = copyFromUtf8;
                return copyFromUtf8;
            }

            public Builder setDetail(String str) {
                if (str != null) {
                    this.bitField0_ |= 8;
                    this.detail_ = str;
                    onChanged();
                    return this;
                }
                throw new NullPointerException();
            }

            public Builder clearDetail() {
                this.bitField0_ &= -9;
                this.detail_ = ErrorCommand.getDefaultInstance().getDetail();
                onChanged();
                return this;
            }

            public Builder setDetailBytes(ByteString byteString) {
                if (byteString != null) {
                    this.bitField0_ |= 8;
                    this.detail_ = byteString;
                    onChanged();
                    return this;
                }
                throw new NullPointerException();
            }

            private void ensurePidsIsMutable() {
                if ((this.bitField0_ & 16) != 16) {
                    this.pids_ = new LazyStringArrayList(this.pids_);
                    this.bitField0_ |= 16;
                }
            }

            public ProtocolStringList getPidsList() {
                return this.pids_.getUnmodifiableView();
            }

            public int getPidsCount() {
                return this.pids_.size();
            }

            public String getPids(int i) {
                return (String) this.pids_.get(i);
            }

            public ByteString getPidsBytes(int i) {
                return this.pids_.getByteString(i);
            }

            public Builder setPids(int i, String str) {
                if (str != null) {
                    ensurePidsIsMutable();
                    this.pids_.set(i, str);
                    onChanged();
                    return this;
                }
                throw new NullPointerException();
            }

            public Builder addPids(String str) {
                if (str != null) {
                    ensurePidsIsMutable();
                    this.pids_.add(str);
                    onChanged();
                    return this;
                }
                throw new NullPointerException();
            }

            public Builder addAllPids(Iterable<String> iterable) {
                ensurePidsIsMutable();
                com.google.protobuf.AbstractMessageLite.Builder.addAll((Iterable) iterable, (List) this.pids_);
                onChanged();
                return this;
            }

            public Builder clearPids() {
                this.pids_ = LazyStringArrayList.EMPTY;
                this.bitField0_ &= -17;
                onChanged();
                return this;
            }

            public Builder addPidsBytes(ByteString byteString) {
                if (byteString != null) {
                    ensurePidsIsMutable();
                    this.pids_.add(byteString);
                    onChanged();
                    return this;
                }
                throw new NullPointerException();
            }

            public final Builder setUnknownFields(UnknownFieldSet unknownFieldSet) {
                return (Builder) super.setUnknownFields(unknownFieldSet);
            }

            public final Builder mergeUnknownFields(UnknownFieldSet unknownFieldSet) {
                return (Builder) super.mergeUnknownFields(unknownFieldSet);
            }
        }

        private ErrorCommand(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
            super(builder);
            this.memoizedIsInitialized = -1;
        }

        private ErrorCommand() {
            this.memoizedIsInitialized = -1;
            this.code_ = 0;
            String str = "";
            this.reason_ = str;
            this.appCode_ = 0;
            this.detail_ = str;
            this.pids_ = LazyStringArrayList.EMPTY;
        }

        public final UnknownFieldSet getUnknownFields() {
            return this.unknownFields;
        }

        private ErrorCommand(CodedInputStream codedInputStream, ExtensionRegistryLite extensionRegistryLite) throws InvalidProtocolBufferException {
            this();
            com.google.protobuf.UnknownFieldSet.Builder newBuilder = UnknownFieldSet.newBuilder();
            boolean z = false;
            boolean z2 = false;
            while (!z) {
                try {
                    int readTag = codedInputStream.readTag();
                    if (readTag != 0) {
                        if (readTag == 8) {
                            this.bitField0_ |= 1;
                            this.code_ = codedInputStream.readInt32();
                        } else if (readTag == 18) {
                            ByteString readBytes = codedInputStream.readBytes();
                            this.bitField0_ |= 2;
                            this.reason_ = readBytes;
                        } else if (readTag == 24) {
                            this.bitField0_ |= 4;
                            this.appCode_ = codedInputStream.readInt32();
                        } else if (readTag == 34) {
                            ByteString readBytes2 = codedInputStream.readBytes();
                            this.bitField0_ |= 8;
                            this.detail_ = readBytes2;
                        } else if (readTag == 42) {
                            ByteString readBytes3 = codedInputStream.readBytes();
                            if (!(z2 & true)) {
                                this.pids_ = new LazyStringArrayList();
                                z2 |= true;
                            }
                            this.pids_.add(readBytes3);
                        } else if (!parseUnknownField(codedInputStream, newBuilder, extensionRegistryLite, readTag)) {
                        }
                    }
                    z = true;
                } catch (InvalidProtocolBufferException e) {
                    throw e.setUnfinishedMessage(this);
                } catch (IOException e2) {
                    throw new InvalidProtocolBufferException(e2).setUnfinishedMessage(this);
                } catch (Throwable th) {
                    if (z2 & true) {
                        this.pids_ = this.pids_.getUnmodifiableView();
                    }
                    this.unknownFields = newBuilder.build();
                    makeExtensionsImmutable();
                    throw th;
                }
            }
            if (z2 & true) {
                this.pids_ = this.pids_.getUnmodifiableView();
            }
            this.unknownFields = newBuilder.build();
            makeExtensionsImmutable();
        }

        public static final Descriptor getDescriptor() {
            return Messages.internal_static_com_avos_avoscloud_ErrorCommand_descriptor;
        }

        /* access modifiers changed from: protected */
        public FieldAccessorTable internalGetFieldAccessorTable() {
            return Messages.internal_static_com_avos_avoscloud_ErrorCommand_fieldAccessorTable.ensureFieldAccessorsInitialized(ErrorCommand.class, Builder.class);
        }

        public boolean hasCode() {
            return (this.bitField0_ & 1) == 1;
        }

        public int getCode() {
            return this.code_;
        }

        public boolean hasReason() {
            return (this.bitField0_ & 2) == 2;
        }

        public String getReason() {
            Object obj = this.reason_;
            if (obj instanceof String) {
                return (String) obj;
            }
            ByteString byteString = (ByteString) obj;
            String stringUtf8 = byteString.toStringUtf8();
            if (byteString.isValidUtf8()) {
                this.reason_ = stringUtf8;
            }
            return stringUtf8;
        }

        public ByteString getReasonBytes() {
            Object obj = this.reason_;
            if (!(obj instanceof String)) {
                return (ByteString) obj;
            }
            ByteString copyFromUtf8 = ByteString.copyFromUtf8((String) obj);
            this.reason_ = copyFromUtf8;
            return copyFromUtf8;
        }

        public boolean hasAppCode() {
            return (this.bitField0_ & 4) == 4;
        }

        public int getAppCode() {
            return this.appCode_;
        }

        public boolean hasDetail() {
            return (this.bitField0_ & 8) == 8;
        }

        public String getDetail() {
            Object obj = this.detail_;
            if (obj instanceof String) {
                return (String) obj;
            }
            ByteString byteString = (ByteString) obj;
            String stringUtf8 = byteString.toStringUtf8();
            if (byteString.isValidUtf8()) {
                this.detail_ = stringUtf8;
            }
            return stringUtf8;
        }

        public ByteString getDetailBytes() {
            Object obj = this.detail_;
            if (!(obj instanceof String)) {
                return (ByteString) obj;
            }
            ByteString copyFromUtf8 = ByteString.copyFromUtf8((String) obj);
            this.detail_ = copyFromUtf8;
            return copyFromUtf8;
        }

        public ProtocolStringList getPidsList() {
            return this.pids_;
        }

        public int getPidsCount() {
            return this.pids_.size();
        }

        public String getPids(int i) {
            return (String) this.pids_.get(i);
        }

        public ByteString getPidsBytes(int i) {
            return this.pids_.getByteString(i);
        }

        public final boolean isInitialized() {
            byte b = this.memoizedIsInitialized;
            if (b == 1) {
                return true;
            }
            if (b == 0) {
                return false;
            }
            if (!hasCode()) {
                this.memoizedIsInitialized = 0;
                return false;
            } else if (!hasReason()) {
                this.memoizedIsInitialized = 0;
                return false;
            } else {
                this.memoizedIsInitialized = 1;
                return true;
            }
        }

        public void writeTo(CodedOutputStream codedOutputStream) throws IOException {
            if ((this.bitField0_ & 1) == 1) {
                codedOutputStream.writeInt32(1, this.code_);
            }
            if ((this.bitField0_ & 2) == 2) {
                GeneratedMessageV3.writeString(codedOutputStream, 2, this.reason_);
            }
            if ((this.bitField0_ & 4) == 4) {
                codedOutputStream.writeInt32(3, this.appCode_);
            }
            if ((this.bitField0_ & 8) == 8) {
                GeneratedMessageV3.writeString(codedOutputStream, 4, this.detail_);
            }
            for (int i = 0; i < this.pids_.size(); i++) {
                GeneratedMessageV3.writeString(codedOutputStream, 5, this.pids_.getRaw(i));
            }
            this.unknownFields.writeTo(codedOutputStream);
        }

        public int getSerializedSize() {
            int i = this.memoizedSize;
            if (i != -1) {
                return i;
            }
            int computeInt32Size = (this.bitField0_ & 1) == 1 ? CodedOutputStream.computeInt32Size(1, this.code_) + 0 : 0;
            if ((this.bitField0_ & 2) == 2) {
                computeInt32Size += GeneratedMessageV3.computeStringSize(2, this.reason_);
            }
            if ((this.bitField0_ & 4) == 4) {
                computeInt32Size += CodedOutputStream.computeInt32Size(3, this.appCode_);
            }
            if ((this.bitField0_ & 8) == 8) {
                computeInt32Size += GeneratedMessageV3.computeStringSize(4, this.detail_);
            }
            int i2 = 0;
            for (int i3 = 0; i3 < this.pids_.size(); i3++) {
                i2 += computeStringSizeNoTag(this.pids_.getRaw(i3));
            }
            int size = computeInt32Size + i2 + (getPidsList().size() * 1) + this.unknownFields.getSerializedSize();
            this.memoizedSize = size;
            return size;
        }

        public boolean equals(Object obj) {
            boolean z = true;
            if (obj == this) {
                return true;
            }
            if (!(obj instanceof ErrorCommand)) {
                return super.equals(obj);
            }
            ErrorCommand errorCommand = (ErrorCommand) obj;
            boolean z2 = hasCode() == errorCommand.hasCode();
            if (hasCode()) {
                z2 = z2 && getCode() == errorCommand.getCode();
            }
            boolean z3 = z2 && hasReason() == errorCommand.hasReason();
            if (hasReason()) {
                z3 = z3 && getReason().equals(errorCommand.getReason());
            }
            boolean z4 = z3 && hasAppCode() == errorCommand.hasAppCode();
            if (hasAppCode()) {
                z4 = z4 && getAppCode() == errorCommand.getAppCode();
            }
            boolean z5 = z4 && hasDetail() == errorCommand.hasDetail();
            if (hasDetail()) {
                z5 = z5 && getDetail().equals(errorCommand.getDetail());
            }
            if (!(z5 && getPidsList().equals(errorCommand.getPidsList())) || !this.unknownFields.equals(errorCommand.unknownFields)) {
                z = false;
            }
            return z;
        }

        public int hashCode() {
            if (this.memoizedHashCode != 0) {
                return this.memoizedHashCode;
            }
            int hashCode = 779 + getDescriptor().hashCode();
            if (hasCode()) {
                hashCode = (((hashCode * 37) + 1) * 53) + getCode();
            }
            if (hasReason()) {
                hashCode = (((hashCode * 37) + 2) * 53) + getReason().hashCode();
            }
            if (hasAppCode()) {
                hashCode = (((hashCode * 37) + 3) * 53) + getAppCode();
            }
            if (hasDetail()) {
                hashCode = (((hashCode * 37) + 4) * 53) + getDetail().hashCode();
            }
            if (getPidsCount() > 0) {
                hashCode = (((hashCode * 37) + 5) * 53) + getPidsList().hashCode();
            }
            int hashCode2 = (hashCode * 29) + this.unknownFields.hashCode();
            this.memoizedHashCode = hashCode2;
            return hashCode2;
        }

        public static ErrorCommand parseFrom(ByteBuffer byteBuffer) throws InvalidProtocolBufferException {
            return (ErrorCommand) PARSER.parseFrom(byteBuffer);
        }

        public static ErrorCommand parseFrom(ByteBuffer byteBuffer, ExtensionRegistryLite extensionRegistryLite) throws InvalidProtocolBufferException {
            return (ErrorCommand) PARSER.parseFrom(byteBuffer, extensionRegistryLite);
        }

        public static ErrorCommand parseFrom(ByteString byteString) throws InvalidProtocolBufferException {
            return (ErrorCommand) PARSER.parseFrom(byteString);
        }

        public static ErrorCommand parseFrom(ByteString byteString, ExtensionRegistryLite extensionRegistryLite) throws InvalidProtocolBufferException {
            return (ErrorCommand) PARSER.parseFrom(byteString, extensionRegistryLite);
        }

        public static ErrorCommand parseFrom(byte[] bArr) throws InvalidProtocolBufferException {
            return (ErrorCommand) PARSER.parseFrom(bArr);
        }

        public static ErrorCommand parseFrom(byte[] bArr, ExtensionRegistryLite extensionRegistryLite) throws InvalidProtocolBufferException {
            return (ErrorCommand) PARSER.parseFrom(bArr, extensionRegistryLite);
        }

        public static ErrorCommand parseFrom(InputStream inputStream) throws IOException {
            return (ErrorCommand) GeneratedMessageV3.parseWithIOException(PARSER, inputStream);
        }

        public static ErrorCommand parseFrom(InputStream inputStream, ExtensionRegistryLite extensionRegistryLite) throws IOException {
            return (ErrorCommand) GeneratedMessageV3.parseWithIOException(PARSER, inputStream, extensionRegistryLite);
        }

        public static ErrorCommand parseDelimitedFrom(InputStream inputStream) throws IOException {
            return (ErrorCommand) GeneratedMessageV3.parseDelimitedWithIOException(PARSER, inputStream);
        }

        public static ErrorCommand parseDelimitedFrom(InputStream inputStream, ExtensionRegistryLite extensionRegistryLite) throws IOException {
            return (ErrorCommand) GeneratedMessageV3.parseDelimitedWithIOException(PARSER, inputStream, extensionRegistryLite);
        }

        public static ErrorCommand parseFrom(CodedInputStream codedInputStream) throws IOException {
            return (ErrorCommand) GeneratedMessageV3.parseWithIOException(PARSER, codedInputStream);
        }

        public static ErrorCommand parseFrom(CodedInputStream codedInputStream, ExtensionRegistryLite extensionRegistryLite) throws IOException {
            return (ErrorCommand) GeneratedMessageV3.parseWithIOException(PARSER, codedInputStream, extensionRegistryLite);
        }

        public Builder newBuilderForType() {
            return newBuilder();
        }

        public static Builder newBuilder() {
            return DEFAULT_INSTANCE.toBuilder();
        }

        public static Builder newBuilder(ErrorCommand errorCommand) {
            return DEFAULT_INSTANCE.toBuilder().mergeFrom(errorCommand);
        }

        public Builder toBuilder() {
            if (this == DEFAULT_INSTANCE) {
                return new Builder();
            }
            return new Builder().mergeFrom(this);
        }

        /* access modifiers changed from: protected */
        public Builder newBuilderForType(BuilderParent builderParent) {
            return new Builder(builderParent);
        }

        public static ErrorCommand getDefaultInstance() {
            return DEFAULT_INSTANCE;
        }

        public static Parser<ErrorCommand> parser() {
            return PARSER;
        }

        public Parser<ErrorCommand> getParserForType() {
            return PARSER;
        }

        public ErrorCommand getDefaultInstanceForType() {
            return DEFAULT_INSTANCE;
        }
    }

    public interface ErrorCommandOrBuilder extends MessageOrBuilder {
        int getAppCode();

        int getCode();

        String getDetail();

        ByteString getDetailBytes();

        String getPids(int i);

        ByteString getPidsBytes(int i);

        int getPidsCount();

        List<String> getPidsList();

        String getReason();

        ByteString getReasonBytes();

        boolean hasAppCode();

        boolean hasCode();

        boolean hasDetail();

        boolean hasReason();
    }

    public static final class GenericCommand extends GeneratedMessageV3 implements GenericCommandOrBuilder {
        public static final int ACKMESSAGE_FIELD_NUMBER = 105;
        public static final int APPID_FIELD_NUMBER = 3;
        public static final int BLACKLISTMESSAGE_FIELD_NUMBER = 116;
        public static final int CMD_FIELD_NUMBER = 1;
        public static final int CONVMESSAGE_FIELD_NUMBER = 110;
        public static final int DATAMESSAGE_FIELD_NUMBER = 101;
        private static final GenericCommand DEFAULT_INSTANCE = new GenericCommand();
        public static final int DIRECTMESSAGE_FIELD_NUMBER = 104;
        public static final int ERRORMESSAGE_FIELD_NUMBER = 103;
        public static final int INSTALLATIONID_FIELD_NUMBER = 6;
        public static final int I_FIELD_NUMBER = 5;
        public static final int LOGSMESSAGE_FIELD_NUMBER = 109;
        public static final int OP_FIELD_NUMBER = 2;
        @Deprecated
        public static final Parser<GenericCommand> PARSER = new AbstractParser<GenericCommand>() {
            public GenericCommand parsePartialFrom(CodedInputStream codedInputStream, ExtensionRegistryLite extensionRegistryLite) throws InvalidProtocolBufferException {
                return new GenericCommand(codedInputStream, extensionRegistryLite);
            }
        };
        public static final int PATCHMESSAGE_FIELD_NUMBER = 114;
        public static final int PEERID_FIELD_NUMBER = 4;
        public static final int PRESENCEMESSAGE_FIELD_NUMBER = 112;
        public static final int PRIORITY_FIELD_NUMBER = 7;
        public static final int PUBSUBMESSAGE_FIELD_NUMBER = 115;
        public static final int RCPMESSAGE_FIELD_NUMBER = 108;
        public static final int READMESSAGE_FIELD_NUMBER = 107;
        public static final int REPORTMESSAGE_FIELD_NUMBER = 113;
        public static final int ROOMMESSAGE_FIELD_NUMBER = 111;
        public static final int SERVERTS_FIELD_NUMBER = 9;
        public static final int SERVICE_FIELD_NUMBER = 8;
        public static final int SESSIONMESSAGE_FIELD_NUMBER = 102;
        public static final int UNREADMESSAGE_FIELD_NUMBER = 106;
        private static final long serialVersionUID = 0;
        /* access modifiers changed from: private */
        public AckCommand ackMessage_;
        /* access modifiers changed from: private */
        public volatile Object appId_;
        /* access modifiers changed from: private */
        public int bitField0_;
        /* access modifiers changed from: private */
        public BlacklistCommand blacklistMessage_;
        /* access modifiers changed from: private */
        public int cmd_;
        /* access modifiers changed from: private */
        public ConvCommand convMessage_;
        /* access modifiers changed from: private */
        public DataCommand dataMessage_;
        /* access modifiers changed from: private */
        public DirectCommand directMessage_;
        /* access modifiers changed from: private */
        public ErrorCommand errorMessage_;
        /* access modifiers changed from: private */
        public int i_;
        /* access modifiers changed from: private */
        public volatile Object installationId_;
        /* access modifiers changed from: private */
        public LogsCommand logsMessage_;
        private byte memoizedIsInitialized;
        /* access modifiers changed from: private */
        public int op_;
        /* access modifiers changed from: private */
        public PatchCommand patchMessage_;
        /* access modifiers changed from: private */
        public volatile Object peerId_;
        /* access modifiers changed from: private */
        public PresenceCommand presenceMessage_;
        /* access modifiers changed from: private */
        public int priority_;
        /* access modifiers changed from: private */
        public PubsubCommand pubsubMessage_;
        /* access modifiers changed from: private */
        public RcpCommand rcpMessage_;
        /* access modifiers changed from: private */
        public ReadCommand readMessage_;
        /* access modifiers changed from: private */
        public ReportCommand reportMessage_;
        /* access modifiers changed from: private */
        public RoomCommand roomMessage_;
        /* access modifiers changed from: private */
        public long serverTs_;
        /* access modifiers changed from: private */
        public int service_;
        /* access modifiers changed from: private */
        public SessionCommand sessionMessage_;
        /* access modifiers changed from: private */
        public UnreadCommand unreadMessage_;

        public static final class Builder extends com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements GenericCommandOrBuilder {
            private SingleFieldBuilderV3<AckCommand, Builder, AckCommandOrBuilder> ackMessageBuilder_;
            private AckCommand ackMessage_;
            private Object appId_;
            private int bitField0_;
            private SingleFieldBuilderV3<BlacklistCommand, Builder, BlacklistCommandOrBuilder> blacklistMessageBuilder_;
            private BlacklistCommand blacklistMessage_;
            private int cmd_;
            private SingleFieldBuilderV3<ConvCommand, Builder, ConvCommandOrBuilder> convMessageBuilder_;
            private ConvCommand convMessage_;
            private SingleFieldBuilderV3<DataCommand, Builder, DataCommandOrBuilder> dataMessageBuilder_;
            private DataCommand dataMessage_;
            private SingleFieldBuilderV3<DirectCommand, Builder, DirectCommandOrBuilder> directMessageBuilder_;
            private DirectCommand directMessage_;
            private SingleFieldBuilderV3<ErrorCommand, Builder, ErrorCommandOrBuilder> errorMessageBuilder_;
            private ErrorCommand errorMessage_;
            private int i_;
            private Object installationId_;
            private SingleFieldBuilderV3<LogsCommand, Builder, LogsCommandOrBuilder> logsMessageBuilder_;
            private LogsCommand logsMessage_;
            private int op_;
            private SingleFieldBuilderV3<PatchCommand, Builder, PatchCommandOrBuilder> patchMessageBuilder_;
            private PatchCommand patchMessage_;
            private Object peerId_;
            private SingleFieldBuilderV3<PresenceCommand, Builder, PresenceCommandOrBuilder> presenceMessageBuilder_;
            private PresenceCommand presenceMessage_;
            private int priority_;
            private SingleFieldBuilderV3<PubsubCommand, Builder, PubsubCommandOrBuilder> pubsubMessageBuilder_;
            private PubsubCommand pubsubMessage_;
            private SingleFieldBuilderV3<RcpCommand, Builder, RcpCommandOrBuilder> rcpMessageBuilder_;
            private RcpCommand rcpMessage_;
            private SingleFieldBuilderV3<ReadCommand, Builder, ReadCommandOrBuilder> readMessageBuilder_;
            private ReadCommand readMessage_;
            private SingleFieldBuilderV3<ReportCommand, Builder, ReportCommandOrBuilder> reportMessageBuilder_;
            private ReportCommand reportMessage_;
            private SingleFieldBuilderV3<RoomCommand, Builder, RoomCommandOrBuilder> roomMessageBuilder_;
            private RoomCommand roomMessage_;
            private long serverTs_;
            private int service_;
            private SingleFieldBuilderV3<SessionCommand, Builder, SessionCommandOrBuilder> sessionMessageBuilder_;
            private SessionCommand sessionMessage_;
            private SingleFieldBuilderV3<UnreadCommand, Builder, UnreadCommandOrBuilder> unreadMessageBuilder_;
            private UnreadCommand unreadMessage_;

            public static final Descriptor getDescriptor() {
                return Messages.internal_static_com_avos_avoscloud_GenericCommand_descriptor;
            }

            /* access modifiers changed from: protected */
            public FieldAccessorTable internalGetFieldAccessorTable() {
                return Messages.internal_static_com_avos_avoscloud_GenericCommand_fieldAccessorTable.ensureFieldAccessorsInitialized(GenericCommand.class, Builder.class);
            }

            private Builder() {
                this.cmd_ = 0;
                this.op_ = 1;
                String str = "";
                this.appId_ = str;
                this.peerId_ = str;
                this.installationId_ = str;
                this.dataMessage_ = null;
                this.sessionMessage_ = null;
                this.errorMessage_ = null;
                this.directMessage_ = null;
                this.ackMessage_ = null;
                this.unreadMessage_ = null;
                this.readMessage_ = null;
                this.rcpMessage_ = null;
                this.logsMessage_ = null;
                this.convMessage_ = null;
                this.roomMessage_ = null;
                this.presenceMessage_ = null;
                this.reportMessage_ = null;
                this.patchMessage_ = null;
                this.pubsubMessage_ = null;
                this.blacklistMessage_ = null;
                maybeForceBuilderInitialization();
            }

            private Builder(BuilderParent builderParent) {
                super(builderParent);
                this.cmd_ = 0;
                this.op_ = 1;
                String str = "";
                this.appId_ = str;
                this.peerId_ = str;
                this.installationId_ = str;
                this.dataMessage_ = null;
                this.sessionMessage_ = null;
                this.errorMessage_ = null;
                this.directMessage_ = null;
                this.ackMessage_ = null;
                this.unreadMessage_ = null;
                this.readMessage_ = null;
                this.rcpMessage_ = null;
                this.logsMessage_ = null;
                this.convMessage_ = null;
                this.roomMessage_ = null;
                this.presenceMessage_ = null;
                this.reportMessage_ = null;
                this.patchMessage_ = null;
                this.pubsubMessage_ = null;
                this.blacklistMessage_ = null;
                maybeForceBuilderInitialization();
            }

            private void maybeForceBuilderInitialization() {
                if (GenericCommand.alwaysUseFieldBuilders) {
                    getDataMessageFieldBuilder();
                    getSessionMessageFieldBuilder();
                    getErrorMessageFieldBuilder();
                    getDirectMessageFieldBuilder();
                    getAckMessageFieldBuilder();
                    getUnreadMessageFieldBuilder();
                    getReadMessageFieldBuilder();
                    getRcpMessageFieldBuilder();
                    getLogsMessageFieldBuilder();
                    getConvMessageFieldBuilder();
                    getRoomMessageFieldBuilder();
                    getPresenceMessageFieldBuilder();
                    getReportMessageFieldBuilder();
                    getPatchMessageFieldBuilder();
                    getPubsubMessageFieldBuilder();
                    getBlacklistMessageFieldBuilder();
                }
            }

            public Builder clear() {
                super.clear();
                this.cmd_ = 0;
                this.bitField0_ &= -2;
                this.op_ = 1;
                this.bitField0_ &= -3;
                String str = "";
                this.appId_ = str;
                this.bitField0_ &= -5;
                this.peerId_ = str;
                this.bitField0_ &= -9;
                this.i_ = 0;
                this.bitField0_ &= -17;
                this.installationId_ = str;
                this.bitField0_ &= -33;
                this.priority_ = 0;
                this.bitField0_ &= -65;
                this.service_ = 0;
                this.bitField0_ &= -129;
                this.serverTs_ = 0;
                this.bitField0_ &= -257;
                SingleFieldBuilderV3<DataCommand, Builder, DataCommandOrBuilder> singleFieldBuilderV3 = this.dataMessageBuilder_;
                if (singleFieldBuilderV3 == null) {
                    this.dataMessage_ = null;
                } else {
                    singleFieldBuilderV3.clear();
                }
                this.bitField0_ &= -513;
                SingleFieldBuilderV3<SessionCommand, Builder, SessionCommandOrBuilder> singleFieldBuilderV32 = this.sessionMessageBuilder_;
                if (singleFieldBuilderV32 == null) {
                    this.sessionMessage_ = null;
                } else {
                    singleFieldBuilderV32.clear();
                }
                this.bitField0_ &= -1025;
                SingleFieldBuilderV3<ErrorCommand, Builder, ErrorCommandOrBuilder> singleFieldBuilderV33 = this.errorMessageBuilder_;
                if (singleFieldBuilderV33 == null) {
                    this.errorMessage_ = null;
                } else {
                    singleFieldBuilderV33.clear();
                }
                this.bitField0_ &= -2049;
                SingleFieldBuilderV3<DirectCommand, Builder, DirectCommandOrBuilder> singleFieldBuilderV34 = this.directMessageBuilder_;
                if (singleFieldBuilderV34 == null) {
                    this.directMessage_ = null;
                } else {
                    singleFieldBuilderV34.clear();
                }
                this.bitField0_ &= -4097;
                SingleFieldBuilderV3<AckCommand, Builder, AckCommandOrBuilder> singleFieldBuilderV35 = this.ackMessageBuilder_;
                if (singleFieldBuilderV35 == null) {
                    this.ackMessage_ = null;
                } else {
                    singleFieldBuilderV35.clear();
                }
                this.bitField0_ &= -8193;
                SingleFieldBuilderV3<UnreadCommand, Builder, UnreadCommandOrBuilder> singleFieldBuilderV36 = this.unreadMessageBuilder_;
                if (singleFieldBuilderV36 == null) {
                    this.unreadMessage_ = null;
                } else {
                    singleFieldBuilderV36.clear();
                }
                this.bitField0_ &= -16385;
                SingleFieldBuilderV3<ReadCommand, Builder, ReadCommandOrBuilder> singleFieldBuilderV37 = this.readMessageBuilder_;
                if (singleFieldBuilderV37 == null) {
                    this.readMessage_ = null;
                } else {
                    singleFieldBuilderV37.clear();
                }
                this.bitField0_ &= -32769;
                SingleFieldBuilderV3<RcpCommand, Builder, RcpCommandOrBuilder> singleFieldBuilderV38 = this.rcpMessageBuilder_;
                if (singleFieldBuilderV38 == null) {
                    this.rcpMessage_ = null;
                } else {
                    singleFieldBuilderV38.clear();
                }
                this.bitField0_ &= CommandPacket.UNSUPPORTED_OPERATION;
                SingleFieldBuilderV3<LogsCommand, Builder, LogsCommandOrBuilder> singleFieldBuilderV39 = this.logsMessageBuilder_;
                if (singleFieldBuilderV39 == null) {
                    this.logsMessage_ = null;
                } else {
                    singleFieldBuilderV39.clear();
                }
                this.bitField0_ &= -131073;
                SingleFieldBuilderV3<ConvCommand, Builder, ConvCommandOrBuilder> singleFieldBuilderV310 = this.convMessageBuilder_;
                if (singleFieldBuilderV310 == null) {
                    this.convMessage_ = null;
                } else {
                    singleFieldBuilderV310.clear();
                }
                this.bitField0_ &= -262145;
                SingleFieldBuilderV3<RoomCommand, Builder, RoomCommandOrBuilder> singleFieldBuilderV311 = this.roomMessageBuilder_;
                if (singleFieldBuilderV311 == null) {
                    this.roomMessage_ = null;
                } else {
                    singleFieldBuilderV311.clear();
                }
                this.bitField0_ &= -524289;
                SingleFieldBuilderV3<PresenceCommand, Builder, PresenceCommandOrBuilder> singleFieldBuilderV312 = this.presenceMessageBuilder_;
                if (singleFieldBuilderV312 == null) {
                    this.presenceMessage_ = null;
                } else {
                    singleFieldBuilderV312.clear();
                }
                this.bitField0_ &= -1048577;
                SingleFieldBuilderV3<ReportCommand, Builder, ReportCommandOrBuilder> singleFieldBuilderV313 = this.reportMessageBuilder_;
                if (singleFieldBuilderV313 == null) {
                    this.reportMessage_ = null;
                } else {
                    singleFieldBuilderV313.clear();
                }
                this.bitField0_ &= -2097153;
                SingleFieldBuilderV3<PatchCommand, Builder, PatchCommandOrBuilder> singleFieldBuilderV314 = this.patchMessageBuilder_;
                if (singleFieldBuilderV314 == null) {
                    this.patchMessage_ = null;
                } else {
                    singleFieldBuilderV314.clear();
                }
                this.bitField0_ &= -4194305;
                SingleFieldBuilderV3<PubsubCommand, Builder, PubsubCommandOrBuilder> singleFieldBuilderV315 = this.pubsubMessageBuilder_;
                if (singleFieldBuilderV315 == null) {
                    this.pubsubMessage_ = null;
                } else {
                    singleFieldBuilderV315.clear();
                }
                this.bitField0_ &= -8388609;
                SingleFieldBuilderV3<BlacklistCommand, Builder, BlacklistCommandOrBuilder> singleFieldBuilderV316 = this.blacklistMessageBuilder_;
                if (singleFieldBuilderV316 == null) {
                    this.blacklistMessage_ = null;
                } else {
                    singleFieldBuilderV316.clear();
                }
                this.bitField0_ &= -16777217;
                return this;
            }

            public Descriptor getDescriptorForType() {
                return Messages.internal_static_com_avos_avoscloud_GenericCommand_descriptor;
            }

            public GenericCommand getDefaultInstanceForType() {
                return GenericCommand.getDefaultInstance();
            }

            public GenericCommand build() {
                GenericCommand buildPartial = buildPartial();
                if (buildPartial.isInitialized()) {
                    return buildPartial;
                }
                throw newUninitializedMessageException(buildPartial);
            }

            public GenericCommand buildPartial() {
                GenericCommand genericCommand = new GenericCommand((com.google.protobuf.GeneratedMessageV3.Builder) this);
                int i = this.bitField0_;
                int i2 = 1;
                if ((i & 1) != 1) {
                    i2 = 0;
                }
                genericCommand.cmd_ = this.cmd_;
                if ((i & 2) == 2) {
                    i2 |= 2;
                }
                genericCommand.op_ = this.op_;
                if ((i & 4) == 4) {
                    i2 |= 4;
                }
                genericCommand.appId_ = this.appId_;
                if ((i & 8) == 8) {
                    i2 |= 8;
                }
                genericCommand.peerId_ = this.peerId_;
                if ((i & 16) == 16) {
                    i2 |= 16;
                }
                genericCommand.i_ = this.i_;
                if ((i & 32) == 32) {
                    i2 |= 32;
                }
                genericCommand.installationId_ = this.installationId_;
                if ((i & 64) == 64) {
                    i2 |= 64;
                }
                genericCommand.priority_ = this.priority_;
                if ((i & 128) == 128) {
                    i2 |= 128;
                }
                genericCommand.service_ = this.service_;
                if ((i & 256) == 256) {
                    i2 |= 256;
                }
                genericCommand.serverTs_ = this.serverTs_;
                if ((i & 512) == 512) {
                    i2 |= 512;
                }
                SingleFieldBuilderV3<DataCommand, Builder, DataCommandOrBuilder> singleFieldBuilderV3 = this.dataMessageBuilder_;
                if (singleFieldBuilderV3 == null) {
                    genericCommand.dataMessage_ = this.dataMessage_;
                } else {
                    genericCommand.dataMessage_ = (DataCommand) singleFieldBuilderV3.build();
                }
                if ((i & 1024) == 1024) {
                    i2 |= 1024;
                }
                SingleFieldBuilderV3<SessionCommand, Builder, SessionCommandOrBuilder> singleFieldBuilderV32 = this.sessionMessageBuilder_;
                if (singleFieldBuilderV32 == null) {
                    genericCommand.sessionMessage_ = this.sessionMessage_;
                } else {
                    genericCommand.sessionMessage_ = (SessionCommand) singleFieldBuilderV32.build();
                }
                if ((i & 2048) == 2048) {
                    i2 |= 2048;
                }
                SingleFieldBuilderV3<ErrorCommand, Builder, ErrorCommandOrBuilder> singleFieldBuilderV33 = this.errorMessageBuilder_;
                if (singleFieldBuilderV33 == null) {
                    genericCommand.errorMessage_ = this.errorMessage_;
                } else {
                    genericCommand.errorMessage_ = (ErrorCommand) singleFieldBuilderV33.build();
                }
                if ((i & 4096) == 4096) {
                    i2 |= 4096;
                }
                SingleFieldBuilderV3<DirectCommand, Builder, DirectCommandOrBuilder> singleFieldBuilderV34 = this.directMessageBuilder_;
                if (singleFieldBuilderV34 == null) {
                    genericCommand.directMessage_ = this.directMessage_;
                } else {
                    genericCommand.directMessage_ = (DirectCommand) singleFieldBuilderV34.build();
                }
                if ((i & 8192) == 8192) {
                    i2 |= 8192;
                }
                SingleFieldBuilderV3<AckCommand, Builder, AckCommandOrBuilder> singleFieldBuilderV35 = this.ackMessageBuilder_;
                if (singleFieldBuilderV35 == null) {
                    genericCommand.ackMessage_ = this.ackMessage_;
                } else {
                    genericCommand.ackMessage_ = (AckCommand) singleFieldBuilderV35.build();
                }
                if ((i & 16384) == 16384) {
                    i2 |= 16384;
                }
                SingleFieldBuilderV3<UnreadCommand, Builder, UnreadCommandOrBuilder> singleFieldBuilderV36 = this.unreadMessageBuilder_;
                if (singleFieldBuilderV36 == null) {
                    genericCommand.unreadMessage_ = this.unreadMessage_;
                } else {
                    genericCommand.unreadMessage_ = (UnreadCommand) singleFieldBuilderV36.build();
                }
                if ((32768 & i) == 32768) {
                    i2 |= 32768;
                }
                SingleFieldBuilderV3<ReadCommand, Builder, ReadCommandOrBuilder> singleFieldBuilderV37 = this.readMessageBuilder_;
                if (singleFieldBuilderV37 == null) {
                    genericCommand.readMessage_ = this.readMessage_;
                } else {
                    genericCommand.readMessage_ = (ReadCommand) singleFieldBuilderV37.build();
                }
                if ((65536 & i) == 65536) {
                    i2 |= 65536;
                }
                SingleFieldBuilderV3<RcpCommand, Builder, RcpCommandOrBuilder> singleFieldBuilderV38 = this.rcpMessageBuilder_;
                if (singleFieldBuilderV38 == null) {
                    genericCommand.rcpMessage_ = this.rcpMessage_;
                } else {
                    genericCommand.rcpMessage_ = (RcpCommand) singleFieldBuilderV38.build();
                }
                if ((131072 & i) == 131072) {
                    i2 |= 131072;
                }
                SingleFieldBuilderV3<LogsCommand, Builder, LogsCommandOrBuilder> singleFieldBuilderV39 = this.logsMessageBuilder_;
                if (singleFieldBuilderV39 == null) {
                    genericCommand.logsMessage_ = this.logsMessage_;
                } else {
                    genericCommand.logsMessage_ = (LogsCommand) singleFieldBuilderV39.build();
                }
                if ((262144 & i) == 262144) {
                    i2 |= 262144;
                }
                SingleFieldBuilderV3<ConvCommand, Builder, ConvCommandOrBuilder> singleFieldBuilderV310 = this.convMessageBuilder_;
                if (singleFieldBuilderV310 == null) {
                    genericCommand.convMessage_ = this.convMessage_;
                } else {
                    genericCommand.convMessage_ = (ConvCommand) singleFieldBuilderV310.build();
                }
                if ((524288 & i) == 524288) {
                    i2 |= 524288;
                }
                SingleFieldBuilderV3<RoomCommand, Builder, RoomCommandOrBuilder> singleFieldBuilderV311 = this.roomMessageBuilder_;
                if (singleFieldBuilderV311 == null) {
                    genericCommand.roomMessage_ = this.roomMessage_;
                } else {
                    genericCommand.roomMessage_ = (RoomCommand) singleFieldBuilderV311.build();
                }
                if ((1048576 & i) == 1048576) {
                    i2 |= 1048576;
                }
                SingleFieldBuilderV3<PresenceCommand, Builder, PresenceCommandOrBuilder> singleFieldBuilderV312 = this.presenceMessageBuilder_;
                if (singleFieldBuilderV312 == null) {
                    genericCommand.presenceMessage_ = this.presenceMessage_;
                } else {
                    genericCommand.presenceMessage_ = (PresenceCommand) singleFieldBuilderV312.build();
                }
                if ((2097152 & i) == 2097152) {
                    i2 |= 2097152;
                }
                SingleFieldBuilderV3<ReportCommand, Builder, ReportCommandOrBuilder> singleFieldBuilderV313 = this.reportMessageBuilder_;
                if (singleFieldBuilderV313 == null) {
                    genericCommand.reportMessage_ = this.reportMessage_;
                } else {
                    genericCommand.reportMessage_ = (ReportCommand) singleFieldBuilderV313.build();
                }
                if ((4194304 & i) == 4194304) {
                    i2 |= 4194304;
                }
                SingleFieldBuilderV3<PatchCommand, Builder, PatchCommandOrBuilder> singleFieldBuilderV314 = this.patchMessageBuilder_;
                if (singleFieldBuilderV314 == null) {
                    genericCommand.patchMessage_ = this.patchMessage_;
                } else {
                    genericCommand.patchMessage_ = (PatchCommand) singleFieldBuilderV314.build();
                }
                if ((8388608 & i) == 8388608) {
                    i2 |= 8388608;
                }
                SingleFieldBuilderV3<PubsubCommand, Builder, PubsubCommandOrBuilder> singleFieldBuilderV315 = this.pubsubMessageBuilder_;
                if (singleFieldBuilderV315 == null) {
                    genericCommand.pubsubMessage_ = this.pubsubMessage_;
                } else {
                    genericCommand.pubsubMessage_ = (PubsubCommand) singleFieldBuilderV315.build();
                }
                if ((i & 16777216) == 16777216) {
                    i2 |= 16777216;
                }
                SingleFieldBuilderV3<BlacklistCommand, Builder, BlacklistCommandOrBuilder> singleFieldBuilderV316 = this.blacklistMessageBuilder_;
                if (singleFieldBuilderV316 == null) {
                    genericCommand.blacklistMessage_ = this.blacklistMessage_;
                } else {
                    genericCommand.blacklistMessage_ = (BlacklistCommand) singleFieldBuilderV316.build();
                }
                genericCommand.bitField0_ = i2;
                onBuilt();
                return genericCommand;
            }

            public Builder clone() {
                return (Builder) super.clone();
            }

            public Builder setField(FieldDescriptor fieldDescriptor, Object obj) {
                return (Builder) super.setField(fieldDescriptor, obj);
            }

            public Builder clearField(FieldDescriptor fieldDescriptor) {
                return (Builder) super.clearField(fieldDescriptor);
            }

            public Builder clearOneof(OneofDescriptor oneofDescriptor) {
                return (Builder) super.clearOneof(oneofDescriptor);
            }

            public Builder setRepeatedField(FieldDescriptor fieldDescriptor, int i, Object obj) {
                return (Builder) super.setRepeatedField(fieldDescriptor, i, obj);
            }

            public Builder addRepeatedField(FieldDescriptor fieldDescriptor, Object obj) {
                return (Builder) super.addRepeatedField(fieldDescriptor, obj);
            }

            public Builder mergeFrom(Message message) {
                if (message instanceof GenericCommand) {
                    return mergeFrom((GenericCommand) message);
                }
                super.mergeFrom(message);
                return this;
            }

            public Builder mergeFrom(GenericCommand genericCommand) {
                if (genericCommand == GenericCommand.getDefaultInstance()) {
                    return this;
                }
                if (genericCommand.hasCmd()) {
                    setCmd(genericCommand.getCmd());
                }
                if (genericCommand.hasOp()) {
                    setOp(genericCommand.getOp());
                }
                if (genericCommand.hasAppId()) {
                    this.bitField0_ |= 4;
                    this.appId_ = genericCommand.appId_;
                    onChanged();
                }
                if (genericCommand.hasPeerId()) {
                    this.bitField0_ |= 8;
                    this.peerId_ = genericCommand.peerId_;
                    onChanged();
                }
                if (genericCommand.hasI()) {
                    setI(genericCommand.getI());
                }
                if (genericCommand.hasInstallationId()) {
                    this.bitField0_ |= 32;
                    this.installationId_ = genericCommand.installationId_;
                    onChanged();
                }
                if (genericCommand.hasPriority()) {
                    setPriority(genericCommand.getPriority());
                }
                if (genericCommand.hasService()) {
                    setService(genericCommand.getService());
                }
                if (genericCommand.hasServerTs()) {
                    setServerTs(genericCommand.getServerTs());
                }
                if (genericCommand.hasDataMessage()) {
                    mergeDataMessage(genericCommand.getDataMessage());
                }
                if (genericCommand.hasSessionMessage()) {
                    mergeSessionMessage(genericCommand.getSessionMessage());
                }
                if (genericCommand.hasErrorMessage()) {
                    mergeErrorMessage(genericCommand.getErrorMessage());
                }
                if (genericCommand.hasDirectMessage()) {
                    mergeDirectMessage(genericCommand.getDirectMessage());
                }
                if (genericCommand.hasAckMessage()) {
                    mergeAckMessage(genericCommand.getAckMessage());
                }
                if (genericCommand.hasUnreadMessage()) {
                    mergeUnreadMessage(genericCommand.getUnreadMessage());
                }
                if (genericCommand.hasReadMessage()) {
                    mergeReadMessage(genericCommand.getReadMessage());
                }
                if (genericCommand.hasRcpMessage()) {
                    mergeRcpMessage(genericCommand.getRcpMessage());
                }
                if (genericCommand.hasLogsMessage()) {
                    mergeLogsMessage(genericCommand.getLogsMessage());
                }
                if (genericCommand.hasConvMessage()) {
                    mergeConvMessage(genericCommand.getConvMessage());
                }
                if (genericCommand.hasRoomMessage()) {
                    mergeRoomMessage(genericCommand.getRoomMessage());
                }
                if (genericCommand.hasPresenceMessage()) {
                    mergePresenceMessage(genericCommand.getPresenceMessage());
                }
                if (genericCommand.hasReportMessage()) {
                    mergeReportMessage(genericCommand.getReportMessage());
                }
                if (genericCommand.hasPatchMessage()) {
                    mergePatchMessage(genericCommand.getPatchMessage());
                }
                if (genericCommand.hasPubsubMessage()) {
                    mergePubsubMessage(genericCommand.getPubsubMessage());
                }
                if (genericCommand.hasBlacklistMessage()) {
                    mergeBlacklistMessage(genericCommand.getBlacklistMessage());
                }
                mergeUnknownFields(genericCommand.unknownFields);
                onChanged();
                return this;
            }

            public final boolean isInitialized() {
                if (hasDataMessage() && !getDataMessage().isInitialized()) {
                    return false;
                }
                if (hasErrorMessage() && !getErrorMessage().isInitialized()) {
                    return false;
                }
                if (hasUnreadMessage() && !getUnreadMessage().isInitialized()) {
                    return false;
                }
                if (hasReadMessage() && !getReadMessage().isInitialized()) {
                    return false;
                }
                if (hasConvMessage() && !getConvMessage().isInitialized()) {
                    return false;
                }
                if (hasPubsubMessage() && !getPubsubMessage().isInitialized()) {
                    return false;
                }
                if (!hasBlacklistMessage() || getBlacklistMessage().isInitialized()) {
                    return true;
                }
                return false;
            }

            /* JADX WARNING: Removed duplicated region for block: B:16:0x0021  */
            /* Code decompiled incorrectly, please refer to instructions dump. */
            public com.avos.avoscloud.Messages.GenericCommand.Builder mergeFrom(com.google.protobuf.CodedInputStream r3, com.google.protobuf.ExtensionRegistryLite r4) throws java.io.IOException {
                /*
                    r2 = this;
                    r0 = 0
                    com.google.protobuf.Parser<com.avos.avoscloud.Messages$GenericCommand> r1 = com.avos.avoscloud.Messages.GenericCommand.PARSER     // Catch:{ InvalidProtocolBufferException -> 0x0011 }
                    java.lang.Object r3 = r1.parsePartialFrom(r3, r4)     // Catch:{ InvalidProtocolBufferException -> 0x0011 }
                    com.avos.avoscloud.Messages$GenericCommand r3 = (com.avos.avoscloud.Messages.GenericCommand) r3     // Catch:{ InvalidProtocolBufferException -> 0x0011 }
                    if (r3 == 0) goto L_0x000e
                    r2.mergeFrom(r3)
                L_0x000e:
                    return r2
                L_0x000f:
                    r3 = move-exception
                    goto L_0x001f
                L_0x0011:
                    r3 = move-exception
                    com.google.protobuf.MessageLite r4 = r3.getUnfinishedMessage()     // Catch:{ all -> 0x000f }
                    com.avos.avoscloud.Messages$GenericCommand r4 = (com.avos.avoscloud.Messages.GenericCommand) r4     // Catch:{ all -> 0x000f }
                    java.io.IOException r3 = r3.unwrapIOException()     // Catch:{ all -> 0x001d }
                    throw r3     // Catch:{ all -> 0x001d }
                L_0x001d:
                    r3 = move-exception
                    r0 = r4
                L_0x001f:
                    if (r0 == 0) goto L_0x0024
                    r2.mergeFrom(r0)
                L_0x0024:
                    throw r3
                */
                throw new UnsupportedOperationException("Method not decompiled: com.avos.avoscloud.Messages.GenericCommand.Builder.mergeFrom(com.google.protobuf.CodedInputStream, com.google.protobuf.ExtensionRegistryLite):com.avos.avoscloud.Messages$GenericCommand$Builder");
            }

            public boolean hasCmd() {
                return (this.bitField0_ & 1) == 1;
            }

            public CommandType getCmd() {
                CommandType valueOf = CommandType.valueOf(this.cmd_);
                return valueOf == null ? CommandType.session : valueOf;
            }

            public Builder setCmd(CommandType commandType) {
                if (commandType != null) {
                    this.bitField0_ |= 1;
                    this.cmd_ = commandType.getNumber();
                    onChanged();
                    return this;
                }
                throw new NullPointerException();
            }

            public Builder clearCmd() {
                this.bitField0_ &= -2;
                this.cmd_ = 0;
                onChanged();
                return this;
            }

            public boolean hasOp() {
                return (this.bitField0_ & 2) == 2;
            }

            public OpType getOp() {
                OpType valueOf = OpType.valueOf(this.op_);
                return valueOf == null ? OpType.open : valueOf;
            }

            public Builder setOp(OpType opType) {
                if (opType != null) {
                    this.bitField0_ |= 2;
                    this.op_ = opType.getNumber();
                    onChanged();
                    return this;
                }
                throw new NullPointerException();
            }

            public Builder clearOp() {
                this.bitField0_ &= -3;
                this.op_ = 1;
                onChanged();
                return this;
            }

            public boolean hasAppId() {
                return (this.bitField0_ & 4) == 4;
            }

            public String getAppId() {
                Object obj = this.appId_;
                if (obj instanceof String) {
                    return (String) obj;
                }
                ByteString byteString = (ByteString) obj;
                String stringUtf8 = byteString.toStringUtf8();
                if (byteString.isValidUtf8()) {
                    this.appId_ = stringUtf8;
                }
                return stringUtf8;
            }

            public ByteString getAppIdBytes() {
                Object obj = this.appId_;
                if (!(obj instanceof String)) {
                    return (ByteString) obj;
                }
                ByteString copyFromUtf8 = ByteString.copyFromUtf8((String) obj);
                this.appId_ = copyFromUtf8;
                return copyFromUtf8;
            }

            public Builder setAppId(String str) {
                if (str != null) {
                    this.bitField0_ |= 4;
                    this.appId_ = str;
                    onChanged();
                    return this;
                }
                throw new NullPointerException();
            }

            public Builder clearAppId() {
                this.bitField0_ &= -5;
                this.appId_ = GenericCommand.getDefaultInstance().getAppId();
                onChanged();
                return this;
            }

            public Builder setAppIdBytes(ByteString byteString) {
                if (byteString != null) {
                    this.bitField0_ |= 4;
                    this.appId_ = byteString;
                    onChanged();
                    return this;
                }
                throw new NullPointerException();
            }

            public boolean hasPeerId() {
                return (this.bitField0_ & 8) == 8;
            }

            public String getPeerId() {
                Object obj = this.peerId_;
                if (obj instanceof String) {
                    return (String) obj;
                }
                ByteString byteString = (ByteString) obj;
                String stringUtf8 = byteString.toStringUtf8();
                if (byteString.isValidUtf8()) {
                    this.peerId_ = stringUtf8;
                }
                return stringUtf8;
            }

            public ByteString getPeerIdBytes() {
                Object obj = this.peerId_;
                if (!(obj instanceof String)) {
                    return (ByteString) obj;
                }
                ByteString copyFromUtf8 = ByteString.copyFromUtf8((String) obj);
                this.peerId_ = copyFromUtf8;
                return copyFromUtf8;
            }

            public Builder setPeerId(String str) {
                if (str != null) {
                    this.bitField0_ |= 8;
                    this.peerId_ = str;
                    onChanged();
                    return this;
                }
                throw new NullPointerException();
            }

            public Builder clearPeerId() {
                this.bitField0_ &= -9;
                this.peerId_ = GenericCommand.getDefaultInstance().getPeerId();
                onChanged();
                return this;
            }

            public Builder setPeerIdBytes(ByteString byteString) {
                if (byteString != null) {
                    this.bitField0_ |= 8;
                    this.peerId_ = byteString;
                    onChanged();
                    return this;
                }
                throw new NullPointerException();
            }

            public boolean hasI() {
                return (this.bitField0_ & 16) == 16;
            }

            public int getI() {
                return this.i_;
            }

            public Builder setI(int i) {
                this.bitField0_ |= 16;
                this.i_ = i;
                onChanged();
                return this;
            }

            public Builder clearI() {
                this.bitField0_ &= -17;
                this.i_ = 0;
                onChanged();
                return this;
            }

            public boolean hasInstallationId() {
                return (this.bitField0_ & 32) == 32;
            }

            public String getInstallationId() {
                Object obj = this.installationId_;
                if (obj instanceof String) {
                    return (String) obj;
                }
                ByteString byteString = (ByteString) obj;
                String stringUtf8 = byteString.toStringUtf8();
                if (byteString.isValidUtf8()) {
                    this.installationId_ = stringUtf8;
                }
                return stringUtf8;
            }

            public ByteString getInstallationIdBytes() {
                Object obj = this.installationId_;
                if (!(obj instanceof String)) {
                    return (ByteString) obj;
                }
                ByteString copyFromUtf8 = ByteString.copyFromUtf8((String) obj);
                this.installationId_ = copyFromUtf8;
                return copyFromUtf8;
            }

            public Builder setInstallationId(String str) {
                if (str != null) {
                    this.bitField0_ |= 32;
                    this.installationId_ = str;
                    onChanged();
                    return this;
                }
                throw new NullPointerException();
            }

            public Builder clearInstallationId() {
                this.bitField0_ &= -33;
                this.installationId_ = GenericCommand.getDefaultInstance().getInstallationId();
                onChanged();
                return this;
            }

            public Builder setInstallationIdBytes(ByteString byteString) {
                if (byteString != null) {
                    this.bitField0_ |= 32;
                    this.installationId_ = byteString;
                    onChanged();
                    return this;
                }
                throw new NullPointerException();
            }

            public boolean hasPriority() {
                return (this.bitField0_ & 64) == 64;
            }

            public int getPriority() {
                return this.priority_;
            }

            public Builder setPriority(int i) {
                this.bitField0_ |= 64;
                this.priority_ = i;
                onChanged();
                return this;
            }

            public Builder clearPriority() {
                this.bitField0_ &= -65;
                this.priority_ = 0;
                onChanged();
                return this;
            }

            public boolean hasService() {
                return (this.bitField0_ & 128) == 128;
            }

            public int getService() {
                return this.service_;
            }

            public Builder setService(int i) {
                this.bitField0_ |= 128;
                this.service_ = i;
                onChanged();
                return this;
            }

            public Builder clearService() {
                this.bitField0_ &= -129;
                this.service_ = 0;
                onChanged();
                return this;
            }

            public boolean hasServerTs() {
                return (this.bitField0_ & 256) == 256;
            }

            public long getServerTs() {
                return this.serverTs_;
            }

            public Builder setServerTs(long j) {
                this.bitField0_ |= 256;
                this.serverTs_ = j;
                onChanged();
                return this;
            }

            public Builder clearServerTs() {
                this.bitField0_ &= -257;
                this.serverTs_ = 0;
                onChanged();
                return this;
            }

            public boolean hasDataMessage() {
                return (this.bitField0_ & 512) == 512;
            }

            public DataCommand getDataMessage() {
                SingleFieldBuilderV3<DataCommand, Builder, DataCommandOrBuilder> singleFieldBuilderV3 = this.dataMessageBuilder_;
                if (singleFieldBuilderV3 != null) {
                    return (DataCommand) singleFieldBuilderV3.getMessage();
                }
                DataCommand dataCommand = this.dataMessage_;
                if (dataCommand == null) {
                    dataCommand = DataCommand.getDefaultInstance();
                }
                return dataCommand;
            }

            public Builder setDataMessage(DataCommand dataCommand) {
                SingleFieldBuilderV3<DataCommand, Builder, DataCommandOrBuilder> singleFieldBuilderV3 = this.dataMessageBuilder_;
                if (singleFieldBuilderV3 != null) {
                    singleFieldBuilderV3.setMessage(dataCommand);
                } else if (dataCommand != null) {
                    this.dataMessage_ = dataCommand;
                    onChanged();
                } else {
                    throw new NullPointerException();
                }
                this.bitField0_ |= 512;
                return this;
            }

            public Builder setDataMessage(Builder builder) {
                SingleFieldBuilderV3<DataCommand, Builder, DataCommandOrBuilder> singleFieldBuilderV3 = this.dataMessageBuilder_;
                if (singleFieldBuilderV3 == null) {
                    this.dataMessage_ = builder.build();
                    onChanged();
                } else {
                    singleFieldBuilderV3.setMessage(builder.build());
                }
                this.bitField0_ |= 512;
                return this;
            }

            public Builder mergeDataMessage(DataCommand dataCommand) {
                SingleFieldBuilderV3<DataCommand, Builder, DataCommandOrBuilder> singleFieldBuilderV3 = this.dataMessageBuilder_;
                if (singleFieldBuilderV3 == null) {
                    if ((this.bitField0_ & 512) == 512) {
                        DataCommand dataCommand2 = this.dataMessage_;
                        if (!(dataCommand2 == null || dataCommand2 == DataCommand.getDefaultInstance())) {
                            this.dataMessage_ = DataCommand.newBuilder(this.dataMessage_).mergeFrom(dataCommand).buildPartial();
                            onChanged();
                        }
                    }
                    this.dataMessage_ = dataCommand;
                    onChanged();
                } else {
                    singleFieldBuilderV3.mergeFrom(dataCommand);
                }
                this.bitField0_ |= 512;
                return this;
            }

            public Builder clearDataMessage() {
                SingleFieldBuilderV3<DataCommand, Builder, DataCommandOrBuilder> singleFieldBuilderV3 = this.dataMessageBuilder_;
                if (singleFieldBuilderV3 == null) {
                    this.dataMessage_ = null;
                    onChanged();
                } else {
                    singleFieldBuilderV3.clear();
                }
                this.bitField0_ &= -513;
                return this;
            }

            public Builder getDataMessageBuilder() {
                this.bitField0_ |= 512;
                onChanged();
                return (Builder) getDataMessageFieldBuilder().getBuilder();
            }

            public DataCommandOrBuilder getDataMessageOrBuilder() {
                SingleFieldBuilderV3<DataCommand, Builder, DataCommandOrBuilder> singleFieldBuilderV3 = this.dataMessageBuilder_;
                if (singleFieldBuilderV3 != null) {
                    return (DataCommandOrBuilder) singleFieldBuilderV3.getMessageOrBuilder();
                }
                DataCommand dataCommand = this.dataMessage_;
                if (dataCommand == null) {
                    dataCommand = DataCommand.getDefaultInstance();
                }
                return dataCommand;
            }

            private SingleFieldBuilderV3<DataCommand, Builder, DataCommandOrBuilder> getDataMessageFieldBuilder() {
                if (this.dataMessageBuilder_ == null) {
                    this.dataMessageBuilder_ = new SingleFieldBuilderV3<>(getDataMessage(), getParentForChildren(), isClean());
                    this.dataMessage_ = null;
                }
                return this.dataMessageBuilder_;
            }

            public boolean hasSessionMessage() {
                return (this.bitField0_ & 1024) == 1024;
            }

            public SessionCommand getSessionMessage() {
                SingleFieldBuilderV3<SessionCommand, Builder, SessionCommandOrBuilder> singleFieldBuilderV3 = this.sessionMessageBuilder_;
                if (singleFieldBuilderV3 != null) {
                    return (SessionCommand) singleFieldBuilderV3.getMessage();
                }
                SessionCommand sessionCommand = this.sessionMessage_;
                if (sessionCommand == null) {
                    sessionCommand = SessionCommand.getDefaultInstance();
                }
                return sessionCommand;
            }

            public Builder setSessionMessage(SessionCommand sessionCommand) {
                SingleFieldBuilderV3<SessionCommand, Builder, SessionCommandOrBuilder> singleFieldBuilderV3 = this.sessionMessageBuilder_;
                if (singleFieldBuilderV3 != null) {
                    singleFieldBuilderV3.setMessage(sessionCommand);
                } else if (sessionCommand != null) {
                    this.sessionMessage_ = sessionCommand;
                    onChanged();
                } else {
                    throw new NullPointerException();
                }
                this.bitField0_ |= 1024;
                return this;
            }

            public Builder setSessionMessage(Builder builder) {
                SingleFieldBuilderV3<SessionCommand, Builder, SessionCommandOrBuilder> singleFieldBuilderV3 = this.sessionMessageBuilder_;
                if (singleFieldBuilderV3 == null) {
                    this.sessionMessage_ = builder.build();
                    onChanged();
                } else {
                    singleFieldBuilderV3.setMessage(builder.build());
                }
                this.bitField0_ |= 1024;
                return this;
            }

            public Builder mergeSessionMessage(SessionCommand sessionCommand) {
                SingleFieldBuilderV3<SessionCommand, Builder, SessionCommandOrBuilder> singleFieldBuilderV3 = this.sessionMessageBuilder_;
                if (singleFieldBuilderV3 == null) {
                    if ((this.bitField0_ & 1024) == 1024) {
                        SessionCommand sessionCommand2 = this.sessionMessage_;
                        if (!(sessionCommand2 == null || sessionCommand2 == SessionCommand.getDefaultInstance())) {
                            this.sessionMessage_ = SessionCommand.newBuilder(this.sessionMessage_).mergeFrom(sessionCommand).buildPartial();
                            onChanged();
                        }
                    }
                    this.sessionMessage_ = sessionCommand;
                    onChanged();
                } else {
                    singleFieldBuilderV3.mergeFrom(sessionCommand);
                }
                this.bitField0_ |= 1024;
                return this;
            }

            public Builder clearSessionMessage() {
                SingleFieldBuilderV3<SessionCommand, Builder, SessionCommandOrBuilder> singleFieldBuilderV3 = this.sessionMessageBuilder_;
                if (singleFieldBuilderV3 == null) {
                    this.sessionMessage_ = null;
                    onChanged();
                } else {
                    singleFieldBuilderV3.clear();
                }
                this.bitField0_ &= -1025;
                return this;
            }

            public Builder getSessionMessageBuilder() {
                this.bitField0_ |= 1024;
                onChanged();
                return (Builder) getSessionMessageFieldBuilder().getBuilder();
            }

            public SessionCommandOrBuilder getSessionMessageOrBuilder() {
                SingleFieldBuilderV3<SessionCommand, Builder, SessionCommandOrBuilder> singleFieldBuilderV3 = this.sessionMessageBuilder_;
                if (singleFieldBuilderV3 != null) {
                    return (SessionCommandOrBuilder) singleFieldBuilderV3.getMessageOrBuilder();
                }
                SessionCommand sessionCommand = this.sessionMessage_;
                if (sessionCommand == null) {
                    sessionCommand = SessionCommand.getDefaultInstance();
                }
                return sessionCommand;
            }

            private SingleFieldBuilderV3<SessionCommand, Builder, SessionCommandOrBuilder> getSessionMessageFieldBuilder() {
                if (this.sessionMessageBuilder_ == null) {
                    this.sessionMessageBuilder_ = new SingleFieldBuilderV3<>(getSessionMessage(), getParentForChildren(), isClean());
                    this.sessionMessage_ = null;
                }
                return this.sessionMessageBuilder_;
            }

            public boolean hasErrorMessage() {
                return (this.bitField0_ & 2048) == 2048;
            }

            public ErrorCommand getErrorMessage() {
                SingleFieldBuilderV3<ErrorCommand, Builder, ErrorCommandOrBuilder> singleFieldBuilderV3 = this.errorMessageBuilder_;
                if (singleFieldBuilderV3 != null) {
                    return (ErrorCommand) singleFieldBuilderV3.getMessage();
                }
                ErrorCommand errorCommand = this.errorMessage_;
                if (errorCommand == null) {
                    errorCommand = ErrorCommand.getDefaultInstance();
                }
                return errorCommand;
            }

            public Builder setErrorMessage(ErrorCommand errorCommand) {
                SingleFieldBuilderV3<ErrorCommand, Builder, ErrorCommandOrBuilder> singleFieldBuilderV3 = this.errorMessageBuilder_;
                if (singleFieldBuilderV3 != null) {
                    singleFieldBuilderV3.setMessage(errorCommand);
                } else if (errorCommand != null) {
                    this.errorMessage_ = errorCommand;
                    onChanged();
                } else {
                    throw new NullPointerException();
                }
                this.bitField0_ |= 2048;
                return this;
            }

            public Builder setErrorMessage(Builder builder) {
                SingleFieldBuilderV3<ErrorCommand, Builder, ErrorCommandOrBuilder> singleFieldBuilderV3 = this.errorMessageBuilder_;
                if (singleFieldBuilderV3 == null) {
                    this.errorMessage_ = builder.build();
                    onChanged();
                } else {
                    singleFieldBuilderV3.setMessage(builder.build());
                }
                this.bitField0_ |= 2048;
                return this;
            }

            public Builder mergeErrorMessage(ErrorCommand errorCommand) {
                SingleFieldBuilderV3<ErrorCommand, Builder, ErrorCommandOrBuilder> singleFieldBuilderV3 = this.errorMessageBuilder_;
                if (singleFieldBuilderV3 == null) {
                    if ((this.bitField0_ & 2048) == 2048) {
                        ErrorCommand errorCommand2 = this.errorMessage_;
                        if (!(errorCommand2 == null || errorCommand2 == ErrorCommand.getDefaultInstance())) {
                            this.errorMessage_ = ErrorCommand.newBuilder(this.errorMessage_).mergeFrom(errorCommand).buildPartial();
                            onChanged();
                        }
                    }
                    this.errorMessage_ = errorCommand;
                    onChanged();
                } else {
                    singleFieldBuilderV3.mergeFrom(errorCommand);
                }
                this.bitField0_ |= 2048;
                return this;
            }

            public Builder clearErrorMessage() {
                SingleFieldBuilderV3<ErrorCommand, Builder, ErrorCommandOrBuilder> singleFieldBuilderV3 = this.errorMessageBuilder_;
                if (singleFieldBuilderV3 == null) {
                    this.errorMessage_ = null;
                    onChanged();
                } else {
                    singleFieldBuilderV3.clear();
                }
                this.bitField0_ &= -2049;
                return this;
            }

            public Builder getErrorMessageBuilder() {
                this.bitField0_ |= 2048;
                onChanged();
                return (Builder) getErrorMessageFieldBuilder().getBuilder();
            }

            public ErrorCommandOrBuilder getErrorMessageOrBuilder() {
                SingleFieldBuilderV3<ErrorCommand, Builder, ErrorCommandOrBuilder> singleFieldBuilderV3 = this.errorMessageBuilder_;
                if (singleFieldBuilderV3 != null) {
                    return (ErrorCommandOrBuilder) singleFieldBuilderV3.getMessageOrBuilder();
                }
                ErrorCommand errorCommand = this.errorMessage_;
                if (errorCommand == null) {
                    errorCommand = ErrorCommand.getDefaultInstance();
                }
                return errorCommand;
            }

            private SingleFieldBuilderV3<ErrorCommand, Builder, ErrorCommandOrBuilder> getErrorMessageFieldBuilder() {
                if (this.errorMessageBuilder_ == null) {
                    this.errorMessageBuilder_ = new SingleFieldBuilderV3<>(getErrorMessage(), getParentForChildren(), isClean());
                    this.errorMessage_ = null;
                }
                return this.errorMessageBuilder_;
            }

            public boolean hasDirectMessage() {
                return (this.bitField0_ & 4096) == 4096;
            }

            public DirectCommand getDirectMessage() {
                SingleFieldBuilderV3<DirectCommand, Builder, DirectCommandOrBuilder> singleFieldBuilderV3 = this.directMessageBuilder_;
                if (singleFieldBuilderV3 != null) {
                    return (DirectCommand) singleFieldBuilderV3.getMessage();
                }
                DirectCommand directCommand = this.directMessage_;
                if (directCommand == null) {
                    directCommand = DirectCommand.getDefaultInstance();
                }
                return directCommand;
            }

            public Builder setDirectMessage(DirectCommand directCommand) {
                SingleFieldBuilderV3<DirectCommand, Builder, DirectCommandOrBuilder> singleFieldBuilderV3 = this.directMessageBuilder_;
                if (singleFieldBuilderV3 != null) {
                    singleFieldBuilderV3.setMessage(directCommand);
                } else if (directCommand != null) {
                    this.directMessage_ = directCommand;
                    onChanged();
                } else {
                    throw new NullPointerException();
                }
                this.bitField0_ |= 4096;
                return this;
            }

            public Builder setDirectMessage(Builder builder) {
                SingleFieldBuilderV3<DirectCommand, Builder, DirectCommandOrBuilder> singleFieldBuilderV3 = this.directMessageBuilder_;
                if (singleFieldBuilderV3 == null) {
                    this.directMessage_ = builder.build();
                    onChanged();
                } else {
                    singleFieldBuilderV3.setMessage(builder.build());
                }
                this.bitField0_ |= 4096;
                return this;
            }

            public Builder mergeDirectMessage(DirectCommand directCommand) {
                SingleFieldBuilderV3<DirectCommand, Builder, DirectCommandOrBuilder> singleFieldBuilderV3 = this.directMessageBuilder_;
                if (singleFieldBuilderV3 == null) {
                    if ((this.bitField0_ & 4096) == 4096) {
                        DirectCommand directCommand2 = this.directMessage_;
                        if (!(directCommand2 == null || directCommand2 == DirectCommand.getDefaultInstance())) {
                            this.directMessage_ = DirectCommand.newBuilder(this.directMessage_).mergeFrom(directCommand).buildPartial();
                            onChanged();
                        }
                    }
                    this.directMessage_ = directCommand;
                    onChanged();
                } else {
                    singleFieldBuilderV3.mergeFrom(directCommand);
                }
                this.bitField0_ |= 4096;
                return this;
            }

            public Builder clearDirectMessage() {
                SingleFieldBuilderV3<DirectCommand, Builder, DirectCommandOrBuilder> singleFieldBuilderV3 = this.directMessageBuilder_;
                if (singleFieldBuilderV3 == null) {
                    this.directMessage_ = null;
                    onChanged();
                } else {
                    singleFieldBuilderV3.clear();
                }
                this.bitField0_ &= -4097;
                return this;
            }

            public Builder getDirectMessageBuilder() {
                this.bitField0_ |= 4096;
                onChanged();
                return (Builder) getDirectMessageFieldBuilder().getBuilder();
            }

            public DirectCommandOrBuilder getDirectMessageOrBuilder() {
                SingleFieldBuilderV3<DirectCommand, Builder, DirectCommandOrBuilder> singleFieldBuilderV3 = this.directMessageBuilder_;
                if (singleFieldBuilderV3 != null) {
                    return (DirectCommandOrBuilder) singleFieldBuilderV3.getMessageOrBuilder();
                }
                DirectCommand directCommand = this.directMessage_;
                if (directCommand == null) {
                    directCommand = DirectCommand.getDefaultInstance();
                }
                return directCommand;
            }

            private SingleFieldBuilderV3<DirectCommand, Builder, DirectCommandOrBuilder> getDirectMessageFieldBuilder() {
                if (this.directMessageBuilder_ == null) {
                    this.directMessageBuilder_ = new SingleFieldBuilderV3<>(getDirectMessage(), getParentForChildren(), isClean());
                    this.directMessage_ = null;
                }
                return this.directMessageBuilder_;
            }

            public boolean hasAckMessage() {
                return (this.bitField0_ & 8192) == 8192;
            }

            public AckCommand getAckMessage() {
                SingleFieldBuilderV3<AckCommand, Builder, AckCommandOrBuilder> singleFieldBuilderV3 = this.ackMessageBuilder_;
                if (singleFieldBuilderV3 != null) {
                    return (AckCommand) singleFieldBuilderV3.getMessage();
                }
                AckCommand ackCommand = this.ackMessage_;
                if (ackCommand == null) {
                    ackCommand = AckCommand.getDefaultInstance();
                }
                return ackCommand;
            }

            public Builder setAckMessage(AckCommand ackCommand) {
                SingleFieldBuilderV3<AckCommand, Builder, AckCommandOrBuilder> singleFieldBuilderV3 = this.ackMessageBuilder_;
                if (singleFieldBuilderV3 != null) {
                    singleFieldBuilderV3.setMessage(ackCommand);
                } else if (ackCommand != null) {
                    this.ackMessage_ = ackCommand;
                    onChanged();
                } else {
                    throw new NullPointerException();
                }
                this.bitField0_ |= 8192;
                return this;
            }

            public Builder setAckMessage(Builder builder) {
                SingleFieldBuilderV3<AckCommand, Builder, AckCommandOrBuilder> singleFieldBuilderV3 = this.ackMessageBuilder_;
                if (singleFieldBuilderV3 == null) {
                    this.ackMessage_ = builder.build();
                    onChanged();
                } else {
                    singleFieldBuilderV3.setMessage(builder.build());
                }
                this.bitField0_ |= 8192;
                return this;
            }

            public Builder mergeAckMessage(AckCommand ackCommand) {
                SingleFieldBuilderV3<AckCommand, Builder, AckCommandOrBuilder> singleFieldBuilderV3 = this.ackMessageBuilder_;
                if (singleFieldBuilderV3 == null) {
                    if ((this.bitField0_ & 8192) == 8192) {
                        AckCommand ackCommand2 = this.ackMessage_;
                        if (!(ackCommand2 == null || ackCommand2 == AckCommand.getDefaultInstance())) {
                            this.ackMessage_ = AckCommand.newBuilder(this.ackMessage_).mergeFrom(ackCommand).buildPartial();
                            onChanged();
                        }
                    }
                    this.ackMessage_ = ackCommand;
                    onChanged();
                } else {
                    singleFieldBuilderV3.mergeFrom(ackCommand);
                }
                this.bitField0_ |= 8192;
                return this;
            }

            public Builder clearAckMessage() {
                SingleFieldBuilderV3<AckCommand, Builder, AckCommandOrBuilder> singleFieldBuilderV3 = this.ackMessageBuilder_;
                if (singleFieldBuilderV3 == null) {
                    this.ackMessage_ = null;
                    onChanged();
                } else {
                    singleFieldBuilderV3.clear();
                }
                this.bitField0_ &= -8193;
                return this;
            }

            public Builder getAckMessageBuilder() {
                this.bitField0_ |= 8192;
                onChanged();
                return (Builder) getAckMessageFieldBuilder().getBuilder();
            }

            public AckCommandOrBuilder getAckMessageOrBuilder() {
                SingleFieldBuilderV3<AckCommand, Builder, AckCommandOrBuilder> singleFieldBuilderV3 = this.ackMessageBuilder_;
                if (singleFieldBuilderV3 != null) {
                    return (AckCommandOrBuilder) singleFieldBuilderV3.getMessageOrBuilder();
                }
                AckCommand ackCommand = this.ackMessage_;
                if (ackCommand == null) {
                    ackCommand = AckCommand.getDefaultInstance();
                }
                return ackCommand;
            }

            private SingleFieldBuilderV3<AckCommand, Builder, AckCommandOrBuilder> getAckMessageFieldBuilder() {
                if (this.ackMessageBuilder_ == null) {
                    this.ackMessageBuilder_ = new SingleFieldBuilderV3<>(getAckMessage(), getParentForChildren(), isClean());
                    this.ackMessage_ = null;
                }
                return this.ackMessageBuilder_;
            }

            public boolean hasUnreadMessage() {
                return (this.bitField0_ & 16384) == 16384;
            }

            public UnreadCommand getUnreadMessage() {
                SingleFieldBuilderV3<UnreadCommand, Builder, UnreadCommandOrBuilder> singleFieldBuilderV3 = this.unreadMessageBuilder_;
                if (singleFieldBuilderV3 != null) {
                    return (UnreadCommand) singleFieldBuilderV3.getMessage();
                }
                UnreadCommand unreadCommand = this.unreadMessage_;
                if (unreadCommand == null) {
                    unreadCommand = UnreadCommand.getDefaultInstance();
                }
                return unreadCommand;
            }

            public Builder setUnreadMessage(UnreadCommand unreadCommand) {
                SingleFieldBuilderV3<UnreadCommand, Builder, UnreadCommandOrBuilder> singleFieldBuilderV3 = this.unreadMessageBuilder_;
                if (singleFieldBuilderV3 != null) {
                    singleFieldBuilderV3.setMessage(unreadCommand);
                } else if (unreadCommand != null) {
                    this.unreadMessage_ = unreadCommand;
                    onChanged();
                } else {
                    throw new NullPointerException();
                }
                this.bitField0_ |= 16384;
                return this;
            }

            public Builder setUnreadMessage(Builder builder) {
                SingleFieldBuilderV3<UnreadCommand, Builder, UnreadCommandOrBuilder> singleFieldBuilderV3 = this.unreadMessageBuilder_;
                if (singleFieldBuilderV3 == null) {
                    this.unreadMessage_ = builder.build();
                    onChanged();
                } else {
                    singleFieldBuilderV3.setMessage(builder.build());
                }
                this.bitField0_ |= 16384;
                return this;
            }

            public Builder mergeUnreadMessage(UnreadCommand unreadCommand) {
                SingleFieldBuilderV3<UnreadCommand, Builder, UnreadCommandOrBuilder> singleFieldBuilderV3 = this.unreadMessageBuilder_;
                if (singleFieldBuilderV3 == null) {
                    if ((this.bitField0_ & 16384) == 16384) {
                        UnreadCommand unreadCommand2 = this.unreadMessage_;
                        if (!(unreadCommand2 == null || unreadCommand2 == UnreadCommand.getDefaultInstance())) {
                            this.unreadMessage_ = UnreadCommand.newBuilder(this.unreadMessage_).mergeFrom(unreadCommand).buildPartial();
                            onChanged();
                        }
                    }
                    this.unreadMessage_ = unreadCommand;
                    onChanged();
                } else {
                    singleFieldBuilderV3.mergeFrom(unreadCommand);
                }
                this.bitField0_ |= 16384;
                return this;
            }

            public Builder clearUnreadMessage() {
                SingleFieldBuilderV3<UnreadCommand, Builder, UnreadCommandOrBuilder> singleFieldBuilderV3 = this.unreadMessageBuilder_;
                if (singleFieldBuilderV3 == null) {
                    this.unreadMessage_ = null;
                    onChanged();
                } else {
                    singleFieldBuilderV3.clear();
                }
                this.bitField0_ &= -16385;
                return this;
            }

            public Builder getUnreadMessageBuilder() {
                this.bitField0_ |= 16384;
                onChanged();
                return (Builder) getUnreadMessageFieldBuilder().getBuilder();
            }

            public UnreadCommandOrBuilder getUnreadMessageOrBuilder() {
                SingleFieldBuilderV3<UnreadCommand, Builder, UnreadCommandOrBuilder> singleFieldBuilderV3 = this.unreadMessageBuilder_;
                if (singleFieldBuilderV3 != null) {
                    return (UnreadCommandOrBuilder) singleFieldBuilderV3.getMessageOrBuilder();
                }
                UnreadCommand unreadCommand = this.unreadMessage_;
                if (unreadCommand == null) {
                    unreadCommand = UnreadCommand.getDefaultInstance();
                }
                return unreadCommand;
            }

            private SingleFieldBuilderV3<UnreadCommand, Builder, UnreadCommandOrBuilder> getUnreadMessageFieldBuilder() {
                if (this.unreadMessageBuilder_ == null) {
                    this.unreadMessageBuilder_ = new SingleFieldBuilderV3<>(getUnreadMessage(), getParentForChildren(), isClean());
                    this.unreadMessage_ = null;
                }
                return this.unreadMessageBuilder_;
            }

            public boolean hasReadMessage() {
                return (this.bitField0_ & 32768) == 32768;
            }

            public ReadCommand getReadMessage() {
                SingleFieldBuilderV3<ReadCommand, Builder, ReadCommandOrBuilder> singleFieldBuilderV3 = this.readMessageBuilder_;
                if (singleFieldBuilderV3 != null) {
                    return (ReadCommand) singleFieldBuilderV3.getMessage();
                }
                ReadCommand readCommand = this.readMessage_;
                if (readCommand == null) {
                    readCommand = ReadCommand.getDefaultInstance();
                }
                return readCommand;
            }

            public Builder setReadMessage(ReadCommand readCommand) {
                SingleFieldBuilderV3<ReadCommand, Builder, ReadCommandOrBuilder> singleFieldBuilderV3 = this.readMessageBuilder_;
                if (singleFieldBuilderV3 != null) {
                    singleFieldBuilderV3.setMessage(readCommand);
                } else if (readCommand != null) {
                    this.readMessage_ = readCommand;
                    onChanged();
                } else {
                    throw new NullPointerException();
                }
                this.bitField0_ |= 32768;
                return this;
            }

            public Builder setReadMessage(Builder builder) {
                SingleFieldBuilderV3<ReadCommand, Builder, ReadCommandOrBuilder> singleFieldBuilderV3 = this.readMessageBuilder_;
                if (singleFieldBuilderV3 == null) {
                    this.readMessage_ = builder.build();
                    onChanged();
                } else {
                    singleFieldBuilderV3.setMessage(builder.build());
                }
                this.bitField0_ |= 32768;
                return this;
            }

            public Builder mergeReadMessage(ReadCommand readCommand) {
                SingleFieldBuilderV3<ReadCommand, Builder, ReadCommandOrBuilder> singleFieldBuilderV3 = this.readMessageBuilder_;
                if (singleFieldBuilderV3 == null) {
                    if ((this.bitField0_ & 32768) == 32768) {
                        ReadCommand readCommand2 = this.readMessage_;
                        if (!(readCommand2 == null || readCommand2 == ReadCommand.getDefaultInstance())) {
                            this.readMessage_ = ReadCommand.newBuilder(this.readMessage_).mergeFrom(readCommand).buildPartial();
                            onChanged();
                        }
                    }
                    this.readMessage_ = readCommand;
                    onChanged();
                } else {
                    singleFieldBuilderV3.mergeFrom(readCommand);
                }
                this.bitField0_ |= 32768;
                return this;
            }

            public Builder clearReadMessage() {
                SingleFieldBuilderV3<ReadCommand, Builder, ReadCommandOrBuilder> singleFieldBuilderV3 = this.readMessageBuilder_;
                if (singleFieldBuilderV3 == null) {
                    this.readMessage_ = null;
                    onChanged();
                } else {
                    singleFieldBuilderV3.clear();
                }
                this.bitField0_ &= -32769;
                return this;
            }

            public Builder getReadMessageBuilder() {
                this.bitField0_ |= 32768;
                onChanged();
                return (Builder) getReadMessageFieldBuilder().getBuilder();
            }

            public ReadCommandOrBuilder getReadMessageOrBuilder() {
                SingleFieldBuilderV3<ReadCommand, Builder, ReadCommandOrBuilder> singleFieldBuilderV3 = this.readMessageBuilder_;
                if (singleFieldBuilderV3 != null) {
                    return (ReadCommandOrBuilder) singleFieldBuilderV3.getMessageOrBuilder();
                }
                ReadCommand readCommand = this.readMessage_;
                if (readCommand == null) {
                    readCommand = ReadCommand.getDefaultInstance();
                }
                return readCommand;
            }

            private SingleFieldBuilderV3<ReadCommand, Builder, ReadCommandOrBuilder> getReadMessageFieldBuilder() {
                if (this.readMessageBuilder_ == null) {
                    this.readMessageBuilder_ = new SingleFieldBuilderV3<>(getReadMessage(), getParentForChildren(), isClean());
                    this.readMessage_ = null;
                }
                return this.readMessageBuilder_;
            }

            public boolean hasRcpMessage() {
                return (this.bitField0_ & 65536) == 65536;
            }

            public RcpCommand getRcpMessage() {
                SingleFieldBuilderV3<RcpCommand, Builder, RcpCommandOrBuilder> singleFieldBuilderV3 = this.rcpMessageBuilder_;
                if (singleFieldBuilderV3 != null) {
                    return (RcpCommand) singleFieldBuilderV3.getMessage();
                }
                RcpCommand rcpCommand = this.rcpMessage_;
                if (rcpCommand == null) {
                    rcpCommand = RcpCommand.getDefaultInstance();
                }
                return rcpCommand;
            }

            public Builder setRcpMessage(RcpCommand rcpCommand) {
                SingleFieldBuilderV3<RcpCommand, Builder, RcpCommandOrBuilder> singleFieldBuilderV3 = this.rcpMessageBuilder_;
                if (singleFieldBuilderV3 != null) {
                    singleFieldBuilderV3.setMessage(rcpCommand);
                } else if (rcpCommand != null) {
                    this.rcpMessage_ = rcpCommand;
                    onChanged();
                } else {
                    throw new NullPointerException();
                }
                this.bitField0_ |= 65536;
                return this;
            }

            public Builder setRcpMessage(Builder builder) {
                SingleFieldBuilderV3<RcpCommand, Builder, RcpCommandOrBuilder> singleFieldBuilderV3 = this.rcpMessageBuilder_;
                if (singleFieldBuilderV3 == null) {
                    this.rcpMessage_ = builder.build();
                    onChanged();
                } else {
                    singleFieldBuilderV3.setMessage(builder.build());
                }
                this.bitField0_ |= 65536;
                return this;
            }

            public Builder mergeRcpMessage(RcpCommand rcpCommand) {
                SingleFieldBuilderV3<RcpCommand, Builder, RcpCommandOrBuilder> singleFieldBuilderV3 = this.rcpMessageBuilder_;
                if (singleFieldBuilderV3 == null) {
                    if ((this.bitField0_ & 65536) == 65536) {
                        RcpCommand rcpCommand2 = this.rcpMessage_;
                        if (!(rcpCommand2 == null || rcpCommand2 == RcpCommand.getDefaultInstance())) {
                            this.rcpMessage_ = RcpCommand.newBuilder(this.rcpMessage_).mergeFrom(rcpCommand).buildPartial();
                            onChanged();
                        }
                    }
                    this.rcpMessage_ = rcpCommand;
                    onChanged();
                } else {
                    singleFieldBuilderV3.mergeFrom(rcpCommand);
                }
                this.bitField0_ |= 65536;
                return this;
            }

            public Builder clearRcpMessage() {
                SingleFieldBuilderV3<RcpCommand, Builder, RcpCommandOrBuilder> singleFieldBuilderV3 = this.rcpMessageBuilder_;
                if (singleFieldBuilderV3 == null) {
                    this.rcpMessage_ = null;
                    onChanged();
                } else {
                    singleFieldBuilderV3.clear();
                }
                this.bitField0_ &= CommandPacket.UNSUPPORTED_OPERATION;
                return this;
            }

            public Builder getRcpMessageBuilder() {
                this.bitField0_ |= 65536;
                onChanged();
                return (Builder) getRcpMessageFieldBuilder().getBuilder();
            }

            public RcpCommandOrBuilder getRcpMessageOrBuilder() {
                SingleFieldBuilderV3<RcpCommand, Builder, RcpCommandOrBuilder> singleFieldBuilderV3 = this.rcpMessageBuilder_;
                if (singleFieldBuilderV3 != null) {
                    return (RcpCommandOrBuilder) singleFieldBuilderV3.getMessageOrBuilder();
                }
                RcpCommand rcpCommand = this.rcpMessage_;
                if (rcpCommand == null) {
                    rcpCommand = RcpCommand.getDefaultInstance();
                }
                return rcpCommand;
            }

            private SingleFieldBuilderV3<RcpCommand, Builder, RcpCommandOrBuilder> getRcpMessageFieldBuilder() {
                if (this.rcpMessageBuilder_ == null) {
                    this.rcpMessageBuilder_ = new SingleFieldBuilderV3<>(getRcpMessage(), getParentForChildren(), isClean());
                    this.rcpMessage_ = null;
                }
                return this.rcpMessageBuilder_;
            }

            public boolean hasLogsMessage() {
                return (this.bitField0_ & 131072) == 131072;
            }

            public LogsCommand getLogsMessage() {
                SingleFieldBuilderV3<LogsCommand, Builder, LogsCommandOrBuilder> singleFieldBuilderV3 = this.logsMessageBuilder_;
                if (singleFieldBuilderV3 != null) {
                    return (LogsCommand) singleFieldBuilderV3.getMessage();
                }
                LogsCommand logsCommand = this.logsMessage_;
                if (logsCommand == null) {
                    logsCommand = LogsCommand.getDefaultInstance();
                }
                return logsCommand;
            }

            public Builder setLogsMessage(LogsCommand logsCommand) {
                SingleFieldBuilderV3<LogsCommand, Builder, LogsCommandOrBuilder> singleFieldBuilderV3 = this.logsMessageBuilder_;
                if (singleFieldBuilderV3 != null) {
                    singleFieldBuilderV3.setMessage(logsCommand);
                } else if (logsCommand != null) {
                    this.logsMessage_ = logsCommand;
                    onChanged();
                } else {
                    throw new NullPointerException();
                }
                this.bitField0_ |= 131072;
                return this;
            }

            public Builder setLogsMessage(Builder builder) {
                SingleFieldBuilderV3<LogsCommand, Builder, LogsCommandOrBuilder> singleFieldBuilderV3 = this.logsMessageBuilder_;
                if (singleFieldBuilderV3 == null) {
                    this.logsMessage_ = builder.build();
                    onChanged();
                } else {
                    singleFieldBuilderV3.setMessage(builder.build());
                }
                this.bitField0_ |= 131072;
                return this;
            }

            public Builder mergeLogsMessage(LogsCommand logsCommand) {
                SingleFieldBuilderV3<LogsCommand, Builder, LogsCommandOrBuilder> singleFieldBuilderV3 = this.logsMessageBuilder_;
                if (singleFieldBuilderV3 == null) {
                    if ((this.bitField0_ & 131072) == 131072) {
                        LogsCommand logsCommand2 = this.logsMessage_;
                        if (!(logsCommand2 == null || logsCommand2 == LogsCommand.getDefaultInstance())) {
                            this.logsMessage_ = LogsCommand.newBuilder(this.logsMessage_).mergeFrom(logsCommand).buildPartial();
                            onChanged();
                        }
                    }
                    this.logsMessage_ = logsCommand;
                    onChanged();
                } else {
                    singleFieldBuilderV3.mergeFrom(logsCommand);
                }
                this.bitField0_ |= 131072;
                return this;
            }

            public Builder clearLogsMessage() {
                SingleFieldBuilderV3<LogsCommand, Builder, LogsCommandOrBuilder> singleFieldBuilderV3 = this.logsMessageBuilder_;
                if (singleFieldBuilderV3 == null) {
                    this.logsMessage_ = null;
                    onChanged();
                } else {
                    singleFieldBuilderV3.clear();
                }
                this.bitField0_ &= -131073;
                return this;
            }

            public Builder getLogsMessageBuilder() {
                this.bitField0_ |= 131072;
                onChanged();
                return (Builder) getLogsMessageFieldBuilder().getBuilder();
            }

            public LogsCommandOrBuilder getLogsMessageOrBuilder() {
                SingleFieldBuilderV3<LogsCommand, Builder, LogsCommandOrBuilder> singleFieldBuilderV3 = this.logsMessageBuilder_;
                if (singleFieldBuilderV3 != null) {
                    return (LogsCommandOrBuilder) singleFieldBuilderV3.getMessageOrBuilder();
                }
                LogsCommand logsCommand = this.logsMessage_;
                if (logsCommand == null) {
                    logsCommand = LogsCommand.getDefaultInstance();
                }
                return logsCommand;
            }

            private SingleFieldBuilderV3<LogsCommand, Builder, LogsCommandOrBuilder> getLogsMessageFieldBuilder() {
                if (this.logsMessageBuilder_ == null) {
                    this.logsMessageBuilder_ = new SingleFieldBuilderV3<>(getLogsMessage(), getParentForChildren(), isClean());
                    this.logsMessage_ = null;
                }
                return this.logsMessageBuilder_;
            }

            public boolean hasConvMessage() {
                return (this.bitField0_ & 262144) == 262144;
            }

            public ConvCommand getConvMessage() {
                SingleFieldBuilderV3<ConvCommand, Builder, ConvCommandOrBuilder> singleFieldBuilderV3 = this.convMessageBuilder_;
                if (singleFieldBuilderV3 != null) {
                    return (ConvCommand) singleFieldBuilderV3.getMessage();
                }
                ConvCommand convCommand = this.convMessage_;
                if (convCommand == null) {
                    convCommand = ConvCommand.getDefaultInstance();
                }
                return convCommand;
            }

            public Builder setConvMessage(ConvCommand convCommand) {
                SingleFieldBuilderV3<ConvCommand, Builder, ConvCommandOrBuilder> singleFieldBuilderV3 = this.convMessageBuilder_;
                if (singleFieldBuilderV3 != null) {
                    singleFieldBuilderV3.setMessage(convCommand);
                } else if (convCommand != null) {
                    this.convMessage_ = convCommand;
                    onChanged();
                } else {
                    throw new NullPointerException();
                }
                this.bitField0_ |= 262144;
                return this;
            }

            public Builder setConvMessage(Builder builder) {
                SingleFieldBuilderV3<ConvCommand, Builder, ConvCommandOrBuilder> singleFieldBuilderV3 = this.convMessageBuilder_;
                if (singleFieldBuilderV3 == null) {
                    this.convMessage_ = builder.build();
                    onChanged();
                } else {
                    singleFieldBuilderV3.setMessage(builder.build());
                }
                this.bitField0_ |= 262144;
                return this;
            }

            public Builder mergeConvMessage(ConvCommand convCommand) {
                SingleFieldBuilderV3<ConvCommand, Builder, ConvCommandOrBuilder> singleFieldBuilderV3 = this.convMessageBuilder_;
                if (singleFieldBuilderV3 == null) {
                    if ((this.bitField0_ & 262144) == 262144) {
                        ConvCommand convCommand2 = this.convMessage_;
                        if (!(convCommand2 == null || convCommand2 == ConvCommand.getDefaultInstance())) {
                            this.convMessage_ = ConvCommand.newBuilder(this.convMessage_).mergeFrom(convCommand).buildPartial();
                            onChanged();
                        }
                    }
                    this.convMessage_ = convCommand;
                    onChanged();
                } else {
                    singleFieldBuilderV3.mergeFrom(convCommand);
                }
                this.bitField0_ |= 262144;
                return this;
            }

            public Builder clearConvMessage() {
                SingleFieldBuilderV3<ConvCommand, Builder, ConvCommandOrBuilder> singleFieldBuilderV3 = this.convMessageBuilder_;
                if (singleFieldBuilderV3 == null) {
                    this.convMessage_ = null;
                    onChanged();
                } else {
                    singleFieldBuilderV3.clear();
                }
                this.bitField0_ &= -262145;
                return this;
            }

            public Builder getConvMessageBuilder() {
                this.bitField0_ |= 262144;
                onChanged();
                return (Builder) getConvMessageFieldBuilder().getBuilder();
            }

            public ConvCommandOrBuilder getConvMessageOrBuilder() {
                SingleFieldBuilderV3<ConvCommand, Builder, ConvCommandOrBuilder> singleFieldBuilderV3 = this.convMessageBuilder_;
                if (singleFieldBuilderV3 != null) {
                    return (ConvCommandOrBuilder) singleFieldBuilderV3.getMessageOrBuilder();
                }
                ConvCommand convCommand = this.convMessage_;
                if (convCommand == null) {
                    convCommand = ConvCommand.getDefaultInstance();
                }
                return convCommand;
            }

            private SingleFieldBuilderV3<ConvCommand, Builder, ConvCommandOrBuilder> getConvMessageFieldBuilder() {
                if (this.convMessageBuilder_ == null) {
                    this.convMessageBuilder_ = new SingleFieldBuilderV3<>(getConvMessage(), getParentForChildren(), isClean());
                    this.convMessage_ = null;
                }
                return this.convMessageBuilder_;
            }

            public boolean hasRoomMessage() {
                return (this.bitField0_ & 524288) == 524288;
            }

            public RoomCommand getRoomMessage() {
                SingleFieldBuilderV3<RoomCommand, Builder, RoomCommandOrBuilder> singleFieldBuilderV3 = this.roomMessageBuilder_;
                if (singleFieldBuilderV3 != null) {
                    return (RoomCommand) singleFieldBuilderV3.getMessage();
                }
                RoomCommand roomCommand = this.roomMessage_;
                if (roomCommand == null) {
                    roomCommand = RoomCommand.getDefaultInstance();
                }
                return roomCommand;
            }

            public Builder setRoomMessage(RoomCommand roomCommand) {
                SingleFieldBuilderV3<RoomCommand, Builder, RoomCommandOrBuilder> singleFieldBuilderV3 = this.roomMessageBuilder_;
                if (singleFieldBuilderV3 != null) {
                    singleFieldBuilderV3.setMessage(roomCommand);
                } else if (roomCommand != null) {
                    this.roomMessage_ = roomCommand;
                    onChanged();
                } else {
                    throw new NullPointerException();
                }
                this.bitField0_ |= 524288;
                return this;
            }

            public Builder setRoomMessage(Builder builder) {
                SingleFieldBuilderV3<RoomCommand, Builder, RoomCommandOrBuilder> singleFieldBuilderV3 = this.roomMessageBuilder_;
                if (singleFieldBuilderV3 == null) {
                    this.roomMessage_ = builder.build();
                    onChanged();
                } else {
                    singleFieldBuilderV3.setMessage(builder.build());
                }
                this.bitField0_ |= 524288;
                return this;
            }

            public Builder mergeRoomMessage(RoomCommand roomCommand) {
                SingleFieldBuilderV3<RoomCommand, Builder, RoomCommandOrBuilder> singleFieldBuilderV3 = this.roomMessageBuilder_;
                if (singleFieldBuilderV3 == null) {
                    if ((this.bitField0_ & 524288) == 524288) {
                        RoomCommand roomCommand2 = this.roomMessage_;
                        if (!(roomCommand2 == null || roomCommand2 == RoomCommand.getDefaultInstance())) {
                            this.roomMessage_ = RoomCommand.newBuilder(this.roomMessage_).mergeFrom(roomCommand).buildPartial();
                            onChanged();
                        }
                    }
                    this.roomMessage_ = roomCommand;
                    onChanged();
                } else {
                    singleFieldBuilderV3.mergeFrom(roomCommand);
                }
                this.bitField0_ |= 524288;
                return this;
            }

            public Builder clearRoomMessage() {
                SingleFieldBuilderV3<RoomCommand, Builder, RoomCommandOrBuilder> singleFieldBuilderV3 = this.roomMessageBuilder_;
                if (singleFieldBuilderV3 == null) {
                    this.roomMessage_ = null;
                    onChanged();
                } else {
                    singleFieldBuilderV3.clear();
                }
                this.bitField0_ &= -524289;
                return this;
            }

            public Builder getRoomMessageBuilder() {
                this.bitField0_ |= 524288;
                onChanged();
                return (Builder) getRoomMessageFieldBuilder().getBuilder();
            }

            public RoomCommandOrBuilder getRoomMessageOrBuilder() {
                SingleFieldBuilderV3<RoomCommand, Builder, RoomCommandOrBuilder> singleFieldBuilderV3 = this.roomMessageBuilder_;
                if (singleFieldBuilderV3 != null) {
                    return (RoomCommandOrBuilder) singleFieldBuilderV3.getMessageOrBuilder();
                }
                RoomCommand roomCommand = this.roomMessage_;
                if (roomCommand == null) {
                    roomCommand = RoomCommand.getDefaultInstance();
                }
                return roomCommand;
            }

            private SingleFieldBuilderV3<RoomCommand, Builder, RoomCommandOrBuilder> getRoomMessageFieldBuilder() {
                if (this.roomMessageBuilder_ == null) {
                    this.roomMessageBuilder_ = new SingleFieldBuilderV3<>(getRoomMessage(), getParentForChildren(), isClean());
                    this.roomMessage_ = null;
                }
                return this.roomMessageBuilder_;
            }

            public boolean hasPresenceMessage() {
                return (this.bitField0_ & 1048576) == 1048576;
            }

            public PresenceCommand getPresenceMessage() {
                SingleFieldBuilderV3<PresenceCommand, Builder, PresenceCommandOrBuilder> singleFieldBuilderV3 = this.presenceMessageBuilder_;
                if (singleFieldBuilderV3 != null) {
                    return (PresenceCommand) singleFieldBuilderV3.getMessage();
                }
                PresenceCommand presenceCommand = this.presenceMessage_;
                if (presenceCommand == null) {
                    presenceCommand = PresenceCommand.getDefaultInstance();
                }
                return presenceCommand;
            }

            public Builder setPresenceMessage(PresenceCommand presenceCommand) {
                SingleFieldBuilderV3<PresenceCommand, Builder, PresenceCommandOrBuilder> singleFieldBuilderV3 = this.presenceMessageBuilder_;
                if (singleFieldBuilderV3 != null) {
                    singleFieldBuilderV3.setMessage(presenceCommand);
                } else if (presenceCommand != null) {
                    this.presenceMessage_ = presenceCommand;
                    onChanged();
                } else {
                    throw new NullPointerException();
                }
                this.bitField0_ |= 1048576;
                return this;
            }

            public Builder setPresenceMessage(Builder builder) {
                SingleFieldBuilderV3<PresenceCommand, Builder, PresenceCommandOrBuilder> singleFieldBuilderV3 = this.presenceMessageBuilder_;
                if (singleFieldBuilderV3 == null) {
                    this.presenceMessage_ = builder.build();
                    onChanged();
                } else {
                    singleFieldBuilderV3.setMessage(builder.build());
                }
                this.bitField0_ |= 1048576;
                return this;
            }

            public Builder mergePresenceMessage(PresenceCommand presenceCommand) {
                SingleFieldBuilderV3<PresenceCommand, Builder, PresenceCommandOrBuilder> singleFieldBuilderV3 = this.presenceMessageBuilder_;
                if (singleFieldBuilderV3 == null) {
                    if ((this.bitField0_ & 1048576) == 1048576) {
                        PresenceCommand presenceCommand2 = this.presenceMessage_;
                        if (!(presenceCommand2 == null || presenceCommand2 == PresenceCommand.getDefaultInstance())) {
                            this.presenceMessage_ = PresenceCommand.newBuilder(this.presenceMessage_).mergeFrom(presenceCommand).buildPartial();
                            onChanged();
                        }
                    }
                    this.presenceMessage_ = presenceCommand;
                    onChanged();
                } else {
                    singleFieldBuilderV3.mergeFrom(presenceCommand);
                }
                this.bitField0_ |= 1048576;
                return this;
            }

            public Builder clearPresenceMessage() {
                SingleFieldBuilderV3<PresenceCommand, Builder, PresenceCommandOrBuilder> singleFieldBuilderV3 = this.presenceMessageBuilder_;
                if (singleFieldBuilderV3 == null) {
                    this.presenceMessage_ = null;
                    onChanged();
                } else {
                    singleFieldBuilderV3.clear();
                }
                this.bitField0_ &= -1048577;
                return this;
            }

            public Builder getPresenceMessageBuilder() {
                this.bitField0_ |= 1048576;
                onChanged();
                return (Builder) getPresenceMessageFieldBuilder().getBuilder();
            }

            public PresenceCommandOrBuilder getPresenceMessageOrBuilder() {
                SingleFieldBuilderV3<PresenceCommand, Builder, PresenceCommandOrBuilder> singleFieldBuilderV3 = this.presenceMessageBuilder_;
                if (singleFieldBuilderV3 != null) {
                    return (PresenceCommandOrBuilder) singleFieldBuilderV3.getMessageOrBuilder();
                }
                PresenceCommand presenceCommand = this.presenceMessage_;
                if (presenceCommand == null) {
                    presenceCommand = PresenceCommand.getDefaultInstance();
                }
                return presenceCommand;
            }

            private SingleFieldBuilderV3<PresenceCommand, Builder, PresenceCommandOrBuilder> getPresenceMessageFieldBuilder() {
                if (this.presenceMessageBuilder_ == null) {
                    this.presenceMessageBuilder_ = new SingleFieldBuilderV3<>(getPresenceMessage(), getParentForChildren(), isClean());
                    this.presenceMessage_ = null;
                }
                return this.presenceMessageBuilder_;
            }

            public boolean hasReportMessage() {
                return (this.bitField0_ & 2097152) == 2097152;
            }

            public ReportCommand getReportMessage() {
                SingleFieldBuilderV3<ReportCommand, Builder, ReportCommandOrBuilder> singleFieldBuilderV3 = this.reportMessageBuilder_;
                if (singleFieldBuilderV3 != null) {
                    return (ReportCommand) singleFieldBuilderV3.getMessage();
                }
                ReportCommand reportCommand = this.reportMessage_;
                if (reportCommand == null) {
                    reportCommand = ReportCommand.getDefaultInstance();
                }
                return reportCommand;
            }

            public Builder setReportMessage(ReportCommand reportCommand) {
                SingleFieldBuilderV3<ReportCommand, Builder, ReportCommandOrBuilder> singleFieldBuilderV3 = this.reportMessageBuilder_;
                if (singleFieldBuilderV3 != null) {
                    singleFieldBuilderV3.setMessage(reportCommand);
                } else if (reportCommand != null) {
                    this.reportMessage_ = reportCommand;
                    onChanged();
                } else {
                    throw new NullPointerException();
                }
                this.bitField0_ |= 2097152;
                return this;
            }

            public Builder setReportMessage(Builder builder) {
                SingleFieldBuilderV3<ReportCommand, Builder, ReportCommandOrBuilder> singleFieldBuilderV3 = this.reportMessageBuilder_;
                if (singleFieldBuilderV3 == null) {
                    this.reportMessage_ = builder.build();
                    onChanged();
                } else {
                    singleFieldBuilderV3.setMessage(builder.build());
                }
                this.bitField0_ |= 2097152;
                return this;
            }

            public Builder mergeReportMessage(ReportCommand reportCommand) {
                SingleFieldBuilderV3<ReportCommand, Builder, ReportCommandOrBuilder> singleFieldBuilderV3 = this.reportMessageBuilder_;
                if (singleFieldBuilderV3 == null) {
                    if ((this.bitField0_ & 2097152) == 2097152) {
                        ReportCommand reportCommand2 = this.reportMessage_;
                        if (!(reportCommand2 == null || reportCommand2 == ReportCommand.getDefaultInstance())) {
                            this.reportMessage_ = ReportCommand.newBuilder(this.reportMessage_).mergeFrom(reportCommand).buildPartial();
                            onChanged();
                        }
                    }
                    this.reportMessage_ = reportCommand;
                    onChanged();
                } else {
                    singleFieldBuilderV3.mergeFrom(reportCommand);
                }
                this.bitField0_ |= 2097152;
                return this;
            }

            public Builder clearReportMessage() {
                SingleFieldBuilderV3<ReportCommand, Builder, ReportCommandOrBuilder> singleFieldBuilderV3 = this.reportMessageBuilder_;
                if (singleFieldBuilderV3 == null) {
                    this.reportMessage_ = null;
                    onChanged();
                } else {
                    singleFieldBuilderV3.clear();
                }
                this.bitField0_ &= -2097153;
                return this;
            }

            public Builder getReportMessageBuilder() {
                this.bitField0_ |= 2097152;
                onChanged();
                return (Builder) getReportMessageFieldBuilder().getBuilder();
            }

            public ReportCommandOrBuilder getReportMessageOrBuilder() {
                SingleFieldBuilderV3<ReportCommand, Builder, ReportCommandOrBuilder> singleFieldBuilderV3 = this.reportMessageBuilder_;
                if (singleFieldBuilderV3 != null) {
                    return (ReportCommandOrBuilder) singleFieldBuilderV3.getMessageOrBuilder();
                }
                ReportCommand reportCommand = this.reportMessage_;
                if (reportCommand == null) {
                    reportCommand = ReportCommand.getDefaultInstance();
                }
                return reportCommand;
            }

            private SingleFieldBuilderV3<ReportCommand, Builder, ReportCommandOrBuilder> getReportMessageFieldBuilder() {
                if (this.reportMessageBuilder_ == null) {
                    this.reportMessageBuilder_ = new SingleFieldBuilderV3<>(getReportMessage(), getParentForChildren(), isClean());
                    this.reportMessage_ = null;
                }
                return this.reportMessageBuilder_;
            }

            public boolean hasPatchMessage() {
                return (this.bitField0_ & 4194304) == 4194304;
            }

            public PatchCommand getPatchMessage() {
                SingleFieldBuilderV3<PatchCommand, Builder, PatchCommandOrBuilder> singleFieldBuilderV3 = this.patchMessageBuilder_;
                if (singleFieldBuilderV3 != null) {
                    return (PatchCommand) singleFieldBuilderV3.getMessage();
                }
                PatchCommand patchCommand = this.patchMessage_;
                if (patchCommand == null) {
                    patchCommand = PatchCommand.getDefaultInstance();
                }
                return patchCommand;
            }

            public Builder setPatchMessage(PatchCommand patchCommand) {
                SingleFieldBuilderV3<PatchCommand, Builder, PatchCommandOrBuilder> singleFieldBuilderV3 = this.patchMessageBuilder_;
                if (singleFieldBuilderV3 != null) {
                    singleFieldBuilderV3.setMessage(patchCommand);
                } else if (patchCommand != null) {
                    this.patchMessage_ = patchCommand;
                    onChanged();
                } else {
                    throw new NullPointerException();
                }
                this.bitField0_ |= 4194304;
                return this;
            }

            public Builder setPatchMessage(Builder builder) {
                SingleFieldBuilderV3<PatchCommand, Builder, PatchCommandOrBuilder> singleFieldBuilderV3 = this.patchMessageBuilder_;
                if (singleFieldBuilderV3 == null) {
                    this.patchMessage_ = builder.build();
                    onChanged();
                } else {
                    singleFieldBuilderV3.setMessage(builder.build());
                }
                this.bitField0_ |= 4194304;
                return this;
            }

            public Builder mergePatchMessage(PatchCommand patchCommand) {
                SingleFieldBuilderV3<PatchCommand, Builder, PatchCommandOrBuilder> singleFieldBuilderV3 = this.patchMessageBuilder_;
                if (singleFieldBuilderV3 == null) {
                    if ((this.bitField0_ & 4194304) == 4194304) {
                        PatchCommand patchCommand2 = this.patchMessage_;
                        if (!(patchCommand2 == null || patchCommand2 == PatchCommand.getDefaultInstance())) {
                            this.patchMessage_ = PatchCommand.newBuilder(this.patchMessage_).mergeFrom(patchCommand).buildPartial();
                            onChanged();
                        }
                    }
                    this.patchMessage_ = patchCommand;
                    onChanged();
                } else {
                    singleFieldBuilderV3.mergeFrom(patchCommand);
                }
                this.bitField0_ |= 4194304;
                return this;
            }

            public Builder clearPatchMessage() {
                SingleFieldBuilderV3<PatchCommand, Builder, PatchCommandOrBuilder> singleFieldBuilderV3 = this.patchMessageBuilder_;
                if (singleFieldBuilderV3 == null) {
                    this.patchMessage_ = null;
                    onChanged();
                } else {
                    singleFieldBuilderV3.clear();
                }
                this.bitField0_ &= -4194305;
                return this;
            }

            public Builder getPatchMessageBuilder() {
                this.bitField0_ |= 4194304;
                onChanged();
                return (Builder) getPatchMessageFieldBuilder().getBuilder();
            }

            public PatchCommandOrBuilder getPatchMessageOrBuilder() {
                SingleFieldBuilderV3<PatchCommand, Builder, PatchCommandOrBuilder> singleFieldBuilderV3 = this.patchMessageBuilder_;
                if (singleFieldBuilderV3 != null) {
                    return (PatchCommandOrBuilder) singleFieldBuilderV3.getMessageOrBuilder();
                }
                PatchCommand patchCommand = this.patchMessage_;
                if (patchCommand == null) {
                    patchCommand = PatchCommand.getDefaultInstance();
                }
                return patchCommand;
            }

            private SingleFieldBuilderV3<PatchCommand, Builder, PatchCommandOrBuilder> getPatchMessageFieldBuilder() {
                if (this.patchMessageBuilder_ == null) {
                    this.patchMessageBuilder_ = new SingleFieldBuilderV3<>(getPatchMessage(), getParentForChildren(), isClean());
                    this.patchMessage_ = null;
                }
                return this.patchMessageBuilder_;
            }

            public boolean hasPubsubMessage() {
                return (this.bitField0_ & 8388608) == 8388608;
            }

            public PubsubCommand getPubsubMessage() {
                SingleFieldBuilderV3<PubsubCommand, Builder, PubsubCommandOrBuilder> singleFieldBuilderV3 = this.pubsubMessageBuilder_;
                if (singleFieldBuilderV3 != null) {
                    return (PubsubCommand) singleFieldBuilderV3.getMessage();
                }
                PubsubCommand pubsubCommand = this.pubsubMessage_;
                if (pubsubCommand == null) {
                    pubsubCommand = PubsubCommand.getDefaultInstance();
                }
                return pubsubCommand;
            }

            public Builder setPubsubMessage(PubsubCommand pubsubCommand) {
                SingleFieldBuilderV3<PubsubCommand, Builder, PubsubCommandOrBuilder> singleFieldBuilderV3 = this.pubsubMessageBuilder_;
                if (singleFieldBuilderV3 != null) {
                    singleFieldBuilderV3.setMessage(pubsubCommand);
                } else if (pubsubCommand != null) {
                    this.pubsubMessage_ = pubsubCommand;
                    onChanged();
                } else {
                    throw new NullPointerException();
                }
                this.bitField0_ |= 8388608;
                return this;
            }

            public Builder setPubsubMessage(Builder builder) {
                SingleFieldBuilderV3<PubsubCommand, Builder, PubsubCommandOrBuilder> singleFieldBuilderV3 = this.pubsubMessageBuilder_;
                if (singleFieldBuilderV3 == null) {
                    this.pubsubMessage_ = builder.build();
                    onChanged();
                } else {
                    singleFieldBuilderV3.setMessage(builder.build());
                }
                this.bitField0_ |= 8388608;
                return this;
            }

            public Builder mergePubsubMessage(PubsubCommand pubsubCommand) {
                SingleFieldBuilderV3<PubsubCommand, Builder, PubsubCommandOrBuilder> singleFieldBuilderV3 = this.pubsubMessageBuilder_;
                if (singleFieldBuilderV3 == null) {
                    if ((this.bitField0_ & 8388608) == 8388608) {
                        PubsubCommand pubsubCommand2 = this.pubsubMessage_;
                        if (!(pubsubCommand2 == null || pubsubCommand2 == PubsubCommand.getDefaultInstance())) {
                            this.pubsubMessage_ = PubsubCommand.newBuilder(this.pubsubMessage_).mergeFrom(pubsubCommand).buildPartial();
                            onChanged();
                        }
                    }
                    this.pubsubMessage_ = pubsubCommand;
                    onChanged();
                } else {
                    singleFieldBuilderV3.mergeFrom(pubsubCommand);
                }
                this.bitField0_ |= 8388608;
                return this;
            }

            public Builder clearPubsubMessage() {
                SingleFieldBuilderV3<PubsubCommand, Builder, PubsubCommandOrBuilder> singleFieldBuilderV3 = this.pubsubMessageBuilder_;
                if (singleFieldBuilderV3 == null) {
                    this.pubsubMessage_ = null;
                    onChanged();
                } else {
                    singleFieldBuilderV3.clear();
                }
                this.bitField0_ &= -8388609;
                return this;
            }

            public Builder getPubsubMessageBuilder() {
                this.bitField0_ |= 8388608;
                onChanged();
                return (Builder) getPubsubMessageFieldBuilder().getBuilder();
            }

            public PubsubCommandOrBuilder getPubsubMessageOrBuilder() {
                SingleFieldBuilderV3<PubsubCommand, Builder, PubsubCommandOrBuilder> singleFieldBuilderV3 = this.pubsubMessageBuilder_;
                if (singleFieldBuilderV3 != null) {
                    return (PubsubCommandOrBuilder) singleFieldBuilderV3.getMessageOrBuilder();
                }
                PubsubCommand pubsubCommand = this.pubsubMessage_;
                if (pubsubCommand == null) {
                    pubsubCommand = PubsubCommand.getDefaultInstance();
                }
                return pubsubCommand;
            }

            private SingleFieldBuilderV3<PubsubCommand, Builder, PubsubCommandOrBuilder> getPubsubMessageFieldBuilder() {
                if (this.pubsubMessageBuilder_ == null) {
                    this.pubsubMessageBuilder_ = new SingleFieldBuilderV3<>(getPubsubMessage(), getParentForChildren(), isClean());
                    this.pubsubMessage_ = null;
                }
                return this.pubsubMessageBuilder_;
            }

            public boolean hasBlacklistMessage() {
                return (this.bitField0_ & 16777216) == 16777216;
            }

            public BlacklistCommand getBlacklistMessage() {
                SingleFieldBuilderV3<BlacklistCommand, Builder, BlacklistCommandOrBuilder> singleFieldBuilderV3 = this.blacklistMessageBuilder_;
                if (singleFieldBuilderV3 != null) {
                    return (BlacklistCommand) singleFieldBuilderV3.getMessage();
                }
                BlacklistCommand blacklistCommand = this.blacklistMessage_;
                if (blacklistCommand == null) {
                    blacklistCommand = BlacklistCommand.getDefaultInstance();
                }
                return blacklistCommand;
            }

            public Builder setBlacklistMessage(BlacklistCommand blacklistCommand) {
                SingleFieldBuilderV3<BlacklistCommand, Builder, BlacklistCommandOrBuilder> singleFieldBuilderV3 = this.blacklistMessageBuilder_;
                if (singleFieldBuilderV3 != null) {
                    singleFieldBuilderV3.setMessage(blacklistCommand);
                } else if (blacklistCommand != null) {
                    this.blacklistMessage_ = blacklistCommand;
                    onChanged();
                } else {
                    throw new NullPointerException();
                }
                this.bitField0_ |= 16777216;
                return this;
            }

            public Builder setBlacklistMessage(Builder builder) {
                SingleFieldBuilderV3<BlacklistCommand, Builder, BlacklistCommandOrBuilder> singleFieldBuilderV3 = this.blacklistMessageBuilder_;
                if (singleFieldBuilderV3 == null) {
                    this.blacklistMessage_ = builder.build();
                    onChanged();
                } else {
                    singleFieldBuilderV3.setMessage(builder.build());
                }
                this.bitField0_ |= 16777216;
                return this;
            }

            public Builder mergeBlacklistMessage(BlacklistCommand blacklistCommand) {
                SingleFieldBuilderV3<BlacklistCommand, Builder, BlacklistCommandOrBuilder> singleFieldBuilderV3 = this.blacklistMessageBuilder_;
                if (singleFieldBuilderV3 == null) {
                    if ((this.bitField0_ & 16777216) == 16777216) {
                        BlacklistCommand blacklistCommand2 = this.blacklistMessage_;
                        if (!(blacklistCommand2 == null || blacklistCommand2 == BlacklistCommand.getDefaultInstance())) {
                            this.blacklistMessage_ = BlacklistCommand.newBuilder(this.blacklistMessage_).mergeFrom(blacklistCommand).buildPartial();
                            onChanged();
                        }
                    }
                    this.blacklistMessage_ = blacklistCommand;
                    onChanged();
                } else {
                    singleFieldBuilderV3.mergeFrom(blacklistCommand);
                }
                this.bitField0_ |= 16777216;
                return this;
            }

            public Builder clearBlacklistMessage() {
                SingleFieldBuilderV3<BlacklistCommand, Builder, BlacklistCommandOrBuilder> singleFieldBuilderV3 = this.blacklistMessageBuilder_;
                if (singleFieldBuilderV3 == null) {
                    this.blacklistMessage_ = null;
                    onChanged();
                } else {
                    singleFieldBuilderV3.clear();
                }
                this.bitField0_ &= -16777217;
                return this;
            }

            public Builder getBlacklistMessageBuilder() {
                this.bitField0_ |= 16777216;
                onChanged();
                return (Builder) getBlacklistMessageFieldBuilder().getBuilder();
            }

            public BlacklistCommandOrBuilder getBlacklistMessageOrBuilder() {
                SingleFieldBuilderV3<BlacklistCommand, Builder, BlacklistCommandOrBuilder> singleFieldBuilderV3 = this.blacklistMessageBuilder_;
                if (singleFieldBuilderV3 != null) {
                    return (BlacklistCommandOrBuilder) singleFieldBuilderV3.getMessageOrBuilder();
                }
                BlacklistCommand blacklistCommand = this.blacklistMessage_;
                if (blacklistCommand == null) {
                    blacklistCommand = BlacklistCommand.getDefaultInstance();
                }
                return blacklistCommand;
            }

            private SingleFieldBuilderV3<BlacklistCommand, Builder, BlacklistCommandOrBuilder> getBlacklistMessageFieldBuilder() {
                if (this.blacklistMessageBuilder_ == null) {
                    this.blacklistMessageBuilder_ = new SingleFieldBuilderV3<>(getBlacklistMessage(), getParentForChildren(), isClean());
                    this.blacklistMessage_ = null;
                }
                return this.blacklistMessageBuilder_;
            }

            public final Builder setUnknownFields(UnknownFieldSet unknownFieldSet) {
                return (Builder) super.setUnknownFields(unknownFieldSet);
            }

            public final Builder mergeUnknownFields(UnknownFieldSet unknownFieldSet) {
                return (Builder) super.mergeUnknownFields(unknownFieldSet);
            }
        }

        private GenericCommand(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
            super(builder);
            this.memoizedIsInitialized = -1;
        }

        private GenericCommand() {
            this.memoizedIsInitialized = -1;
            this.cmd_ = 0;
            this.op_ = 1;
            String str = "";
            this.appId_ = str;
            this.peerId_ = str;
            this.i_ = 0;
            this.installationId_ = str;
            this.priority_ = 0;
            this.service_ = 0;
            this.serverTs_ = 0;
        }

        public final UnknownFieldSet getUnknownFields() {
            return this.unknownFields;
        }

        /* JADX WARNING: type inference failed for: r4v0 */
        /* JADX WARNING: type inference failed for: r4v3, types: [com.avos.avoscloud.Messages$DataCommand$Builder] */
        /* JADX WARNING: type inference failed for: r4v4, types: [com.avos.avoscloud.Messages$DataCommand$Builder] */
        /* JADX WARNING: type inference failed for: r4v5, types: [com.avos.avoscloud.Messages$SessionCommand$Builder] */
        /* JADX WARNING: type inference failed for: r4v6, types: [com.avos.avoscloud.Messages$SessionCommand$Builder] */
        /* JADX WARNING: type inference failed for: r4v7, types: [com.avos.avoscloud.Messages$ErrorCommand$Builder] */
        /* JADX WARNING: type inference failed for: r4v8, types: [com.avos.avoscloud.Messages$ErrorCommand$Builder] */
        /* JADX WARNING: type inference failed for: r4v9, types: [com.avos.avoscloud.Messages$DirectCommand$Builder] */
        /* JADX WARNING: type inference failed for: r4v10, types: [com.avos.avoscloud.Messages$DirectCommand$Builder] */
        /* JADX WARNING: type inference failed for: r4v11, types: [com.avos.avoscloud.Messages$AckCommand$Builder] */
        /* JADX WARNING: type inference failed for: r4v12, types: [com.avos.avoscloud.Messages$AckCommand$Builder] */
        /* JADX WARNING: type inference failed for: r4v13, types: [com.avos.avoscloud.Messages$UnreadCommand$Builder] */
        /* JADX WARNING: type inference failed for: r4v14, types: [com.avos.avoscloud.Messages$UnreadCommand$Builder] */
        /* JADX WARNING: type inference failed for: r4v15, types: [com.avos.avoscloud.Messages$ReadCommand$Builder] */
        /* JADX WARNING: type inference failed for: r4v16, types: [com.avos.avoscloud.Messages$ReadCommand$Builder] */
        /* JADX WARNING: type inference failed for: r4v17, types: [com.avos.avoscloud.Messages$RcpCommand$Builder] */
        /* JADX WARNING: type inference failed for: r4v18, types: [com.avos.avoscloud.Messages$RcpCommand$Builder] */
        /* JADX WARNING: type inference failed for: r4v19, types: [com.avos.avoscloud.Messages$LogsCommand$Builder] */
        /* JADX WARNING: type inference failed for: r4v20, types: [com.avos.avoscloud.Messages$LogsCommand$Builder] */
        /* JADX WARNING: type inference failed for: r4v21, types: [com.avos.avoscloud.Messages$ConvCommand$Builder] */
        /* JADX WARNING: type inference failed for: r4v22, types: [com.avos.avoscloud.Messages$ConvCommand$Builder] */
        /* JADX WARNING: type inference failed for: r4v23, types: [com.avos.avoscloud.Messages$RoomCommand$Builder] */
        /* JADX WARNING: type inference failed for: r4v24, types: [com.avos.avoscloud.Messages$RoomCommand$Builder] */
        /* JADX WARNING: type inference failed for: r4v25, types: [com.avos.avoscloud.Messages$PresenceCommand$Builder] */
        /* JADX WARNING: type inference failed for: r4v26, types: [com.avos.avoscloud.Messages$PresenceCommand$Builder] */
        /* JADX WARNING: type inference failed for: r4v27, types: [com.avos.avoscloud.Messages$ReportCommand$Builder] */
        /* JADX WARNING: type inference failed for: r4v28, types: [com.avos.avoscloud.Messages$ReportCommand$Builder] */
        /* JADX WARNING: type inference failed for: r4v29, types: [com.avos.avoscloud.Messages$PatchCommand$Builder] */
        /* JADX WARNING: type inference failed for: r4v30, types: [com.avos.avoscloud.Messages$PatchCommand$Builder] */
        /* JADX WARNING: type inference failed for: r4v31, types: [com.avos.avoscloud.Messages$PubsubCommand$Builder] */
        /* JADX WARNING: type inference failed for: r4v32, types: [com.avos.avoscloud.Messages$PubsubCommand$Builder] */
        /* JADX WARNING: type inference failed for: r4v33, types: [com.avos.avoscloud.Messages$BlacklistCommand$Builder] */
        /* JADX WARNING: type inference failed for: r4v34, types: [com.avos.avoscloud.Messages$BlacklistCommand$Builder] */
        /* JADX WARNING: type inference failed for: r4v35 */
        /* JADX WARNING: type inference failed for: r4v36 */
        /* JADX WARNING: type inference failed for: r4v37 */
        /* JADX WARNING: type inference failed for: r4v38 */
        /* JADX WARNING: type inference failed for: r4v39 */
        /* JADX WARNING: type inference failed for: r4v40 */
        /* JADX WARNING: type inference failed for: r4v41 */
        /* JADX WARNING: type inference failed for: r4v42 */
        /* JADX WARNING: type inference failed for: r4v43 */
        /* JADX WARNING: type inference failed for: r4v44 */
        /* JADX WARNING: type inference failed for: r4v45 */
        /* JADX WARNING: type inference failed for: r4v46 */
        /* JADX WARNING: type inference failed for: r4v47 */
        /* JADX WARNING: type inference failed for: r4v48 */
        /* JADX WARNING: type inference failed for: r4v49 */
        /* JADX WARNING: type inference failed for: r4v50 */
        /* JADX WARNING: Multi-variable type inference failed. Error: jadx.core.utils.exceptions.JadxRuntimeException: No candidate types for var: r4v0
          assigns: [?[int, float, boolean, short, byte, char, OBJECT, ARRAY], com.avos.avoscloud.Messages$SessionCommand$Builder, com.avos.avoscloud.Messages$DataCommand$Builder, com.avos.avoscloud.Messages$ErrorCommand$Builder, com.avos.avoscloud.Messages$DirectCommand$Builder, com.avos.avoscloud.Messages$AckCommand$Builder, com.avos.avoscloud.Messages$UnreadCommand$Builder, com.avos.avoscloud.Messages$ReadCommand$Builder, com.avos.avoscloud.Messages$RcpCommand$Builder, com.avos.avoscloud.Messages$LogsCommand$Builder, com.avos.avoscloud.Messages$ConvCommand$Builder, com.avos.avoscloud.Messages$RoomCommand$Builder, com.avos.avoscloud.Messages$PresenceCommand$Builder, com.avos.avoscloud.Messages$ReportCommand$Builder, com.avos.avoscloud.Messages$PatchCommand$Builder, com.avos.avoscloud.Messages$PubsubCommand$Builder, com.avos.avoscloud.Messages$BlacklistCommand$Builder]
          uses: [?[int, boolean, OBJECT, ARRAY, byte, short, char], com.avos.avoscloud.Messages$DataCommand$Builder, com.avos.avoscloud.Messages$SessionCommand$Builder, com.avos.avoscloud.Messages$ErrorCommand$Builder, com.avos.avoscloud.Messages$DirectCommand$Builder, com.avos.avoscloud.Messages$AckCommand$Builder, com.avos.avoscloud.Messages$UnreadCommand$Builder, com.avos.avoscloud.Messages$ReadCommand$Builder, com.avos.avoscloud.Messages$RcpCommand$Builder, com.avos.avoscloud.Messages$LogsCommand$Builder, com.avos.avoscloud.Messages$ConvCommand$Builder, com.avos.avoscloud.Messages$RoomCommand$Builder, com.avos.avoscloud.Messages$PresenceCommand$Builder, com.avos.avoscloud.Messages$ReportCommand$Builder, com.avos.avoscloud.Messages$PatchCommand$Builder, com.avos.avoscloud.Messages$PubsubCommand$Builder, com.avos.avoscloud.Messages$BlacklistCommand$Builder]
          mth insns count: 392
        	at jadx.core.dex.visitors.typeinference.TypeSearch.fillTypeCandidates(TypeSearch.java:237)
        	at java.util.ArrayList.forEach(ArrayList.java:1257)
        	at jadx.core.dex.visitors.typeinference.TypeSearch.run(TypeSearch.java:53)
        	at jadx.core.dex.visitors.typeinference.TypeInferenceVisitor.runMultiVariableSearch(TypeInferenceVisitor.java:99)
        	at jadx.core.dex.visitors.typeinference.TypeInferenceVisitor.visit(TypeInferenceVisitor.java:92)
        	at jadx.core.dex.visitors.DepthTraversal.visit(DepthTraversal.java:27)
        	at jadx.core.dex.visitors.DepthTraversal.lambda$visit$1(DepthTraversal.java:14)
        	at java.util.ArrayList.forEach(ArrayList.java:1257)
        	at jadx.core.dex.visitors.DepthTraversal.visit(DepthTraversal.java:14)
        	at jadx.core.dex.visitors.DepthTraversal.lambda$visit$0(DepthTraversal.java:13)
        	at java.util.ArrayList.forEach(ArrayList.java:1257)
        	at jadx.core.dex.visitors.DepthTraversal.visit(DepthTraversal.java:13)
        	at jadx.core.ProcessClass.process(ProcessClass.java:30)
        	at jadx.core.ProcessClass.lambda$processDependencies$0(ProcessClass.java:49)
        	at java.util.ArrayList.forEach(ArrayList.java:1257)
        	at jadx.core.ProcessClass.processDependencies(ProcessClass.java:49)
        	at jadx.core.ProcessClass.process(ProcessClass.java:35)
        	at jadx.api.JadxDecompiler.processClass(JadxDecompiler.java:311)
        	at jadx.api.JavaClass.decompile(JavaClass.java:62)
        	at jadx.api.JadxDecompiler.lambda$appendSourcesSave$0(JadxDecompiler.java:217)
         */
        /* JADX WARNING: Unknown variable types count: 17 */
        /* Code decompiled incorrectly, please refer to instructions dump. */
        private GenericCommand(com.google.protobuf.CodedInputStream r6, com.google.protobuf.ExtensionRegistryLite r7) throws com.google.protobuf.InvalidProtocolBufferException {
            /*
                r5 = this;
                r5.<init>()
                com.google.protobuf.UnknownFieldSet$Builder r0 = com.google.protobuf.UnknownFieldSet.newBuilder()
                r1 = 0
            L_0x0008:
                if (r1 != 0) goto L_0x0385
                int r2 = r6.readTag()     // Catch:{ InvalidProtocolBufferException -> 0x0375, IOException -> 0x036a }
                r3 = 1
                r4 = 0
                switch(r2) {
                    case 0: goto L_0x0362;
                    case 8: goto L_0x034a;
                    case 16: goto L_0x0330;
                    case 26: goto L_0x0322;
                    case 34: goto L_0x0314;
                    case 40: goto L_0x0306;
                    case 50: goto L_0x02f8;
                    case 56: goto L_0x02ea;
                    case 64: goto L_0x02dc;
                    case 72: goto L_0x02ce;
                    case 810: goto L_0x02a3;
                    case 818: goto L_0x0278;
                    case 826: goto L_0x024d;
                    case 834: goto L_0x0222;
                    case 842: goto L_0x01f7;
                    case 850: goto L_0x01cc;
                    case 858: goto L_0x01a0;
                    case 866: goto L_0x0175;
                    case 874: goto L_0x014a;
                    case 882: goto L_0x011f;
                    case 890: goto L_0x00f4;
                    case 898: goto L_0x00c9;
                    case 906: goto L_0x009e;
                    case 914: goto L_0x0071;
                    case 922: goto L_0x0045;
                    case 930: goto L_0x0019;
                    default: goto L_0x0013;
                }     // Catch:{ InvalidProtocolBufferException -> 0x0375, IOException -> 0x036a }
            L_0x0013:
                boolean r2 = r5.parseUnknownField(r6, r0, r7, r2)     // Catch:{ InvalidProtocolBufferException -> 0x0375, IOException -> 0x036a }
                goto L_0x0365
            L_0x0019:
                int r2 = r5.bitField0_     // Catch:{ InvalidProtocolBufferException -> 0x0375, IOException -> 0x036a }
                r3 = 16777216(0x1000000, float:2.3509887E-38)
                r2 = r2 & r3
                if (r2 != r3) goto L_0x0026
                com.avos.avoscloud.Messages$BlacklistCommand r2 = r5.blacklistMessage_     // Catch:{ InvalidProtocolBufferException -> 0x0375, IOException -> 0x036a }
                com.avos.avoscloud.Messages$BlacklistCommand$Builder r4 = r2.toBuilder()     // Catch:{ InvalidProtocolBufferException -> 0x0375, IOException -> 0x036a }
            L_0x0026:
                com.google.protobuf.Parser<com.avos.avoscloud.Messages$BlacklistCommand> r2 = com.avos.avoscloud.Messages.BlacklistCommand.PARSER     // Catch:{ InvalidProtocolBufferException -> 0x0375, IOException -> 0x036a }
                com.google.protobuf.MessageLite r2 = r6.readMessage(r2, r7)     // Catch:{ InvalidProtocolBufferException -> 0x0375, IOException -> 0x036a }
                com.avos.avoscloud.Messages$BlacklistCommand r2 = (com.avos.avoscloud.Messages.BlacklistCommand) r2     // Catch:{ InvalidProtocolBufferException -> 0x0375, IOException -> 0x036a }
                r5.blacklistMessage_ = r2     // Catch:{ InvalidProtocolBufferException -> 0x0375, IOException -> 0x036a }
                if (r4 == 0) goto L_0x003d
                com.avos.avoscloud.Messages$BlacklistCommand r2 = r5.blacklistMessage_     // Catch:{ InvalidProtocolBufferException -> 0x0375, IOException -> 0x036a }
                r4.mergeFrom(r2)     // Catch:{ InvalidProtocolBufferException -> 0x0375, IOException -> 0x036a }
                com.avos.avoscloud.Messages$BlacklistCommand r2 = r4.buildPartial()     // Catch:{ InvalidProtocolBufferException -> 0x0375, IOException -> 0x036a }
                r5.blacklistMessage_ = r2     // Catch:{ InvalidProtocolBufferException -> 0x0375, IOException -> 0x036a }
            L_0x003d:
                int r2 = r5.bitField0_     // Catch:{ InvalidProtocolBufferException -> 0x0375, IOException -> 0x036a }
                r3 = 16777216(0x1000000, float:2.3509887E-38)
                r2 = r2 | r3
                r5.bitField0_ = r2     // Catch:{ InvalidProtocolBufferException -> 0x0375, IOException -> 0x036a }
                goto L_0x0008
            L_0x0045:
                int r2 = r5.bitField0_     // Catch:{ InvalidProtocolBufferException -> 0x0375, IOException -> 0x036a }
                r3 = 8388608(0x800000, float:1.17549435E-38)
                r2 = r2 & r3
                if (r2 != r3) goto L_0x0052
                com.avos.avoscloud.Messages$PubsubCommand r2 = r5.pubsubMessage_     // Catch:{ InvalidProtocolBufferException -> 0x0375, IOException -> 0x036a }
                com.avos.avoscloud.Messages$PubsubCommand$Builder r4 = r2.toBuilder()     // Catch:{ InvalidProtocolBufferException -> 0x0375, IOException -> 0x036a }
            L_0x0052:
                com.google.protobuf.Parser<com.avos.avoscloud.Messages$PubsubCommand> r2 = com.avos.avoscloud.Messages.PubsubCommand.PARSER     // Catch:{ InvalidProtocolBufferException -> 0x0375, IOException -> 0x036a }
                com.google.protobuf.MessageLite r2 = r6.readMessage(r2, r7)     // Catch:{ InvalidProtocolBufferException -> 0x0375, IOException -> 0x036a }
                com.avos.avoscloud.Messages$PubsubCommand r2 = (com.avos.avoscloud.Messages.PubsubCommand) r2     // Catch:{ InvalidProtocolBufferException -> 0x0375, IOException -> 0x036a }
                r5.pubsubMessage_ = r2     // Catch:{ InvalidProtocolBufferException -> 0x0375, IOException -> 0x036a }
                if (r4 == 0) goto L_0x0069
                com.avos.avoscloud.Messages$PubsubCommand r2 = r5.pubsubMessage_     // Catch:{ InvalidProtocolBufferException -> 0x0375, IOException -> 0x036a }
                r4.mergeFrom(r2)     // Catch:{ InvalidProtocolBufferException -> 0x0375, IOException -> 0x036a }
                com.avos.avoscloud.Messages$PubsubCommand r2 = r4.buildPartial()     // Catch:{ InvalidProtocolBufferException -> 0x0375, IOException -> 0x036a }
                r5.pubsubMessage_ = r2     // Catch:{ InvalidProtocolBufferException -> 0x0375, IOException -> 0x036a }
            L_0x0069:
                int r2 = r5.bitField0_     // Catch:{ InvalidProtocolBufferException -> 0x0375, IOException -> 0x036a }
                r3 = 8388608(0x800000, float:1.17549435E-38)
                r2 = r2 | r3
                r5.bitField0_ = r2     // Catch:{ InvalidProtocolBufferException -> 0x0375, IOException -> 0x036a }
                goto L_0x0008
            L_0x0071:
                int r2 = r5.bitField0_     // Catch:{ InvalidProtocolBufferException -> 0x0375, IOException -> 0x036a }
                r3 = 4194304(0x400000, float:5.877472E-39)
                r2 = r2 & r3
                if (r2 != r3) goto L_0x007e
                com.avos.avoscloud.Messages$PatchCommand r2 = r5.patchMessage_     // Catch:{ InvalidProtocolBufferException -> 0x0375, IOException -> 0x036a }
                com.avos.avoscloud.Messages$PatchCommand$Builder r4 = r2.toBuilder()     // Catch:{ InvalidProtocolBufferException -> 0x0375, IOException -> 0x036a }
            L_0x007e:
                com.google.protobuf.Parser<com.avos.avoscloud.Messages$PatchCommand> r2 = com.avos.avoscloud.Messages.PatchCommand.PARSER     // Catch:{ InvalidProtocolBufferException -> 0x0375, IOException -> 0x036a }
                com.google.protobuf.MessageLite r2 = r6.readMessage(r2, r7)     // Catch:{ InvalidProtocolBufferException -> 0x0375, IOException -> 0x036a }
                com.avos.avoscloud.Messages$PatchCommand r2 = (com.avos.avoscloud.Messages.PatchCommand) r2     // Catch:{ InvalidProtocolBufferException -> 0x0375, IOException -> 0x036a }
                r5.patchMessage_ = r2     // Catch:{ InvalidProtocolBufferException -> 0x0375, IOException -> 0x036a }
                if (r4 == 0) goto L_0x0095
                com.avos.avoscloud.Messages$PatchCommand r2 = r5.patchMessage_     // Catch:{ InvalidProtocolBufferException -> 0x0375, IOException -> 0x036a }
                r4.mergeFrom(r2)     // Catch:{ InvalidProtocolBufferException -> 0x0375, IOException -> 0x036a }
                com.avos.avoscloud.Messages$PatchCommand r2 = r4.buildPartial()     // Catch:{ InvalidProtocolBufferException -> 0x0375, IOException -> 0x036a }
                r5.patchMessage_ = r2     // Catch:{ InvalidProtocolBufferException -> 0x0375, IOException -> 0x036a }
            L_0x0095:
                int r2 = r5.bitField0_     // Catch:{ InvalidProtocolBufferException -> 0x0375, IOException -> 0x036a }
                r3 = 4194304(0x400000, float:5.877472E-39)
                r2 = r2 | r3
                r5.bitField0_ = r2     // Catch:{ InvalidProtocolBufferException -> 0x0375, IOException -> 0x036a }
                goto L_0x0008
            L_0x009e:
                int r2 = r5.bitField0_     // Catch:{ InvalidProtocolBufferException -> 0x0375, IOException -> 0x036a }
                r3 = 2097152(0x200000, float:2.938736E-39)
                r2 = r2 & r3
                if (r2 != r3) goto L_0x00ab
                com.avos.avoscloud.Messages$ReportCommand r2 = r5.reportMessage_     // Catch:{ InvalidProtocolBufferException -> 0x0375, IOException -> 0x036a }
                com.avos.avoscloud.Messages$ReportCommand$Builder r4 = r2.toBuilder()     // Catch:{ InvalidProtocolBufferException -> 0x0375, IOException -> 0x036a }
            L_0x00ab:
                com.google.protobuf.Parser<com.avos.avoscloud.Messages$ReportCommand> r2 = com.avos.avoscloud.Messages.ReportCommand.PARSER     // Catch:{ InvalidProtocolBufferException -> 0x0375, IOException -> 0x036a }
                com.google.protobuf.MessageLite r2 = r6.readMessage(r2, r7)     // Catch:{ InvalidProtocolBufferException -> 0x0375, IOException -> 0x036a }
                com.avos.avoscloud.Messages$ReportCommand r2 = (com.avos.avoscloud.Messages.ReportCommand) r2     // Catch:{ InvalidProtocolBufferException -> 0x0375, IOException -> 0x036a }
                r5.reportMessage_ = r2     // Catch:{ InvalidProtocolBufferException -> 0x0375, IOException -> 0x036a }
                if (r4 == 0) goto L_0x00c2
                com.avos.avoscloud.Messages$ReportCommand r2 = r5.reportMessage_     // Catch:{ InvalidProtocolBufferException -> 0x0375, IOException -> 0x036a }
                r4.mergeFrom(r2)     // Catch:{ InvalidProtocolBufferException -> 0x0375, IOException -> 0x036a }
                com.avos.avoscloud.Messages$ReportCommand r2 = r4.buildPartial()     // Catch:{ InvalidProtocolBufferException -> 0x0375, IOException -> 0x036a }
                r5.reportMessage_ = r2     // Catch:{ InvalidProtocolBufferException -> 0x0375, IOException -> 0x036a }
            L_0x00c2:
                int r2 = r5.bitField0_     // Catch:{ InvalidProtocolBufferException -> 0x0375, IOException -> 0x036a }
                r2 = r2 | r3
                r5.bitField0_ = r2     // Catch:{ InvalidProtocolBufferException -> 0x0375, IOException -> 0x036a }
                goto L_0x0008
            L_0x00c9:
                int r2 = r5.bitField0_     // Catch:{ InvalidProtocolBufferException -> 0x0375, IOException -> 0x036a }
                r3 = 1048576(0x100000, float:1.469368E-39)
                r2 = r2 & r3
                if (r2 != r3) goto L_0x00d6
                com.avos.avoscloud.Messages$PresenceCommand r2 = r5.presenceMessage_     // Catch:{ InvalidProtocolBufferException -> 0x0375, IOException -> 0x036a }
                com.avos.avoscloud.Messages$PresenceCommand$Builder r4 = r2.toBuilder()     // Catch:{ InvalidProtocolBufferException -> 0x0375, IOException -> 0x036a }
            L_0x00d6:
                com.google.protobuf.Parser<com.avos.avoscloud.Messages$PresenceCommand> r2 = com.avos.avoscloud.Messages.PresenceCommand.PARSER     // Catch:{ InvalidProtocolBufferException -> 0x0375, IOException -> 0x036a }
                com.google.protobuf.MessageLite r2 = r6.readMessage(r2, r7)     // Catch:{ InvalidProtocolBufferException -> 0x0375, IOException -> 0x036a }
                com.avos.avoscloud.Messages$PresenceCommand r2 = (com.avos.avoscloud.Messages.PresenceCommand) r2     // Catch:{ InvalidProtocolBufferException -> 0x0375, IOException -> 0x036a }
                r5.presenceMessage_ = r2     // Catch:{ InvalidProtocolBufferException -> 0x0375, IOException -> 0x036a }
                if (r4 == 0) goto L_0x00ed
                com.avos.avoscloud.Messages$PresenceCommand r2 = r5.presenceMessage_     // Catch:{ InvalidProtocolBufferException -> 0x0375, IOException -> 0x036a }
                r4.mergeFrom(r2)     // Catch:{ InvalidProtocolBufferException -> 0x0375, IOException -> 0x036a }
                com.avos.avoscloud.Messages$PresenceCommand r2 = r4.buildPartial()     // Catch:{ InvalidProtocolBufferException -> 0x0375, IOException -> 0x036a }
                r5.presenceMessage_ = r2     // Catch:{ InvalidProtocolBufferException -> 0x0375, IOException -> 0x036a }
            L_0x00ed:
                int r2 = r5.bitField0_     // Catch:{ InvalidProtocolBufferException -> 0x0375, IOException -> 0x036a }
                r2 = r2 | r3
                r5.bitField0_ = r2     // Catch:{ InvalidProtocolBufferException -> 0x0375, IOException -> 0x036a }
                goto L_0x0008
            L_0x00f4:
                int r2 = r5.bitField0_     // Catch:{ InvalidProtocolBufferException -> 0x0375, IOException -> 0x036a }
                r3 = 524288(0x80000, float:7.34684E-40)
                r2 = r2 & r3
                if (r2 != r3) goto L_0x0101
                com.avos.avoscloud.Messages$RoomCommand r2 = r5.roomMessage_     // Catch:{ InvalidProtocolBufferException -> 0x0375, IOException -> 0x036a }
                com.avos.avoscloud.Messages$RoomCommand$Builder r4 = r2.toBuilder()     // Catch:{ InvalidProtocolBufferException -> 0x0375, IOException -> 0x036a }
            L_0x0101:
                com.google.protobuf.Parser<com.avos.avoscloud.Messages$RoomCommand> r2 = com.avos.avoscloud.Messages.RoomCommand.PARSER     // Catch:{ InvalidProtocolBufferException -> 0x0375, IOException -> 0x036a }
                com.google.protobuf.MessageLite r2 = r6.readMessage(r2, r7)     // Catch:{ InvalidProtocolBufferException -> 0x0375, IOException -> 0x036a }
                com.avos.avoscloud.Messages$RoomCommand r2 = (com.avos.avoscloud.Messages.RoomCommand) r2     // Catch:{ InvalidProtocolBufferException -> 0x0375, IOException -> 0x036a }
                r5.roomMessage_ = r2     // Catch:{ InvalidProtocolBufferException -> 0x0375, IOException -> 0x036a }
                if (r4 == 0) goto L_0x0118
                com.avos.avoscloud.Messages$RoomCommand r2 = r5.roomMessage_     // Catch:{ InvalidProtocolBufferException -> 0x0375, IOException -> 0x036a }
                r4.mergeFrom(r2)     // Catch:{ InvalidProtocolBufferException -> 0x0375, IOException -> 0x036a }
                com.avos.avoscloud.Messages$RoomCommand r2 = r4.buildPartial()     // Catch:{ InvalidProtocolBufferException -> 0x0375, IOException -> 0x036a }
                r5.roomMessage_ = r2     // Catch:{ InvalidProtocolBufferException -> 0x0375, IOException -> 0x036a }
            L_0x0118:
                int r2 = r5.bitField0_     // Catch:{ InvalidProtocolBufferException -> 0x0375, IOException -> 0x036a }
                r2 = r2 | r3
                r5.bitField0_ = r2     // Catch:{ InvalidProtocolBufferException -> 0x0375, IOException -> 0x036a }
                goto L_0x0008
            L_0x011f:
                int r2 = r5.bitField0_     // Catch:{ InvalidProtocolBufferException -> 0x0375, IOException -> 0x036a }
                r3 = 262144(0x40000, float:3.67342E-40)
                r2 = r2 & r3
                if (r2 != r3) goto L_0x012c
                com.avos.avoscloud.Messages$ConvCommand r2 = r5.convMessage_     // Catch:{ InvalidProtocolBufferException -> 0x0375, IOException -> 0x036a }
                com.avos.avoscloud.Messages$ConvCommand$Builder r4 = r2.toBuilder()     // Catch:{ InvalidProtocolBufferException -> 0x0375, IOException -> 0x036a }
            L_0x012c:
                com.google.protobuf.Parser<com.avos.avoscloud.Messages$ConvCommand> r2 = com.avos.avoscloud.Messages.ConvCommand.PARSER     // Catch:{ InvalidProtocolBufferException -> 0x0375, IOException -> 0x036a }
                com.google.protobuf.MessageLite r2 = r6.readMessage(r2, r7)     // Catch:{ InvalidProtocolBufferException -> 0x0375, IOException -> 0x036a }
                com.avos.avoscloud.Messages$ConvCommand r2 = (com.avos.avoscloud.Messages.ConvCommand) r2     // Catch:{ InvalidProtocolBufferException -> 0x0375, IOException -> 0x036a }
                r5.convMessage_ = r2     // Catch:{ InvalidProtocolBufferException -> 0x0375, IOException -> 0x036a }
                if (r4 == 0) goto L_0x0143
                com.avos.avoscloud.Messages$ConvCommand r2 = r5.convMessage_     // Catch:{ InvalidProtocolBufferException -> 0x0375, IOException -> 0x036a }
                r4.mergeFrom(r2)     // Catch:{ InvalidProtocolBufferException -> 0x0375, IOException -> 0x036a }
                com.avos.avoscloud.Messages$ConvCommand r2 = r4.buildPartial()     // Catch:{ InvalidProtocolBufferException -> 0x0375, IOException -> 0x036a }
                r5.convMessage_ = r2     // Catch:{ InvalidProtocolBufferException -> 0x0375, IOException -> 0x036a }
            L_0x0143:
                int r2 = r5.bitField0_     // Catch:{ InvalidProtocolBufferException -> 0x0375, IOException -> 0x036a }
                r2 = r2 | r3
                r5.bitField0_ = r2     // Catch:{ InvalidProtocolBufferException -> 0x0375, IOException -> 0x036a }
                goto L_0x0008
            L_0x014a:
                int r2 = r5.bitField0_     // Catch:{ InvalidProtocolBufferException -> 0x0375, IOException -> 0x036a }
                r3 = 131072(0x20000, float:1.83671E-40)
                r2 = r2 & r3
                if (r2 != r3) goto L_0x0157
                com.avos.avoscloud.Messages$LogsCommand r2 = r5.logsMessage_     // Catch:{ InvalidProtocolBufferException -> 0x0375, IOException -> 0x036a }
                com.avos.avoscloud.Messages$LogsCommand$Builder r4 = r2.toBuilder()     // Catch:{ InvalidProtocolBufferException -> 0x0375, IOException -> 0x036a }
            L_0x0157:
                com.google.protobuf.Parser<com.avos.avoscloud.Messages$LogsCommand> r2 = com.avos.avoscloud.Messages.LogsCommand.PARSER     // Catch:{ InvalidProtocolBufferException -> 0x0375, IOException -> 0x036a }
                com.google.protobuf.MessageLite r2 = r6.readMessage(r2, r7)     // Catch:{ InvalidProtocolBufferException -> 0x0375, IOException -> 0x036a }
                com.avos.avoscloud.Messages$LogsCommand r2 = (com.avos.avoscloud.Messages.LogsCommand) r2     // Catch:{ InvalidProtocolBufferException -> 0x0375, IOException -> 0x036a }
                r5.logsMessage_ = r2     // Catch:{ InvalidProtocolBufferException -> 0x0375, IOException -> 0x036a }
                if (r4 == 0) goto L_0x016e
                com.avos.avoscloud.Messages$LogsCommand r2 = r5.logsMessage_     // Catch:{ InvalidProtocolBufferException -> 0x0375, IOException -> 0x036a }
                r4.mergeFrom(r2)     // Catch:{ InvalidProtocolBufferException -> 0x0375, IOException -> 0x036a }
                com.avos.avoscloud.Messages$LogsCommand r2 = r4.buildPartial()     // Catch:{ InvalidProtocolBufferException -> 0x0375, IOException -> 0x036a }
                r5.logsMessage_ = r2     // Catch:{ InvalidProtocolBufferException -> 0x0375, IOException -> 0x036a }
            L_0x016e:
                int r2 = r5.bitField0_     // Catch:{ InvalidProtocolBufferException -> 0x0375, IOException -> 0x036a }
                r2 = r2 | r3
                r5.bitField0_ = r2     // Catch:{ InvalidProtocolBufferException -> 0x0375, IOException -> 0x036a }
                goto L_0x0008
            L_0x0175:
                int r2 = r5.bitField0_     // Catch:{ InvalidProtocolBufferException -> 0x0375, IOException -> 0x036a }
                r3 = 65536(0x10000, float:9.18355E-41)
                r2 = r2 & r3
                if (r2 != r3) goto L_0x0182
                com.avos.avoscloud.Messages$RcpCommand r2 = r5.rcpMessage_     // Catch:{ InvalidProtocolBufferException -> 0x0375, IOException -> 0x036a }
                com.avos.avoscloud.Messages$RcpCommand$Builder r4 = r2.toBuilder()     // Catch:{ InvalidProtocolBufferException -> 0x0375, IOException -> 0x036a }
            L_0x0182:
                com.google.protobuf.Parser<com.avos.avoscloud.Messages$RcpCommand> r2 = com.avos.avoscloud.Messages.RcpCommand.PARSER     // Catch:{ InvalidProtocolBufferException -> 0x0375, IOException -> 0x036a }
                com.google.protobuf.MessageLite r2 = r6.readMessage(r2, r7)     // Catch:{ InvalidProtocolBufferException -> 0x0375, IOException -> 0x036a }
                com.avos.avoscloud.Messages$RcpCommand r2 = (com.avos.avoscloud.Messages.RcpCommand) r2     // Catch:{ InvalidProtocolBufferException -> 0x0375, IOException -> 0x036a }
                r5.rcpMessage_ = r2     // Catch:{ InvalidProtocolBufferException -> 0x0375, IOException -> 0x036a }
                if (r4 == 0) goto L_0x0199
                com.avos.avoscloud.Messages$RcpCommand r2 = r5.rcpMessage_     // Catch:{ InvalidProtocolBufferException -> 0x0375, IOException -> 0x036a }
                r4.mergeFrom(r2)     // Catch:{ InvalidProtocolBufferException -> 0x0375, IOException -> 0x036a }
                com.avos.avoscloud.Messages$RcpCommand r2 = r4.buildPartial()     // Catch:{ InvalidProtocolBufferException -> 0x0375, IOException -> 0x036a }
                r5.rcpMessage_ = r2     // Catch:{ InvalidProtocolBufferException -> 0x0375, IOException -> 0x036a }
            L_0x0199:
                int r2 = r5.bitField0_     // Catch:{ InvalidProtocolBufferException -> 0x0375, IOException -> 0x036a }
                r2 = r2 | r3
                r5.bitField0_ = r2     // Catch:{ InvalidProtocolBufferException -> 0x0375, IOException -> 0x036a }
                goto L_0x0008
            L_0x01a0:
                int r2 = r5.bitField0_     // Catch:{ InvalidProtocolBufferException -> 0x0375, IOException -> 0x036a }
                r3 = 32768(0x8000, float:4.5918E-41)
                r2 = r2 & r3
                if (r2 != r3) goto L_0x01ae
                com.avos.avoscloud.Messages$ReadCommand r2 = r5.readMessage_     // Catch:{ InvalidProtocolBufferException -> 0x0375, IOException -> 0x036a }
                com.avos.avoscloud.Messages$ReadCommand$Builder r4 = r2.toBuilder()     // Catch:{ InvalidProtocolBufferException -> 0x0375, IOException -> 0x036a }
            L_0x01ae:
                com.google.protobuf.Parser<com.avos.avoscloud.Messages$ReadCommand> r2 = com.avos.avoscloud.Messages.ReadCommand.PARSER     // Catch:{ InvalidProtocolBufferException -> 0x0375, IOException -> 0x036a }
                com.google.protobuf.MessageLite r2 = r6.readMessage(r2, r7)     // Catch:{ InvalidProtocolBufferException -> 0x0375, IOException -> 0x036a }
                com.avos.avoscloud.Messages$ReadCommand r2 = (com.avos.avoscloud.Messages.ReadCommand) r2     // Catch:{ InvalidProtocolBufferException -> 0x0375, IOException -> 0x036a }
                r5.readMessage_ = r2     // Catch:{ InvalidProtocolBufferException -> 0x0375, IOException -> 0x036a }
                if (r4 == 0) goto L_0x01c5
                com.avos.avoscloud.Messages$ReadCommand r2 = r5.readMessage_     // Catch:{ InvalidProtocolBufferException -> 0x0375, IOException -> 0x036a }
                r4.mergeFrom(r2)     // Catch:{ InvalidProtocolBufferException -> 0x0375, IOException -> 0x036a }
                com.avos.avoscloud.Messages$ReadCommand r2 = r4.buildPartial()     // Catch:{ InvalidProtocolBufferException -> 0x0375, IOException -> 0x036a }
                r5.readMessage_ = r2     // Catch:{ InvalidProtocolBufferException -> 0x0375, IOException -> 0x036a }
            L_0x01c5:
                int r2 = r5.bitField0_     // Catch:{ InvalidProtocolBufferException -> 0x0375, IOException -> 0x036a }
                r2 = r2 | r3
                r5.bitField0_ = r2     // Catch:{ InvalidProtocolBufferException -> 0x0375, IOException -> 0x036a }
                goto L_0x0008
            L_0x01cc:
                int r2 = r5.bitField0_     // Catch:{ InvalidProtocolBufferException -> 0x0375, IOException -> 0x036a }
                r3 = 16384(0x4000, float:2.2959E-41)
                r2 = r2 & r3
                if (r2 != r3) goto L_0x01d9
                com.avos.avoscloud.Messages$UnreadCommand r2 = r5.unreadMessage_     // Catch:{ InvalidProtocolBufferException -> 0x0375, IOException -> 0x036a }
                com.avos.avoscloud.Messages$UnreadCommand$Builder r4 = r2.toBuilder()     // Catch:{ InvalidProtocolBufferException -> 0x0375, IOException -> 0x036a }
            L_0x01d9:
                com.google.protobuf.Parser<com.avos.avoscloud.Messages$UnreadCommand> r2 = com.avos.avoscloud.Messages.UnreadCommand.PARSER     // Catch:{ InvalidProtocolBufferException -> 0x0375, IOException -> 0x036a }
                com.google.protobuf.MessageLite r2 = r6.readMessage(r2, r7)     // Catch:{ InvalidProtocolBufferException -> 0x0375, IOException -> 0x036a }
                com.avos.avoscloud.Messages$UnreadCommand r2 = (com.avos.avoscloud.Messages.UnreadCommand) r2     // Catch:{ InvalidProtocolBufferException -> 0x0375, IOException -> 0x036a }
                r5.unreadMessage_ = r2     // Catch:{ InvalidProtocolBufferException -> 0x0375, IOException -> 0x036a }
                if (r4 == 0) goto L_0x01f0
                com.avos.avoscloud.Messages$UnreadCommand r2 = r5.unreadMessage_     // Catch:{ InvalidProtocolBufferException -> 0x0375, IOException -> 0x036a }
                r4.mergeFrom(r2)     // Catch:{ InvalidProtocolBufferException -> 0x0375, IOException -> 0x036a }
                com.avos.avoscloud.Messages$UnreadCommand r2 = r4.buildPartial()     // Catch:{ InvalidProtocolBufferException -> 0x0375, IOException -> 0x036a }
                r5.unreadMessage_ = r2     // Catch:{ InvalidProtocolBufferException -> 0x0375, IOException -> 0x036a }
            L_0x01f0:
                int r2 = r5.bitField0_     // Catch:{ InvalidProtocolBufferException -> 0x0375, IOException -> 0x036a }
                r2 = r2 | r3
                r5.bitField0_ = r2     // Catch:{ InvalidProtocolBufferException -> 0x0375, IOException -> 0x036a }
                goto L_0x0008
            L_0x01f7:
                int r2 = r5.bitField0_     // Catch:{ InvalidProtocolBufferException -> 0x0375, IOException -> 0x036a }
                r3 = 8192(0x2000, float:1.14794E-41)
                r2 = r2 & r3
                if (r2 != r3) goto L_0x0204
                com.avos.avoscloud.Messages$AckCommand r2 = r5.ackMessage_     // Catch:{ InvalidProtocolBufferException -> 0x0375, IOException -> 0x036a }
                com.avos.avoscloud.Messages$AckCommand$Builder r4 = r2.toBuilder()     // Catch:{ InvalidProtocolBufferException -> 0x0375, IOException -> 0x036a }
            L_0x0204:
                com.google.protobuf.Parser<com.avos.avoscloud.Messages$AckCommand> r2 = com.avos.avoscloud.Messages.AckCommand.PARSER     // Catch:{ InvalidProtocolBufferException -> 0x0375, IOException -> 0x036a }
                com.google.protobuf.MessageLite r2 = r6.readMessage(r2, r7)     // Catch:{ InvalidProtocolBufferException -> 0x0375, IOException -> 0x036a }
                com.avos.avoscloud.Messages$AckCommand r2 = (com.avos.avoscloud.Messages.AckCommand) r2     // Catch:{ InvalidProtocolBufferException -> 0x0375, IOException -> 0x036a }
                r5.ackMessage_ = r2     // Catch:{ InvalidProtocolBufferException -> 0x0375, IOException -> 0x036a }
                if (r4 == 0) goto L_0x021b
                com.avos.avoscloud.Messages$AckCommand r2 = r5.ackMessage_     // Catch:{ InvalidProtocolBufferException -> 0x0375, IOException -> 0x036a }
                r4.mergeFrom(r2)     // Catch:{ InvalidProtocolBufferException -> 0x0375, IOException -> 0x036a }
                com.avos.avoscloud.Messages$AckCommand r2 = r4.buildPartial()     // Catch:{ InvalidProtocolBufferException -> 0x0375, IOException -> 0x036a }
                r5.ackMessage_ = r2     // Catch:{ InvalidProtocolBufferException -> 0x0375, IOException -> 0x036a }
            L_0x021b:
                int r2 = r5.bitField0_     // Catch:{ InvalidProtocolBufferException -> 0x0375, IOException -> 0x036a }
                r2 = r2 | r3
                r5.bitField0_ = r2     // Catch:{ InvalidProtocolBufferException -> 0x0375, IOException -> 0x036a }
                goto L_0x0008
            L_0x0222:
                int r2 = r5.bitField0_     // Catch:{ InvalidProtocolBufferException -> 0x0375, IOException -> 0x036a }
                r3 = 4096(0x1000, float:5.74E-42)
                r2 = r2 & r3
                if (r2 != r3) goto L_0x022f
                com.avos.avoscloud.Messages$DirectCommand r2 = r5.directMessage_     // Catch:{ InvalidProtocolBufferException -> 0x0375, IOException -> 0x036a }
                com.avos.avoscloud.Messages$DirectCommand$Builder r4 = r2.toBuilder()     // Catch:{ InvalidProtocolBufferException -> 0x0375, IOException -> 0x036a }
            L_0x022f:
                com.google.protobuf.Parser<com.avos.avoscloud.Messages$DirectCommand> r2 = com.avos.avoscloud.Messages.DirectCommand.PARSER     // Catch:{ InvalidProtocolBufferException -> 0x0375, IOException -> 0x036a }
                com.google.protobuf.MessageLite r2 = r6.readMessage(r2, r7)     // Catch:{ InvalidProtocolBufferException -> 0x0375, IOException -> 0x036a }
                com.avos.avoscloud.Messages$DirectCommand r2 = (com.avos.avoscloud.Messages.DirectCommand) r2     // Catch:{ InvalidProtocolBufferException -> 0x0375, IOException -> 0x036a }
                r5.directMessage_ = r2     // Catch:{ InvalidProtocolBufferException -> 0x0375, IOException -> 0x036a }
                if (r4 == 0) goto L_0x0246
                com.avos.avoscloud.Messages$DirectCommand r2 = r5.directMessage_     // Catch:{ InvalidProtocolBufferException -> 0x0375, IOException -> 0x036a }
                r4.mergeFrom(r2)     // Catch:{ InvalidProtocolBufferException -> 0x0375, IOException -> 0x036a }
                com.avos.avoscloud.Messages$DirectCommand r2 = r4.buildPartial()     // Catch:{ InvalidProtocolBufferException -> 0x0375, IOException -> 0x036a }
                r5.directMessage_ = r2     // Catch:{ InvalidProtocolBufferException -> 0x0375, IOException -> 0x036a }
            L_0x0246:
                int r2 = r5.bitField0_     // Catch:{ InvalidProtocolBufferException -> 0x0375, IOException -> 0x036a }
                r2 = r2 | r3
                r5.bitField0_ = r2     // Catch:{ InvalidProtocolBufferException -> 0x0375, IOException -> 0x036a }
                goto L_0x0008
            L_0x024d:
                int r2 = r5.bitField0_     // Catch:{ InvalidProtocolBufferException -> 0x0375, IOException -> 0x036a }
                r3 = 2048(0x800, float:2.87E-42)
                r2 = r2 & r3
                if (r2 != r3) goto L_0x025a
                com.avos.avoscloud.Messages$ErrorCommand r2 = r5.errorMessage_     // Catch:{ InvalidProtocolBufferException -> 0x0375, IOException -> 0x036a }
                com.avos.avoscloud.Messages$ErrorCommand$Builder r4 = r2.toBuilder()     // Catch:{ InvalidProtocolBufferException -> 0x0375, IOException -> 0x036a }
            L_0x025a:
                com.google.protobuf.Parser<com.avos.avoscloud.Messages$ErrorCommand> r2 = com.avos.avoscloud.Messages.ErrorCommand.PARSER     // Catch:{ InvalidProtocolBufferException -> 0x0375, IOException -> 0x036a }
                com.google.protobuf.MessageLite r2 = r6.readMessage(r2, r7)     // Catch:{ InvalidProtocolBufferException -> 0x0375, IOException -> 0x036a }
                com.avos.avoscloud.Messages$ErrorCommand r2 = (com.avos.avoscloud.Messages.ErrorCommand) r2     // Catch:{ InvalidProtocolBufferException -> 0x0375, IOException -> 0x036a }
                r5.errorMessage_ = r2     // Catch:{ InvalidProtocolBufferException -> 0x0375, IOException -> 0x036a }
                if (r4 == 0) goto L_0x0271
                com.avos.avoscloud.Messages$ErrorCommand r2 = r5.errorMessage_     // Catch:{ InvalidProtocolBufferException -> 0x0375, IOException -> 0x036a }
                r4.mergeFrom(r2)     // Catch:{ InvalidProtocolBufferException -> 0x0375, IOException -> 0x036a }
                com.avos.avoscloud.Messages$ErrorCommand r2 = r4.buildPartial()     // Catch:{ InvalidProtocolBufferException -> 0x0375, IOException -> 0x036a }
                r5.errorMessage_ = r2     // Catch:{ InvalidProtocolBufferException -> 0x0375, IOException -> 0x036a }
            L_0x0271:
                int r2 = r5.bitField0_     // Catch:{ InvalidProtocolBufferException -> 0x0375, IOException -> 0x036a }
                r2 = r2 | r3
                r5.bitField0_ = r2     // Catch:{ InvalidProtocolBufferException -> 0x0375, IOException -> 0x036a }
                goto L_0x0008
            L_0x0278:
                int r2 = r5.bitField0_     // Catch:{ InvalidProtocolBufferException -> 0x0375, IOException -> 0x036a }
                r3 = 1024(0x400, float:1.435E-42)
                r2 = r2 & r3
                if (r2 != r3) goto L_0x0285
                com.avos.avoscloud.Messages$SessionCommand r2 = r5.sessionMessage_     // Catch:{ InvalidProtocolBufferException -> 0x0375, IOException -> 0x036a }
                com.avos.avoscloud.Messages$SessionCommand$Builder r4 = r2.toBuilder()     // Catch:{ InvalidProtocolBufferException -> 0x0375, IOException -> 0x036a }
            L_0x0285:
                com.google.protobuf.Parser<com.avos.avoscloud.Messages$SessionCommand> r2 = com.avos.avoscloud.Messages.SessionCommand.PARSER     // Catch:{ InvalidProtocolBufferException -> 0x0375, IOException -> 0x036a }
                com.google.protobuf.MessageLite r2 = r6.readMessage(r2, r7)     // Catch:{ InvalidProtocolBufferException -> 0x0375, IOException -> 0x036a }
                com.avos.avoscloud.Messages$SessionCommand r2 = (com.avos.avoscloud.Messages.SessionCommand) r2     // Catch:{ InvalidProtocolBufferException -> 0x0375, IOException -> 0x036a }
                r5.sessionMessage_ = r2     // Catch:{ InvalidProtocolBufferException -> 0x0375, IOException -> 0x036a }
                if (r4 == 0) goto L_0x029c
                com.avos.avoscloud.Messages$SessionCommand r2 = r5.sessionMessage_     // Catch:{ InvalidProtocolBufferException -> 0x0375, IOException -> 0x036a }
                r4.mergeFrom(r2)     // Catch:{ InvalidProtocolBufferException -> 0x0375, IOException -> 0x036a }
                com.avos.avoscloud.Messages$SessionCommand r2 = r4.buildPartial()     // Catch:{ InvalidProtocolBufferException -> 0x0375, IOException -> 0x036a }
                r5.sessionMessage_ = r2     // Catch:{ InvalidProtocolBufferException -> 0x0375, IOException -> 0x036a }
            L_0x029c:
                int r2 = r5.bitField0_     // Catch:{ InvalidProtocolBufferException -> 0x0375, IOException -> 0x036a }
                r2 = r2 | r3
                r5.bitField0_ = r2     // Catch:{ InvalidProtocolBufferException -> 0x0375, IOException -> 0x036a }
                goto L_0x0008
            L_0x02a3:
                int r2 = r5.bitField0_     // Catch:{ InvalidProtocolBufferException -> 0x0375, IOException -> 0x036a }
                r3 = 512(0x200, float:7.175E-43)
                r2 = r2 & r3
                if (r2 != r3) goto L_0x02b0
                com.avos.avoscloud.Messages$DataCommand r2 = r5.dataMessage_     // Catch:{ InvalidProtocolBufferException -> 0x0375, IOException -> 0x036a }
                com.avos.avoscloud.Messages$DataCommand$Builder r4 = r2.toBuilder()     // Catch:{ InvalidProtocolBufferException -> 0x0375, IOException -> 0x036a }
            L_0x02b0:
                com.google.protobuf.Parser<com.avos.avoscloud.Messages$DataCommand> r2 = com.avos.avoscloud.Messages.DataCommand.PARSER     // Catch:{ InvalidProtocolBufferException -> 0x0375, IOException -> 0x036a }
                com.google.protobuf.MessageLite r2 = r6.readMessage(r2, r7)     // Catch:{ InvalidProtocolBufferException -> 0x0375, IOException -> 0x036a }
                com.avos.avoscloud.Messages$DataCommand r2 = (com.avos.avoscloud.Messages.DataCommand) r2     // Catch:{ InvalidProtocolBufferException -> 0x0375, IOException -> 0x036a }
                r5.dataMessage_ = r2     // Catch:{ InvalidProtocolBufferException -> 0x0375, IOException -> 0x036a }
                if (r4 == 0) goto L_0x02c7
                com.avos.avoscloud.Messages$DataCommand r2 = r5.dataMessage_     // Catch:{ InvalidProtocolBufferException -> 0x0375, IOException -> 0x036a }
                r4.mergeFrom(r2)     // Catch:{ InvalidProtocolBufferException -> 0x0375, IOException -> 0x036a }
                com.avos.avoscloud.Messages$DataCommand r2 = r4.buildPartial()     // Catch:{ InvalidProtocolBufferException -> 0x0375, IOException -> 0x036a }
                r5.dataMessage_ = r2     // Catch:{ InvalidProtocolBufferException -> 0x0375, IOException -> 0x036a }
            L_0x02c7:
                int r2 = r5.bitField0_     // Catch:{ InvalidProtocolBufferException -> 0x0375, IOException -> 0x036a }
                r2 = r2 | r3
                r5.bitField0_ = r2     // Catch:{ InvalidProtocolBufferException -> 0x0375, IOException -> 0x036a }
                goto L_0x0008
            L_0x02ce:
                int r2 = r5.bitField0_     // Catch:{ InvalidProtocolBufferException -> 0x0375, IOException -> 0x036a }
                r2 = r2 | 256(0x100, float:3.59E-43)
                r5.bitField0_ = r2     // Catch:{ InvalidProtocolBufferException -> 0x0375, IOException -> 0x036a }
                long r2 = r6.readInt64()     // Catch:{ InvalidProtocolBufferException -> 0x0375, IOException -> 0x036a }
                r5.serverTs_ = r2     // Catch:{ InvalidProtocolBufferException -> 0x0375, IOException -> 0x036a }
                goto L_0x0008
            L_0x02dc:
                int r2 = r5.bitField0_     // Catch:{ InvalidProtocolBufferException -> 0x0375, IOException -> 0x036a }
                r2 = r2 | 128(0x80, float:1.794E-43)
                r5.bitField0_ = r2     // Catch:{ InvalidProtocolBufferException -> 0x0375, IOException -> 0x036a }
                int r2 = r6.readInt32()     // Catch:{ InvalidProtocolBufferException -> 0x0375, IOException -> 0x036a }
                r5.service_ = r2     // Catch:{ InvalidProtocolBufferException -> 0x0375, IOException -> 0x036a }
                goto L_0x0008
            L_0x02ea:
                int r2 = r5.bitField0_     // Catch:{ InvalidProtocolBufferException -> 0x0375, IOException -> 0x036a }
                r2 = r2 | 64
                r5.bitField0_ = r2     // Catch:{ InvalidProtocolBufferException -> 0x0375, IOException -> 0x036a }
                int r2 = r6.readInt32()     // Catch:{ InvalidProtocolBufferException -> 0x0375, IOException -> 0x036a }
                r5.priority_ = r2     // Catch:{ InvalidProtocolBufferException -> 0x0375, IOException -> 0x036a }
                goto L_0x0008
            L_0x02f8:
                com.google.protobuf.ByteString r2 = r6.readBytes()     // Catch:{ InvalidProtocolBufferException -> 0x0375, IOException -> 0x036a }
                int r3 = r5.bitField0_     // Catch:{ InvalidProtocolBufferException -> 0x0375, IOException -> 0x036a }
                r3 = r3 | 32
                r5.bitField0_ = r3     // Catch:{ InvalidProtocolBufferException -> 0x0375, IOException -> 0x036a }
                r5.installationId_ = r2     // Catch:{ InvalidProtocolBufferException -> 0x0375, IOException -> 0x036a }
                goto L_0x0008
            L_0x0306:
                int r2 = r5.bitField0_     // Catch:{ InvalidProtocolBufferException -> 0x0375, IOException -> 0x036a }
                r2 = r2 | 16
                r5.bitField0_ = r2     // Catch:{ InvalidProtocolBufferException -> 0x0375, IOException -> 0x036a }
                int r2 = r6.readInt32()     // Catch:{ InvalidProtocolBufferException -> 0x0375, IOException -> 0x036a }
                r5.i_ = r2     // Catch:{ InvalidProtocolBufferException -> 0x0375, IOException -> 0x036a }
                goto L_0x0008
            L_0x0314:
                com.google.protobuf.ByteString r2 = r6.readBytes()     // Catch:{ InvalidProtocolBufferException -> 0x0375, IOException -> 0x036a }
                int r3 = r5.bitField0_     // Catch:{ InvalidProtocolBufferException -> 0x0375, IOException -> 0x036a }
                r3 = r3 | 8
                r5.bitField0_ = r3     // Catch:{ InvalidProtocolBufferException -> 0x0375, IOException -> 0x036a }
                r5.peerId_ = r2     // Catch:{ InvalidProtocolBufferException -> 0x0375, IOException -> 0x036a }
                goto L_0x0008
            L_0x0322:
                com.google.protobuf.ByteString r2 = r6.readBytes()     // Catch:{ InvalidProtocolBufferException -> 0x0375, IOException -> 0x036a }
                int r3 = r5.bitField0_     // Catch:{ InvalidProtocolBufferException -> 0x0375, IOException -> 0x036a }
                r3 = r3 | 4
                r5.bitField0_ = r3     // Catch:{ InvalidProtocolBufferException -> 0x0375, IOException -> 0x036a }
                r5.appId_ = r2     // Catch:{ InvalidProtocolBufferException -> 0x0375, IOException -> 0x036a }
                goto L_0x0008
            L_0x0330:
                int r2 = r6.readEnum()     // Catch:{ InvalidProtocolBufferException -> 0x0375, IOException -> 0x036a }
                com.avos.avoscloud.Messages$OpType r3 = com.avos.avoscloud.Messages.OpType.valueOf(r2)     // Catch:{ InvalidProtocolBufferException -> 0x0375, IOException -> 0x036a }
                if (r3 != 0) goto L_0x0340
                r3 = 2
                r0.mergeVarintField(r3, r2)     // Catch:{ InvalidProtocolBufferException -> 0x0375, IOException -> 0x036a }
                goto L_0x0008
            L_0x0340:
                int r3 = r5.bitField0_     // Catch:{ InvalidProtocolBufferException -> 0x0375, IOException -> 0x036a }
                r3 = r3 | 2
                r5.bitField0_ = r3     // Catch:{ InvalidProtocolBufferException -> 0x0375, IOException -> 0x036a }
                r5.op_ = r2     // Catch:{ InvalidProtocolBufferException -> 0x0375, IOException -> 0x036a }
                goto L_0x0008
            L_0x034a:
                int r2 = r6.readEnum()     // Catch:{ InvalidProtocolBufferException -> 0x0375, IOException -> 0x036a }
                com.avos.avoscloud.Messages$CommandType r4 = com.avos.avoscloud.Messages.CommandType.valueOf(r2)     // Catch:{ InvalidProtocolBufferException -> 0x0375, IOException -> 0x036a }
                if (r4 != 0) goto L_0x0359
                r0.mergeVarintField(r3, r2)     // Catch:{ InvalidProtocolBufferException -> 0x0375, IOException -> 0x036a }
                goto L_0x0008
            L_0x0359:
                int r4 = r5.bitField0_     // Catch:{ InvalidProtocolBufferException -> 0x0375, IOException -> 0x036a }
                r3 = r3 | r4
                r5.bitField0_ = r3     // Catch:{ InvalidProtocolBufferException -> 0x0375, IOException -> 0x036a }
                r5.cmd_ = r2     // Catch:{ InvalidProtocolBufferException -> 0x0375, IOException -> 0x036a }
                goto L_0x0008
            L_0x0362:
                r1 = 1
                goto L_0x0008
            L_0x0365:
                if (r2 != 0) goto L_0x0008
                goto L_0x0362
            L_0x0368:
                r6 = move-exception
                goto L_0x037b
            L_0x036a:
                r6 = move-exception
                com.google.protobuf.InvalidProtocolBufferException r7 = new com.google.protobuf.InvalidProtocolBufferException     // Catch:{ all -> 0x0368 }
                r7.<init>(r6)     // Catch:{ all -> 0x0368 }
                com.google.protobuf.InvalidProtocolBufferException r6 = r7.setUnfinishedMessage(r5)     // Catch:{ all -> 0x0368 }
                throw r6     // Catch:{ all -> 0x0368 }
            L_0x0375:
                r6 = move-exception
                com.google.protobuf.InvalidProtocolBufferException r6 = r6.setUnfinishedMessage(r5)     // Catch:{ all -> 0x0368 }
                throw r6     // Catch:{ all -> 0x0368 }
            L_0x037b:
                com.google.protobuf.UnknownFieldSet r7 = r0.build()
                r5.unknownFields = r7
                r5.makeExtensionsImmutable()
                throw r6
            L_0x0385:
                com.google.protobuf.UnknownFieldSet r6 = r0.build()
                r5.unknownFields = r6
                r5.makeExtensionsImmutable()
                return
            */
            throw new UnsupportedOperationException("Method not decompiled: com.avos.avoscloud.Messages.GenericCommand.<init>(com.google.protobuf.CodedInputStream, com.google.protobuf.ExtensionRegistryLite):void");
        }

        public static final Descriptor getDescriptor() {
            return Messages.internal_static_com_avos_avoscloud_GenericCommand_descriptor;
        }

        /* access modifiers changed from: protected */
        public FieldAccessorTable internalGetFieldAccessorTable() {
            return Messages.internal_static_com_avos_avoscloud_GenericCommand_fieldAccessorTable.ensureFieldAccessorsInitialized(GenericCommand.class, Builder.class);
        }

        public boolean hasCmd() {
            return (this.bitField0_ & 1) == 1;
        }

        public CommandType getCmd() {
            CommandType valueOf = CommandType.valueOf(this.cmd_);
            return valueOf == null ? CommandType.session : valueOf;
        }

        public boolean hasOp() {
            return (this.bitField0_ & 2) == 2;
        }

        public OpType getOp() {
            OpType valueOf = OpType.valueOf(this.op_);
            return valueOf == null ? OpType.open : valueOf;
        }

        public boolean hasAppId() {
            return (this.bitField0_ & 4) == 4;
        }

        public String getAppId() {
            Object obj = this.appId_;
            if (obj instanceof String) {
                return (String) obj;
            }
            ByteString byteString = (ByteString) obj;
            String stringUtf8 = byteString.toStringUtf8();
            if (byteString.isValidUtf8()) {
                this.appId_ = stringUtf8;
            }
            return stringUtf8;
        }

        public ByteString getAppIdBytes() {
            Object obj = this.appId_;
            if (!(obj instanceof String)) {
                return (ByteString) obj;
            }
            ByteString copyFromUtf8 = ByteString.copyFromUtf8((String) obj);
            this.appId_ = copyFromUtf8;
            return copyFromUtf8;
        }

        public boolean hasPeerId() {
            return (this.bitField0_ & 8) == 8;
        }

        public String getPeerId() {
            Object obj = this.peerId_;
            if (obj instanceof String) {
                return (String) obj;
            }
            ByteString byteString = (ByteString) obj;
            String stringUtf8 = byteString.toStringUtf8();
            if (byteString.isValidUtf8()) {
                this.peerId_ = stringUtf8;
            }
            return stringUtf8;
        }

        public ByteString getPeerIdBytes() {
            Object obj = this.peerId_;
            if (!(obj instanceof String)) {
                return (ByteString) obj;
            }
            ByteString copyFromUtf8 = ByteString.copyFromUtf8((String) obj);
            this.peerId_ = copyFromUtf8;
            return copyFromUtf8;
        }

        public boolean hasI() {
            return (this.bitField0_ & 16) == 16;
        }

        public int getI() {
            return this.i_;
        }

        public boolean hasInstallationId() {
            return (this.bitField0_ & 32) == 32;
        }

        public String getInstallationId() {
            Object obj = this.installationId_;
            if (obj instanceof String) {
                return (String) obj;
            }
            ByteString byteString = (ByteString) obj;
            String stringUtf8 = byteString.toStringUtf8();
            if (byteString.isValidUtf8()) {
                this.installationId_ = stringUtf8;
            }
            return stringUtf8;
        }

        public ByteString getInstallationIdBytes() {
            Object obj = this.installationId_;
            if (!(obj instanceof String)) {
                return (ByteString) obj;
            }
            ByteString copyFromUtf8 = ByteString.copyFromUtf8((String) obj);
            this.installationId_ = copyFromUtf8;
            return copyFromUtf8;
        }

        public boolean hasPriority() {
            return (this.bitField0_ & 64) == 64;
        }

        public int getPriority() {
            return this.priority_;
        }

        public boolean hasService() {
            return (this.bitField0_ & 128) == 128;
        }

        public int getService() {
            return this.service_;
        }

        public boolean hasServerTs() {
            return (this.bitField0_ & 256) == 256;
        }

        public long getServerTs() {
            return this.serverTs_;
        }

        public boolean hasDataMessage() {
            return (this.bitField0_ & 512) == 512;
        }

        public DataCommand getDataMessage() {
            DataCommand dataCommand = this.dataMessage_;
            return dataCommand == null ? DataCommand.getDefaultInstance() : dataCommand;
        }

        public DataCommandOrBuilder getDataMessageOrBuilder() {
            DataCommand dataCommand = this.dataMessage_;
            return dataCommand == null ? DataCommand.getDefaultInstance() : dataCommand;
        }

        public boolean hasSessionMessage() {
            return (this.bitField0_ & 1024) == 1024;
        }

        public SessionCommand getSessionMessage() {
            SessionCommand sessionCommand = this.sessionMessage_;
            return sessionCommand == null ? SessionCommand.getDefaultInstance() : sessionCommand;
        }

        public SessionCommandOrBuilder getSessionMessageOrBuilder() {
            SessionCommand sessionCommand = this.sessionMessage_;
            return sessionCommand == null ? SessionCommand.getDefaultInstance() : sessionCommand;
        }

        public boolean hasErrorMessage() {
            return (this.bitField0_ & 2048) == 2048;
        }

        public ErrorCommand getErrorMessage() {
            ErrorCommand errorCommand = this.errorMessage_;
            return errorCommand == null ? ErrorCommand.getDefaultInstance() : errorCommand;
        }

        public ErrorCommandOrBuilder getErrorMessageOrBuilder() {
            ErrorCommand errorCommand = this.errorMessage_;
            return errorCommand == null ? ErrorCommand.getDefaultInstance() : errorCommand;
        }

        public boolean hasDirectMessage() {
            return (this.bitField0_ & 4096) == 4096;
        }

        public DirectCommand getDirectMessage() {
            DirectCommand directCommand = this.directMessage_;
            return directCommand == null ? DirectCommand.getDefaultInstance() : directCommand;
        }

        public DirectCommandOrBuilder getDirectMessageOrBuilder() {
            DirectCommand directCommand = this.directMessage_;
            return directCommand == null ? DirectCommand.getDefaultInstance() : directCommand;
        }

        public boolean hasAckMessage() {
            return (this.bitField0_ & 8192) == 8192;
        }

        public AckCommand getAckMessage() {
            AckCommand ackCommand = this.ackMessage_;
            return ackCommand == null ? AckCommand.getDefaultInstance() : ackCommand;
        }

        public AckCommandOrBuilder getAckMessageOrBuilder() {
            AckCommand ackCommand = this.ackMessage_;
            return ackCommand == null ? AckCommand.getDefaultInstance() : ackCommand;
        }

        public boolean hasUnreadMessage() {
            return (this.bitField0_ & 16384) == 16384;
        }

        public UnreadCommand getUnreadMessage() {
            UnreadCommand unreadCommand = this.unreadMessage_;
            return unreadCommand == null ? UnreadCommand.getDefaultInstance() : unreadCommand;
        }

        public UnreadCommandOrBuilder getUnreadMessageOrBuilder() {
            UnreadCommand unreadCommand = this.unreadMessage_;
            return unreadCommand == null ? UnreadCommand.getDefaultInstance() : unreadCommand;
        }

        public boolean hasReadMessage() {
            return (this.bitField0_ & 32768) == 32768;
        }

        public ReadCommand getReadMessage() {
            ReadCommand readCommand = this.readMessage_;
            return readCommand == null ? ReadCommand.getDefaultInstance() : readCommand;
        }

        public ReadCommandOrBuilder getReadMessageOrBuilder() {
            ReadCommand readCommand = this.readMessage_;
            return readCommand == null ? ReadCommand.getDefaultInstance() : readCommand;
        }

        public boolean hasRcpMessage() {
            return (this.bitField0_ & 65536) == 65536;
        }

        public RcpCommand getRcpMessage() {
            RcpCommand rcpCommand = this.rcpMessage_;
            return rcpCommand == null ? RcpCommand.getDefaultInstance() : rcpCommand;
        }

        public RcpCommandOrBuilder getRcpMessageOrBuilder() {
            RcpCommand rcpCommand = this.rcpMessage_;
            return rcpCommand == null ? RcpCommand.getDefaultInstance() : rcpCommand;
        }

        public boolean hasLogsMessage() {
            return (this.bitField0_ & 131072) == 131072;
        }

        public LogsCommand getLogsMessage() {
            LogsCommand logsCommand = this.logsMessage_;
            return logsCommand == null ? LogsCommand.getDefaultInstance() : logsCommand;
        }

        public LogsCommandOrBuilder getLogsMessageOrBuilder() {
            LogsCommand logsCommand = this.logsMessage_;
            return logsCommand == null ? LogsCommand.getDefaultInstance() : logsCommand;
        }

        public boolean hasConvMessage() {
            return (this.bitField0_ & 262144) == 262144;
        }

        public ConvCommand getConvMessage() {
            ConvCommand convCommand = this.convMessage_;
            return convCommand == null ? ConvCommand.getDefaultInstance() : convCommand;
        }

        public ConvCommandOrBuilder getConvMessageOrBuilder() {
            ConvCommand convCommand = this.convMessage_;
            return convCommand == null ? ConvCommand.getDefaultInstance() : convCommand;
        }

        public boolean hasRoomMessage() {
            return (this.bitField0_ & 524288) == 524288;
        }

        public RoomCommand getRoomMessage() {
            RoomCommand roomCommand = this.roomMessage_;
            return roomCommand == null ? RoomCommand.getDefaultInstance() : roomCommand;
        }

        public RoomCommandOrBuilder getRoomMessageOrBuilder() {
            RoomCommand roomCommand = this.roomMessage_;
            return roomCommand == null ? RoomCommand.getDefaultInstance() : roomCommand;
        }

        public boolean hasPresenceMessage() {
            return (this.bitField0_ & 1048576) == 1048576;
        }

        public PresenceCommand getPresenceMessage() {
            PresenceCommand presenceCommand = this.presenceMessage_;
            return presenceCommand == null ? PresenceCommand.getDefaultInstance() : presenceCommand;
        }

        public PresenceCommandOrBuilder getPresenceMessageOrBuilder() {
            PresenceCommand presenceCommand = this.presenceMessage_;
            return presenceCommand == null ? PresenceCommand.getDefaultInstance() : presenceCommand;
        }

        public boolean hasReportMessage() {
            return (this.bitField0_ & 2097152) == 2097152;
        }

        public ReportCommand getReportMessage() {
            ReportCommand reportCommand = this.reportMessage_;
            return reportCommand == null ? ReportCommand.getDefaultInstance() : reportCommand;
        }

        public ReportCommandOrBuilder getReportMessageOrBuilder() {
            ReportCommand reportCommand = this.reportMessage_;
            return reportCommand == null ? ReportCommand.getDefaultInstance() : reportCommand;
        }

        public boolean hasPatchMessage() {
            return (this.bitField0_ & 4194304) == 4194304;
        }

        public PatchCommand getPatchMessage() {
            PatchCommand patchCommand = this.patchMessage_;
            return patchCommand == null ? PatchCommand.getDefaultInstance() : patchCommand;
        }

        public PatchCommandOrBuilder getPatchMessageOrBuilder() {
            PatchCommand patchCommand = this.patchMessage_;
            return patchCommand == null ? PatchCommand.getDefaultInstance() : patchCommand;
        }

        public boolean hasPubsubMessage() {
            return (this.bitField0_ & 8388608) == 8388608;
        }

        public PubsubCommand getPubsubMessage() {
            PubsubCommand pubsubCommand = this.pubsubMessage_;
            return pubsubCommand == null ? PubsubCommand.getDefaultInstance() : pubsubCommand;
        }

        public PubsubCommandOrBuilder getPubsubMessageOrBuilder() {
            PubsubCommand pubsubCommand = this.pubsubMessage_;
            return pubsubCommand == null ? PubsubCommand.getDefaultInstance() : pubsubCommand;
        }

        public boolean hasBlacklistMessage() {
            return (this.bitField0_ & 16777216) == 16777216;
        }

        public BlacklistCommand getBlacklistMessage() {
            BlacklistCommand blacklistCommand = this.blacklistMessage_;
            return blacklistCommand == null ? BlacklistCommand.getDefaultInstance() : blacklistCommand;
        }

        public BlacklistCommandOrBuilder getBlacklistMessageOrBuilder() {
            BlacklistCommand blacklistCommand = this.blacklistMessage_;
            return blacklistCommand == null ? BlacklistCommand.getDefaultInstance() : blacklistCommand;
        }

        public final boolean isInitialized() {
            byte b = this.memoizedIsInitialized;
            if (b == 1) {
                return true;
            }
            if (b == 0) {
                return false;
            }
            if (hasDataMessage() && !getDataMessage().isInitialized()) {
                this.memoizedIsInitialized = 0;
                return false;
            } else if (hasErrorMessage() && !getErrorMessage().isInitialized()) {
                this.memoizedIsInitialized = 0;
                return false;
            } else if (hasUnreadMessage() && !getUnreadMessage().isInitialized()) {
                this.memoizedIsInitialized = 0;
                return false;
            } else if (hasReadMessage() && !getReadMessage().isInitialized()) {
                this.memoizedIsInitialized = 0;
                return false;
            } else if (hasConvMessage() && !getConvMessage().isInitialized()) {
                this.memoizedIsInitialized = 0;
                return false;
            } else if (hasPubsubMessage() && !getPubsubMessage().isInitialized()) {
                this.memoizedIsInitialized = 0;
                return false;
            } else if (!hasBlacklistMessage() || getBlacklistMessage().isInitialized()) {
                this.memoizedIsInitialized = 1;
                return true;
            } else {
                this.memoizedIsInitialized = 0;
                return false;
            }
        }

        public void writeTo(CodedOutputStream codedOutputStream) throws IOException {
            if ((this.bitField0_ & 1) == 1) {
                codedOutputStream.writeEnum(1, this.cmd_);
            }
            if ((this.bitField0_ & 2) == 2) {
                codedOutputStream.writeEnum(2, this.op_);
            }
            if ((this.bitField0_ & 4) == 4) {
                GeneratedMessageV3.writeString(codedOutputStream, 3, this.appId_);
            }
            if ((this.bitField0_ & 8) == 8) {
                GeneratedMessageV3.writeString(codedOutputStream, 4, this.peerId_);
            }
            if ((this.bitField0_ & 16) == 16) {
                codedOutputStream.writeInt32(5, this.i_);
            }
            if ((this.bitField0_ & 32) == 32) {
                GeneratedMessageV3.writeString(codedOutputStream, 6, this.installationId_);
            }
            if ((this.bitField0_ & 64) == 64) {
                codedOutputStream.writeInt32(7, this.priority_);
            }
            if ((this.bitField0_ & 128) == 128) {
                codedOutputStream.writeInt32(8, this.service_);
            }
            if ((this.bitField0_ & 256) == 256) {
                codedOutputStream.writeInt64(9, this.serverTs_);
            }
            if ((this.bitField0_ & 512) == 512) {
                codedOutputStream.writeMessage(101, getDataMessage());
            }
            if ((this.bitField0_ & 1024) == 1024) {
                codedOutputStream.writeMessage(102, getSessionMessage());
            }
            if ((this.bitField0_ & 2048) == 2048) {
                codedOutputStream.writeMessage(103, getErrorMessage());
            }
            if ((this.bitField0_ & 4096) == 4096) {
                codedOutputStream.writeMessage(104, getDirectMessage());
            }
            if ((this.bitField0_ & 8192) == 8192) {
                codedOutputStream.writeMessage(105, getAckMessage());
            }
            if ((this.bitField0_ & 16384) == 16384) {
                codedOutputStream.writeMessage(106, getUnreadMessage());
            }
            if ((this.bitField0_ & 32768) == 32768) {
                codedOutputStream.writeMessage(107, getReadMessage());
            }
            if ((this.bitField0_ & 65536) == 65536) {
                codedOutputStream.writeMessage(108, getRcpMessage());
            }
            if ((this.bitField0_ & 131072) == 131072) {
                codedOutputStream.writeMessage(109, getLogsMessage());
            }
            if ((this.bitField0_ & 262144) == 262144) {
                codedOutputStream.writeMessage(110, getConvMessage());
            }
            if ((this.bitField0_ & 524288) == 524288) {
                codedOutputStream.writeMessage(111, getRoomMessage());
            }
            if ((this.bitField0_ & 1048576) == 1048576) {
                codedOutputStream.writeMessage(112, getPresenceMessage());
            }
            if ((this.bitField0_ & 2097152) == 2097152) {
                codedOutputStream.writeMessage(113, getReportMessage());
            }
            if ((this.bitField0_ & 4194304) == 4194304) {
                codedOutputStream.writeMessage(114, getPatchMessage());
            }
            if ((this.bitField0_ & 8388608) == 8388608) {
                codedOutputStream.writeMessage(115, getPubsubMessage());
            }
            if ((this.bitField0_ & 16777216) == 16777216) {
                codedOutputStream.writeMessage(116, getBlacklistMessage());
            }
            this.unknownFields.writeTo(codedOutputStream);
        }

        public int getSerializedSize() {
            int i = this.memoizedSize;
            if (i != -1) {
                return i;
            }
            int i2 = 0;
            if ((this.bitField0_ & 1) == 1) {
                i2 = 0 + CodedOutputStream.computeEnumSize(1, this.cmd_);
            }
            if ((this.bitField0_ & 2) == 2) {
                i2 += CodedOutputStream.computeEnumSize(2, this.op_);
            }
            if ((this.bitField0_ & 4) == 4) {
                i2 += GeneratedMessageV3.computeStringSize(3, this.appId_);
            }
            if ((this.bitField0_ & 8) == 8) {
                i2 += GeneratedMessageV3.computeStringSize(4, this.peerId_);
            }
            if ((this.bitField0_ & 16) == 16) {
                i2 += CodedOutputStream.computeInt32Size(5, this.i_);
            }
            if ((this.bitField0_ & 32) == 32) {
                i2 += GeneratedMessageV3.computeStringSize(6, this.installationId_);
            }
            if ((this.bitField0_ & 64) == 64) {
                i2 += CodedOutputStream.computeInt32Size(7, this.priority_);
            }
            if ((this.bitField0_ & 128) == 128) {
                i2 += CodedOutputStream.computeInt32Size(8, this.service_);
            }
            if ((this.bitField0_ & 256) == 256) {
                i2 += CodedOutputStream.computeInt64Size(9, this.serverTs_);
            }
            if ((this.bitField0_ & 512) == 512) {
                i2 += CodedOutputStream.computeMessageSize(101, getDataMessage());
            }
            if ((this.bitField0_ & 1024) == 1024) {
                i2 += CodedOutputStream.computeMessageSize(102, getSessionMessage());
            }
            if ((this.bitField0_ & 2048) == 2048) {
                i2 += CodedOutputStream.computeMessageSize(103, getErrorMessage());
            }
            if ((this.bitField0_ & 4096) == 4096) {
                i2 += CodedOutputStream.computeMessageSize(104, getDirectMessage());
            }
            if ((this.bitField0_ & 8192) == 8192) {
                i2 += CodedOutputStream.computeMessageSize(105, getAckMessage());
            }
            if ((this.bitField0_ & 16384) == 16384) {
                i2 += CodedOutputStream.computeMessageSize(106, getUnreadMessage());
            }
            if ((this.bitField0_ & 32768) == 32768) {
                i2 += CodedOutputStream.computeMessageSize(107, getReadMessage());
            }
            if ((this.bitField0_ & 65536) == 65536) {
                i2 += CodedOutputStream.computeMessageSize(108, getRcpMessage());
            }
            if ((this.bitField0_ & 131072) == 131072) {
                i2 += CodedOutputStream.computeMessageSize(109, getLogsMessage());
            }
            if ((this.bitField0_ & 262144) == 262144) {
                i2 += CodedOutputStream.computeMessageSize(110, getConvMessage());
            }
            if ((this.bitField0_ & 524288) == 524288) {
                i2 += CodedOutputStream.computeMessageSize(111, getRoomMessage());
            }
            if ((this.bitField0_ & 1048576) == 1048576) {
                i2 += CodedOutputStream.computeMessageSize(112, getPresenceMessage());
            }
            if ((this.bitField0_ & 2097152) == 2097152) {
                i2 += CodedOutputStream.computeMessageSize(113, getReportMessage());
            }
            if ((this.bitField0_ & 4194304) == 4194304) {
                i2 += CodedOutputStream.computeMessageSize(114, getPatchMessage());
            }
            if ((this.bitField0_ & 8388608) == 8388608) {
                i2 += CodedOutputStream.computeMessageSize(115, getPubsubMessage());
            }
            if ((this.bitField0_ & 16777216) == 16777216) {
                i2 += CodedOutputStream.computeMessageSize(116, getBlacklistMessage());
            }
            int serializedSize = i2 + this.unknownFields.getSerializedSize();
            this.memoizedSize = serializedSize;
            return serializedSize;
        }

        public boolean equals(Object obj) {
            boolean z = true;
            if (obj == this) {
                return true;
            }
            if (!(obj instanceof GenericCommand)) {
                return super.equals(obj);
            }
            GenericCommand genericCommand = (GenericCommand) obj;
            boolean z2 = hasCmd() == genericCommand.hasCmd();
            if (hasCmd()) {
                z2 = z2 && this.cmd_ == genericCommand.cmd_;
            }
            boolean z3 = z2 && hasOp() == genericCommand.hasOp();
            if (hasOp()) {
                z3 = z3 && this.op_ == genericCommand.op_;
            }
            boolean z4 = z3 && hasAppId() == genericCommand.hasAppId();
            if (hasAppId()) {
                z4 = z4 && getAppId().equals(genericCommand.getAppId());
            }
            boolean z5 = z4 && hasPeerId() == genericCommand.hasPeerId();
            if (hasPeerId()) {
                z5 = z5 && getPeerId().equals(genericCommand.getPeerId());
            }
            boolean z6 = z5 && hasI() == genericCommand.hasI();
            if (hasI()) {
                z6 = z6 && getI() == genericCommand.getI();
            }
            boolean z7 = z6 && hasInstallationId() == genericCommand.hasInstallationId();
            if (hasInstallationId()) {
                z7 = z7 && getInstallationId().equals(genericCommand.getInstallationId());
            }
            boolean z8 = z7 && hasPriority() == genericCommand.hasPriority();
            if (hasPriority()) {
                z8 = z8 && getPriority() == genericCommand.getPriority();
            }
            boolean z9 = z8 && hasService() == genericCommand.hasService();
            if (hasService()) {
                z9 = z9 && getService() == genericCommand.getService();
            }
            boolean z10 = z9 && hasServerTs() == genericCommand.hasServerTs();
            if (hasServerTs()) {
                z10 = z10 && getServerTs() == genericCommand.getServerTs();
            }
            boolean z11 = z10 && hasDataMessage() == genericCommand.hasDataMessage();
            if (hasDataMessage()) {
                z11 = z11 && getDataMessage().equals(genericCommand.getDataMessage());
            }
            boolean z12 = z11 && hasSessionMessage() == genericCommand.hasSessionMessage();
            if (hasSessionMessage()) {
                z12 = z12 && getSessionMessage().equals(genericCommand.getSessionMessage());
            }
            boolean z13 = z12 && hasErrorMessage() == genericCommand.hasErrorMessage();
            if (hasErrorMessage()) {
                z13 = z13 && getErrorMessage().equals(genericCommand.getErrorMessage());
            }
            boolean z14 = z13 && hasDirectMessage() == genericCommand.hasDirectMessage();
            if (hasDirectMessage()) {
                z14 = z14 && getDirectMessage().equals(genericCommand.getDirectMessage());
            }
            boolean z15 = z14 && hasAckMessage() == genericCommand.hasAckMessage();
            if (hasAckMessage()) {
                z15 = z15 && getAckMessage().equals(genericCommand.getAckMessage());
            }
            boolean z16 = z15 && hasUnreadMessage() == genericCommand.hasUnreadMessage();
            if (hasUnreadMessage()) {
                z16 = z16 && getUnreadMessage().equals(genericCommand.getUnreadMessage());
            }
            boolean z17 = z16 && hasReadMessage() == genericCommand.hasReadMessage();
            if (hasReadMessage()) {
                z17 = z17 && getReadMessage().equals(genericCommand.getReadMessage());
            }
            boolean z18 = z17 && hasRcpMessage() == genericCommand.hasRcpMessage();
            if (hasRcpMessage()) {
                z18 = z18 && getRcpMessage().equals(genericCommand.getRcpMessage());
            }
            boolean z19 = z18 && hasLogsMessage() == genericCommand.hasLogsMessage();
            if (hasLogsMessage()) {
                z19 = z19 && getLogsMessage().equals(genericCommand.getLogsMessage());
            }
            boolean z20 = z19 && hasConvMessage() == genericCommand.hasConvMessage();
            if (hasConvMessage()) {
                z20 = z20 && getConvMessage().equals(genericCommand.getConvMessage());
            }
            boolean z21 = z20 && hasRoomMessage() == genericCommand.hasRoomMessage();
            if (hasRoomMessage()) {
                z21 = z21 && getRoomMessage().equals(genericCommand.getRoomMessage());
            }
            boolean z22 = z21 && hasPresenceMessage() == genericCommand.hasPresenceMessage();
            if (hasPresenceMessage()) {
                z22 = z22 && getPresenceMessage().equals(genericCommand.getPresenceMessage());
            }
            boolean z23 = z22 && hasReportMessage() == genericCommand.hasReportMessage();
            if (hasReportMessage()) {
                z23 = z23 && getReportMessage().equals(genericCommand.getReportMessage());
            }
            boolean z24 = z23 && hasPatchMessage() == genericCommand.hasPatchMessage();
            if (hasPatchMessage()) {
                z24 = z24 && getPatchMessage().equals(genericCommand.getPatchMessage());
            }
            boolean z25 = z24 && hasPubsubMessage() == genericCommand.hasPubsubMessage();
            if (hasPubsubMessage()) {
                z25 = z25 && getPubsubMessage().equals(genericCommand.getPubsubMessage());
            }
            boolean z26 = z25 && hasBlacklistMessage() == genericCommand.hasBlacklistMessage();
            if (hasBlacklistMessage()) {
                z26 = z26 && getBlacklistMessage().equals(genericCommand.getBlacklistMessage());
            }
            if (!z26 || !this.unknownFields.equals(genericCommand.unknownFields)) {
                z = false;
            }
            return z;
        }

        public int hashCode() {
            if (this.memoizedHashCode != 0) {
                return this.memoizedHashCode;
            }
            int hashCode = 779 + getDescriptor().hashCode();
            if (hasCmd()) {
                hashCode = (((hashCode * 37) + 1) * 53) + this.cmd_;
            }
            if (hasOp()) {
                hashCode = (((hashCode * 37) + 2) * 53) + this.op_;
            }
            if (hasAppId()) {
                hashCode = (((hashCode * 37) + 3) * 53) + getAppId().hashCode();
            }
            if (hasPeerId()) {
                hashCode = (((hashCode * 37) + 4) * 53) + getPeerId().hashCode();
            }
            if (hasI()) {
                hashCode = (((hashCode * 37) + 5) * 53) + getI();
            }
            if (hasInstallationId()) {
                hashCode = (((hashCode * 37) + 6) * 53) + getInstallationId().hashCode();
            }
            if (hasPriority()) {
                hashCode = (((hashCode * 37) + 7) * 53) + getPriority();
            }
            if (hasService()) {
                hashCode = (((hashCode * 37) + 8) * 53) + getService();
            }
            if (hasServerTs()) {
                hashCode = (((hashCode * 37) + 9) * 53) + Internal.hashLong(getServerTs());
            }
            if (hasDataMessage()) {
                hashCode = (((hashCode * 37) + 101) * 53) + getDataMessage().hashCode();
            }
            if (hasSessionMessage()) {
                hashCode = (((hashCode * 37) + 102) * 53) + getSessionMessage().hashCode();
            }
            if (hasErrorMessage()) {
                hashCode = (((hashCode * 37) + 103) * 53) + getErrorMessage().hashCode();
            }
            if (hasDirectMessage()) {
                hashCode = (((hashCode * 37) + 104) * 53) + getDirectMessage().hashCode();
            }
            if (hasAckMessage()) {
                hashCode = (((hashCode * 37) + 105) * 53) + getAckMessage().hashCode();
            }
            if (hasUnreadMessage()) {
                hashCode = (((hashCode * 37) + 106) * 53) + getUnreadMessage().hashCode();
            }
            if (hasReadMessage()) {
                hashCode = (((hashCode * 37) + 107) * 53) + getReadMessage().hashCode();
            }
            if (hasRcpMessage()) {
                hashCode = (((hashCode * 37) + 108) * 53) + getRcpMessage().hashCode();
            }
            if (hasLogsMessage()) {
                hashCode = (((hashCode * 37) + 109) * 53) + getLogsMessage().hashCode();
            }
            if (hasConvMessage()) {
                hashCode = (((hashCode * 37) + 110) * 53) + getConvMessage().hashCode();
            }
            if (hasRoomMessage()) {
                hashCode = (((hashCode * 37) + 111) * 53) + getRoomMessage().hashCode();
            }
            if (hasPresenceMessage()) {
                hashCode = (((hashCode * 37) + 112) * 53) + getPresenceMessage().hashCode();
            }
            if (hasReportMessage()) {
                hashCode = (((hashCode * 37) + 113) * 53) + getReportMessage().hashCode();
            }
            if (hasPatchMessage()) {
                hashCode = (((hashCode * 37) + 114) * 53) + getPatchMessage().hashCode();
            }
            if (hasPubsubMessage()) {
                hashCode = (((hashCode * 37) + 115) * 53) + getPubsubMessage().hashCode();
            }
            if (hasBlacklistMessage()) {
                hashCode = (((hashCode * 37) + 116) * 53) + getBlacklistMessage().hashCode();
            }
            int hashCode2 = (hashCode * 29) + this.unknownFields.hashCode();
            this.memoizedHashCode = hashCode2;
            return hashCode2;
        }

        public static GenericCommand parseFrom(ByteBuffer byteBuffer) throws InvalidProtocolBufferException {
            return (GenericCommand) PARSER.parseFrom(byteBuffer);
        }

        public static GenericCommand parseFrom(ByteBuffer byteBuffer, ExtensionRegistryLite extensionRegistryLite) throws InvalidProtocolBufferException {
            return (GenericCommand) PARSER.parseFrom(byteBuffer, extensionRegistryLite);
        }

        public static GenericCommand parseFrom(ByteString byteString) throws InvalidProtocolBufferException {
            return (GenericCommand) PARSER.parseFrom(byteString);
        }

        public static GenericCommand parseFrom(ByteString byteString, ExtensionRegistryLite extensionRegistryLite) throws InvalidProtocolBufferException {
            return (GenericCommand) PARSER.parseFrom(byteString, extensionRegistryLite);
        }

        public static GenericCommand parseFrom(byte[] bArr) throws InvalidProtocolBufferException {
            return (GenericCommand) PARSER.parseFrom(bArr);
        }

        public static GenericCommand parseFrom(byte[] bArr, ExtensionRegistryLite extensionRegistryLite) throws InvalidProtocolBufferException {
            return (GenericCommand) PARSER.parseFrom(bArr, extensionRegistryLite);
        }

        public static GenericCommand parseFrom(InputStream inputStream) throws IOException {
            return (GenericCommand) GeneratedMessageV3.parseWithIOException(PARSER, inputStream);
        }

        public static GenericCommand parseFrom(InputStream inputStream, ExtensionRegistryLite extensionRegistryLite) throws IOException {
            return (GenericCommand) GeneratedMessageV3.parseWithIOException(PARSER, inputStream, extensionRegistryLite);
        }

        public static GenericCommand parseDelimitedFrom(InputStream inputStream) throws IOException {
            return (GenericCommand) GeneratedMessageV3.parseDelimitedWithIOException(PARSER, inputStream);
        }

        public static GenericCommand parseDelimitedFrom(InputStream inputStream, ExtensionRegistryLite extensionRegistryLite) throws IOException {
            return (GenericCommand) GeneratedMessageV3.parseDelimitedWithIOException(PARSER, inputStream, extensionRegistryLite);
        }

        public static GenericCommand parseFrom(CodedInputStream codedInputStream) throws IOException {
            return (GenericCommand) GeneratedMessageV3.parseWithIOException(PARSER, codedInputStream);
        }

        public static GenericCommand parseFrom(CodedInputStream codedInputStream, ExtensionRegistryLite extensionRegistryLite) throws IOException {
            return (GenericCommand) GeneratedMessageV3.parseWithIOException(PARSER, codedInputStream, extensionRegistryLite);
        }

        public Builder newBuilderForType() {
            return newBuilder();
        }

        public static Builder newBuilder() {
            return DEFAULT_INSTANCE.toBuilder();
        }

        public static Builder newBuilder(GenericCommand genericCommand) {
            return DEFAULT_INSTANCE.toBuilder().mergeFrom(genericCommand);
        }

        public Builder toBuilder() {
            if (this == DEFAULT_INSTANCE) {
                return new Builder();
            }
            return new Builder().mergeFrom(this);
        }

        /* access modifiers changed from: protected */
        public Builder newBuilderForType(BuilderParent builderParent) {
            return new Builder(builderParent);
        }

        public static GenericCommand getDefaultInstance() {
            return DEFAULT_INSTANCE;
        }

        public static Parser<GenericCommand> parser() {
            return PARSER;
        }

        public Parser<GenericCommand> getParserForType() {
            return PARSER;
        }

        public GenericCommand getDefaultInstanceForType() {
            return DEFAULT_INSTANCE;
        }
    }

    public interface GenericCommandOrBuilder extends MessageOrBuilder {
        AckCommand getAckMessage();

        AckCommandOrBuilder getAckMessageOrBuilder();

        String getAppId();

        ByteString getAppIdBytes();

        BlacklistCommand getBlacklistMessage();

        BlacklistCommandOrBuilder getBlacklistMessageOrBuilder();

        CommandType getCmd();

        ConvCommand getConvMessage();

        ConvCommandOrBuilder getConvMessageOrBuilder();

        DataCommand getDataMessage();

        DataCommandOrBuilder getDataMessageOrBuilder();

        DirectCommand getDirectMessage();

        DirectCommandOrBuilder getDirectMessageOrBuilder();

        ErrorCommand getErrorMessage();

        ErrorCommandOrBuilder getErrorMessageOrBuilder();

        int getI();

        String getInstallationId();

        ByteString getInstallationIdBytes();

        LogsCommand getLogsMessage();

        LogsCommandOrBuilder getLogsMessageOrBuilder();

        OpType getOp();

        PatchCommand getPatchMessage();

        PatchCommandOrBuilder getPatchMessageOrBuilder();

        String getPeerId();

        ByteString getPeerIdBytes();

        PresenceCommand getPresenceMessage();

        PresenceCommandOrBuilder getPresenceMessageOrBuilder();

        int getPriority();

        PubsubCommand getPubsubMessage();

        PubsubCommandOrBuilder getPubsubMessageOrBuilder();

        RcpCommand getRcpMessage();

        RcpCommandOrBuilder getRcpMessageOrBuilder();

        ReadCommand getReadMessage();

        ReadCommandOrBuilder getReadMessageOrBuilder();

        ReportCommand getReportMessage();

        ReportCommandOrBuilder getReportMessageOrBuilder();

        RoomCommand getRoomMessage();

        RoomCommandOrBuilder getRoomMessageOrBuilder();

        long getServerTs();

        int getService();

        SessionCommand getSessionMessage();

        SessionCommandOrBuilder getSessionMessageOrBuilder();

        UnreadCommand getUnreadMessage();

        UnreadCommandOrBuilder getUnreadMessageOrBuilder();

        boolean hasAckMessage();

        boolean hasAppId();

        boolean hasBlacklistMessage();

        boolean hasCmd();

        boolean hasConvMessage();

        boolean hasDataMessage();

        boolean hasDirectMessage();

        boolean hasErrorMessage();

        boolean hasI();

        boolean hasInstallationId();

        boolean hasLogsMessage();

        boolean hasOp();

        boolean hasPatchMessage();

        boolean hasPeerId();

        boolean hasPresenceMessage();

        boolean hasPriority();

        boolean hasPubsubMessage();

        boolean hasRcpMessage();

        boolean hasReadMessage();

        boolean hasReportMessage();

        boolean hasRoomMessage();

        boolean hasServerTs();

        boolean hasService();

        boolean hasSessionMessage();

        boolean hasUnreadMessage();
    }

    public static final class JsonObjectMessage extends GeneratedMessageV3 implements JsonObjectMessageOrBuilder {
        public static final int DATA_FIELD_NUMBER = 1;
        private static final JsonObjectMessage DEFAULT_INSTANCE = new JsonObjectMessage();
        @Deprecated
        public static final Parser<JsonObjectMessage> PARSER = new AbstractParser<JsonObjectMessage>() {
            public JsonObjectMessage parsePartialFrom(CodedInputStream codedInputStream, ExtensionRegistryLite extensionRegistryLite) throws InvalidProtocolBufferException {
                return new JsonObjectMessage(codedInputStream, extensionRegistryLite);
            }
        };
        private static final long serialVersionUID = 0;
        /* access modifiers changed from: private */
        public int bitField0_;
        /* access modifiers changed from: private */
        public volatile Object data_;
        private byte memoizedIsInitialized;

        public static final class Builder extends com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements JsonObjectMessageOrBuilder {
            private int bitField0_;
            private Object data_;

            public static final Descriptor getDescriptor() {
                return Messages.internal_static_com_avos_avoscloud_JsonObjectMessage_descriptor;
            }

            /* access modifiers changed from: protected */
            public FieldAccessorTable internalGetFieldAccessorTable() {
                return Messages.internal_static_com_avos_avoscloud_JsonObjectMessage_fieldAccessorTable.ensureFieldAccessorsInitialized(JsonObjectMessage.class, Builder.class);
            }

            private Builder() {
                this.data_ = "";
                maybeForceBuilderInitialization();
            }

            private Builder(BuilderParent builderParent) {
                super(builderParent);
                this.data_ = "";
                maybeForceBuilderInitialization();
            }

            private void maybeForceBuilderInitialization() {
                JsonObjectMessage.alwaysUseFieldBuilders;
            }

            public Builder clear() {
                super.clear();
                this.data_ = "";
                this.bitField0_ &= -2;
                return this;
            }

            public Descriptor getDescriptorForType() {
                return Messages.internal_static_com_avos_avoscloud_JsonObjectMessage_descriptor;
            }

            public JsonObjectMessage getDefaultInstanceForType() {
                return JsonObjectMessage.getDefaultInstance();
            }

            public JsonObjectMessage build() {
                JsonObjectMessage buildPartial = buildPartial();
                if (buildPartial.isInitialized()) {
                    return buildPartial;
                }
                throw newUninitializedMessageException(buildPartial);
            }

            public JsonObjectMessage buildPartial() {
                JsonObjectMessage jsonObjectMessage = new JsonObjectMessage((com.google.protobuf.GeneratedMessageV3.Builder) this);
                int i = 1;
                if ((this.bitField0_ & 1) != 1) {
                    i = 0;
                }
                jsonObjectMessage.data_ = this.data_;
                jsonObjectMessage.bitField0_ = i;
                onBuilt();
                return jsonObjectMessage;
            }

            public Builder clone() {
                return (Builder) super.clone();
            }

            public Builder setField(FieldDescriptor fieldDescriptor, Object obj) {
                return (Builder) super.setField(fieldDescriptor, obj);
            }

            public Builder clearField(FieldDescriptor fieldDescriptor) {
                return (Builder) super.clearField(fieldDescriptor);
            }

            public Builder clearOneof(OneofDescriptor oneofDescriptor) {
                return (Builder) super.clearOneof(oneofDescriptor);
            }

            public Builder setRepeatedField(FieldDescriptor fieldDescriptor, int i, Object obj) {
                return (Builder) super.setRepeatedField(fieldDescriptor, i, obj);
            }

            public Builder addRepeatedField(FieldDescriptor fieldDescriptor, Object obj) {
                return (Builder) super.addRepeatedField(fieldDescriptor, obj);
            }

            public Builder mergeFrom(Message message) {
                if (message instanceof JsonObjectMessage) {
                    return mergeFrom((JsonObjectMessage) message);
                }
                super.mergeFrom(message);
                return this;
            }

            public Builder mergeFrom(JsonObjectMessage jsonObjectMessage) {
                if (jsonObjectMessage == JsonObjectMessage.getDefaultInstance()) {
                    return this;
                }
                if (jsonObjectMessage.hasData()) {
                    this.bitField0_ |= 1;
                    this.data_ = jsonObjectMessage.data_;
                    onChanged();
                }
                mergeUnknownFields(jsonObjectMessage.unknownFields);
                onChanged();
                return this;
            }

            public final boolean isInitialized() {
                return hasData();
            }

            /* JADX WARNING: Removed duplicated region for block: B:16:0x0021  */
            /* Code decompiled incorrectly, please refer to instructions dump. */
            public com.avos.avoscloud.Messages.JsonObjectMessage.Builder mergeFrom(com.google.protobuf.CodedInputStream r3, com.google.protobuf.ExtensionRegistryLite r4) throws java.io.IOException {
                /*
                    r2 = this;
                    r0 = 0
                    com.google.protobuf.Parser<com.avos.avoscloud.Messages$JsonObjectMessage> r1 = com.avos.avoscloud.Messages.JsonObjectMessage.PARSER     // Catch:{ InvalidProtocolBufferException -> 0x0011 }
                    java.lang.Object r3 = r1.parsePartialFrom(r3, r4)     // Catch:{ InvalidProtocolBufferException -> 0x0011 }
                    com.avos.avoscloud.Messages$JsonObjectMessage r3 = (com.avos.avoscloud.Messages.JsonObjectMessage) r3     // Catch:{ InvalidProtocolBufferException -> 0x0011 }
                    if (r3 == 0) goto L_0x000e
                    r2.mergeFrom(r3)
                L_0x000e:
                    return r2
                L_0x000f:
                    r3 = move-exception
                    goto L_0x001f
                L_0x0011:
                    r3 = move-exception
                    com.google.protobuf.MessageLite r4 = r3.getUnfinishedMessage()     // Catch:{ all -> 0x000f }
                    com.avos.avoscloud.Messages$JsonObjectMessage r4 = (com.avos.avoscloud.Messages.JsonObjectMessage) r4     // Catch:{ all -> 0x000f }
                    java.io.IOException r3 = r3.unwrapIOException()     // Catch:{ all -> 0x001d }
                    throw r3     // Catch:{ all -> 0x001d }
                L_0x001d:
                    r3 = move-exception
                    r0 = r4
                L_0x001f:
                    if (r0 == 0) goto L_0x0024
                    r2.mergeFrom(r0)
                L_0x0024:
                    throw r3
                */
                throw new UnsupportedOperationException("Method not decompiled: com.avos.avoscloud.Messages.JsonObjectMessage.Builder.mergeFrom(com.google.protobuf.CodedInputStream, com.google.protobuf.ExtensionRegistryLite):com.avos.avoscloud.Messages$JsonObjectMessage$Builder");
            }

            public boolean hasData() {
                return (this.bitField0_ & 1) == 1;
            }

            public String getData() {
                Object obj = this.data_;
                if (obj instanceof String) {
                    return (String) obj;
                }
                ByteString byteString = (ByteString) obj;
                String stringUtf8 = byteString.toStringUtf8();
                if (byteString.isValidUtf8()) {
                    this.data_ = stringUtf8;
                }
                return stringUtf8;
            }

            public ByteString getDataBytes() {
                Object obj = this.data_;
                if (!(obj instanceof String)) {
                    return (ByteString) obj;
                }
                ByteString copyFromUtf8 = ByteString.copyFromUtf8((String) obj);
                this.data_ = copyFromUtf8;
                return copyFromUtf8;
            }

            public Builder setData(String str) {
                if (str != null) {
                    this.bitField0_ |= 1;
                    this.data_ = str;
                    onChanged();
                    return this;
                }
                throw new NullPointerException();
            }

            public Builder clearData() {
                this.bitField0_ &= -2;
                this.data_ = JsonObjectMessage.getDefaultInstance().getData();
                onChanged();
                return this;
            }

            public Builder setDataBytes(ByteString byteString) {
                if (byteString != null) {
                    this.bitField0_ |= 1;
                    this.data_ = byteString;
                    onChanged();
                    return this;
                }
                throw new NullPointerException();
            }

            public final Builder setUnknownFields(UnknownFieldSet unknownFieldSet) {
                return (Builder) super.setUnknownFields(unknownFieldSet);
            }

            public final Builder mergeUnknownFields(UnknownFieldSet unknownFieldSet) {
                return (Builder) super.mergeUnknownFields(unknownFieldSet);
            }
        }

        private JsonObjectMessage(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
            super(builder);
            this.memoizedIsInitialized = -1;
        }

        private JsonObjectMessage() {
            this.memoizedIsInitialized = -1;
            this.data_ = "";
        }

        public final UnknownFieldSet getUnknownFields() {
            return this.unknownFields;
        }

        private JsonObjectMessage(CodedInputStream codedInputStream, ExtensionRegistryLite extensionRegistryLite) throws InvalidProtocolBufferException {
            this();
            com.google.protobuf.UnknownFieldSet.Builder newBuilder = UnknownFieldSet.newBuilder();
            boolean z = false;
            while (!z) {
                try {
                    int readTag = codedInputStream.readTag();
                    if (readTag != 0) {
                        if (readTag == 10) {
                            ByteString readBytes = codedInputStream.readBytes();
                            this.bitField0_ = 1 | this.bitField0_;
                            this.data_ = readBytes;
                        } else if (!parseUnknownField(codedInputStream, newBuilder, extensionRegistryLite, readTag)) {
                        }
                    }
                    z = true;
                } catch (InvalidProtocolBufferException e) {
                    throw e.setUnfinishedMessage(this);
                } catch (IOException e2) {
                    throw new InvalidProtocolBufferException(e2).setUnfinishedMessage(this);
                } catch (Throwable th) {
                    this.unknownFields = newBuilder.build();
                    makeExtensionsImmutable();
                    throw th;
                }
            }
            this.unknownFields = newBuilder.build();
            makeExtensionsImmutable();
        }

        public static final Descriptor getDescriptor() {
            return Messages.internal_static_com_avos_avoscloud_JsonObjectMessage_descriptor;
        }

        /* access modifiers changed from: protected */
        public FieldAccessorTable internalGetFieldAccessorTable() {
            return Messages.internal_static_com_avos_avoscloud_JsonObjectMessage_fieldAccessorTable.ensureFieldAccessorsInitialized(JsonObjectMessage.class, Builder.class);
        }

        public boolean hasData() {
            return (this.bitField0_ & 1) == 1;
        }

        public String getData() {
            Object obj = this.data_;
            if (obj instanceof String) {
                return (String) obj;
            }
            ByteString byteString = (ByteString) obj;
            String stringUtf8 = byteString.toStringUtf8();
            if (byteString.isValidUtf8()) {
                this.data_ = stringUtf8;
            }
            return stringUtf8;
        }

        public ByteString getDataBytes() {
            Object obj = this.data_;
            if (!(obj instanceof String)) {
                return (ByteString) obj;
            }
            ByteString copyFromUtf8 = ByteString.copyFromUtf8((String) obj);
            this.data_ = copyFromUtf8;
            return copyFromUtf8;
        }

        public final boolean isInitialized() {
            byte b = this.memoizedIsInitialized;
            if (b == 1) {
                return true;
            }
            if (b == 0) {
                return false;
            }
            if (!hasData()) {
                this.memoizedIsInitialized = 0;
                return false;
            }
            this.memoizedIsInitialized = 1;
            return true;
        }

        public void writeTo(CodedOutputStream codedOutputStream) throws IOException {
            if ((this.bitField0_ & 1) == 1) {
                GeneratedMessageV3.writeString(codedOutputStream, 1, this.data_);
            }
            this.unknownFields.writeTo(codedOutputStream);
        }

        public int getSerializedSize() {
            int i = this.memoizedSize;
            if (i != -1) {
                return i;
            }
            int i2 = 0;
            if ((this.bitField0_ & 1) == 1) {
                i2 = 0 + GeneratedMessageV3.computeStringSize(1, this.data_);
            }
            int serializedSize = i2 + this.unknownFields.getSerializedSize();
            this.memoizedSize = serializedSize;
            return serializedSize;
        }

        public boolean equals(Object obj) {
            boolean z = true;
            if (obj == this) {
                return true;
            }
            if (!(obj instanceof JsonObjectMessage)) {
                return super.equals(obj);
            }
            JsonObjectMessage jsonObjectMessage = (JsonObjectMessage) obj;
            boolean z2 = hasData() == jsonObjectMessage.hasData();
            if (hasData()) {
                z2 = z2 && getData().equals(jsonObjectMessage.getData());
            }
            if (!z2 || !this.unknownFields.equals(jsonObjectMessage.unknownFields)) {
                z = false;
            }
            return z;
        }

        public int hashCode() {
            if (this.memoizedHashCode != 0) {
                return this.memoizedHashCode;
            }
            int hashCode = 779 + getDescriptor().hashCode();
            if (hasData()) {
                hashCode = (((hashCode * 37) + 1) * 53) + getData().hashCode();
            }
            int hashCode2 = (hashCode * 29) + this.unknownFields.hashCode();
            this.memoizedHashCode = hashCode2;
            return hashCode2;
        }

        public static JsonObjectMessage parseFrom(ByteBuffer byteBuffer) throws InvalidProtocolBufferException {
            return (JsonObjectMessage) PARSER.parseFrom(byteBuffer);
        }

        public static JsonObjectMessage parseFrom(ByteBuffer byteBuffer, ExtensionRegistryLite extensionRegistryLite) throws InvalidProtocolBufferException {
            return (JsonObjectMessage) PARSER.parseFrom(byteBuffer, extensionRegistryLite);
        }

        public static JsonObjectMessage parseFrom(ByteString byteString) throws InvalidProtocolBufferException {
            return (JsonObjectMessage) PARSER.parseFrom(byteString);
        }

        public static JsonObjectMessage parseFrom(ByteString byteString, ExtensionRegistryLite extensionRegistryLite) throws InvalidProtocolBufferException {
            return (JsonObjectMessage) PARSER.parseFrom(byteString, extensionRegistryLite);
        }

        public static JsonObjectMessage parseFrom(byte[] bArr) throws InvalidProtocolBufferException {
            return (JsonObjectMessage) PARSER.parseFrom(bArr);
        }

        public static JsonObjectMessage parseFrom(byte[] bArr, ExtensionRegistryLite extensionRegistryLite) throws InvalidProtocolBufferException {
            return (JsonObjectMessage) PARSER.parseFrom(bArr, extensionRegistryLite);
        }

        public static JsonObjectMessage parseFrom(InputStream inputStream) throws IOException {
            return (JsonObjectMessage) GeneratedMessageV3.parseWithIOException(PARSER, inputStream);
        }

        public static JsonObjectMessage parseFrom(InputStream inputStream, ExtensionRegistryLite extensionRegistryLite) throws IOException {
            return (JsonObjectMessage) GeneratedMessageV3.parseWithIOException(PARSER, inputStream, extensionRegistryLite);
        }

        public static JsonObjectMessage parseDelimitedFrom(InputStream inputStream) throws IOException {
            return (JsonObjectMessage) GeneratedMessageV3.parseDelimitedWithIOException(PARSER, inputStream);
        }

        public static JsonObjectMessage parseDelimitedFrom(InputStream inputStream, ExtensionRegistryLite extensionRegistryLite) throws IOException {
            return (JsonObjectMessage) GeneratedMessageV3.parseDelimitedWithIOException(PARSER, inputStream, extensionRegistryLite);
        }

        public static JsonObjectMessage parseFrom(CodedInputStream codedInputStream) throws IOException {
            return (JsonObjectMessage) GeneratedMessageV3.parseWithIOException(PARSER, codedInputStream);
        }

        public static JsonObjectMessage parseFrom(CodedInputStream codedInputStream, ExtensionRegistryLite extensionRegistryLite) throws IOException {
            return (JsonObjectMessage) GeneratedMessageV3.parseWithIOException(PARSER, codedInputStream, extensionRegistryLite);
        }

        public Builder newBuilderForType() {
            return newBuilder();
        }

        public static Builder newBuilder() {
            return DEFAULT_INSTANCE.toBuilder();
        }

        public static Builder newBuilder(JsonObjectMessage jsonObjectMessage) {
            return DEFAULT_INSTANCE.toBuilder().mergeFrom(jsonObjectMessage);
        }

        public Builder toBuilder() {
            if (this == DEFAULT_INSTANCE) {
                return new Builder();
            }
            return new Builder().mergeFrom(this);
        }

        /* access modifiers changed from: protected */
        public Builder newBuilderForType(BuilderParent builderParent) {
            return new Builder(builderParent);
        }

        public static JsonObjectMessage getDefaultInstance() {
            return DEFAULT_INSTANCE;
        }

        public static Parser<JsonObjectMessage> parser() {
            return PARSER;
        }

        public Parser<JsonObjectMessage> getParserForType() {
            return PARSER;
        }

        public JsonObjectMessage getDefaultInstanceForType() {
            return DEFAULT_INSTANCE;
        }
    }

    public interface JsonObjectMessageOrBuilder extends MessageOrBuilder {
        String getData();

        ByteString getDataBytes();

        boolean hasData();
    }

    public static final class LogItem extends GeneratedMessageV3 implements LogItemOrBuilder {
        public static final int ACKAT_FIELD_NUMBER = 5;
        public static final int BIN_FIELD_NUMBER = 10;
        public static final int CONVTYPE_FIELD_NUMBER = 11;
        public static final int DATA_FIELD_NUMBER = 2;
        private static final LogItem DEFAULT_INSTANCE = new LogItem();
        public static final int FROM_FIELD_NUMBER = 1;
        public static final int MENTIONALL_FIELD_NUMBER = 8;
        public static final int MENTIONPIDS_FIELD_NUMBER = 9;
        public static final int MSGID_FIELD_NUMBER = 4;
        @Deprecated
        public static final Parser<LogItem> PARSER = new AbstractParser<LogItem>() {
            public LogItem parsePartialFrom(CodedInputStream codedInputStream, ExtensionRegistryLite extensionRegistryLite) throws InvalidProtocolBufferException {
                return new LogItem(codedInputStream, extensionRegistryLite);
            }
        };
        public static final int PATCHTIMESTAMP_FIELD_NUMBER = 7;
        public static final int READAT_FIELD_NUMBER = 6;
        public static final int TIMESTAMP_FIELD_NUMBER = 3;
        private static final long serialVersionUID = 0;
        /* access modifiers changed from: private */
        public long ackAt_;
        /* access modifiers changed from: private */
        public boolean bin_;
        /* access modifiers changed from: private */
        public int bitField0_;
        /* access modifiers changed from: private */
        public int convType_;
        /* access modifiers changed from: private */
        public volatile Object data_;
        /* access modifiers changed from: private */
        public volatile Object from_;
        private byte memoizedIsInitialized;
        /* access modifiers changed from: private */
        public boolean mentionAll_;
        /* access modifiers changed from: private */
        public LazyStringList mentionPids_;
        /* access modifiers changed from: private */
        public volatile Object msgId_;
        /* access modifiers changed from: private */
        public long patchTimestamp_;
        /* access modifiers changed from: private */
        public long readAt_;
        /* access modifiers changed from: private */
        public long timestamp_;

        public static final class Builder extends com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements LogItemOrBuilder {
            private long ackAt_;
            private boolean bin_;
            private int bitField0_;
            private int convType_;
            private Object data_;
            private Object from_;
            private boolean mentionAll_;
            private LazyStringList mentionPids_;
            private Object msgId_;
            private long patchTimestamp_;
            private long readAt_;
            private long timestamp_;

            public final boolean isInitialized() {
                return true;
            }

            public static final Descriptor getDescriptor() {
                return Messages.internal_static_com_avos_avoscloud_LogItem_descriptor;
            }

            /* access modifiers changed from: protected */
            public FieldAccessorTable internalGetFieldAccessorTable() {
                return Messages.internal_static_com_avos_avoscloud_LogItem_fieldAccessorTable.ensureFieldAccessorsInitialized(LogItem.class, Builder.class);
            }

            private Builder() {
                String str = "";
                this.from_ = str;
                this.data_ = str;
                this.msgId_ = str;
                this.mentionPids_ = LazyStringArrayList.EMPTY;
                maybeForceBuilderInitialization();
            }

            private Builder(BuilderParent builderParent) {
                super(builderParent);
                String str = "";
                this.from_ = str;
                this.data_ = str;
                this.msgId_ = str;
                this.mentionPids_ = LazyStringArrayList.EMPTY;
                maybeForceBuilderInitialization();
            }

            private void maybeForceBuilderInitialization() {
                LogItem.alwaysUseFieldBuilders;
            }

            public Builder clear() {
                super.clear();
                String str = "";
                this.from_ = str;
                this.bitField0_ &= -2;
                this.data_ = str;
                this.bitField0_ &= -3;
                this.timestamp_ = 0;
                this.bitField0_ &= -5;
                this.msgId_ = str;
                this.bitField0_ &= -9;
                this.ackAt_ = 0;
                this.bitField0_ &= -17;
                this.readAt_ = 0;
                this.bitField0_ &= -33;
                this.patchTimestamp_ = 0;
                this.bitField0_ &= -65;
                this.mentionAll_ = false;
                this.bitField0_ &= -129;
                this.mentionPids_ = LazyStringArrayList.EMPTY;
                this.bitField0_ &= -257;
                this.bin_ = false;
                this.bitField0_ &= -513;
                this.convType_ = 0;
                this.bitField0_ &= -1025;
                return this;
            }

            public Descriptor getDescriptorForType() {
                return Messages.internal_static_com_avos_avoscloud_LogItem_descriptor;
            }

            public LogItem getDefaultInstanceForType() {
                return LogItem.getDefaultInstance();
            }

            public LogItem build() {
                LogItem buildPartial = buildPartial();
                if (buildPartial.isInitialized()) {
                    return buildPartial;
                }
                throw newUninitializedMessageException(buildPartial);
            }

            public LogItem buildPartial() {
                LogItem logItem = new LogItem((com.google.protobuf.GeneratedMessageV3.Builder) this);
                int i = this.bitField0_;
                int i2 = 1;
                if ((i & 1) != 1) {
                    i2 = 0;
                }
                logItem.from_ = this.from_;
                if ((i & 2) == 2) {
                    i2 |= 2;
                }
                logItem.data_ = this.data_;
                if ((i & 4) == 4) {
                    i2 |= 4;
                }
                logItem.timestamp_ = this.timestamp_;
                if ((i & 8) == 8) {
                    i2 |= 8;
                }
                logItem.msgId_ = this.msgId_;
                if ((i & 16) == 16) {
                    i2 |= 16;
                }
                logItem.ackAt_ = this.ackAt_;
                if ((i & 32) == 32) {
                    i2 |= 32;
                }
                logItem.readAt_ = this.readAt_;
                if ((i & 64) == 64) {
                    i2 |= 64;
                }
                logItem.patchTimestamp_ = this.patchTimestamp_;
                if ((i & 128) == 128) {
                    i2 |= 128;
                }
                logItem.mentionAll_ = this.mentionAll_;
                if ((this.bitField0_ & 256) == 256) {
                    this.mentionPids_ = this.mentionPids_.getUnmodifiableView();
                    this.bitField0_ &= -257;
                }
                logItem.mentionPids_ = this.mentionPids_;
                if ((i & 512) == 512) {
                    i2 |= 256;
                }
                logItem.bin_ = this.bin_;
                if ((i & 1024) == 1024) {
                    i2 |= 512;
                }
                logItem.convType_ = this.convType_;
                logItem.bitField0_ = i2;
                onBuilt();
                return logItem;
            }

            public Builder clone() {
                return (Builder) super.clone();
            }

            public Builder setField(FieldDescriptor fieldDescriptor, Object obj) {
                return (Builder) super.setField(fieldDescriptor, obj);
            }

            public Builder clearField(FieldDescriptor fieldDescriptor) {
                return (Builder) super.clearField(fieldDescriptor);
            }

            public Builder clearOneof(OneofDescriptor oneofDescriptor) {
                return (Builder) super.clearOneof(oneofDescriptor);
            }

            public Builder setRepeatedField(FieldDescriptor fieldDescriptor, int i, Object obj) {
                return (Builder) super.setRepeatedField(fieldDescriptor, i, obj);
            }

            public Builder addRepeatedField(FieldDescriptor fieldDescriptor, Object obj) {
                return (Builder) super.addRepeatedField(fieldDescriptor, obj);
            }

            public Builder mergeFrom(Message message) {
                if (message instanceof LogItem) {
                    return mergeFrom((LogItem) message);
                }
                super.mergeFrom(message);
                return this;
            }

            public Builder mergeFrom(LogItem logItem) {
                if (logItem == LogItem.getDefaultInstance()) {
                    return this;
                }
                if (logItem.hasFrom()) {
                    this.bitField0_ |= 1;
                    this.from_ = logItem.from_;
                    onChanged();
                }
                if (logItem.hasData()) {
                    this.bitField0_ |= 2;
                    this.data_ = logItem.data_;
                    onChanged();
                }
                if (logItem.hasTimestamp()) {
                    setTimestamp(logItem.getTimestamp());
                }
                if (logItem.hasMsgId()) {
                    this.bitField0_ |= 8;
                    this.msgId_ = logItem.msgId_;
                    onChanged();
                }
                if (logItem.hasAckAt()) {
                    setAckAt(logItem.getAckAt());
                }
                if (logItem.hasReadAt()) {
                    setReadAt(logItem.getReadAt());
                }
                if (logItem.hasPatchTimestamp()) {
                    setPatchTimestamp(logItem.getPatchTimestamp());
                }
                if (logItem.hasMentionAll()) {
                    setMentionAll(logItem.getMentionAll());
                }
                if (!logItem.mentionPids_.isEmpty()) {
                    if (this.mentionPids_.isEmpty()) {
                        this.mentionPids_ = logItem.mentionPids_;
                        this.bitField0_ &= -257;
                    } else {
                        ensureMentionPidsIsMutable();
                        this.mentionPids_.addAll(logItem.mentionPids_);
                    }
                    onChanged();
                }
                if (logItem.hasBin()) {
                    setBin(logItem.getBin());
                }
                if (logItem.hasConvType()) {
                    setConvType(logItem.getConvType());
                }
                mergeUnknownFields(logItem.unknownFields);
                onChanged();
                return this;
            }

            /* JADX WARNING: Removed duplicated region for block: B:16:0x0021  */
            /* Code decompiled incorrectly, please refer to instructions dump. */
            public com.avos.avoscloud.Messages.LogItem.Builder mergeFrom(com.google.protobuf.CodedInputStream r3, com.google.protobuf.ExtensionRegistryLite r4) throws java.io.IOException {
                /*
                    r2 = this;
                    r0 = 0
                    com.google.protobuf.Parser<com.avos.avoscloud.Messages$LogItem> r1 = com.avos.avoscloud.Messages.LogItem.PARSER     // Catch:{ InvalidProtocolBufferException -> 0x0011 }
                    java.lang.Object r3 = r1.parsePartialFrom(r3, r4)     // Catch:{ InvalidProtocolBufferException -> 0x0011 }
                    com.avos.avoscloud.Messages$LogItem r3 = (com.avos.avoscloud.Messages.LogItem) r3     // Catch:{ InvalidProtocolBufferException -> 0x0011 }
                    if (r3 == 0) goto L_0x000e
                    r2.mergeFrom(r3)
                L_0x000e:
                    return r2
                L_0x000f:
                    r3 = move-exception
                    goto L_0x001f
                L_0x0011:
                    r3 = move-exception
                    com.google.protobuf.MessageLite r4 = r3.getUnfinishedMessage()     // Catch:{ all -> 0x000f }
                    com.avos.avoscloud.Messages$LogItem r4 = (com.avos.avoscloud.Messages.LogItem) r4     // Catch:{ all -> 0x000f }
                    java.io.IOException r3 = r3.unwrapIOException()     // Catch:{ all -> 0x001d }
                    throw r3     // Catch:{ all -> 0x001d }
                L_0x001d:
                    r3 = move-exception
                    r0 = r4
                L_0x001f:
                    if (r0 == 0) goto L_0x0024
                    r2.mergeFrom(r0)
                L_0x0024:
                    throw r3
                */
                throw new UnsupportedOperationException("Method not decompiled: com.avos.avoscloud.Messages.LogItem.Builder.mergeFrom(com.google.protobuf.CodedInputStream, com.google.protobuf.ExtensionRegistryLite):com.avos.avoscloud.Messages$LogItem$Builder");
            }

            public boolean hasFrom() {
                return (this.bitField0_ & 1) == 1;
            }

            public String getFrom() {
                Object obj = this.from_;
                if (obj instanceof String) {
                    return (String) obj;
                }
                ByteString byteString = (ByteString) obj;
                String stringUtf8 = byteString.toStringUtf8();
                if (byteString.isValidUtf8()) {
                    this.from_ = stringUtf8;
                }
                return stringUtf8;
            }

            public ByteString getFromBytes() {
                Object obj = this.from_;
                if (!(obj instanceof String)) {
                    return (ByteString) obj;
                }
                ByteString copyFromUtf8 = ByteString.copyFromUtf8((String) obj);
                this.from_ = copyFromUtf8;
                return copyFromUtf8;
            }

            public Builder setFrom(String str) {
                if (str != null) {
                    this.bitField0_ |= 1;
                    this.from_ = str;
                    onChanged();
                    return this;
                }
                throw new NullPointerException();
            }

            public Builder clearFrom() {
                this.bitField0_ &= -2;
                this.from_ = LogItem.getDefaultInstance().getFrom();
                onChanged();
                return this;
            }

            public Builder setFromBytes(ByteString byteString) {
                if (byteString != null) {
                    this.bitField0_ |= 1;
                    this.from_ = byteString;
                    onChanged();
                    return this;
                }
                throw new NullPointerException();
            }

            public boolean hasData() {
                return (this.bitField0_ & 2) == 2;
            }

            public String getData() {
                Object obj = this.data_;
                if (obj instanceof String) {
                    return (String) obj;
                }
                ByteString byteString = (ByteString) obj;
                String stringUtf8 = byteString.toStringUtf8();
                if (byteString.isValidUtf8()) {
                    this.data_ = stringUtf8;
                }
                return stringUtf8;
            }

            public ByteString getDataBytes() {
                Object obj = this.data_;
                if (!(obj instanceof String)) {
                    return (ByteString) obj;
                }
                ByteString copyFromUtf8 = ByteString.copyFromUtf8((String) obj);
                this.data_ = copyFromUtf8;
                return copyFromUtf8;
            }

            public Builder setData(String str) {
                if (str != null) {
                    this.bitField0_ |= 2;
                    this.data_ = str;
                    onChanged();
                    return this;
                }
                throw new NullPointerException();
            }

            public Builder clearData() {
                this.bitField0_ &= -3;
                this.data_ = LogItem.getDefaultInstance().getData();
                onChanged();
                return this;
            }

            public Builder setDataBytes(ByteString byteString) {
                if (byteString != null) {
                    this.bitField0_ |= 2;
                    this.data_ = byteString;
                    onChanged();
                    return this;
                }
                throw new NullPointerException();
            }

            public boolean hasTimestamp() {
                return (this.bitField0_ & 4) == 4;
            }

            public long getTimestamp() {
                return this.timestamp_;
            }

            public Builder setTimestamp(long j) {
                this.bitField0_ |= 4;
                this.timestamp_ = j;
                onChanged();
                return this;
            }

            public Builder clearTimestamp() {
                this.bitField0_ &= -5;
                this.timestamp_ = 0;
                onChanged();
                return this;
            }

            public boolean hasMsgId() {
                return (this.bitField0_ & 8) == 8;
            }

            public String getMsgId() {
                Object obj = this.msgId_;
                if (obj instanceof String) {
                    return (String) obj;
                }
                ByteString byteString = (ByteString) obj;
                String stringUtf8 = byteString.toStringUtf8();
                if (byteString.isValidUtf8()) {
                    this.msgId_ = stringUtf8;
                }
                return stringUtf8;
            }

            public ByteString getMsgIdBytes() {
                Object obj = this.msgId_;
                if (!(obj instanceof String)) {
                    return (ByteString) obj;
                }
                ByteString copyFromUtf8 = ByteString.copyFromUtf8((String) obj);
                this.msgId_ = copyFromUtf8;
                return copyFromUtf8;
            }

            public Builder setMsgId(String str) {
                if (str != null) {
                    this.bitField0_ |= 8;
                    this.msgId_ = str;
                    onChanged();
                    return this;
                }
                throw new NullPointerException();
            }

            public Builder clearMsgId() {
                this.bitField0_ &= -9;
                this.msgId_ = LogItem.getDefaultInstance().getMsgId();
                onChanged();
                return this;
            }

            public Builder setMsgIdBytes(ByteString byteString) {
                if (byteString != null) {
                    this.bitField0_ |= 8;
                    this.msgId_ = byteString;
                    onChanged();
                    return this;
                }
                throw new NullPointerException();
            }

            public boolean hasAckAt() {
                return (this.bitField0_ & 16) == 16;
            }

            public long getAckAt() {
                return this.ackAt_;
            }

            public Builder setAckAt(long j) {
                this.bitField0_ |= 16;
                this.ackAt_ = j;
                onChanged();
                return this;
            }

            public Builder clearAckAt() {
                this.bitField0_ &= -17;
                this.ackAt_ = 0;
                onChanged();
                return this;
            }

            public boolean hasReadAt() {
                return (this.bitField0_ & 32) == 32;
            }

            public long getReadAt() {
                return this.readAt_;
            }

            public Builder setReadAt(long j) {
                this.bitField0_ |= 32;
                this.readAt_ = j;
                onChanged();
                return this;
            }

            public Builder clearReadAt() {
                this.bitField0_ &= -33;
                this.readAt_ = 0;
                onChanged();
                return this;
            }

            public boolean hasPatchTimestamp() {
                return (this.bitField0_ & 64) == 64;
            }

            public long getPatchTimestamp() {
                return this.patchTimestamp_;
            }

            public Builder setPatchTimestamp(long j) {
                this.bitField0_ |= 64;
                this.patchTimestamp_ = j;
                onChanged();
                return this;
            }

            public Builder clearPatchTimestamp() {
                this.bitField0_ &= -65;
                this.patchTimestamp_ = 0;
                onChanged();
                return this;
            }

            public boolean hasMentionAll() {
                return (this.bitField0_ & 128) == 128;
            }

            public boolean getMentionAll() {
                return this.mentionAll_;
            }

            public Builder setMentionAll(boolean z) {
                this.bitField0_ |= 128;
                this.mentionAll_ = z;
                onChanged();
                return this;
            }

            public Builder clearMentionAll() {
                this.bitField0_ &= -129;
                this.mentionAll_ = false;
                onChanged();
                return this;
            }

            private void ensureMentionPidsIsMutable() {
                if ((this.bitField0_ & 256) != 256) {
                    this.mentionPids_ = new LazyStringArrayList(this.mentionPids_);
                    this.bitField0_ |= 256;
                }
            }

            public ProtocolStringList getMentionPidsList() {
                return this.mentionPids_.getUnmodifiableView();
            }

            public int getMentionPidsCount() {
                return this.mentionPids_.size();
            }

            public String getMentionPids(int i) {
                return (String) this.mentionPids_.get(i);
            }

            public ByteString getMentionPidsBytes(int i) {
                return this.mentionPids_.getByteString(i);
            }

            public Builder setMentionPids(int i, String str) {
                if (str != null) {
                    ensureMentionPidsIsMutable();
                    this.mentionPids_.set(i, str);
                    onChanged();
                    return this;
                }
                throw new NullPointerException();
            }

            public Builder addMentionPids(String str) {
                if (str != null) {
                    ensureMentionPidsIsMutable();
                    this.mentionPids_.add(str);
                    onChanged();
                    return this;
                }
                throw new NullPointerException();
            }

            public Builder addAllMentionPids(Iterable<String> iterable) {
                ensureMentionPidsIsMutable();
                com.google.protobuf.AbstractMessageLite.Builder.addAll((Iterable) iterable, (List) this.mentionPids_);
                onChanged();
                return this;
            }

            public Builder clearMentionPids() {
                this.mentionPids_ = LazyStringArrayList.EMPTY;
                this.bitField0_ &= -257;
                onChanged();
                return this;
            }

            public Builder addMentionPidsBytes(ByteString byteString) {
                if (byteString != null) {
                    ensureMentionPidsIsMutable();
                    this.mentionPids_.add(byteString);
                    onChanged();
                    return this;
                }
                throw new NullPointerException();
            }

            public boolean hasBin() {
                return (this.bitField0_ & 512) == 512;
            }

            public boolean getBin() {
                return this.bin_;
            }

            public Builder setBin(boolean z) {
                this.bitField0_ |= 512;
                this.bin_ = z;
                onChanged();
                return this;
            }

            public Builder clearBin() {
                this.bitField0_ &= -513;
                this.bin_ = false;
                onChanged();
                return this;
            }

            public boolean hasConvType() {
                return (this.bitField0_ & 1024) == 1024;
            }

            public int getConvType() {
                return this.convType_;
            }

            public Builder setConvType(int i) {
                this.bitField0_ |= 1024;
                this.convType_ = i;
                onChanged();
                return this;
            }

            public Builder clearConvType() {
                this.bitField0_ &= -1025;
                this.convType_ = 0;
                onChanged();
                return this;
            }

            public final Builder setUnknownFields(UnknownFieldSet unknownFieldSet) {
                return (Builder) super.setUnknownFields(unknownFieldSet);
            }

            public final Builder mergeUnknownFields(UnknownFieldSet unknownFieldSet) {
                return (Builder) super.mergeUnknownFields(unknownFieldSet);
            }
        }

        private LogItem(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
            super(builder);
            this.memoizedIsInitialized = -1;
        }

        private LogItem() {
            this.memoizedIsInitialized = -1;
            String str = "";
            this.from_ = str;
            this.data_ = str;
            this.timestamp_ = 0;
            this.msgId_ = str;
            this.ackAt_ = 0;
            this.readAt_ = 0;
            this.patchTimestamp_ = 0;
            this.mentionAll_ = false;
            this.mentionPids_ = LazyStringArrayList.EMPTY;
            this.bin_ = false;
            this.convType_ = 0;
        }

        public final UnknownFieldSet getUnknownFields() {
            return this.unknownFields;
        }

        private LogItem(CodedInputStream codedInputStream, ExtensionRegistryLite extensionRegistryLite) throws InvalidProtocolBufferException {
            this();
            com.google.protobuf.UnknownFieldSet.Builder newBuilder = UnknownFieldSet.newBuilder();
            boolean z = false;
            boolean z2 = false;
            while (!z) {
                try {
                    int readTag = codedInputStream.readTag();
                    switch (readTag) {
                        case 0:
                            z = true;
                            break;
                        case 10:
                            ByteString readBytes = codedInputStream.readBytes();
                            this.bitField0_ = 1 | this.bitField0_;
                            this.from_ = readBytes;
                            break;
                        case 18:
                            ByteString readBytes2 = codedInputStream.readBytes();
                            this.bitField0_ |= 2;
                            this.data_ = readBytes2;
                            break;
                        case 24:
                            this.bitField0_ |= 4;
                            this.timestamp_ = codedInputStream.readInt64();
                            break;
                        case 34:
                            ByteString readBytes3 = codedInputStream.readBytes();
                            this.bitField0_ |= 8;
                            this.msgId_ = readBytes3;
                            break;
                        case 40:
                            this.bitField0_ |= 16;
                            this.ackAt_ = codedInputStream.readInt64();
                            break;
                        case 48:
                            this.bitField0_ |= 32;
                            this.readAt_ = codedInputStream.readInt64();
                            break;
                        case 56:
                            this.bitField0_ |= 64;
                            this.patchTimestamp_ = codedInputStream.readInt64();
                            break;
                        case 64:
                            this.bitField0_ |= 128;
                            this.mentionAll_ = codedInputStream.readBool();
                            break;
                        case 74:
                            ByteString readBytes4 = codedInputStream.readBytes();
                            if (!(z2 & true)) {
                                this.mentionPids_ = new LazyStringArrayList();
                                z2 |= true;
                            }
                            this.mentionPids_.add(readBytes4);
                            break;
                        case 80:
                            this.bitField0_ |= 256;
                            this.bin_ = codedInputStream.readBool();
                            break;
                        case 88:
                            this.bitField0_ |= 512;
                            this.convType_ = codedInputStream.readInt32();
                            break;
                        default:
                            if (parseUnknownField(codedInputStream, newBuilder, extensionRegistryLite, readTag)) {
                                break;
                            }
                            z = true;
                            break;
                    }
                } catch (InvalidProtocolBufferException e) {
                    throw e.setUnfinishedMessage(this);
                } catch (IOException e2) {
                    throw new InvalidProtocolBufferException(e2).setUnfinishedMessage(this);
                } catch (Throwable th) {
                    if (z2 & true) {
                        this.mentionPids_ = this.mentionPids_.getUnmodifiableView();
                    }
                    this.unknownFields = newBuilder.build();
                    makeExtensionsImmutable();
                    throw th;
                }
            }
            if (z2 & true) {
                this.mentionPids_ = this.mentionPids_.getUnmodifiableView();
            }
            this.unknownFields = newBuilder.build();
            makeExtensionsImmutable();
        }

        public static final Descriptor getDescriptor() {
            return Messages.internal_static_com_avos_avoscloud_LogItem_descriptor;
        }

        /* access modifiers changed from: protected */
        public FieldAccessorTable internalGetFieldAccessorTable() {
            return Messages.internal_static_com_avos_avoscloud_LogItem_fieldAccessorTable.ensureFieldAccessorsInitialized(LogItem.class, Builder.class);
        }

        public boolean hasFrom() {
            return (this.bitField0_ & 1) == 1;
        }

        public String getFrom() {
            Object obj = this.from_;
            if (obj instanceof String) {
                return (String) obj;
            }
            ByteString byteString = (ByteString) obj;
            String stringUtf8 = byteString.toStringUtf8();
            if (byteString.isValidUtf8()) {
                this.from_ = stringUtf8;
            }
            return stringUtf8;
        }

        public ByteString getFromBytes() {
            Object obj = this.from_;
            if (!(obj instanceof String)) {
                return (ByteString) obj;
            }
            ByteString copyFromUtf8 = ByteString.copyFromUtf8((String) obj);
            this.from_ = copyFromUtf8;
            return copyFromUtf8;
        }

        public boolean hasData() {
            return (this.bitField0_ & 2) == 2;
        }

        public String getData() {
            Object obj = this.data_;
            if (obj instanceof String) {
                return (String) obj;
            }
            ByteString byteString = (ByteString) obj;
            String stringUtf8 = byteString.toStringUtf8();
            if (byteString.isValidUtf8()) {
                this.data_ = stringUtf8;
            }
            return stringUtf8;
        }

        public ByteString getDataBytes() {
            Object obj = this.data_;
            if (!(obj instanceof String)) {
                return (ByteString) obj;
            }
            ByteString copyFromUtf8 = ByteString.copyFromUtf8((String) obj);
            this.data_ = copyFromUtf8;
            return copyFromUtf8;
        }

        public boolean hasTimestamp() {
            return (this.bitField0_ & 4) == 4;
        }

        public long getTimestamp() {
            return this.timestamp_;
        }

        public boolean hasMsgId() {
            return (this.bitField0_ & 8) == 8;
        }

        public String getMsgId() {
            Object obj = this.msgId_;
            if (obj instanceof String) {
                return (String) obj;
            }
            ByteString byteString = (ByteString) obj;
            String stringUtf8 = byteString.toStringUtf8();
            if (byteString.isValidUtf8()) {
                this.msgId_ = stringUtf8;
            }
            return stringUtf8;
        }

        public ByteString getMsgIdBytes() {
            Object obj = this.msgId_;
            if (!(obj instanceof String)) {
                return (ByteString) obj;
            }
            ByteString copyFromUtf8 = ByteString.copyFromUtf8((String) obj);
            this.msgId_ = copyFromUtf8;
            return copyFromUtf8;
        }

        public boolean hasAckAt() {
            return (this.bitField0_ & 16) == 16;
        }

        public long getAckAt() {
            return this.ackAt_;
        }

        public boolean hasReadAt() {
            return (this.bitField0_ & 32) == 32;
        }

        public long getReadAt() {
            return this.readAt_;
        }

        public boolean hasPatchTimestamp() {
            return (this.bitField0_ & 64) == 64;
        }

        public long getPatchTimestamp() {
            return this.patchTimestamp_;
        }

        public boolean hasMentionAll() {
            return (this.bitField0_ & 128) == 128;
        }

        public boolean getMentionAll() {
            return this.mentionAll_;
        }

        public ProtocolStringList getMentionPidsList() {
            return this.mentionPids_;
        }

        public int getMentionPidsCount() {
            return this.mentionPids_.size();
        }

        public String getMentionPids(int i) {
            return (String) this.mentionPids_.get(i);
        }

        public ByteString getMentionPidsBytes(int i) {
            return this.mentionPids_.getByteString(i);
        }

        public boolean hasBin() {
            return (this.bitField0_ & 256) == 256;
        }

        public boolean getBin() {
            return this.bin_;
        }

        public boolean hasConvType() {
            return (this.bitField0_ & 512) == 512;
        }

        public int getConvType() {
            return this.convType_;
        }

        public final boolean isInitialized() {
            byte b = this.memoizedIsInitialized;
            if (b == 1) {
                return true;
            }
            if (b == 0) {
                return false;
            }
            this.memoizedIsInitialized = 1;
            return true;
        }

        public void writeTo(CodedOutputStream codedOutputStream) throws IOException {
            if ((this.bitField0_ & 1) == 1) {
                GeneratedMessageV3.writeString(codedOutputStream, 1, this.from_);
            }
            if ((this.bitField0_ & 2) == 2) {
                GeneratedMessageV3.writeString(codedOutputStream, 2, this.data_);
            }
            if ((this.bitField0_ & 4) == 4) {
                codedOutputStream.writeInt64(3, this.timestamp_);
            }
            if ((this.bitField0_ & 8) == 8) {
                GeneratedMessageV3.writeString(codedOutputStream, 4, this.msgId_);
            }
            if ((this.bitField0_ & 16) == 16) {
                codedOutputStream.writeInt64(5, this.ackAt_);
            }
            if ((this.bitField0_ & 32) == 32) {
                codedOutputStream.writeInt64(6, this.readAt_);
            }
            if ((this.bitField0_ & 64) == 64) {
                codedOutputStream.writeInt64(7, this.patchTimestamp_);
            }
            if ((this.bitField0_ & 128) == 128) {
                codedOutputStream.writeBool(8, this.mentionAll_);
            }
            for (int i = 0; i < this.mentionPids_.size(); i++) {
                GeneratedMessageV3.writeString(codedOutputStream, 9, this.mentionPids_.getRaw(i));
            }
            if ((this.bitField0_ & 256) == 256) {
                codedOutputStream.writeBool(10, this.bin_);
            }
            if ((this.bitField0_ & 512) == 512) {
                codedOutputStream.writeInt32(11, this.convType_);
            }
            this.unknownFields.writeTo(codedOutputStream);
        }

        public int getSerializedSize() {
            int i = this.memoizedSize;
            if (i != -1) {
                return i;
            }
            int computeStringSize = (this.bitField0_ & 1) == 1 ? GeneratedMessageV3.computeStringSize(1, this.from_) + 0 : 0;
            if ((this.bitField0_ & 2) == 2) {
                computeStringSize += GeneratedMessageV3.computeStringSize(2, this.data_);
            }
            if ((this.bitField0_ & 4) == 4) {
                computeStringSize += CodedOutputStream.computeInt64Size(3, this.timestamp_);
            }
            if ((this.bitField0_ & 8) == 8) {
                computeStringSize += GeneratedMessageV3.computeStringSize(4, this.msgId_);
            }
            if ((this.bitField0_ & 16) == 16) {
                computeStringSize += CodedOutputStream.computeInt64Size(5, this.ackAt_);
            }
            if ((this.bitField0_ & 32) == 32) {
                computeStringSize += CodedOutputStream.computeInt64Size(6, this.readAt_);
            }
            if ((this.bitField0_ & 64) == 64) {
                computeStringSize += CodedOutputStream.computeInt64Size(7, this.patchTimestamp_);
            }
            if ((this.bitField0_ & 128) == 128) {
                computeStringSize += CodedOutputStream.computeBoolSize(8, this.mentionAll_);
            }
            int i2 = 0;
            for (int i3 = 0; i3 < this.mentionPids_.size(); i3++) {
                i2 += computeStringSizeNoTag(this.mentionPids_.getRaw(i3));
            }
            int size = computeStringSize + i2 + (getMentionPidsList().size() * 1);
            if ((this.bitField0_ & 256) == 256) {
                size += CodedOutputStream.computeBoolSize(10, this.bin_);
            }
            if ((this.bitField0_ & 512) == 512) {
                size += CodedOutputStream.computeInt32Size(11, this.convType_);
            }
            int serializedSize = size + this.unknownFields.getSerializedSize();
            this.memoizedSize = serializedSize;
            return serializedSize;
        }

        public boolean equals(Object obj) {
            boolean z = true;
            if (obj == this) {
                return true;
            }
            if (!(obj instanceof LogItem)) {
                return super.equals(obj);
            }
            LogItem logItem = (LogItem) obj;
            boolean z2 = hasFrom() == logItem.hasFrom();
            if (hasFrom()) {
                z2 = z2 && getFrom().equals(logItem.getFrom());
            }
            boolean z3 = z2 && hasData() == logItem.hasData();
            if (hasData()) {
                z3 = z3 && getData().equals(logItem.getData());
            }
            boolean z4 = z3 && hasTimestamp() == logItem.hasTimestamp();
            if (hasTimestamp()) {
                z4 = z4 && getTimestamp() == logItem.getTimestamp();
            }
            boolean z5 = z4 && hasMsgId() == logItem.hasMsgId();
            if (hasMsgId()) {
                z5 = z5 && getMsgId().equals(logItem.getMsgId());
            }
            boolean z6 = z5 && hasAckAt() == logItem.hasAckAt();
            if (hasAckAt()) {
                z6 = z6 && getAckAt() == logItem.getAckAt();
            }
            boolean z7 = z6 && hasReadAt() == logItem.hasReadAt();
            if (hasReadAt()) {
                z7 = z7 && getReadAt() == logItem.getReadAt();
            }
            boolean z8 = z7 && hasPatchTimestamp() == logItem.hasPatchTimestamp();
            if (hasPatchTimestamp()) {
                z8 = z8 && getPatchTimestamp() == logItem.getPatchTimestamp();
            }
            boolean z9 = z8 && hasMentionAll() == logItem.hasMentionAll();
            if (hasMentionAll()) {
                z9 = z9 && getMentionAll() == logItem.getMentionAll();
            }
            boolean z10 = (z9 && getMentionPidsList().equals(logItem.getMentionPidsList())) && hasBin() == logItem.hasBin();
            if (hasBin()) {
                z10 = z10 && getBin() == logItem.getBin();
            }
            boolean z11 = z10 && hasConvType() == logItem.hasConvType();
            if (hasConvType()) {
                z11 = z11 && getConvType() == logItem.getConvType();
            }
            if (!z11 || !this.unknownFields.equals(logItem.unknownFields)) {
                z = false;
            }
            return z;
        }

        public int hashCode() {
            if (this.memoizedHashCode != 0) {
                return this.memoizedHashCode;
            }
            int hashCode = 779 + getDescriptor().hashCode();
            if (hasFrom()) {
                hashCode = (((hashCode * 37) + 1) * 53) + getFrom().hashCode();
            }
            if (hasData()) {
                hashCode = (((hashCode * 37) + 2) * 53) + getData().hashCode();
            }
            if (hasTimestamp()) {
                hashCode = (((hashCode * 37) + 3) * 53) + Internal.hashLong(getTimestamp());
            }
            if (hasMsgId()) {
                hashCode = (((hashCode * 37) + 4) * 53) + getMsgId().hashCode();
            }
            if (hasAckAt()) {
                hashCode = (((hashCode * 37) + 5) * 53) + Internal.hashLong(getAckAt());
            }
            if (hasReadAt()) {
                hashCode = (((hashCode * 37) + 6) * 53) + Internal.hashLong(getReadAt());
            }
            if (hasPatchTimestamp()) {
                hashCode = (((hashCode * 37) + 7) * 53) + Internal.hashLong(getPatchTimestamp());
            }
            if (hasMentionAll()) {
                hashCode = (((hashCode * 37) + 8) * 53) + Internal.hashBoolean(getMentionAll());
            }
            if (getMentionPidsCount() > 0) {
                hashCode = (((hashCode * 37) + 9) * 53) + getMentionPidsList().hashCode();
            }
            if (hasBin()) {
                hashCode = (((hashCode * 37) + 10) * 53) + Internal.hashBoolean(getBin());
            }
            if (hasConvType()) {
                hashCode = (((hashCode * 37) + 11) * 53) + getConvType();
            }
            int hashCode2 = (hashCode * 29) + this.unknownFields.hashCode();
            this.memoizedHashCode = hashCode2;
            return hashCode2;
        }

        public static LogItem parseFrom(ByteBuffer byteBuffer) throws InvalidProtocolBufferException {
            return (LogItem) PARSER.parseFrom(byteBuffer);
        }

        public static LogItem parseFrom(ByteBuffer byteBuffer, ExtensionRegistryLite extensionRegistryLite) throws InvalidProtocolBufferException {
            return (LogItem) PARSER.parseFrom(byteBuffer, extensionRegistryLite);
        }

        public static LogItem parseFrom(ByteString byteString) throws InvalidProtocolBufferException {
            return (LogItem) PARSER.parseFrom(byteString);
        }

        public static LogItem parseFrom(ByteString byteString, ExtensionRegistryLite extensionRegistryLite) throws InvalidProtocolBufferException {
            return (LogItem) PARSER.parseFrom(byteString, extensionRegistryLite);
        }

        public static LogItem parseFrom(byte[] bArr) throws InvalidProtocolBufferException {
            return (LogItem) PARSER.parseFrom(bArr);
        }

        public static LogItem parseFrom(byte[] bArr, ExtensionRegistryLite extensionRegistryLite) throws InvalidProtocolBufferException {
            return (LogItem) PARSER.parseFrom(bArr, extensionRegistryLite);
        }

        public static LogItem parseFrom(InputStream inputStream) throws IOException {
            return (LogItem) GeneratedMessageV3.parseWithIOException(PARSER, inputStream);
        }

        public static LogItem parseFrom(InputStream inputStream, ExtensionRegistryLite extensionRegistryLite) throws IOException {
            return (LogItem) GeneratedMessageV3.parseWithIOException(PARSER, inputStream, extensionRegistryLite);
        }

        public static LogItem parseDelimitedFrom(InputStream inputStream) throws IOException {
            return (LogItem) GeneratedMessageV3.parseDelimitedWithIOException(PARSER, inputStream);
        }

        public static LogItem parseDelimitedFrom(InputStream inputStream, ExtensionRegistryLite extensionRegistryLite) throws IOException {
            return (LogItem) GeneratedMessageV3.parseDelimitedWithIOException(PARSER, inputStream, extensionRegistryLite);
        }

        public static LogItem parseFrom(CodedInputStream codedInputStream) throws IOException {
            return (LogItem) GeneratedMessageV3.parseWithIOException(PARSER, codedInputStream);
        }

        public static LogItem parseFrom(CodedInputStream codedInputStream, ExtensionRegistryLite extensionRegistryLite) throws IOException {
            return (LogItem) GeneratedMessageV3.parseWithIOException(PARSER, codedInputStream, extensionRegistryLite);
        }

        public Builder newBuilderForType() {
            return newBuilder();
        }

        public static Builder newBuilder() {
            return DEFAULT_INSTANCE.toBuilder();
        }

        public static Builder newBuilder(LogItem logItem) {
            return DEFAULT_INSTANCE.toBuilder().mergeFrom(logItem);
        }

        public Builder toBuilder() {
            if (this == DEFAULT_INSTANCE) {
                return new Builder();
            }
            return new Builder().mergeFrom(this);
        }

        /* access modifiers changed from: protected */
        public Builder newBuilderForType(BuilderParent builderParent) {
            return new Builder(builderParent);
        }

        public static LogItem getDefaultInstance() {
            return DEFAULT_INSTANCE;
        }

        public static Parser<LogItem> parser() {
            return PARSER;
        }

        public Parser<LogItem> getParserForType() {
            return PARSER;
        }

        public LogItem getDefaultInstanceForType() {
            return DEFAULT_INSTANCE;
        }
    }

    public interface LogItemOrBuilder extends MessageOrBuilder {
        long getAckAt();

        boolean getBin();

        int getConvType();

        String getData();

        ByteString getDataBytes();

        String getFrom();

        ByteString getFromBytes();

        boolean getMentionAll();

        String getMentionPids(int i);

        ByteString getMentionPidsBytes(int i);

        int getMentionPidsCount();

        List<String> getMentionPidsList();

        String getMsgId();

        ByteString getMsgIdBytes();

        long getPatchTimestamp();

        long getReadAt();

        long getTimestamp();

        boolean hasAckAt();

        boolean hasBin();

        boolean hasConvType();

        boolean hasData();

        boolean hasFrom();

        boolean hasMentionAll();

        boolean hasMsgId();

        boolean hasPatchTimestamp();

        boolean hasReadAt();

        boolean hasTimestamp();
    }

    public static final class LogsCommand extends GeneratedMessageV3 implements LogsCommandOrBuilder {
        public static final int CHECKSUM_FIELD_NUMBER = 8;
        public static final int CID_FIELD_NUMBER = 1;
        private static final LogsCommand DEFAULT_INSTANCE = new LogsCommand();
        public static final int DIRECTION_FIELD_NUMBER = 10;
        public static final int LCTYPE_FIELD_NUMBER = 13;
        public static final int LIMIT_FIELD_NUMBER = 3;
        public static final int LOGS_FIELD_NUMBER = 105;
        public static final int L_FIELD_NUMBER = 2;
        public static final int MID_FIELD_NUMBER = 7;
        @Deprecated
        public static final Parser<LogsCommand> PARSER = new AbstractParser<LogsCommand>() {
            public LogsCommand parsePartialFrom(CodedInputStream codedInputStream, ExtensionRegistryLite extensionRegistryLite) throws InvalidProtocolBufferException {
                return new LogsCommand(codedInputStream, extensionRegistryLite);
            }
        };
        public static final int STORED_FIELD_NUMBER = 9;
        public static final int TINCLUDED_FIELD_NUMBER = 11;
        public static final int TMID_FIELD_NUMBER = 6;
        public static final int TTINCLUDED_FIELD_NUMBER = 12;
        public static final int TT_FIELD_NUMBER = 5;
        public static final int T_FIELD_NUMBER = 4;
        private static final long serialVersionUID = 0;
        /* access modifiers changed from: private */
        public int bitField0_;
        /* access modifiers changed from: private */
        public volatile Object checksum_;
        /* access modifiers changed from: private */
        public volatile Object cid_;
        /* access modifiers changed from: private */
        public int direction_;
        /* access modifiers changed from: private */
        public int l_;
        /* access modifiers changed from: private */
        public int lctype_;
        /* access modifiers changed from: private */
        public int limit_;
        /* access modifiers changed from: private */
        public List<LogItem> logs_;
        private byte memoizedIsInitialized;
        /* access modifiers changed from: private */
        public volatile Object mid_;
        /* access modifiers changed from: private */
        public boolean stored_;
        /* access modifiers changed from: private */
        public boolean tIncluded_;
        /* access modifiers changed from: private */
        public long t_;
        /* access modifiers changed from: private */
        public volatile Object tmid_;
        /* access modifiers changed from: private */
        public boolean ttIncluded_;
        /* access modifiers changed from: private */
        public long tt_;

        public static final class Builder extends com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements LogsCommandOrBuilder {
            private int bitField0_;
            private Object checksum_;
            private Object cid_;
            private int direction_;
            private int l_;
            private int lctype_;
            private int limit_;
            private RepeatedFieldBuilderV3<LogItem, Builder, LogItemOrBuilder> logsBuilder_;
            private List<LogItem> logs_;
            private Object mid_;
            private boolean stored_;
            private boolean tIncluded_;
            private long t_;
            private Object tmid_;
            private boolean ttIncluded_;
            private long tt_;

            public final boolean isInitialized() {
                return true;
            }

            public static final Descriptor getDescriptor() {
                return Messages.internal_static_com_avos_avoscloud_LogsCommand_descriptor;
            }

            /* access modifiers changed from: protected */
            public FieldAccessorTable internalGetFieldAccessorTable() {
                return Messages.internal_static_com_avos_avoscloud_LogsCommand_fieldAccessorTable.ensureFieldAccessorsInitialized(LogsCommand.class, Builder.class);
            }

            private Builder() {
                String str = "";
                this.cid_ = str;
                this.tmid_ = str;
                this.mid_ = str;
                this.checksum_ = str;
                this.direction_ = 1;
                this.logs_ = Collections.emptyList();
                maybeForceBuilderInitialization();
            }

            private Builder(BuilderParent builderParent) {
                super(builderParent);
                String str = "";
                this.cid_ = str;
                this.tmid_ = str;
                this.mid_ = str;
                this.checksum_ = str;
                this.direction_ = 1;
                this.logs_ = Collections.emptyList();
                maybeForceBuilderInitialization();
            }

            private void maybeForceBuilderInitialization() {
                if (LogsCommand.alwaysUseFieldBuilders) {
                    getLogsFieldBuilder();
                }
            }

            public Builder clear() {
                super.clear();
                String str = "";
                this.cid_ = str;
                this.bitField0_ &= -2;
                this.l_ = 0;
                this.bitField0_ &= -3;
                this.limit_ = 0;
                this.bitField0_ &= -5;
                this.t_ = 0;
                this.bitField0_ &= -9;
                this.tt_ = 0;
                this.bitField0_ &= -17;
                this.tmid_ = str;
                this.bitField0_ &= -33;
                this.mid_ = str;
                this.bitField0_ &= -65;
                this.checksum_ = str;
                this.bitField0_ &= -129;
                this.stored_ = false;
                this.bitField0_ &= -257;
                this.direction_ = 1;
                this.bitField0_ &= -513;
                this.tIncluded_ = false;
                this.bitField0_ &= -1025;
                this.ttIncluded_ = false;
                this.bitField0_ &= -2049;
                this.lctype_ = 0;
                this.bitField0_ &= -4097;
                RepeatedFieldBuilderV3<LogItem, Builder, LogItemOrBuilder> repeatedFieldBuilderV3 = this.logsBuilder_;
                if (repeatedFieldBuilderV3 == null) {
                    this.logs_ = Collections.emptyList();
                    this.bitField0_ &= -8193;
                } else {
                    repeatedFieldBuilderV3.clear();
                }
                return this;
            }

            public Descriptor getDescriptorForType() {
                return Messages.internal_static_com_avos_avoscloud_LogsCommand_descriptor;
            }

            public LogsCommand getDefaultInstanceForType() {
                return LogsCommand.getDefaultInstance();
            }

            public LogsCommand build() {
                LogsCommand buildPartial = buildPartial();
                if (buildPartial.isInitialized()) {
                    return buildPartial;
                }
                throw newUninitializedMessageException(buildPartial);
            }

            public LogsCommand buildPartial() {
                LogsCommand logsCommand = new LogsCommand((com.google.protobuf.GeneratedMessageV3.Builder) this);
                int i = this.bitField0_;
                int i2 = 1;
                if ((i & 1) != 1) {
                    i2 = 0;
                }
                logsCommand.cid_ = this.cid_;
                if ((i & 2) == 2) {
                    i2 |= 2;
                }
                logsCommand.l_ = this.l_;
                if ((i & 4) == 4) {
                    i2 |= 4;
                }
                logsCommand.limit_ = this.limit_;
                if ((i & 8) == 8) {
                    i2 |= 8;
                }
                logsCommand.t_ = this.t_;
                if ((i & 16) == 16) {
                    i2 |= 16;
                }
                logsCommand.tt_ = this.tt_;
                if ((i & 32) == 32) {
                    i2 |= 32;
                }
                logsCommand.tmid_ = this.tmid_;
                if ((i & 64) == 64) {
                    i2 |= 64;
                }
                logsCommand.mid_ = this.mid_;
                if ((i & 128) == 128) {
                    i2 |= 128;
                }
                logsCommand.checksum_ = this.checksum_;
                if ((i & 256) == 256) {
                    i2 |= 256;
                }
                logsCommand.stored_ = this.stored_;
                if ((i & 512) == 512) {
                    i2 |= 512;
                }
                logsCommand.direction_ = this.direction_;
                if ((i & 1024) == 1024) {
                    i2 |= 1024;
                }
                logsCommand.tIncluded_ = this.tIncluded_;
                if ((i & 2048) == 2048) {
                    i2 |= 2048;
                }
                logsCommand.ttIncluded_ = this.ttIncluded_;
                if ((i & 4096) == 4096) {
                    i2 |= 4096;
                }
                logsCommand.lctype_ = this.lctype_;
                RepeatedFieldBuilderV3<LogItem, Builder, LogItemOrBuilder> repeatedFieldBuilderV3 = this.logsBuilder_;
                if (repeatedFieldBuilderV3 == null) {
                    if ((this.bitField0_ & 8192) == 8192) {
                        this.logs_ = Collections.unmodifiableList(this.logs_);
                        this.bitField0_ &= -8193;
                    }
                    logsCommand.logs_ = this.logs_;
                } else {
                    logsCommand.logs_ = repeatedFieldBuilderV3.build();
                }
                logsCommand.bitField0_ = i2;
                onBuilt();
                return logsCommand;
            }

            public Builder clone() {
                return (Builder) super.clone();
            }

            public Builder setField(FieldDescriptor fieldDescriptor, Object obj) {
                return (Builder) super.setField(fieldDescriptor, obj);
            }

            public Builder clearField(FieldDescriptor fieldDescriptor) {
                return (Builder) super.clearField(fieldDescriptor);
            }

            public Builder clearOneof(OneofDescriptor oneofDescriptor) {
                return (Builder) super.clearOneof(oneofDescriptor);
            }

            public Builder setRepeatedField(FieldDescriptor fieldDescriptor, int i, Object obj) {
                return (Builder) super.setRepeatedField(fieldDescriptor, i, obj);
            }

            public Builder addRepeatedField(FieldDescriptor fieldDescriptor, Object obj) {
                return (Builder) super.addRepeatedField(fieldDescriptor, obj);
            }

            public Builder mergeFrom(Message message) {
                if (message instanceof LogsCommand) {
                    return mergeFrom((LogsCommand) message);
                }
                super.mergeFrom(message);
                return this;
            }

            public Builder mergeFrom(LogsCommand logsCommand) {
                if (logsCommand == LogsCommand.getDefaultInstance()) {
                    return this;
                }
                if (logsCommand.hasCid()) {
                    this.bitField0_ |= 1;
                    this.cid_ = logsCommand.cid_;
                    onChanged();
                }
                if (logsCommand.hasL()) {
                    setL(logsCommand.getL());
                }
                if (logsCommand.hasLimit()) {
                    setLimit(logsCommand.getLimit());
                }
                if (logsCommand.hasT()) {
                    setT(logsCommand.getT());
                }
                if (logsCommand.hasTt()) {
                    setTt(logsCommand.getTt());
                }
                if (logsCommand.hasTmid()) {
                    this.bitField0_ |= 32;
                    this.tmid_ = logsCommand.tmid_;
                    onChanged();
                }
                if (logsCommand.hasMid()) {
                    this.bitField0_ |= 64;
                    this.mid_ = logsCommand.mid_;
                    onChanged();
                }
                if (logsCommand.hasChecksum()) {
                    this.bitField0_ |= 128;
                    this.checksum_ = logsCommand.checksum_;
                    onChanged();
                }
                if (logsCommand.hasStored()) {
                    setStored(logsCommand.getStored());
                }
                if (logsCommand.hasDirection()) {
                    setDirection(logsCommand.getDirection());
                }
                if (logsCommand.hasTIncluded()) {
                    setTIncluded(logsCommand.getTIncluded());
                }
                if (logsCommand.hasTtIncluded()) {
                    setTtIncluded(logsCommand.getTtIncluded());
                }
                if (logsCommand.hasLctype()) {
                    setLctype(logsCommand.getLctype());
                }
                if (this.logsBuilder_ == null) {
                    if (!logsCommand.logs_.isEmpty()) {
                        if (this.logs_.isEmpty()) {
                            this.logs_ = logsCommand.logs_;
                            this.bitField0_ &= -8193;
                        } else {
                            ensureLogsIsMutable();
                            this.logs_.addAll(logsCommand.logs_);
                        }
                        onChanged();
                    }
                } else if (!logsCommand.logs_.isEmpty()) {
                    if (this.logsBuilder_.isEmpty()) {
                        this.logsBuilder_.dispose();
                        RepeatedFieldBuilderV3<LogItem, Builder, LogItemOrBuilder> repeatedFieldBuilderV3 = null;
                        this.logsBuilder_ = null;
                        this.logs_ = logsCommand.logs_;
                        this.bitField0_ &= -8193;
                        if (LogsCommand.alwaysUseFieldBuilders) {
                            repeatedFieldBuilderV3 = getLogsFieldBuilder();
                        }
                        this.logsBuilder_ = repeatedFieldBuilderV3;
                    } else {
                        this.logsBuilder_.addAllMessages(logsCommand.logs_);
                    }
                }
                mergeUnknownFields(logsCommand.unknownFields);
                onChanged();
                return this;
            }

            /* JADX WARNING: Removed duplicated region for block: B:16:0x0021  */
            /* Code decompiled incorrectly, please refer to instructions dump. */
            public com.avos.avoscloud.Messages.LogsCommand.Builder mergeFrom(com.google.protobuf.CodedInputStream r3, com.google.protobuf.ExtensionRegistryLite r4) throws java.io.IOException {
                /*
                    r2 = this;
                    r0 = 0
                    com.google.protobuf.Parser<com.avos.avoscloud.Messages$LogsCommand> r1 = com.avos.avoscloud.Messages.LogsCommand.PARSER     // Catch:{ InvalidProtocolBufferException -> 0x0011 }
                    java.lang.Object r3 = r1.parsePartialFrom(r3, r4)     // Catch:{ InvalidProtocolBufferException -> 0x0011 }
                    com.avos.avoscloud.Messages$LogsCommand r3 = (com.avos.avoscloud.Messages.LogsCommand) r3     // Catch:{ InvalidProtocolBufferException -> 0x0011 }
                    if (r3 == 0) goto L_0x000e
                    r2.mergeFrom(r3)
                L_0x000e:
                    return r2
                L_0x000f:
                    r3 = move-exception
                    goto L_0x001f
                L_0x0011:
                    r3 = move-exception
                    com.google.protobuf.MessageLite r4 = r3.getUnfinishedMessage()     // Catch:{ all -> 0x000f }
                    com.avos.avoscloud.Messages$LogsCommand r4 = (com.avos.avoscloud.Messages.LogsCommand) r4     // Catch:{ all -> 0x000f }
                    java.io.IOException r3 = r3.unwrapIOException()     // Catch:{ all -> 0x001d }
                    throw r3     // Catch:{ all -> 0x001d }
                L_0x001d:
                    r3 = move-exception
                    r0 = r4
                L_0x001f:
                    if (r0 == 0) goto L_0x0024
                    r2.mergeFrom(r0)
                L_0x0024:
                    throw r3
                */
                throw new UnsupportedOperationException("Method not decompiled: com.avos.avoscloud.Messages.LogsCommand.Builder.mergeFrom(com.google.protobuf.CodedInputStream, com.google.protobuf.ExtensionRegistryLite):com.avos.avoscloud.Messages$LogsCommand$Builder");
            }

            public boolean hasCid() {
                return (this.bitField0_ & 1) == 1;
            }

            public String getCid() {
                Object obj = this.cid_;
                if (obj instanceof String) {
                    return (String) obj;
                }
                ByteString byteString = (ByteString) obj;
                String stringUtf8 = byteString.toStringUtf8();
                if (byteString.isValidUtf8()) {
                    this.cid_ = stringUtf8;
                }
                return stringUtf8;
            }

            public ByteString getCidBytes() {
                Object obj = this.cid_;
                if (!(obj instanceof String)) {
                    return (ByteString) obj;
                }
                ByteString copyFromUtf8 = ByteString.copyFromUtf8((String) obj);
                this.cid_ = copyFromUtf8;
                return copyFromUtf8;
            }

            public Builder setCid(String str) {
                if (str != null) {
                    this.bitField0_ |= 1;
                    this.cid_ = str;
                    onChanged();
                    return this;
                }
                throw new NullPointerException();
            }

            public Builder clearCid() {
                this.bitField0_ &= -2;
                this.cid_ = LogsCommand.getDefaultInstance().getCid();
                onChanged();
                return this;
            }

            public Builder setCidBytes(ByteString byteString) {
                if (byteString != null) {
                    this.bitField0_ |= 1;
                    this.cid_ = byteString;
                    onChanged();
                    return this;
                }
                throw new NullPointerException();
            }

            public boolean hasL() {
                return (this.bitField0_ & 2) == 2;
            }

            public int getL() {
                return this.l_;
            }

            public Builder setL(int i) {
                this.bitField0_ |= 2;
                this.l_ = i;
                onChanged();
                return this;
            }

            public Builder clearL() {
                this.bitField0_ &= -3;
                this.l_ = 0;
                onChanged();
                return this;
            }

            public boolean hasLimit() {
                return (this.bitField0_ & 4) == 4;
            }

            public int getLimit() {
                return this.limit_;
            }

            public Builder setLimit(int i) {
                this.bitField0_ |= 4;
                this.limit_ = i;
                onChanged();
                return this;
            }

            public Builder clearLimit() {
                this.bitField0_ &= -5;
                this.limit_ = 0;
                onChanged();
                return this;
            }

            public boolean hasT() {
                return (this.bitField0_ & 8) == 8;
            }

            public long getT() {
                return this.t_;
            }

            public Builder setT(long j) {
                this.bitField0_ |= 8;
                this.t_ = j;
                onChanged();
                return this;
            }

            public Builder clearT() {
                this.bitField0_ &= -9;
                this.t_ = 0;
                onChanged();
                return this;
            }

            public boolean hasTt() {
                return (this.bitField0_ & 16) == 16;
            }

            public long getTt() {
                return this.tt_;
            }

            public Builder setTt(long j) {
                this.bitField0_ |= 16;
                this.tt_ = j;
                onChanged();
                return this;
            }

            public Builder clearTt() {
                this.bitField0_ &= -17;
                this.tt_ = 0;
                onChanged();
                return this;
            }

            public boolean hasTmid() {
                return (this.bitField0_ & 32) == 32;
            }

            public String getTmid() {
                Object obj = this.tmid_;
                if (obj instanceof String) {
                    return (String) obj;
                }
                ByteString byteString = (ByteString) obj;
                String stringUtf8 = byteString.toStringUtf8();
                if (byteString.isValidUtf8()) {
                    this.tmid_ = stringUtf8;
                }
                return stringUtf8;
            }

            public ByteString getTmidBytes() {
                Object obj = this.tmid_;
                if (!(obj instanceof String)) {
                    return (ByteString) obj;
                }
                ByteString copyFromUtf8 = ByteString.copyFromUtf8((String) obj);
                this.tmid_ = copyFromUtf8;
                return copyFromUtf8;
            }

            public Builder setTmid(String str) {
                if (str != null) {
                    this.bitField0_ |= 32;
                    this.tmid_ = str;
                    onChanged();
                    return this;
                }
                throw new NullPointerException();
            }

            public Builder clearTmid() {
                this.bitField0_ &= -33;
                this.tmid_ = LogsCommand.getDefaultInstance().getTmid();
                onChanged();
                return this;
            }

            public Builder setTmidBytes(ByteString byteString) {
                if (byteString != null) {
                    this.bitField0_ |= 32;
                    this.tmid_ = byteString;
                    onChanged();
                    return this;
                }
                throw new NullPointerException();
            }

            public boolean hasMid() {
                return (this.bitField0_ & 64) == 64;
            }

            public String getMid() {
                Object obj = this.mid_;
                if (obj instanceof String) {
                    return (String) obj;
                }
                ByteString byteString = (ByteString) obj;
                String stringUtf8 = byteString.toStringUtf8();
                if (byteString.isValidUtf8()) {
                    this.mid_ = stringUtf8;
                }
                return stringUtf8;
            }

            public ByteString getMidBytes() {
                Object obj = this.mid_;
                if (!(obj instanceof String)) {
                    return (ByteString) obj;
                }
                ByteString copyFromUtf8 = ByteString.copyFromUtf8((String) obj);
                this.mid_ = copyFromUtf8;
                return copyFromUtf8;
            }

            public Builder setMid(String str) {
                if (str != null) {
                    this.bitField0_ |= 64;
                    this.mid_ = str;
                    onChanged();
                    return this;
                }
                throw new NullPointerException();
            }

            public Builder clearMid() {
                this.bitField0_ &= -65;
                this.mid_ = LogsCommand.getDefaultInstance().getMid();
                onChanged();
                return this;
            }

            public Builder setMidBytes(ByteString byteString) {
                if (byteString != null) {
                    this.bitField0_ |= 64;
                    this.mid_ = byteString;
                    onChanged();
                    return this;
                }
                throw new NullPointerException();
            }

            public boolean hasChecksum() {
                return (this.bitField0_ & 128) == 128;
            }

            public String getChecksum() {
                Object obj = this.checksum_;
                if (obj instanceof String) {
                    return (String) obj;
                }
                ByteString byteString = (ByteString) obj;
                String stringUtf8 = byteString.toStringUtf8();
                if (byteString.isValidUtf8()) {
                    this.checksum_ = stringUtf8;
                }
                return stringUtf8;
            }

            public ByteString getChecksumBytes() {
                Object obj = this.checksum_;
                if (!(obj instanceof String)) {
                    return (ByteString) obj;
                }
                ByteString copyFromUtf8 = ByteString.copyFromUtf8((String) obj);
                this.checksum_ = copyFromUtf8;
                return copyFromUtf8;
            }

            public Builder setChecksum(String str) {
                if (str != null) {
                    this.bitField0_ |= 128;
                    this.checksum_ = str;
                    onChanged();
                    return this;
                }
                throw new NullPointerException();
            }

            public Builder clearChecksum() {
                this.bitField0_ &= -129;
                this.checksum_ = LogsCommand.getDefaultInstance().getChecksum();
                onChanged();
                return this;
            }

            public Builder setChecksumBytes(ByteString byteString) {
                if (byteString != null) {
                    this.bitField0_ |= 128;
                    this.checksum_ = byteString;
                    onChanged();
                    return this;
                }
                throw new NullPointerException();
            }

            public boolean hasStored() {
                return (this.bitField0_ & 256) == 256;
            }

            public boolean getStored() {
                return this.stored_;
            }

            public Builder setStored(boolean z) {
                this.bitField0_ |= 256;
                this.stored_ = z;
                onChanged();
                return this;
            }

            public Builder clearStored() {
                this.bitField0_ &= -257;
                this.stored_ = false;
                onChanged();
                return this;
            }

            public boolean hasDirection() {
                return (this.bitField0_ & 512) == 512;
            }

            public QueryDirection getDirection() {
                QueryDirection valueOf = QueryDirection.valueOf(this.direction_);
                return valueOf == null ? QueryDirection.OLD : valueOf;
            }

            public Builder setDirection(QueryDirection queryDirection) {
                if (queryDirection != null) {
                    this.bitField0_ |= 512;
                    this.direction_ = queryDirection.getNumber();
                    onChanged();
                    return this;
                }
                throw new NullPointerException();
            }

            public Builder clearDirection() {
                this.bitField0_ &= -513;
                this.direction_ = 1;
                onChanged();
                return this;
            }

            public boolean hasTIncluded() {
                return (this.bitField0_ & 1024) == 1024;
            }

            public boolean getTIncluded() {
                return this.tIncluded_;
            }

            public Builder setTIncluded(boolean z) {
                this.bitField0_ |= 1024;
                this.tIncluded_ = z;
                onChanged();
                return this;
            }

            public Builder clearTIncluded() {
                this.bitField0_ &= -1025;
                this.tIncluded_ = false;
                onChanged();
                return this;
            }

            public boolean hasTtIncluded() {
                return (this.bitField0_ & 2048) == 2048;
            }

            public boolean getTtIncluded() {
                return this.ttIncluded_;
            }

            public Builder setTtIncluded(boolean z) {
                this.bitField0_ |= 2048;
                this.ttIncluded_ = z;
                onChanged();
                return this;
            }

            public Builder clearTtIncluded() {
                this.bitField0_ &= -2049;
                this.ttIncluded_ = false;
                onChanged();
                return this;
            }

            public boolean hasLctype() {
                return (this.bitField0_ & 4096) == 4096;
            }

            public int getLctype() {
                return this.lctype_;
            }

            public Builder setLctype(int i) {
                this.bitField0_ |= 4096;
                this.lctype_ = i;
                onChanged();
                return this;
            }

            public Builder clearLctype() {
                this.bitField0_ &= -4097;
                this.lctype_ = 0;
                onChanged();
                return this;
            }

            private void ensureLogsIsMutable() {
                if ((this.bitField0_ & 8192) != 8192) {
                    this.logs_ = new ArrayList(this.logs_);
                    this.bitField0_ |= 8192;
                }
            }

            public List<LogItem> getLogsList() {
                RepeatedFieldBuilderV3<LogItem, Builder, LogItemOrBuilder> repeatedFieldBuilderV3 = this.logsBuilder_;
                if (repeatedFieldBuilderV3 == null) {
                    return Collections.unmodifiableList(this.logs_);
                }
                return repeatedFieldBuilderV3.getMessageList();
            }

            public int getLogsCount() {
                RepeatedFieldBuilderV3<LogItem, Builder, LogItemOrBuilder> repeatedFieldBuilderV3 = this.logsBuilder_;
                if (repeatedFieldBuilderV3 == null) {
                    return this.logs_.size();
                }
                return repeatedFieldBuilderV3.getCount();
            }

            public LogItem getLogs(int i) {
                RepeatedFieldBuilderV3<LogItem, Builder, LogItemOrBuilder> repeatedFieldBuilderV3 = this.logsBuilder_;
                if (repeatedFieldBuilderV3 == null) {
                    return (LogItem) this.logs_.get(i);
                }
                return (LogItem) repeatedFieldBuilderV3.getMessage(i);
            }

            public Builder setLogs(int i, LogItem logItem) {
                RepeatedFieldBuilderV3<LogItem, Builder, LogItemOrBuilder> repeatedFieldBuilderV3 = this.logsBuilder_;
                if (repeatedFieldBuilderV3 != null) {
                    repeatedFieldBuilderV3.setMessage(i, logItem);
                } else if (logItem != null) {
                    ensureLogsIsMutable();
                    this.logs_.set(i, logItem);
                    onChanged();
                } else {
                    throw new NullPointerException();
                }
                return this;
            }

            public Builder setLogs(int i, Builder builder) {
                RepeatedFieldBuilderV3<LogItem, Builder, LogItemOrBuilder> repeatedFieldBuilderV3 = this.logsBuilder_;
                if (repeatedFieldBuilderV3 == null) {
                    ensureLogsIsMutable();
                    this.logs_.set(i, builder.build());
                    onChanged();
                } else {
                    repeatedFieldBuilderV3.setMessage(i, builder.build());
                }
                return this;
            }

            public Builder addLogs(LogItem logItem) {
                RepeatedFieldBuilderV3<LogItem, Builder, LogItemOrBuilder> repeatedFieldBuilderV3 = this.logsBuilder_;
                if (repeatedFieldBuilderV3 != null) {
                    repeatedFieldBuilderV3.addMessage(logItem);
                } else if (logItem != null) {
                    ensureLogsIsMutable();
                    this.logs_.add(logItem);
                    onChanged();
                } else {
                    throw new NullPointerException();
                }
                return this;
            }

            public Builder addLogs(int i, LogItem logItem) {
                RepeatedFieldBuilderV3<LogItem, Builder, LogItemOrBuilder> repeatedFieldBuilderV3 = this.logsBuilder_;
                if (repeatedFieldBuilderV3 != null) {
                    repeatedFieldBuilderV3.addMessage(i, logItem);
                } else if (logItem != null) {
                    ensureLogsIsMutable();
                    this.logs_.add(i, logItem);
                    onChanged();
                } else {
                    throw new NullPointerException();
                }
                return this;
            }

            public Builder addLogs(Builder builder) {
                RepeatedFieldBuilderV3<LogItem, Builder, LogItemOrBuilder> repeatedFieldBuilderV3 = this.logsBuilder_;
                if (repeatedFieldBuilderV3 == null) {
                    ensureLogsIsMutable();
                    this.logs_.add(builder.build());
                    onChanged();
                } else {
                    repeatedFieldBuilderV3.addMessage(builder.build());
                }
                return this;
            }

            public Builder addLogs(int i, Builder builder) {
                RepeatedFieldBuilderV3<LogItem, Builder, LogItemOrBuilder> repeatedFieldBuilderV3 = this.logsBuilder_;
                if (repeatedFieldBuilderV3 == null) {
                    ensureLogsIsMutable();
                    this.logs_.add(i, builder.build());
                    onChanged();
                } else {
                    repeatedFieldBuilderV3.addMessage(i, builder.build());
                }
                return this;
            }

            public Builder addAllLogs(Iterable<? extends LogItem> iterable) {
                RepeatedFieldBuilderV3<LogItem, Builder, LogItemOrBuilder> repeatedFieldBuilderV3 = this.logsBuilder_;
                if (repeatedFieldBuilderV3 == null) {
                    ensureLogsIsMutable();
                    com.google.protobuf.AbstractMessageLite.Builder.addAll((Iterable) iterable, (List) this.logs_);
                    onChanged();
                } else {
                    repeatedFieldBuilderV3.addAllMessages(iterable);
                }
                return this;
            }

            public Builder clearLogs() {
                RepeatedFieldBuilderV3<LogItem, Builder, LogItemOrBuilder> repeatedFieldBuilderV3 = this.logsBuilder_;
                if (repeatedFieldBuilderV3 == null) {
                    this.logs_ = Collections.emptyList();
                    this.bitField0_ &= -8193;
                    onChanged();
                } else {
                    repeatedFieldBuilderV3.clear();
                }
                return this;
            }

            public Builder removeLogs(int i) {
                RepeatedFieldBuilderV3<LogItem, Builder, LogItemOrBuilder> repeatedFieldBuilderV3 = this.logsBuilder_;
                if (repeatedFieldBuilderV3 == null) {
                    ensureLogsIsMutable();
                    this.logs_.remove(i);
                    onChanged();
                } else {
                    repeatedFieldBuilderV3.remove(i);
                }
                return this;
            }

            public Builder getLogsBuilder(int i) {
                return (Builder) getLogsFieldBuilder().getBuilder(i);
            }

            public LogItemOrBuilder getLogsOrBuilder(int i) {
                RepeatedFieldBuilderV3<LogItem, Builder, LogItemOrBuilder> repeatedFieldBuilderV3 = this.logsBuilder_;
                if (repeatedFieldBuilderV3 == null) {
                    return (LogItemOrBuilder) this.logs_.get(i);
                }
                return (LogItemOrBuilder) repeatedFieldBuilderV3.getMessageOrBuilder(i);
            }

            public List<? extends LogItemOrBuilder> getLogsOrBuilderList() {
                RepeatedFieldBuilderV3<LogItem, Builder, LogItemOrBuilder> repeatedFieldBuilderV3 = this.logsBuilder_;
                if (repeatedFieldBuilderV3 != null) {
                    return repeatedFieldBuilderV3.getMessageOrBuilderList();
                }
                return Collections.unmodifiableList(this.logs_);
            }

            public Builder addLogsBuilder() {
                return (Builder) getLogsFieldBuilder().addBuilder(LogItem.getDefaultInstance());
            }

            public Builder addLogsBuilder(int i) {
                return (Builder) getLogsFieldBuilder().addBuilder(i, LogItem.getDefaultInstance());
            }

            public List<Builder> getLogsBuilderList() {
                return getLogsFieldBuilder().getBuilderList();
            }

            private RepeatedFieldBuilderV3<LogItem, Builder, LogItemOrBuilder> getLogsFieldBuilder() {
                if (this.logsBuilder_ == null) {
                    this.logsBuilder_ = new RepeatedFieldBuilderV3<>(this.logs_, (this.bitField0_ & 8192) == 8192, getParentForChildren(), isClean());
                    this.logs_ = null;
                }
                return this.logsBuilder_;
            }

            public final Builder setUnknownFields(UnknownFieldSet unknownFieldSet) {
                return (Builder) super.setUnknownFields(unknownFieldSet);
            }

            public final Builder mergeUnknownFields(UnknownFieldSet unknownFieldSet) {
                return (Builder) super.mergeUnknownFields(unknownFieldSet);
            }
        }

        public enum QueryDirection implements ProtocolMessageEnum {
            OLD(1),
            NEW(2);
            
            public static final int NEW_VALUE = 2;
            public static final int OLD_VALUE = 1;
            private static final QueryDirection[] VALUES = null;
            private static final EnumLiteMap<QueryDirection> internalValueMap = null;
            private final int value;

            static {
                internalValueMap = new EnumLiteMap<QueryDirection>() {
                    public QueryDirection findValueByNumber(int i) {
                        return QueryDirection.forNumber(i);
                    }
                };
                VALUES = values();
            }

            public final int getNumber() {
                return this.value;
            }

            @Deprecated
            public static QueryDirection valueOf(int i) {
                return forNumber(i);
            }

            public static QueryDirection forNumber(int i) {
                if (i == 1) {
                    return OLD;
                }
                if (i != 2) {
                    return null;
                }
                return NEW;
            }

            public static EnumLiteMap<QueryDirection> internalGetValueMap() {
                return internalValueMap;
            }

            public final EnumValueDescriptor getValueDescriptor() {
                return (EnumValueDescriptor) getDescriptor().getValues().get(ordinal());
            }

            public final EnumDescriptor getDescriptorForType() {
                return getDescriptor();
            }

            public static final EnumDescriptor getDescriptor() {
                return (EnumDescriptor) LogsCommand.getDescriptor().getEnumTypes().get(0);
            }

            public static QueryDirection valueOf(EnumValueDescriptor enumValueDescriptor) {
                if (enumValueDescriptor.getType() == getDescriptor()) {
                    return VALUES[enumValueDescriptor.getIndex()];
                }
                throw new IllegalArgumentException("EnumValueDescriptor is not for this type.");
            }

            private QueryDirection(int i) {
                this.value = i;
            }
        }

        private LogsCommand(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
            super(builder);
            this.memoizedIsInitialized = -1;
        }

        private LogsCommand() {
            this.memoizedIsInitialized = -1;
            String str = "";
            this.cid_ = str;
            this.l_ = 0;
            this.limit_ = 0;
            this.t_ = 0;
            this.tt_ = 0;
            this.tmid_ = str;
            this.mid_ = str;
            this.checksum_ = str;
            this.stored_ = false;
            this.direction_ = 1;
            this.tIncluded_ = false;
            this.ttIncluded_ = false;
            this.lctype_ = 0;
            this.logs_ = Collections.emptyList();
        }

        public final UnknownFieldSet getUnknownFields() {
            return this.unknownFields;
        }

        private LogsCommand(CodedInputStream codedInputStream, ExtensionRegistryLite extensionRegistryLite) throws InvalidProtocolBufferException {
            this();
            com.google.protobuf.UnknownFieldSet.Builder newBuilder = UnknownFieldSet.newBuilder();
            boolean z = false;
            boolean z2 = false;
            while (!z) {
                try {
                    int readTag = codedInputStream.readTag();
                    switch (readTag) {
                        case 0:
                            z = true;
                            break;
                        case 10:
                            ByteString readBytes = codedInputStream.readBytes();
                            this.bitField0_ = 1 | this.bitField0_;
                            this.cid_ = readBytes;
                            break;
                        case 16:
                            this.bitField0_ |= 2;
                            this.l_ = codedInputStream.readInt32();
                            break;
                        case 24:
                            this.bitField0_ |= 4;
                            this.limit_ = codedInputStream.readInt32();
                            break;
                        case 32:
                            this.bitField0_ |= 8;
                            this.t_ = codedInputStream.readInt64();
                            break;
                        case 40:
                            this.bitField0_ |= 16;
                            this.tt_ = codedInputStream.readInt64();
                            break;
                        case 50:
                            ByteString readBytes2 = codedInputStream.readBytes();
                            this.bitField0_ |= 32;
                            this.tmid_ = readBytes2;
                            break;
                        case 58:
                            ByteString readBytes3 = codedInputStream.readBytes();
                            this.bitField0_ |= 64;
                            this.mid_ = readBytes3;
                            break;
                        case 66:
                            ByteString readBytes4 = codedInputStream.readBytes();
                            this.bitField0_ |= 128;
                            this.checksum_ = readBytes4;
                            break;
                        case 72:
                            this.bitField0_ |= 256;
                            this.stored_ = codedInputStream.readBool();
                            break;
                        case 80:
                            int readEnum = codedInputStream.readEnum();
                            if (QueryDirection.valueOf(readEnum) != null) {
                                this.bitField0_ |= 512;
                                this.direction_ = readEnum;
                                break;
                            } else {
                                newBuilder.mergeVarintField(10, readEnum);
                                break;
                            }
                        case 88:
                            this.bitField0_ |= 1024;
                            this.tIncluded_ = codedInputStream.readBool();
                            break;
                        case 96:
                            this.bitField0_ |= 2048;
                            this.ttIncluded_ = codedInputStream.readBool();
                            break;
                        case 104:
                            this.bitField0_ |= 4096;
                            this.lctype_ = codedInputStream.readInt32();
                            break;
                        case 842:
                            if (!(z2 & true)) {
                                this.logs_ = new ArrayList();
                                z2 |= true;
                            }
                            this.logs_.add(codedInputStream.readMessage(LogItem.PARSER, extensionRegistryLite));
                            break;
                        default:
                            if (parseUnknownField(codedInputStream, newBuilder, extensionRegistryLite, readTag)) {
                                break;
                            }
                            z = true;
                            break;
                    }
                } catch (InvalidProtocolBufferException e) {
                    throw e.setUnfinishedMessage(this);
                } catch (IOException e2) {
                    throw new InvalidProtocolBufferException(e2).setUnfinishedMessage(this);
                } catch (Throwable th) {
                    if (z2 & true) {
                        this.logs_ = Collections.unmodifiableList(this.logs_);
                    }
                    this.unknownFields = newBuilder.build();
                    makeExtensionsImmutable();
                    throw th;
                }
            }
            if (z2 & true) {
                this.logs_ = Collections.unmodifiableList(this.logs_);
            }
            this.unknownFields = newBuilder.build();
            makeExtensionsImmutable();
        }

        public static final Descriptor getDescriptor() {
            return Messages.internal_static_com_avos_avoscloud_LogsCommand_descriptor;
        }

        /* access modifiers changed from: protected */
        public FieldAccessorTable internalGetFieldAccessorTable() {
            return Messages.internal_static_com_avos_avoscloud_LogsCommand_fieldAccessorTable.ensureFieldAccessorsInitialized(LogsCommand.class, Builder.class);
        }

        public boolean hasCid() {
            return (this.bitField0_ & 1) == 1;
        }

        public String getCid() {
            Object obj = this.cid_;
            if (obj instanceof String) {
                return (String) obj;
            }
            ByteString byteString = (ByteString) obj;
            String stringUtf8 = byteString.toStringUtf8();
            if (byteString.isValidUtf8()) {
                this.cid_ = stringUtf8;
            }
            return stringUtf8;
        }

        public ByteString getCidBytes() {
            Object obj = this.cid_;
            if (!(obj instanceof String)) {
                return (ByteString) obj;
            }
            ByteString copyFromUtf8 = ByteString.copyFromUtf8((String) obj);
            this.cid_ = copyFromUtf8;
            return copyFromUtf8;
        }

        public boolean hasL() {
            return (this.bitField0_ & 2) == 2;
        }

        public int getL() {
            return this.l_;
        }

        public boolean hasLimit() {
            return (this.bitField0_ & 4) == 4;
        }

        public int getLimit() {
            return this.limit_;
        }

        public boolean hasT() {
            return (this.bitField0_ & 8) == 8;
        }

        public long getT() {
            return this.t_;
        }

        public boolean hasTt() {
            return (this.bitField0_ & 16) == 16;
        }

        public long getTt() {
            return this.tt_;
        }

        public boolean hasTmid() {
            return (this.bitField0_ & 32) == 32;
        }

        public String getTmid() {
            Object obj = this.tmid_;
            if (obj instanceof String) {
                return (String) obj;
            }
            ByteString byteString = (ByteString) obj;
            String stringUtf8 = byteString.toStringUtf8();
            if (byteString.isValidUtf8()) {
                this.tmid_ = stringUtf8;
            }
            return stringUtf8;
        }

        public ByteString getTmidBytes() {
            Object obj = this.tmid_;
            if (!(obj instanceof String)) {
                return (ByteString) obj;
            }
            ByteString copyFromUtf8 = ByteString.copyFromUtf8((String) obj);
            this.tmid_ = copyFromUtf8;
            return copyFromUtf8;
        }

        public boolean hasMid() {
            return (this.bitField0_ & 64) == 64;
        }

        public String getMid() {
            Object obj = this.mid_;
            if (obj instanceof String) {
                return (String) obj;
            }
            ByteString byteString = (ByteString) obj;
            String stringUtf8 = byteString.toStringUtf8();
            if (byteString.isValidUtf8()) {
                this.mid_ = stringUtf8;
            }
            return stringUtf8;
        }

        public ByteString getMidBytes() {
            Object obj = this.mid_;
            if (!(obj instanceof String)) {
                return (ByteString) obj;
            }
            ByteString copyFromUtf8 = ByteString.copyFromUtf8((String) obj);
            this.mid_ = copyFromUtf8;
            return copyFromUtf8;
        }

        public boolean hasChecksum() {
            return (this.bitField0_ & 128) == 128;
        }

        public String getChecksum() {
            Object obj = this.checksum_;
            if (obj instanceof String) {
                return (String) obj;
            }
            ByteString byteString = (ByteString) obj;
            String stringUtf8 = byteString.toStringUtf8();
            if (byteString.isValidUtf8()) {
                this.checksum_ = stringUtf8;
            }
            return stringUtf8;
        }

        public ByteString getChecksumBytes() {
            Object obj = this.checksum_;
            if (!(obj instanceof String)) {
                return (ByteString) obj;
            }
            ByteString copyFromUtf8 = ByteString.copyFromUtf8((String) obj);
            this.checksum_ = copyFromUtf8;
            return copyFromUtf8;
        }

        public boolean hasStored() {
            return (this.bitField0_ & 256) == 256;
        }

        public boolean getStored() {
            return this.stored_;
        }

        public boolean hasDirection() {
            return (this.bitField0_ & 512) == 512;
        }

        public QueryDirection getDirection() {
            QueryDirection valueOf = QueryDirection.valueOf(this.direction_);
            return valueOf == null ? QueryDirection.OLD : valueOf;
        }

        public boolean hasTIncluded() {
            return (this.bitField0_ & 1024) == 1024;
        }

        public boolean getTIncluded() {
            return this.tIncluded_;
        }

        public boolean hasTtIncluded() {
            return (this.bitField0_ & 2048) == 2048;
        }

        public boolean getTtIncluded() {
            return this.ttIncluded_;
        }

        public boolean hasLctype() {
            return (this.bitField0_ & 4096) == 4096;
        }

        public int getLctype() {
            return this.lctype_;
        }

        public List<LogItem> getLogsList() {
            return this.logs_;
        }

        public List<? extends LogItemOrBuilder> getLogsOrBuilderList() {
            return this.logs_;
        }

        public int getLogsCount() {
            return this.logs_.size();
        }

        public LogItem getLogs(int i) {
            return (LogItem) this.logs_.get(i);
        }

        public LogItemOrBuilder getLogsOrBuilder(int i) {
            return (LogItemOrBuilder) this.logs_.get(i);
        }

        public final boolean isInitialized() {
            byte b = this.memoizedIsInitialized;
            if (b == 1) {
                return true;
            }
            if (b == 0) {
                return false;
            }
            this.memoizedIsInitialized = 1;
            return true;
        }

        public void writeTo(CodedOutputStream codedOutputStream) throws IOException {
            if ((this.bitField0_ & 1) == 1) {
                GeneratedMessageV3.writeString(codedOutputStream, 1, this.cid_);
            }
            if ((this.bitField0_ & 2) == 2) {
                codedOutputStream.writeInt32(2, this.l_);
            }
            if ((this.bitField0_ & 4) == 4) {
                codedOutputStream.writeInt32(3, this.limit_);
            }
            if ((this.bitField0_ & 8) == 8) {
                codedOutputStream.writeInt64(4, this.t_);
            }
            if ((this.bitField0_ & 16) == 16) {
                codedOutputStream.writeInt64(5, this.tt_);
            }
            if ((this.bitField0_ & 32) == 32) {
                GeneratedMessageV3.writeString(codedOutputStream, 6, this.tmid_);
            }
            if ((this.bitField0_ & 64) == 64) {
                GeneratedMessageV3.writeString(codedOutputStream, 7, this.mid_);
            }
            if ((this.bitField0_ & 128) == 128) {
                GeneratedMessageV3.writeString(codedOutputStream, 8, this.checksum_);
            }
            if ((this.bitField0_ & 256) == 256) {
                codedOutputStream.writeBool(9, this.stored_);
            }
            if ((this.bitField0_ & 512) == 512) {
                codedOutputStream.writeEnum(10, this.direction_);
            }
            if ((this.bitField0_ & 1024) == 1024) {
                codedOutputStream.writeBool(11, this.tIncluded_);
            }
            if ((this.bitField0_ & 2048) == 2048) {
                codedOutputStream.writeBool(12, this.ttIncluded_);
            }
            if ((this.bitField0_ & 4096) == 4096) {
                codedOutputStream.writeInt32(13, this.lctype_);
            }
            for (int i = 0; i < this.logs_.size(); i++) {
                codedOutputStream.writeMessage(105, (MessageLite) this.logs_.get(i));
            }
            this.unknownFields.writeTo(codedOutputStream);
        }

        public int getSerializedSize() {
            int i = this.memoizedSize;
            if (i != -1) {
                return i;
            }
            int computeStringSize = (this.bitField0_ & 1) == 1 ? GeneratedMessageV3.computeStringSize(1, this.cid_) + 0 : 0;
            if ((this.bitField0_ & 2) == 2) {
                computeStringSize += CodedOutputStream.computeInt32Size(2, this.l_);
            }
            if ((this.bitField0_ & 4) == 4) {
                computeStringSize += CodedOutputStream.computeInt32Size(3, this.limit_);
            }
            if ((this.bitField0_ & 8) == 8) {
                computeStringSize += CodedOutputStream.computeInt64Size(4, this.t_);
            }
            if ((this.bitField0_ & 16) == 16) {
                computeStringSize += CodedOutputStream.computeInt64Size(5, this.tt_);
            }
            if ((this.bitField0_ & 32) == 32) {
                computeStringSize += GeneratedMessageV3.computeStringSize(6, this.tmid_);
            }
            if ((this.bitField0_ & 64) == 64) {
                computeStringSize += GeneratedMessageV3.computeStringSize(7, this.mid_);
            }
            if ((this.bitField0_ & 128) == 128) {
                computeStringSize += GeneratedMessageV3.computeStringSize(8, this.checksum_);
            }
            if ((this.bitField0_ & 256) == 256) {
                computeStringSize += CodedOutputStream.computeBoolSize(9, this.stored_);
            }
            if ((this.bitField0_ & 512) == 512) {
                computeStringSize += CodedOutputStream.computeEnumSize(10, this.direction_);
            }
            if ((this.bitField0_ & 1024) == 1024) {
                computeStringSize += CodedOutputStream.computeBoolSize(11, this.tIncluded_);
            }
            if ((this.bitField0_ & 2048) == 2048) {
                computeStringSize += CodedOutputStream.computeBoolSize(12, this.ttIncluded_);
            }
            if ((this.bitField0_ & 4096) == 4096) {
                computeStringSize += CodedOutputStream.computeInt32Size(13, this.lctype_);
            }
            for (int i2 = 0; i2 < this.logs_.size(); i2++) {
                computeStringSize += CodedOutputStream.computeMessageSize(105, (MessageLite) this.logs_.get(i2));
            }
            int serializedSize = computeStringSize + this.unknownFields.getSerializedSize();
            this.memoizedSize = serializedSize;
            return serializedSize;
        }

        public boolean equals(Object obj) {
            boolean z = true;
            if (obj == this) {
                return true;
            }
            if (!(obj instanceof LogsCommand)) {
                return super.equals(obj);
            }
            LogsCommand logsCommand = (LogsCommand) obj;
            boolean z2 = hasCid() == logsCommand.hasCid();
            if (hasCid()) {
                z2 = z2 && getCid().equals(logsCommand.getCid());
            }
            boolean z3 = z2 && hasL() == logsCommand.hasL();
            if (hasL()) {
                z3 = z3 && getL() == logsCommand.getL();
            }
            boolean z4 = z3 && hasLimit() == logsCommand.hasLimit();
            if (hasLimit()) {
                z4 = z4 && getLimit() == logsCommand.getLimit();
            }
            boolean z5 = z4 && hasT() == logsCommand.hasT();
            if (hasT()) {
                z5 = z5 && getT() == logsCommand.getT();
            }
            boolean z6 = z5 && hasTt() == logsCommand.hasTt();
            if (hasTt()) {
                z6 = z6 && getTt() == logsCommand.getTt();
            }
            boolean z7 = z6 && hasTmid() == logsCommand.hasTmid();
            if (hasTmid()) {
                z7 = z7 && getTmid().equals(logsCommand.getTmid());
            }
            boolean z8 = z7 && hasMid() == logsCommand.hasMid();
            if (hasMid()) {
                z8 = z8 && getMid().equals(logsCommand.getMid());
            }
            boolean z9 = z8 && hasChecksum() == logsCommand.hasChecksum();
            if (hasChecksum()) {
                z9 = z9 && getChecksum().equals(logsCommand.getChecksum());
            }
            boolean z10 = z9 && hasStored() == logsCommand.hasStored();
            if (hasStored()) {
                z10 = z10 && getStored() == logsCommand.getStored();
            }
            boolean z11 = z10 && hasDirection() == logsCommand.hasDirection();
            if (hasDirection()) {
                z11 = z11 && this.direction_ == logsCommand.direction_;
            }
            boolean z12 = z11 && hasTIncluded() == logsCommand.hasTIncluded();
            if (hasTIncluded()) {
                z12 = z12 && getTIncluded() == logsCommand.getTIncluded();
            }
            boolean z13 = z12 && hasTtIncluded() == logsCommand.hasTtIncluded();
            if (hasTtIncluded()) {
                z13 = z13 && getTtIncluded() == logsCommand.getTtIncluded();
            }
            boolean z14 = z13 && hasLctype() == logsCommand.hasLctype();
            if (hasLctype()) {
                z14 = z14 && getLctype() == logsCommand.getLctype();
            }
            if (!(z14 && getLogsList().equals(logsCommand.getLogsList())) || !this.unknownFields.equals(logsCommand.unknownFields)) {
                z = false;
            }
            return z;
        }

        public int hashCode() {
            if (this.memoizedHashCode != 0) {
                return this.memoizedHashCode;
            }
            int hashCode = 779 + getDescriptor().hashCode();
            if (hasCid()) {
                hashCode = (((hashCode * 37) + 1) * 53) + getCid().hashCode();
            }
            if (hasL()) {
                hashCode = (((hashCode * 37) + 2) * 53) + getL();
            }
            if (hasLimit()) {
                hashCode = (((hashCode * 37) + 3) * 53) + getLimit();
            }
            if (hasT()) {
                hashCode = (((hashCode * 37) + 4) * 53) + Internal.hashLong(getT());
            }
            if (hasTt()) {
                hashCode = (((hashCode * 37) + 5) * 53) + Internal.hashLong(getTt());
            }
            if (hasTmid()) {
                hashCode = (((hashCode * 37) + 6) * 53) + getTmid().hashCode();
            }
            if (hasMid()) {
                hashCode = (((hashCode * 37) + 7) * 53) + getMid().hashCode();
            }
            if (hasChecksum()) {
                hashCode = (((hashCode * 37) + 8) * 53) + getChecksum().hashCode();
            }
            if (hasStored()) {
                hashCode = (((hashCode * 37) + 9) * 53) + Internal.hashBoolean(getStored());
            }
            if (hasDirection()) {
                hashCode = (((hashCode * 37) + 10) * 53) + this.direction_;
            }
            if (hasTIncluded()) {
                hashCode = (((hashCode * 37) + 11) * 53) + Internal.hashBoolean(getTIncluded());
            }
            if (hasTtIncluded()) {
                hashCode = (((hashCode * 37) + 12) * 53) + Internal.hashBoolean(getTtIncluded());
            }
            if (hasLctype()) {
                hashCode = (((hashCode * 37) + 13) * 53) + getLctype();
            }
            if (getLogsCount() > 0) {
                hashCode = (((hashCode * 37) + 105) * 53) + getLogsList().hashCode();
            }
            int hashCode2 = (hashCode * 29) + this.unknownFields.hashCode();
            this.memoizedHashCode = hashCode2;
            return hashCode2;
        }

        public static LogsCommand parseFrom(ByteBuffer byteBuffer) throws InvalidProtocolBufferException {
            return (LogsCommand) PARSER.parseFrom(byteBuffer);
        }

        public static LogsCommand parseFrom(ByteBuffer byteBuffer, ExtensionRegistryLite extensionRegistryLite) throws InvalidProtocolBufferException {
            return (LogsCommand) PARSER.parseFrom(byteBuffer, extensionRegistryLite);
        }

        public static LogsCommand parseFrom(ByteString byteString) throws InvalidProtocolBufferException {
            return (LogsCommand) PARSER.parseFrom(byteString);
        }

        public static LogsCommand parseFrom(ByteString byteString, ExtensionRegistryLite extensionRegistryLite) throws InvalidProtocolBufferException {
            return (LogsCommand) PARSER.parseFrom(byteString, extensionRegistryLite);
        }

        public static LogsCommand parseFrom(byte[] bArr) throws InvalidProtocolBufferException {
            return (LogsCommand) PARSER.parseFrom(bArr);
        }

        public static LogsCommand parseFrom(byte[] bArr, ExtensionRegistryLite extensionRegistryLite) throws InvalidProtocolBufferException {
            return (LogsCommand) PARSER.parseFrom(bArr, extensionRegistryLite);
        }

        public static LogsCommand parseFrom(InputStream inputStream) throws IOException {
            return (LogsCommand) GeneratedMessageV3.parseWithIOException(PARSER, inputStream);
        }

        public static LogsCommand parseFrom(InputStream inputStream, ExtensionRegistryLite extensionRegistryLite) throws IOException {
            return (LogsCommand) GeneratedMessageV3.parseWithIOException(PARSER, inputStream, extensionRegistryLite);
        }

        public static LogsCommand parseDelimitedFrom(InputStream inputStream) throws IOException {
            return (LogsCommand) GeneratedMessageV3.parseDelimitedWithIOException(PARSER, inputStream);
        }

        public static LogsCommand parseDelimitedFrom(InputStream inputStream, ExtensionRegistryLite extensionRegistryLite) throws IOException {
            return (LogsCommand) GeneratedMessageV3.parseDelimitedWithIOException(PARSER, inputStream, extensionRegistryLite);
        }

        public static LogsCommand parseFrom(CodedInputStream codedInputStream) throws IOException {
            return (LogsCommand) GeneratedMessageV3.parseWithIOException(PARSER, codedInputStream);
        }

        public static LogsCommand parseFrom(CodedInputStream codedInputStream, ExtensionRegistryLite extensionRegistryLite) throws IOException {
            return (LogsCommand) GeneratedMessageV3.parseWithIOException(PARSER, codedInputStream, extensionRegistryLite);
        }

        public Builder newBuilderForType() {
            return newBuilder();
        }

        public static Builder newBuilder() {
            return DEFAULT_INSTANCE.toBuilder();
        }

        public static Builder newBuilder(LogsCommand logsCommand) {
            return DEFAULT_INSTANCE.toBuilder().mergeFrom(logsCommand);
        }

        public Builder toBuilder() {
            if (this == DEFAULT_INSTANCE) {
                return new Builder();
            }
            return new Builder().mergeFrom(this);
        }

        /* access modifiers changed from: protected */
        public Builder newBuilderForType(BuilderParent builderParent) {
            return new Builder(builderParent);
        }

        public static LogsCommand getDefaultInstance() {
            return DEFAULT_INSTANCE;
        }

        public static Parser<LogsCommand> parser() {
            return PARSER;
        }

        public Parser<LogsCommand> getParserForType() {
            return PARSER;
        }

        public LogsCommand getDefaultInstanceForType() {
            return DEFAULT_INSTANCE;
        }
    }

    public interface LogsCommandOrBuilder extends MessageOrBuilder {
        String getChecksum();

        ByteString getChecksumBytes();

        String getCid();

        ByteString getCidBytes();

        QueryDirection getDirection();

        int getL();

        int getLctype();

        int getLimit();

        LogItem getLogs(int i);

        int getLogsCount();

        List<LogItem> getLogsList();

        LogItemOrBuilder getLogsOrBuilder(int i);

        List<? extends LogItemOrBuilder> getLogsOrBuilderList();

        String getMid();

        ByteString getMidBytes();

        boolean getStored();

        long getT();

        boolean getTIncluded();

        String getTmid();

        ByteString getTmidBytes();

        long getTt();

        boolean getTtIncluded();

        boolean hasChecksum();

        boolean hasCid();

        boolean hasDirection();

        boolean hasL();

        boolean hasLctype();

        boolean hasLimit();

        boolean hasMid();

        boolean hasStored();

        boolean hasT();

        boolean hasTIncluded();

        boolean hasTmid();

        boolean hasTt();

        boolean hasTtIncluded();
    }

    public static final class MaxReadTuple extends GeneratedMessageV3 implements MaxReadTupleOrBuilder {
        private static final MaxReadTuple DEFAULT_INSTANCE = new MaxReadTuple();
        public static final int MAXACKTIMESTAMP_FIELD_NUMBER = 2;
        public static final int MAXREADTIMESTAMP_FIELD_NUMBER = 3;
        @Deprecated
        public static final Parser<MaxReadTuple> PARSER = new AbstractParser<MaxReadTuple>() {
            public MaxReadTuple parsePartialFrom(CodedInputStream codedInputStream, ExtensionRegistryLite extensionRegistryLite) throws InvalidProtocolBufferException {
                return new MaxReadTuple(codedInputStream, extensionRegistryLite);
            }
        };
        public static final int PID_FIELD_NUMBER = 1;
        private static final long serialVersionUID = 0;
        /* access modifiers changed from: private */
        public int bitField0_;
        /* access modifiers changed from: private */
        public long maxAckTimestamp_;
        /* access modifiers changed from: private */
        public long maxReadTimestamp_;
        private byte memoizedIsInitialized;
        /* access modifiers changed from: private */
        public volatile Object pid_;

        public static final class Builder extends com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements MaxReadTupleOrBuilder {
            private int bitField0_;
            private long maxAckTimestamp_;
            private long maxReadTimestamp_;
            private Object pid_;

            public final boolean isInitialized() {
                return true;
            }

            public static final Descriptor getDescriptor() {
                return Messages.internal_static_com_avos_avoscloud_MaxReadTuple_descriptor;
            }

            /* access modifiers changed from: protected */
            public FieldAccessorTable internalGetFieldAccessorTable() {
                return Messages.internal_static_com_avos_avoscloud_MaxReadTuple_fieldAccessorTable.ensureFieldAccessorsInitialized(MaxReadTuple.class, Builder.class);
            }

            private Builder() {
                this.pid_ = "";
                maybeForceBuilderInitialization();
            }

            private Builder(BuilderParent builderParent) {
                super(builderParent);
                this.pid_ = "";
                maybeForceBuilderInitialization();
            }

            private void maybeForceBuilderInitialization() {
                MaxReadTuple.alwaysUseFieldBuilders;
            }

            public Builder clear() {
                super.clear();
                this.pid_ = "";
                this.bitField0_ &= -2;
                this.maxAckTimestamp_ = 0;
                this.bitField0_ &= -3;
                this.maxReadTimestamp_ = 0;
                this.bitField0_ &= -5;
                return this;
            }

            public Descriptor getDescriptorForType() {
                return Messages.internal_static_com_avos_avoscloud_MaxReadTuple_descriptor;
            }

            public MaxReadTuple getDefaultInstanceForType() {
                return MaxReadTuple.getDefaultInstance();
            }

            public MaxReadTuple build() {
                MaxReadTuple buildPartial = buildPartial();
                if (buildPartial.isInitialized()) {
                    return buildPartial;
                }
                throw newUninitializedMessageException(buildPartial);
            }

            public MaxReadTuple buildPartial() {
                MaxReadTuple maxReadTuple = new MaxReadTuple((com.google.protobuf.GeneratedMessageV3.Builder) this);
                int i = this.bitField0_;
                int i2 = 1;
                if ((i & 1) != 1) {
                    i2 = 0;
                }
                maxReadTuple.pid_ = this.pid_;
                if ((i & 2) == 2) {
                    i2 |= 2;
                }
                maxReadTuple.maxAckTimestamp_ = this.maxAckTimestamp_;
                if ((i & 4) == 4) {
                    i2 |= 4;
                }
                maxReadTuple.maxReadTimestamp_ = this.maxReadTimestamp_;
                maxReadTuple.bitField0_ = i2;
                onBuilt();
                return maxReadTuple;
            }

            public Builder clone() {
                return (Builder) super.clone();
            }

            public Builder setField(FieldDescriptor fieldDescriptor, Object obj) {
                return (Builder) super.setField(fieldDescriptor, obj);
            }

            public Builder clearField(FieldDescriptor fieldDescriptor) {
                return (Builder) super.clearField(fieldDescriptor);
            }

            public Builder clearOneof(OneofDescriptor oneofDescriptor) {
                return (Builder) super.clearOneof(oneofDescriptor);
            }

            public Builder setRepeatedField(FieldDescriptor fieldDescriptor, int i, Object obj) {
                return (Builder) super.setRepeatedField(fieldDescriptor, i, obj);
            }

            public Builder addRepeatedField(FieldDescriptor fieldDescriptor, Object obj) {
                return (Builder) super.addRepeatedField(fieldDescriptor, obj);
            }

            public Builder mergeFrom(Message message) {
                if (message instanceof MaxReadTuple) {
                    return mergeFrom((MaxReadTuple) message);
                }
                super.mergeFrom(message);
                return this;
            }

            public Builder mergeFrom(MaxReadTuple maxReadTuple) {
                if (maxReadTuple == MaxReadTuple.getDefaultInstance()) {
                    return this;
                }
                if (maxReadTuple.hasPid()) {
                    this.bitField0_ |= 1;
                    this.pid_ = maxReadTuple.pid_;
                    onChanged();
                }
                if (maxReadTuple.hasMaxAckTimestamp()) {
                    setMaxAckTimestamp(maxReadTuple.getMaxAckTimestamp());
                }
                if (maxReadTuple.hasMaxReadTimestamp()) {
                    setMaxReadTimestamp(maxReadTuple.getMaxReadTimestamp());
                }
                mergeUnknownFields(maxReadTuple.unknownFields);
                onChanged();
                return this;
            }

            /* JADX WARNING: Removed duplicated region for block: B:16:0x0021  */
            /* Code decompiled incorrectly, please refer to instructions dump. */
            public com.avos.avoscloud.Messages.MaxReadTuple.Builder mergeFrom(com.google.protobuf.CodedInputStream r3, com.google.protobuf.ExtensionRegistryLite r4) throws java.io.IOException {
                /*
                    r2 = this;
                    r0 = 0
                    com.google.protobuf.Parser<com.avos.avoscloud.Messages$MaxReadTuple> r1 = com.avos.avoscloud.Messages.MaxReadTuple.PARSER     // Catch:{ InvalidProtocolBufferException -> 0x0011 }
                    java.lang.Object r3 = r1.parsePartialFrom(r3, r4)     // Catch:{ InvalidProtocolBufferException -> 0x0011 }
                    com.avos.avoscloud.Messages$MaxReadTuple r3 = (com.avos.avoscloud.Messages.MaxReadTuple) r3     // Catch:{ InvalidProtocolBufferException -> 0x0011 }
                    if (r3 == 0) goto L_0x000e
                    r2.mergeFrom(r3)
                L_0x000e:
                    return r2
                L_0x000f:
                    r3 = move-exception
                    goto L_0x001f
                L_0x0011:
                    r3 = move-exception
                    com.google.protobuf.MessageLite r4 = r3.getUnfinishedMessage()     // Catch:{ all -> 0x000f }
                    com.avos.avoscloud.Messages$MaxReadTuple r4 = (com.avos.avoscloud.Messages.MaxReadTuple) r4     // Catch:{ all -> 0x000f }
                    java.io.IOException r3 = r3.unwrapIOException()     // Catch:{ all -> 0x001d }
                    throw r3     // Catch:{ all -> 0x001d }
                L_0x001d:
                    r3 = move-exception
                    r0 = r4
                L_0x001f:
                    if (r0 == 0) goto L_0x0024
                    r2.mergeFrom(r0)
                L_0x0024:
                    throw r3
                */
                throw new UnsupportedOperationException("Method not decompiled: com.avos.avoscloud.Messages.MaxReadTuple.Builder.mergeFrom(com.google.protobuf.CodedInputStream, com.google.protobuf.ExtensionRegistryLite):com.avos.avoscloud.Messages$MaxReadTuple$Builder");
            }

            public boolean hasPid() {
                return (this.bitField0_ & 1) == 1;
            }

            public String getPid() {
                Object obj = this.pid_;
                if (obj instanceof String) {
                    return (String) obj;
                }
                ByteString byteString = (ByteString) obj;
                String stringUtf8 = byteString.toStringUtf8();
                if (byteString.isValidUtf8()) {
                    this.pid_ = stringUtf8;
                }
                return stringUtf8;
            }

            public ByteString getPidBytes() {
                Object obj = this.pid_;
                if (!(obj instanceof String)) {
                    return (ByteString) obj;
                }
                ByteString copyFromUtf8 = ByteString.copyFromUtf8((String) obj);
                this.pid_ = copyFromUtf8;
                return copyFromUtf8;
            }

            public Builder setPid(String str) {
                if (str != null) {
                    this.bitField0_ |= 1;
                    this.pid_ = str;
                    onChanged();
                    return this;
                }
                throw new NullPointerException();
            }

            public Builder clearPid() {
                this.bitField0_ &= -2;
                this.pid_ = MaxReadTuple.getDefaultInstance().getPid();
                onChanged();
                return this;
            }

            public Builder setPidBytes(ByteString byteString) {
                if (byteString != null) {
                    this.bitField0_ |= 1;
                    this.pid_ = byteString;
                    onChanged();
                    return this;
                }
                throw new NullPointerException();
            }

            public boolean hasMaxAckTimestamp() {
                return (this.bitField0_ & 2) == 2;
            }

            public long getMaxAckTimestamp() {
                return this.maxAckTimestamp_;
            }

            public Builder setMaxAckTimestamp(long j) {
                this.bitField0_ |= 2;
                this.maxAckTimestamp_ = j;
                onChanged();
                return this;
            }

            public Builder clearMaxAckTimestamp() {
                this.bitField0_ &= -3;
                this.maxAckTimestamp_ = 0;
                onChanged();
                return this;
            }

            public boolean hasMaxReadTimestamp() {
                return (this.bitField0_ & 4) == 4;
            }

            public long getMaxReadTimestamp() {
                return this.maxReadTimestamp_;
            }

            public Builder setMaxReadTimestamp(long j) {
                this.bitField0_ |= 4;
                this.maxReadTimestamp_ = j;
                onChanged();
                return this;
            }

            public Builder clearMaxReadTimestamp() {
                this.bitField0_ &= -5;
                this.maxReadTimestamp_ = 0;
                onChanged();
                return this;
            }

            public final Builder setUnknownFields(UnknownFieldSet unknownFieldSet) {
                return (Builder) super.setUnknownFields(unknownFieldSet);
            }

            public final Builder mergeUnknownFields(UnknownFieldSet unknownFieldSet) {
                return (Builder) super.mergeUnknownFields(unknownFieldSet);
            }
        }

        private MaxReadTuple(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
            super(builder);
            this.memoizedIsInitialized = -1;
        }

        private MaxReadTuple() {
            this.memoizedIsInitialized = -1;
            this.pid_ = "";
            this.maxAckTimestamp_ = 0;
            this.maxReadTimestamp_ = 0;
        }

        public final UnknownFieldSet getUnknownFields() {
            return this.unknownFields;
        }

        private MaxReadTuple(CodedInputStream codedInputStream, ExtensionRegistryLite extensionRegistryLite) throws InvalidProtocolBufferException {
            this();
            com.google.protobuf.UnknownFieldSet.Builder newBuilder = UnknownFieldSet.newBuilder();
            boolean z = false;
            while (!z) {
                try {
                    int readTag = codedInputStream.readTag();
                    if (readTag != 0) {
                        if (readTag == 10) {
                            ByteString readBytes = codedInputStream.readBytes();
                            this.bitField0_ = 1 | this.bitField0_;
                            this.pid_ = readBytes;
                        } else if (readTag == 16) {
                            this.bitField0_ |= 2;
                            this.maxAckTimestamp_ = codedInputStream.readInt64();
                        } else if (readTag == 24) {
                            this.bitField0_ |= 4;
                            this.maxReadTimestamp_ = codedInputStream.readInt64();
                        } else if (!parseUnknownField(codedInputStream, newBuilder, extensionRegistryLite, readTag)) {
                        }
                    }
                    z = true;
                } catch (InvalidProtocolBufferException e) {
                    throw e.setUnfinishedMessage(this);
                } catch (IOException e2) {
                    throw new InvalidProtocolBufferException(e2).setUnfinishedMessage(this);
                } catch (Throwable th) {
                    this.unknownFields = newBuilder.build();
                    makeExtensionsImmutable();
                    throw th;
                }
            }
            this.unknownFields = newBuilder.build();
            makeExtensionsImmutable();
        }

        public static final Descriptor getDescriptor() {
            return Messages.internal_static_com_avos_avoscloud_MaxReadTuple_descriptor;
        }

        /* access modifiers changed from: protected */
        public FieldAccessorTable internalGetFieldAccessorTable() {
            return Messages.internal_static_com_avos_avoscloud_MaxReadTuple_fieldAccessorTable.ensureFieldAccessorsInitialized(MaxReadTuple.class, Builder.class);
        }

        public boolean hasPid() {
            return (this.bitField0_ & 1) == 1;
        }

        public String getPid() {
            Object obj = this.pid_;
            if (obj instanceof String) {
                return (String) obj;
            }
            ByteString byteString = (ByteString) obj;
            String stringUtf8 = byteString.toStringUtf8();
            if (byteString.isValidUtf8()) {
                this.pid_ = stringUtf8;
            }
            return stringUtf8;
        }

        public ByteString getPidBytes() {
            Object obj = this.pid_;
            if (!(obj instanceof String)) {
                return (ByteString) obj;
            }
            ByteString copyFromUtf8 = ByteString.copyFromUtf8((String) obj);
            this.pid_ = copyFromUtf8;
            return copyFromUtf8;
        }

        public boolean hasMaxAckTimestamp() {
            return (this.bitField0_ & 2) == 2;
        }

        public long getMaxAckTimestamp() {
            return this.maxAckTimestamp_;
        }

        public boolean hasMaxReadTimestamp() {
            return (this.bitField0_ & 4) == 4;
        }

        public long getMaxReadTimestamp() {
            return this.maxReadTimestamp_;
        }

        public final boolean isInitialized() {
            byte b = this.memoizedIsInitialized;
            if (b == 1) {
                return true;
            }
            if (b == 0) {
                return false;
            }
            this.memoizedIsInitialized = 1;
            return true;
        }

        public void writeTo(CodedOutputStream codedOutputStream) throws IOException {
            if ((this.bitField0_ & 1) == 1) {
                GeneratedMessageV3.writeString(codedOutputStream, 1, this.pid_);
            }
            if ((this.bitField0_ & 2) == 2) {
                codedOutputStream.writeInt64(2, this.maxAckTimestamp_);
            }
            if ((this.bitField0_ & 4) == 4) {
                codedOutputStream.writeInt64(3, this.maxReadTimestamp_);
            }
            this.unknownFields.writeTo(codedOutputStream);
        }

        public int getSerializedSize() {
            int i = this.memoizedSize;
            if (i != -1) {
                return i;
            }
            int i2 = 0;
            if ((this.bitField0_ & 1) == 1) {
                i2 = 0 + GeneratedMessageV3.computeStringSize(1, this.pid_);
            }
            if ((this.bitField0_ & 2) == 2) {
                i2 += CodedOutputStream.computeInt64Size(2, this.maxAckTimestamp_);
            }
            if ((this.bitField0_ & 4) == 4) {
                i2 += CodedOutputStream.computeInt64Size(3, this.maxReadTimestamp_);
            }
            int serializedSize = i2 + this.unknownFields.getSerializedSize();
            this.memoizedSize = serializedSize;
            return serializedSize;
        }

        public boolean equals(Object obj) {
            boolean z = true;
            if (obj == this) {
                return true;
            }
            if (!(obj instanceof MaxReadTuple)) {
                return super.equals(obj);
            }
            MaxReadTuple maxReadTuple = (MaxReadTuple) obj;
            boolean z2 = hasPid() == maxReadTuple.hasPid();
            if (hasPid()) {
                z2 = z2 && getPid().equals(maxReadTuple.getPid());
            }
            boolean z3 = z2 && hasMaxAckTimestamp() == maxReadTuple.hasMaxAckTimestamp();
            if (hasMaxAckTimestamp()) {
                z3 = z3 && getMaxAckTimestamp() == maxReadTuple.getMaxAckTimestamp();
            }
            boolean z4 = z3 && hasMaxReadTimestamp() == maxReadTuple.hasMaxReadTimestamp();
            if (hasMaxReadTimestamp()) {
                z4 = z4 && getMaxReadTimestamp() == maxReadTuple.getMaxReadTimestamp();
            }
            if (!z4 || !this.unknownFields.equals(maxReadTuple.unknownFields)) {
                z = false;
            }
            return z;
        }

        public int hashCode() {
            if (this.memoizedHashCode != 0) {
                return this.memoizedHashCode;
            }
            int hashCode = 779 + getDescriptor().hashCode();
            if (hasPid()) {
                hashCode = (((hashCode * 37) + 1) * 53) + getPid().hashCode();
            }
            if (hasMaxAckTimestamp()) {
                hashCode = (((hashCode * 37) + 2) * 53) + Internal.hashLong(getMaxAckTimestamp());
            }
            if (hasMaxReadTimestamp()) {
                hashCode = (((hashCode * 37) + 3) * 53) + Internal.hashLong(getMaxReadTimestamp());
            }
            int hashCode2 = (hashCode * 29) + this.unknownFields.hashCode();
            this.memoizedHashCode = hashCode2;
            return hashCode2;
        }

        public static MaxReadTuple parseFrom(ByteBuffer byteBuffer) throws InvalidProtocolBufferException {
            return (MaxReadTuple) PARSER.parseFrom(byteBuffer);
        }

        public static MaxReadTuple parseFrom(ByteBuffer byteBuffer, ExtensionRegistryLite extensionRegistryLite) throws InvalidProtocolBufferException {
            return (MaxReadTuple) PARSER.parseFrom(byteBuffer, extensionRegistryLite);
        }

        public static MaxReadTuple parseFrom(ByteString byteString) throws InvalidProtocolBufferException {
            return (MaxReadTuple) PARSER.parseFrom(byteString);
        }

        public static MaxReadTuple parseFrom(ByteString byteString, ExtensionRegistryLite extensionRegistryLite) throws InvalidProtocolBufferException {
            return (MaxReadTuple) PARSER.parseFrom(byteString, extensionRegistryLite);
        }

        public static MaxReadTuple parseFrom(byte[] bArr) throws InvalidProtocolBufferException {
            return (MaxReadTuple) PARSER.parseFrom(bArr);
        }

        public static MaxReadTuple parseFrom(byte[] bArr, ExtensionRegistryLite extensionRegistryLite) throws InvalidProtocolBufferException {
            return (MaxReadTuple) PARSER.parseFrom(bArr, extensionRegistryLite);
        }

        public static MaxReadTuple parseFrom(InputStream inputStream) throws IOException {
            return (MaxReadTuple) GeneratedMessageV3.parseWithIOException(PARSER, inputStream);
        }

        public static MaxReadTuple parseFrom(InputStream inputStream, ExtensionRegistryLite extensionRegistryLite) throws IOException {
            return (MaxReadTuple) GeneratedMessageV3.parseWithIOException(PARSER, inputStream, extensionRegistryLite);
        }

        public static MaxReadTuple parseDelimitedFrom(InputStream inputStream) throws IOException {
            return (MaxReadTuple) GeneratedMessageV3.parseDelimitedWithIOException(PARSER, inputStream);
        }

        public static MaxReadTuple parseDelimitedFrom(InputStream inputStream, ExtensionRegistryLite extensionRegistryLite) throws IOException {
            return (MaxReadTuple) GeneratedMessageV3.parseDelimitedWithIOException(PARSER, inputStream, extensionRegistryLite);
        }

        public static MaxReadTuple parseFrom(CodedInputStream codedInputStream) throws IOException {
            return (MaxReadTuple) GeneratedMessageV3.parseWithIOException(PARSER, codedInputStream);
        }

        public static MaxReadTuple parseFrom(CodedInputStream codedInputStream, ExtensionRegistryLite extensionRegistryLite) throws IOException {
            return (MaxReadTuple) GeneratedMessageV3.parseWithIOException(PARSER, codedInputStream, extensionRegistryLite);
        }

        public Builder newBuilderForType() {
            return newBuilder();
        }

        public static Builder newBuilder() {
            return DEFAULT_INSTANCE.toBuilder();
        }

        public static Builder newBuilder(MaxReadTuple maxReadTuple) {
            return DEFAULT_INSTANCE.toBuilder().mergeFrom(maxReadTuple);
        }

        public Builder toBuilder() {
            if (this == DEFAULT_INSTANCE) {
                return new Builder();
            }
            return new Builder().mergeFrom(this);
        }

        /* access modifiers changed from: protected */
        public Builder newBuilderForType(BuilderParent builderParent) {
            return new Builder(builderParent);
        }

        public static MaxReadTuple getDefaultInstance() {
            return DEFAULT_INSTANCE;
        }

        public static Parser<MaxReadTuple> parser() {
            return PARSER;
        }

        public Parser<MaxReadTuple> getParserForType() {
            return PARSER;
        }

        public MaxReadTuple getDefaultInstanceForType() {
            return DEFAULT_INSTANCE;
        }
    }

    public interface MaxReadTupleOrBuilder extends MessageOrBuilder {
        long getMaxAckTimestamp();

        long getMaxReadTimestamp();

        String getPid();

        ByteString getPidBytes();

        boolean hasMaxAckTimestamp();

        boolean hasMaxReadTimestamp();

        boolean hasPid();
    }

    public enum OpType implements ProtocolMessageEnum {
        open(1),
        add(2),
        remove(3),
        close(4),
        opened(5),
        closed(6),
        query(7),
        query_result(8),
        conflict(9),
        added(10),
        removed(11),
        refresh(12),
        refreshed(13),
        start(30),
        started(31),
        joined(32),
        members_joined(33),
        left(39),
        members_left(40),
        results(42),
        count(43),
        result(44),
        update(45),
        updated(46),
        mute(47),
        unmute(48),
        status(49),
        members(50),
        max_read(51),
        is_member(52),
        member_info_update(53),
        member_info_updated(54),
        member_info_changed(55),
        join(80),
        invite(81),
        leave(82),
        kick(83),
        reject(84),
        invited(85),
        kicked(86),
        upload(100),
        uploaded(101),
        subscribe(120),
        subscribed(121),
        unsubscribe(122),
        unsubscribed(123),
        is_subscribed(124),
        modify(modify_VALUE),
        modified(151),
        block(block_VALUE),
        unblock(unblock_VALUE),
        blocked(172),
        unblocked(unblocked_VALUE),
        members_blocked(members_blocked_VALUE),
        members_unblocked(members_unblocked_VALUE),
        add_shutup(180),
        remove_shutup(181),
        query_shutup(182),
        shutup_added(183),
        shutup_removed(184),
        shutup_result(185),
        shutuped(shutuped_VALUE),
        unshutuped(187),
        members_shutuped(188),
        members_unshutuped(189);
        
        private static final OpType[] VALUES = null;
        public static final int add_VALUE = 2;
        public static final int add_shutup_VALUE = 180;
        public static final int added_VALUE = 10;
        public static final int block_VALUE = 170;
        public static final int blocked_VALUE = 172;
        public static final int close_VALUE = 4;
        public static final int closed_VALUE = 6;
        public static final int conflict_VALUE = 9;
        public static final int count_VALUE = 43;
        private static final EnumLiteMap<OpType> internalValueMap = null;
        public static final int invite_VALUE = 81;
        public static final int invited_VALUE = 85;
        public static final int is_member_VALUE = 52;
        public static final int is_subscribed_VALUE = 124;
        public static final int join_VALUE = 80;
        public static final int joined_VALUE = 32;
        public static final int kick_VALUE = 83;
        public static final int kicked_VALUE = 86;
        public static final int leave_VALUE = 82;
        public static final int left_VALUE = 39;
        public static final int max_read_VALUE = 51;
        public static final int member_info_changed_VALUE = 55;
        public static final int member_info_update_VALUE = 53;
        public static final int member_info_updated_VALUE = 54;
        public static final int members_VALUE = 50;
        public static final int members_blocked_VALUE = 174;
        public static final int members_joined_VALUE = 33;
        public static final int members_left_VALUE = 40;
        public static final int members_shutuped_VALUE = 188;
        public static final int members_unblocked_VALUE = 175;
        public static final int members_unshutuped_VALUE = 189;
        public static final int modified_VALUE = 151;
        public static final int modify_VALUE = 150;
        public static final int mute_VALUE = 47;
        public static final int open_VALUE = 1;
        public static final int opened_VALUE = 5;
        public static final int query_VALUE = 7;
        public static final int query_result_VALUE = 8;
        public static final int query_shutup_VALUE = 182;
        public static final int refresh_VALUE = 12;
        public static final int refreshed_VALUE = 13;
        public static final int reject_VALUE = 84;
        public static final int remove_VALUE = 3;
        public static final int remove_shutup_VALUE = 181;
        public static final int removed_VALUE = 11;
        public static final int result_VALUE = 44;
        public static final int results_VALUE = 42;
        public static final int shutup_added_VALUE = 183;
        public static final int shutup_removed_VALUE = 184;
        public static final int shutup_result_VALUE = 185;
        public static final int shutuped_VALUE = 186;
        public static final int start_VALUE = 30;
        public static final int started_VALUE = 31;
        public static final int status_VALUE = 49;
        public static final int subscribe_VALUE = 120;
        public static final int subscribed_VALUE = 121;
        public static final int unblock_VALUE = 171;
        public static final int unblocked_VALUE = 173;
        public static final int unmute_VALUE = 48;
        public static final int unshutuped_VALUE = 187;
        public static final int unsubscribe_VALUE = 122;
        public static final int unsubscribed_VALUE = 123;
        public static final int update_VALUE = 45;
        public static final int updated_VALUE = 46;
        public static final int upload_VALUE = 100;
        public static final int uploaded_VALUE = 101;
        private final int value;

        static {
            internalValueMap = new EnumLiteMap<OpType>() {
                public OpType findValueByNumber(int i) {
                    return OpType.forNumber(i);
                }
            };
            VALUES = values();
        }

        public final int getNumber() {
            return this.value;
        }

        @Deprecated
        public static OpType valueOf(int i) {
            return forNumber(i);
        }

        public static OpType forNumber(int i) {
            if (i == 39) {
                return left;
            }
            if (i == 40) {
                return members_left;
            }
            if (i == 100) {
                return upload;
            }
            if (i == 101) {
                return uploaded;
            }
            if (i == 150) {
                return modify;
            }
            if (i == 151) {
                return modified;
            }
            switch (i) {
                case 1:
                    return open;
                case 2:
                    return add;
                case 3:
                    return remove;
                case 4:
                    return close;
                case 5:
                    return opened;
                case 6:
                    return closed;
                case 7:
                    return query;
                case 8:
                    return query_result;
                case 9:
                    return conflict;
                case 10:
                    return added;
                case 11:
                    return removed;
                case 12:
                    return refresh;
                case 13:
                    return refreshed;
                default:
                    switch (i) {
                        case 30:
                            return start;
                        case 31:
                            return started;
                        case 32:
                            return joined;
                        case 33:
                            return members_joined;
                        default:
                            switch (i) {
                                case 42:
                                    return results;
                                case 43:
                                    return count;
                                case 44:
                                    return result;
                                case 45:
                                    return update;
                                case 46:
                                    return updated;
                                case 47:
                                    return mute;
                                case 48:
                                    return unmute;
                                case 49:
                                    return status;
                                case 50:
                                    return members;
                                case 51:
                                    return max_read;
                                case 52:
                                    return is_member;
                                case 53:
                                    return member_info_update;
                                case 54:
                                    return member_info_updated;
                                case 55:
                                    return member_info_changed;
                                default:
                                    switch (i) {
                                        case 80:
                                            return join;
                                        case 81:
                                            return invite;
                                        case 82:
                                            return leave;
                                        case 83:
                                            return kick;
                                        case 84:
                                            return reject;
                                        case 85:
                                            return invited;
                                        case 86:
                                            return kicked;
                                        default:
                                            switch (i) {
                                                case 120:
                                                    return subscribe;
                                                case 121:
                                                    return subscribed;
                                                case 122:
                                                    return unsubscribe;
                                                case 123:
                                                    return unsubscribed;
                                                case 124:
                                                    return is_subscribed;
                                                default:
                                                    switch (i) {
                                                        case block_VALUE:
                                                            return block;
                                                        case unblock_VALUE:
                                                            return unblock;
                                                        case 172:
                                                            return blocked;
                                                        case unblocked_VALUE:
                                                            return unblocked;
                                                        case members_blocked_VALUE:
                                                            return members_blocked;
                                                        case members_unblocked_VALUE:
                                                            return members_unblocked;
                                                        default:
                                                            switch (i) {
                                                                case 180:
                                                                    return add_shutup;
                                                                case 181:
                                                                    return remove_shutup;
                                                                case 182:
                                                                    return query_shutup;
                                                                case 183:
                                                                    return shutup_added;
                                                                case 184:
                                                                    return shutup_removed;
                                                                case 185:
                                                                    return shutup_result;
                                                                case shutuped_VALUE:
                                                                    return shutuped;
                                                                case 187:
                                                                    return unshutuped;
                                                                case 188:
                                                                    return members_shutuped;
                                                                case 189:
                                                                    return members_unshutuped;
                                                                default:
                                                                    return null;
                                                            }
                                                    }
                                            }
                                    }
                            }
                    }
            }
        }

        public static EnumLiteMap<OpType> internalGetValueMap() {
            return internalValueMap;
        }

        public final EnumValueDescriptor getValueDescriptor() {
            return (EnumValueDescriptor) getDescriptor().getValues().get(ordinal());
        }

        public final EnumDescriptor getDescriptorForType() {
            return getDescriptor();
        }

        public static final EnumDescriptor getDescriptor() {
            return (EnumDescriptor) Messages.getDescriptor().getEnumTypes().get(1);
        }

        public static OpType valueOf(EnumValueDescriptor enumValueDescriptor) {
            if (enumValueDescriptor.getType() == getDescriptor()) {
                return VALUES[enumValueDescriptor.getIndex()];
            }
            throw new IllegalArgumentException("EnumValueDescriptor is not for this type.");
        }

        private OpType(int i) {
            this.value = i;
        }
    }

    public static final class PatchCommand extends GeneratedMessageV3 implements PatchCommandOrBuilder {
        private static final PatchCommand DEFAULT_INSTANCE = new PatchCommand();
        public static final int LASTPATCHTIME_FIELD_NUMBER = 2;
        @Deprecated
        public static final Parser<PatchCommand> PARSER = new AbstractParser<PatchCommand>() {
            public PatchCommand parsePartialFrom(CodedInputStream codedInputStream, ExtensionRegistryLite extensionRegistryLite) throws InvalidProtocolBufferException {
                return new PatchCommand(codedInputStream, extensionRegistryLite);
            }
        };
        public static final int PATCHES_FIELD_NUMBER = 1;
        private static final long serialVersionUID = 0;
        /* access modifiers changed from: private */
        public int bitField0_;
        /* access modifiers changed from: private */
        public long lastPatchTime_;
        private byte memoizedIsInitialized;
        /* access modifiers changed from: private */
        public List<PatchItem> patches_;

        public static final class Builder extends com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements PatchCommandOrBuilder {
            private int bitField0_;
            private long lastPatchTime_;
            private RepeatedFieldBuilderV3<PatchItem, Builder, PatchItemOrBuilder> patchesBuilder_;
            private List<PatchItem> patches_;

            public final boolean isInitialized() {
                return true;
            }

            public static final Descriptor getDescriptor() {
                return Messages.internal_static_com_avos_avoscloud_PatchCommand_descriptor;
            }

            /* access modifiers changed from: protected */
            public FieldAccessorTable internalGetFieldAccessorTable() {
                return Messages.internal_static_com_avos_avoscloud_PatchCommand_fieldAccessorTable.ensureFieldAccessorsInitialized(PatchCommand.class, Builder.class);
            }

            private Builder() {
                this.patches_ = Collections.emptyList();
                maybeForceBuilderInitialization();
            }

            private Builder(BuilderParent builderParent) {
                super(builderParent);
                this.patches_ = Collections.emptyList();
                maybeForceBuilderInitialization();
            }

            private void maybeForceBuilderInitialization() {
                if (PatchCommand.alwaysUseFieldBuilders) {
                    getPatchesFieldBuilder();
                }
            }

            public Builder clear() {
                super.clear();
                RepeatedFieldBuilderV3<PatchItem, Builder, PatchItemOrBuilder> repeatedFieldBuilderV3 = this.patchesBuilder_;
                if (repeatedFieldBuilderV3 == null) {
                    this.patches_ = Collections.emptyList();
                    this.bitField0_ &= -2;
                } else {
                    repeatedFieldBuilderV3.clear();
                }
                this.lastPatchTime_ = 0;
                this.bitField0_ &= -3;
                return this;
            }

            public Descriptor getDescriptorForType() {
                return Messages.internal_static_com_avos_avoscloud_PatchCommand_descriptor;
            }

            public PatchCommand getDefaultInstanceForType() {
                return PatchCommand.getDefaultInstance();
            }

            public PatchCommand build() {
                PatchCommand buildPartial = buildPartial();
                if (buildPartial.isInitialized()) {
                    return buildPartial;
                }
                throw newUninitializedMessageException(buildPartial);
            }

            public PatchCommand buildPartial() {
                PatchCommand patchCommand = new PatchCommand((com.google.protobuf.GeneratedMessageV3.Builder) this);
                int i = this.bitField0_;
                RepeatedFieldBuilderV3<PatchItem, Builder, PatchItemOrBuilder> repeatedFieldBuilderV3 = this.patchesBuilder_;
                int i2 = 1;
                if (repeatedFieldBuilderV3 == null) {
                    if ((i & 1) == 1) {
                        this.patches_ = Collections.unmodifiableList(this.patches_);
                        this.bitField0_ &= -2;
                    }
                    patchCommand.patches_ = this.patches_;
                } else {
                    patchCommand.patches_ = repeatedFieldBuilderV3.build();
                }
                if ((i & 2) != 2) {
                    i2 = 0;
                }
                patchCommand.lastPatchTime_ = this.lastPatchTime_;
                patchCommand.bitField0_ = i2;
                onBuilt();
                return patchCommand;
            }

            public Builder clone() {
                return (Builder) super.clone();
            }

            public Builder setField(FieldDescriptor fieldDescriptor, Object obj) {
                return (Builder) super.setField(fieldDescriptor, obj);
            }

            public Builder clearField(FieldDescriptor fieldDescriptor) {
                return (Builder) super.clearField(fieldDescriptor);
            }

            public Builder clearOneof(OneofDescriptor oneofDescriptor) {
                return (Builder) super.clearOneof(oneofDescriptor);
            }

            public Builder setRepeatedField(FieldDescriptor fieldDescriptor, int i, Object obj) {
                return (Builder) super.setRepeatedField(fieldDescriptor, i, obj);
            }

            public Builder addRepeatedField(FieldDescriptor fieldDescriptor, Object obj) {
                return (Builder) super.addRepeatedField(fieldDescriptor, obj);
            }

            public Builder mergeFrom(Message message) {
                if (message instanceof PatchCommand) {
                    return mergeFrom((PatchCommand) message);
                }
                super.mergeFrom(message);
                return this;
            }

            public Builder mergeFrom(PatchCommand patchCommand) {
                if (patchCommand == PatchCommand.getDefaultInstance()) {
                    return this;
                }
                if (this.patchesBuilder_ == null) {
                    if (!patchCommand.patches_.isEmpty()) {
                        if (this.patches_.isEmpty()) {
                            this.patches_ = patchCommand.patches_;
                            this.bitField0_ &= -2;
                        } else {
                            ensurePatchesIsMutable();
                            this.patches_.addAll(patchCommand.patches_);
                        }
                        onChanged();
                    }
                } else if (!patchCommand.patches_.isEmpty()) {
                    if (this.patchesBuilder_.isEmpty()) {
                        this.patchesBuilder_.dispose();
                        RepeatedFieldBuilderV3<PatchItem, Builder, PatchItemOrBuilder> repeatedFieldBuilderV3 = null;
                        this.patchesBuilder_ = null;
                        this.patches_ = patchCommand.patches_;
                        this.bitField0_ &= -2;
                        if (PatchCommand.alwaysUseFieldBuilders) {
                            repeatedFieldBuilderV3 = getPatchesFieldBuilder();
                        }
                        this.patchesBuilder_ = repeatedFieldBuilderV3;
                    } else {
                        this.patchesBuilder_.addAllMessages(patchCommand.patches_);
                    }
                }
                if (patchCommand.hasLastPatchTime()) {
                    setLastPatchTime(patchCommand.getLastPatchTime());
                }
                mergeUnknownFields(patchCommand.unknownFields);
                onChanged();
                return this;
            }

            /* JADX WARNING: Removed duplicated region for block: B:16:0x0021  */
            /* Code decompiled incorrectly, please refer to instructions dump. */
            public com.avos.avoscloud.Messages.PatchCommand.Builder mergeFrom(com.google.protobuf.CodedInputStream r3, com.google.protobuf.ExtensionRegistryLite r4) throws java.io.IOException {
                /*
                    r2 = this;
                    r0 = 0
                    com.google.protobuf.Parser<com.avos.avoscloud.Messages$PatchCommand> r1 = com.avos.avoscloud.Messages.PatchCommand.PARSER     // Catch:{ InvalidProtocolBufferException -> 0x0011 }
                    java.lang.Object r3 = r1.parsePartialFrom(r3, r4)     // Catch:{ InvalidProtocolBufferException -> 0x0011 }
                    com.avos.avoscloud.Messages$PatchCommand r3 = (com.avos.avoscloud.Messages.PatchCommand) r3     // Catch:{ InvalidProtocolBufferException -> 0x0011 }
                    if (r3 == 0) goto L_0x000e
                    r2.mergeFrom(r3)
                L_0x000e:
                    return r2
                L_0x000f:
                    r3 = move-exception
                    goto L_0x001f
                L_0x0011:
                    r3 = move-exception
                    com.google.protobuf.MessageLite r4 = r3.getUnfinishedMessage()     // Catch:{ all -> 0x000f }
                    com.avos.avoscloud.Messages$PatchCommand r4 = (com.avos.avoscloud.Messages.PatchCommand) r4     // Catch:{ all -> 0x000f }
                    java.io.IOException r3 = r3.unwrapIOException()     // Catch:{ all -> 0x001d }
                    throw r3     // Catch:{ all -> 0x001d }
                L_0x001d:
                    r3 = move-exception
                    r0 = r4
                L_0x001f:
                    if (r0 == 0) goto L_0x0024
                    r2.mergeFrom(r0)
                L_0x0024:
                    throw r3
                */
                throw new UnsupportedOperationException("Method not decompiled: com.avos.avoscloud.Messages.PatchCommand.Builder.mergeFrom(com.google.protobuf.CodedInputStream, com.google.protobuf.ExtensionRegistryLite):com.avos.avoscloud.Messages$PatchCommand$Builder");
            }

            private void ensurePatchesIsMutable() {
                if ((this.bitField0_ & 1) != 1) {
                    this.patches_ = new ArrayList(this.patches_);
                    this.bitField0_ |= 1;
                }
            }

            public List<PatchItem> getPatchesList() {
                RepeatedFieldBuilderV3<PatchItem, Builder, PatchItemOrBuilder> repeatedFieldBuilderV3 = this.patchesBuilder_;
                if (repeatedFieldBuilderV3 == null) {
                    return Collections.unmodifiableList(this.patches_);
                }
                return repeatedFieldBuilderV3.getMessageList();
            }

            public int getPatchesCount() {
                RepeatedFieldBuilderV3<PatchItem, Builder, PatchItemOrBuilder> repeatedFieldBuilderV3 = this.patchesBuilder_;
                if (repeatedFieldBuilderV3 == null) {
                    return this.patches_.size();
                }
                return repeatedFieldBuilderV3.getCount();
            }

            public PatchItem getPatches(int i) {
                RepeatedFieldBuilderV3<PatchItem, Builder, PatchItemOrBuilder> repeatedFieldBuilderV3 = this.patchesBuilder_;
                if (repeatedFieldBuilderV3 == null) {
                    return (PatchItem) this.patches_.get(i);
                }
                return (PatchItem) repeatedFieldBuilderV3.getMessage(i);
            }

            public Builder setPatches(int i, PatchItem patchItem) {
                RepeatedFieldBuilderV3<PatchItem, Builder, PatchItemOrBuilder> repeatedFieldBuilderV3 = this.patchesBuilder_;
                if (repeatedFieldBuilderV3 != null) {
                    repeatedFieldBuilderV3.setMessage(i, patchItem);
                } else if (patchItem != null) {
                    ensurePatchesIsMutable();
                    this.patches_.set(i, patchItem);
                    onChanged();
                } else {
                    throw new NullPointerException();
                }
                return this;
            }

            public Builder setPatches(int i, Builder builder) {
                RepeatedFieldBuilderV3<PatchItem, Builder, PatchItemOrBuilder> repeatedFieldBuilderV3 = this.patchesBuilder_;
                if (repeatedFieldBuilderV3 == null) {
                    ensurePatchesIsMutable();
                    this.patches_.set(i, builder.build());
                    onChanged();
                } else {
                    repeatedFieldBuilderV3.setMessage(i, builder.build());
                }
                return this;
            }

            public Builder addPatches(PatchItem patchItem) {
                RepeatedFieldBuilderV3<PatchItem, Builder, PatchItemOrBuilder> repeatedFieldBuilderV3 = this.patchesBuilder_;
                if (repeatedFieldBuilderV3 != null) {
                    repeatedFieldBuilderV3.addMessage(patchItem);
                } else if (patchItem != null) {
                    ensurePatchesIsMutable();
                    this.patches_.add(patchItem);
                    onChanged();
                } else {
                    throw new NullPointerException();
                }
                return this;
            }

            public Builder addPatches(int i, PatchItem patchItem) {
                RepeatedFieldBuilderV3<PatchItem, Builder, PatchItemOrBuilder> repeatedFieldBuilderV3 = this.patchesBuilder_;
                if (repeatedFieldBuilderV3 != null) {
                    repeatedFieldBuilderV3.addMessage(i, patchItem);
                } else if (patchItem != null) {
                    ensurePatchesIsMutable();
                    this.patches_.add(i, patchItem);
                    onChanged();
                } else {
                    throw new NullPointerException();
                }
                return this;
            }

            public Builder addPatches(Builder builder) {
                RepeatedFieldBuilderV3<PatchItem, Builder, PatchItemOrBuilder> repeatedFieldBuilderV3 = this.patchesBuilder_;
                if (repeatedFieldBuilderV3 == null) {
                    ensurePatchesIsMutable();
                    this.patches_.add(builder.build());
                    onChanged();
                } else {
                    repeatedFieldBuilderV3.addMessage(builder.build());
                }
                return this;
            }

            public Builder addPatches(int i, Builder builder) {
                RepeatedFieldBuilderV3<PatchItem, Builder, PatchItemOrBuilder> repeatedFieldBuilderV3 = this.patchesBuilder_;
                if (repeatedFieldBuilderV3 == null) {
                    ensurePatchesIsMutable();
                    this.patches_.add(i, builder.build());
                    onChanged();
                } else {
                    repeatedFieldBuilderV3.addMessage(i, builder.build());
                }
                return this;
            }

            public Builder addAllPatches(Iterable<? extends PatchItem> iterable) {
                RepeatedFieldBuilderV3<PatchItem, Builder, PatchItemOrBuilder> repeatedFieldBuilderV3 = this.patchesBuilder_;
                if (repeatedFieldBuilderV3 == null) {
                    ensurePatchesIsMutable();
                    com.google.protobuf.AbstractMessageLite.Builder.addAll((Iterable) iterable, (List) this.patches_);
                    onChanged();
                } else {
                    repeatedFieldBuilderV3.addAllMessages(iterable);
                }
                return this;
            }

            public Builder clearPatches() {
                RepeatedFieldBuilderV3<PatchItem, Builder, PatchItemOrBuilder> repeatedFieldBuilderV3 = this.patchesBuilder_;
                if (repeatedFieldBuilderV3 == null) {
                    this.patches_ = Collections.emptyList();
                    this.bitField0_ &= -2;
                    onChanged();
                } else {
                    repeatedFieldBuilderV3.clear();
                }
                return this;
            }

            public Builder removePatches(int i) {
                RepeatedFieldBuilderV3<PatchItem, Builder, PatchItemOrBuilder> repeatedFieldBuilderV3 = this.patchesBuilder_;
                if (repeatedFieldBuilderV3 == null) {
                    ensurePatchesIsMutable();
                    this.patches_.remove(i);
                    onChanged();
                } else {
                    repeatedFieldBuilderV3.remove(i);
                }
                return this;
            }

            public Builder getPatchesBuilder(int i) {
                return (Builder) getPatchesFieldBuilder().getBuilder(i);
            }

            public PatchItemOrBuilder getPatchesOrBuilder(int i) {
                RepeatedFieldBuilderV3<PatchItem, Builder, PatchItemOrBuilder> repeatedFieldBuilderV3 = this.patchesBuilder_;
                if (repeatedFieldBuilderV3 == null) {
                    return (PatchItemOrBuilder) this.patches_.get(i);
                }
                return (PatchItemOrBuilder) repeatedFieldBuilderV3.getMessageOrBuilder(i);
            }

            public List<? extends PatchItemOrBuilder> getPatchesOrBuilderList() {
                RepeatedFieldBuilderV3<PatchItem, Builder, PatchItemOrBuilder> repeatedFieldBuilderV3 = this.patchesBuilder_;
                if (repeatedFieldBuilderV3 != null) {
                    return repeatedFieldBuilderV3.getMessageOrBuilderList();
                }
                return Collections.unmodifiableList(this.patches_);
            }

            public Builder addPatchesBuilder() {
                return (Builder) getPatchesFieldBuilder().addBuilder(PatchItem.getDefaultInstance());
            }

            public Builder addPatchesBuilder(int i) {
                return (Builder) getPatchesFieldBuilder().addBuilder(i, PatchItem.getDefaultInstance());
            }

            public List<Builder> getPatchesBuilderList() {
                return getPatchesFieldBuilder().getBuilderList();
            }

            private RepeatedFieldBuilderV3<PatchItem, Builder, PatchItemOrBuilder> getPatchesFieldBuilder() {
                if (this.patchesBuilder_ == null) {
                    List<PatchItem> list = this.patches_;
                    boolean z = true;
                    if ((this.bitField0_ & 1) != 1) {
                        z = false;
                    }
                    this.patchesBuilder_ = new RepeatedFieldBuilderV3<>(list, z, getParentForChildren(), isClean());
                    this.patches_ = null;
                }
                return this.patchesBuilder_;
            }

            public boolean hasLastPatchTime() {
                return (this.bitField0_ & 2) == 2;
            }

            public long getLastPatchTime() {
                return this.lastPatchTime_;
            }

            public Builder setLastPatchTime(long j) {
                this.bitField0_ |= 2;
                this.lastPatchTime_ = j;
                onChanged();
                return this;
            }

            public Builder clearLastPatchTime() {
                this.bitField0_ &= -3;
                this.lastPatchTime_ = 0;
                onChanged();
                return this;
            }

            public final Builder setUnknownFields(UnknownFieldSet unknownFieldSet) {
                return (Builder) super.setUnknownFields(unknownFieldSet);
            }

            public final Builder mergeUnknownFields(UnknownFieldSet unknownFieldSet) {
                return (Builder) super.mergeUnknownFields(unknownFieldSet);
            }
        }

        private PatchCommand(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
            super(builder);
            this.memoizedIsInitialized = -1;
        }

        private PatchCommand() {
            this.memoizedIsInitialized = -1;
            this.patches_ = Collections.emptyList();
            this.lastPatchTime_ = 0;
        }

        public final UnknownFieldSet getUnknownFields() {
            return this.unknownFields;
        }

        private PatchCommand(CodedInputStream codedInputStream, ExtensionRegistryLite extensionRegistryLite) throws InvalidProtocolBufferException {
            this();
            com.google.protobuf.UnknownFieldSet.Builder newBuilder = UnknownFieldSet.newBuilder();
            boolean z = false;
            boolean z2 = false;
            while (!z) {
                try {
                    int readTag = codedInputStream.readTag();
                    if (readTag != 0) {
                        if (readTag == 10) {
                            if (!z2 || !true) {
                                this.patches_ = new ArrayList();
                                z2 |= true;
                            }
                            this.patches_.add(codedInputStream.readMessage(PatchItem.PARSER, extensionRegistryLite));
                        } else if (readTag == 16) {
                            this.bitField0_ |= 1;
                            this.lastPatchTime_ = codedInputStream.readInt64();
                        } else if (!parseUnknownField(codedInputStream, newBuilder, extensionRegistryLite, readTag)) {
                        }
                    }
                    z = true;
                } catch (InvalidProtocolBufferException e) {
                    throw e.setUnfinishedMessage(this);
                } catch (IOException e2) {
                    throw new InvalidProtocolBufferException(e2).setUnfinishedMessage(this);
                } catch (Throwable th) {
                    if (z2 && true) {
                        this.patches_ = Collections.unmodifiableList(this.patches_);
                    }
                    this.unknownFields = newBuilder.build();
                    makeExtensionsImmutable();
                    throw th;
                }
            }
            if (z2 && true) {
                this.patches_ = Collections.unmodifiableList(this.patches_);
            }
            this.unknownFields = newBuilder.build();
            makeExtensionsImmutable();
        }

        public static final Descriptor getDescriptor() {
            return Messages.internal_static_com_avos_avoscloud_PatchCommand_descriptor;
        }

        /* access modifiers changed from: protected */
        public FieldAccessorTable internalGetFieldAccessorTable() {
            return Messages.internal_static_com_avos_avoscloud_PatchCommand_fieldAccessorTable.ensureFieldAccessorsInitialized(PatchCommand.class, Builder.class);
        }

        public List<PatchItem> getPatchesList() {
            return this.patches_;
        }

        public List<? extends PatchItemOrBuilder> getPatchesOrBuilderList() {
            return this.patches_;
        }

        public int getPatchesCount() {
            return this.patches_.size();
        }

        public PatchItem getPatches(int i) {
            return (PatchItem) this.patches_.get(i);
        }

        public PatchItemOrBuilder getPatchesOrBuilder(int i) {
            return (PatchItemOrBuilder) this.patches_.get(i);
        }

        public boolean hasLastPatchTime() {
            return (this.bitField0_ & 1) == 1;
        }

        public long getLastPatchTime() {
            return this.lastPatchTime_;
        }

        public final boolean isInitialized() {
            byte b = this.memoizedIsInitialized;
            if (b == 1) {
                return true;
            }
            if (b == 0) {
                return false;
            }
            this.memoizedIsInitialized = 1;
            return true;
        }

        public void writeTo(CodedOutputStream codedOutputStream) throws IOException {
            for (int i = 0; i < this.patches_.size(); i++) {
                codedOutputStream.writeMessage(1, (MessageLite) this.patches_.get(i));
            }
            if ((this.bitField0_ & 1) == 1) {
                codedOutputStream.writeInt64(2, this.lastPatchTime_);
            }
            this.unknownFields.writeTo(codedOutputStream);
        }

        public int getSerializedSize() {
            int i = this.memoizedSize;
            if (i != -1) {
                return i;
            }
            int i2 = 0;
            for (int i3 = 0; i3 < this.patches_.size(); i3++) {
                i2 += CodedOutputStream.computeMessageSize(1, (MessageLite) this.patches_.get(i3));
            }
            if ((this.bitField0_ & 1) == 1) {
                i2 += CodedOutputStream.computeInt64Size(2, this.lastPatchTime_);
            }
            int serializedSize = i2 + this.unknownFields.getSerializedSize();
            this.memoizedSize = serializedSize;
            return serializedSize;
        }

        public boolean equals(Object obj) {
            boolean z = true;
            if (obj == this) {
                return true;
            }
            if (!(obj instanceof PatchCommand)) {
                return super.equals(obj);
            }
            PatchCommand patchCommand = (PatchCommand) obj;
            boolean z2 = (getPatchesList().equals(patchCommand.getPatchesList())) && hasLastPatchTime() == patchCommand.hasLastPatchTime();
            if (hasLastPatchTime()) {
                z2 = z2 && getLastPatchTime() == patchCommand.getLastPatchTime();
            }
            if (!z2 || !this.unknownFields.equals(patchCommand.unknownFields)) {
                z = false;
            }
            return z;
        }

        public int hashCode() {
            if (this.memoizedHashCode != 0) {
                return this.memoizedHashCode;
            }
            int hashCode = 779 + getDescriptor().hashCode();
            if (getPatchesCount() > 0) {
                hashCode = (((hashCode * 37) + 1) * 53) + getPatchesList().hashCode();
            }
            if (hasLastPatchTime()) {
                hashCode = (((hashCode * 37) + 2) * 53) + Internal.hashLong(getLastPatchTime());
            }
            int hashCode2 = (hashCode * 29) + this.unknownFields.hashCode();
            this.memoizedHashCode = hashCode2;
            return hashCode2;
        }

        public static PatchCommand parseFrom(ByteBuffer byteBuffer) throws InvalidProtocolBufferException {
            return (PatchCommand) PARSER.parseFrom(byteBuffer);
        }

        public static PatchCommand parseFrom(ByteBuffer byteBuffer, ExtensionRegistryLite extensionRegistryLite) throws InvalidProtocolBufferException {
            return (PatchCommand) PARSER.parseFrom(byteBuffer, extensionRegistryLite);
        }

        public static PatchCommand parseFrom(ByteString byteString) throws InvalidProtocolBufferException {
            return (PatchCommand) PARSER.parseFrom(byteString);
        }

        public static PatchCommand parseFrom(ByteString byteString, ExtensionRegistryLite extensionRegistryLite) throws InvalidProtocolBufferException {
            return (PatchCommand) PARSER.parseFrom(byteString, extensionRegistryLite);
        }

        public static PatchCommand parseFrom(byte[] bArr) throws InvalidProtocolBufferException {
            return (PatchCommand) PARSER.parseFrom(bArr);
        }

        public static PatchCommand parseFrom(byte[] bArr, ExtensionRegistryLite extensionRegistryLite) throws InvalidProtocolBufferException {
            return (PatchCommand) PARSER.parseFrom(bArr, extensionRegistryLite);
        }

        public static PatchCommand parseFrom(InputStream inputStream) throws IOException {
            return (PatchCommand) GeneratedMessageV3.parseWithIOException(PARSER, inputStream);
        }

        public static PatchCommand parseFrom(InputStream inputStream, ExtensionRegistryLite extensionRegistryLite) throws IOException {
            return (PatchCommand) GeneratedMessageV3.parseWithIOException(PARSER, inputStream, extensionRegistryLite);
        }

        public static PatchCommand parseDelimitedFrom(InputStream inputStream) throws IOException {
            return (PatchCommand) GeneratedMessageV3.parseDelimitedWithIOException(PARSER, inputStream);
        }

        public static PatchCommand parseDelimitedFrom(InputStream inputStream, ExtensionRegistryLite extensionRegistryLite) throws IOException {
            return (PatchCommand) GeneratedMessageV3.parseDelimitedWithIOException(PARSER, inputStream, extensionRegistryLite);
        }

        public static PatchCommand parseFrom(CodedInputStream codedInputStream) throws IOException {
            return (PatchCommand) GeneratedMessageV3.parseWithIOException(PARSER, codedInputStream);
        }

        public static PatchCommand parseFrom(CodedInputStream codedInputStream, ExtensionRegistryLite extensionRegistryLite) throws IOException {
            return (PatchCommand) GeneratedMessageV3.parseWithIOException(PARSER, codedInputStream, extensionRegistryLite);
        }

        public Builder newBuilderForType() {
            return newBuilder();
        }

        public static Builder newBuilder() {
            return DEFAULT_INSTANCE.toBuilder();
        }

        public static Builder newBuilder(PatchCommand patchCommand) {
            return DEFAULT_INSTANCE.toBuilder().mergeFrom(patchCommand);
        }

        public Builder toBuilder() {
            if (this == DEFAULT_INSTANCE) {
                return new Builder();
            }
            return new Builder().mergeFrom(this);
        }

        /* access modifiers changed from: protected */
        public Builder newBuilderForType(BuilderParent builderParent) {
            return new Builder(builderParent);
        }

        public static PatchCommand getDefaultInstance() {
            return DEFAULT_INSTANCE;
        }

        public static Parser<PatchCommand> parser() {
            return PARSER;
        }

        public Parser<PatchCommand> getParserForType() {
            return PARSER;
        }

        public PatchCommand getDefaultInstanceForType() {
            return DEFAULT_INSTANCE;
        }
    }

    public interface PatchCommandOrBuilder extends MessageOrBuilder {
        long getLastPatchTime();

        PatchItem getPatches(int i);

        int getPatchesCount();

        List<PatchItem> getPatchesList();

        PatchItemOrBuilder getPatchesOrBuilder(int i);

        List<? extends PatchItemOrBuilder> getPatchesOrBuilderList();

        boolean hasLastPatchTime();
    }

    public static final class PatchItem extends GeneratedMessageV3 implements PatchItemOrBuilder {
        public static final int BINARYMSG_FIELD_NUMBER = 8;
        public static final int CID_FIELD_NUMBER = 1;
        public static final int DATA_FIELD_NUMBER = 5;
        private static final PatchItem DEFAULT_INSTANCE = new PatchItem();
        public static final int FROM_FIELD_NUMBER = 7;
        public static final int MENTIONALL_FIELD_NUMBER = 9;
        public static final int MENTIONPIDS_FIELD_NUMBER = 10;
        public static final int MID_FIELD_NUMBER = 2;
        @Deprecated
        public static final Parser<PatchItem> PARSER = new AbstractParser<PatchItem>() {
            public PatchItem parsePartialFrom(CodedInputStream codedInputStream, ExtensionRegistryLite extensionRegistryLite) throws InvalidProtocolBufferException {
                return new PatchItem(codedInputStream, extensionRegistryLite);
            }
        };
        public static final int PATCHTIMESTAMP_FIELD_NUMBER = 6;
        public static final int RECALL_FIELD_NUMBER = 4;
        public static final int TIMESTAMP_FIELD_NUMBER = 3;
        private static final long serialVersionUID = 0;
        /* access modifiers changed from: private */
        public ByteString binaryMsg_;
        /* access modifiers changed from: private */
        public int bitField0_;
        /* access modifiers changed from: private */
        public volatile Object cid_;
        /* access modifiers changed from: private */
        public volatile Object data_;
        /* access modifiers changed from: private */
        public volatile Object from_;
        private byte memoizedIsInitialized;
        /* access modifiers changed from: private */
        public boolean mentionAll_;
        /* access modifiers changed from: private */
        public LazyStringList mentionPids_;
        /* access modifiers changed from: private */
        public volatile Object mid_;
        /* access modifiers changed from: private */
        public long patchTimestamp_;
        /* access modifiers changed from: private */
        public boolean recall_;
        /* access modifiers changed from: private */
        public long timestamp_;

        public static final class Builder extends com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements PatchItemOrBuilder {
            private ByteString binaryMsg_;
            private int bitField0_;
            private Object cid_;
            private Object data_;
            private Object from_;
            private boolean mentionAll_;
            private LazyStringList mentionPids_;
            private Object mid_;
            private long patchTimestamp_;
            private boolean recall_;
            private long timestamp_;

            public final boolean isInitialized() {
                return true;
            }

            public static final Descriptor getDescriptor() {
                return Messages.internal_static_com_avos_avoscloud_PatchItem_descriptor;
            }

            /* access modifiers changed from: protected */
            public FieldAccessorTable internalGetFieldAccessorTable() {
                return Messages.internal_static_com_avos_avoscloud_PatchItem_fieldAccessorTable.ensureFieldAccessorsInitialized(PatchItem.class, Builder.class);
            }

            private Builder() {
                String str = "";
                this.cid_ = str;
                this.mid_ = str;
                this.data_ = str;
                this.from_ = str;
                this.binaryMsg_ = ByteString.EMPTY;
                this.mentionPids_ = LazyStringArrayList.EMPTY;
                maybeForceBuilderInitialization();
            }

            private Builder(BuilderParent builderParent) {
                super(builderParent);
                String str = "";
                this.cid_ = str;
                this.mid_ = str;
                this.data_ = str;
                this.from_ = str;
                this.binaryMsg_ = ByteString.EMPTY;
                this.mentionPids_ = LazyStringArrayList.EMPTY;
                maybeForceBuilderInitialization();
            }

            private void maybeForceBuilderInitialization() {
                PatchItem.alwaysUseFieldBuilders;
            }

            public Builder clear() {
                super.clear();
                String str = "";
                this.cid_ = str;
                this.bitField0_ &= -2;
                this.mid_ = str;
                this.bitField0_ &= -3;
                this.timestamp_ = 0;
                this.bitField0_ &= -5;
                this.recall_ = false;
                this.bitField0_ &= -9;
                this.data_ = str;
                this.bitField0_ &= -17;
                this.patchTimestamp_ = 0;
                this.bitField0_ &= -33;
                this.from_ = str;
                this.bitField0_ &= -65;
                this.binaryMsg_ = ByteString.EMPTY;
                this.bitField0_ &= -129;
                this.mentionAll_ = false;
                this.bitField0_ &= -257;
                this.mentionPids_ = LazyStringArrayList.EMPTY;
                this.bitField0_ &= -513;
                return this;
            }

            public Descriptor getDescriptorForType() {
                return Messages.internal_static_com_avos_avoscloud_PatchItem_descriptor;
            }

            public PatchItem getDefaultInstanceForType() {
                return PatchItem.getDefaultInstance();
            }

            public PatchItem build() {
                PatchItem buildPartial = buildPartial();
                if (buildPartial.isInitialized()) {
                    return buildPartial;
                }
                throw newUninitializedMessageException(buildPartial);
            }

            public PatchItem buildPartial() {
                PatchItem patchItem = new PatchItem((com.google.protobuf.GeneratedMessageV3.Builder) this);
                int i = this.bitField0_;
                int i2 = 1;
                if ((i & 1) != 1) {
                    i2 = 0;
                }
                patchItem.cid_ = this.cid_;
                if ((i & 2) == 2) {
                    i2 |= 2;
                }
                patchItem.mid_ = this.mid_;
                if ((i & 4) == 4) {
                    i2 |= 4;
                }
                patchItem.timestamp_ = this.timestamp_;
                if ((i & 8) == 8) {
                    i2 |= 8;
                }
                patchItem.recall_ = this.recall_;
                if ((i & 16) == 16) {
                    i2 |= 16;
                }
                patchItem.data_ = this.data_;
                if ((i & 32) == 32) {
                    i2 |= 32;
                }
                patchItem.patchTimestamp_ = this.patchTimestamp_;
                if ((i & 64) == 64) {
                    i2 |= 64;
                }
                patchItem.from_ = this.from_;
                if ((i & 128) == 128) {
                    i2 |= 128;
                }
                patchItem.binaryMsg_ = this.binaryMsg_;
                if ((i & 256) == 256) {
                    i2 |= 256;
                }
                patchItem.mentionAll_ = this.mentionAll_;
                if ((this.bitField0_ & 512) == 512) {
                    this.mentionPids_ = this.mentionPids_.getUnmodifiableView();
                    this.bitField0_ &= -513;
                }
                patchItem.mentionPids_ = this.mentionPids_;
                patchItem.bitField0_ = i2;
                onBuilt();
                return patchItem;
            }

            public Builder clone() {
                return (Builder) super.clone();
            }

            public Builder setField(FieldDescriptor fieldDescriptor, Object obj) {
                return (Builder) super.setField(fieldDescriptor, obj);
            }

            public Builder clearField(FieldDescriptor fieldDescriptor) {
                return (Builder) super.clearField(fieldDescriptor);
            }

            public Builder clearOneof(OneofDescriptor oneofDescriptor) {
                return (Builder) super.clearOneof(oneofDescriptor);
            }

            public Builder setRepeatedField(FieldDescriptor fieldDescriptor, int i, Object obj) {
                return (Builder) super.setRepeatedField(fieldDescriptor, i, obj);
            }

            public Builder addRepeatedField(FieldDescriptor fieldDescriptor, Object obj) {
                return (Builder) super.addRepeatedField(fieldDescriptor, obj);
            }

            public Builder mergeFrom(Message message) {
                if (message instanceof PatchItem) {
                    return mergeFrom((PatchItem) message);
                }
                super.mergeFrom(message);
                return this;
            }

            public Builder mergeFrom(PatchItem patchItem) {
                if (patchItem == PatchItem.getDefaultInstance()) {
                    return this;
                }
                if (patchItem.hasCid()) {
                    this.bitField0_ |= 1;
                    this.cid_ = patchItem.cid_;
                    onChanged();
                }
                if (patchItem.hasMid()) {
                    this.bitField0_ |= 2;
                    this.mid_ = patchItem.mid_;
                    onChanged();
                }
                if (patchItem.hasTimestamp()) {
                    setTimestamp(patchItem.getTimestamp());
                }
                if (patchItem.hasRecall()) {
                    setRecall(patchItem.getRecall());
                }
                if (patchItem.hasData()) {
                    this.bitField0_ |= 16;
                    this.data_ = patchItem.data_;
                    onChanged();
                }
                if (patchItem.hasPatchTimestamp()) {
                    setPatchTimestamp(patchItem.getPatchTimestamp());
                }
                if (patchItem.hasFrom()) {
                    this.bitField0_ |= 64;
                    this.from_ = patchItem.from_;
                    onChanged();
                }
                if (patchItem.hasBinaryMsg()) {
                    setBinaryMsg(patchItem.getBinaryMsg());
                }
                if (patchItem.hasMentionAll()) {
                    setMentionAll(patchItem.getMentionAll());
                }
                if (!patchItem.mentionPids_.isEmpty()) {
                    if (this.mentionPids_.isEmpty()) {
                        this.mentionPids_ = patchItem.mentionPids_;
                        this.bitField0_ &= -513;
                    } else {
                        ensureMentionPidsIsMutable();
                        this.mentionPids_.addAll(patchItem.mentionPids_);
                    }
                    onChanged();
                }
                mergeUnknownFields(patchItem.unknownFields);
                onChanged();
                return this;
            }

            /* JADX WARNING: Removed duplicated region for block: B:16:0x0021  */
            /* Code decompiled incorrectly, please refer to instructions dump. */
            public com.avos.avoscloud.Messages.PatchItem.Builder mergeFrom(com.google.protobuf.CodedInputStream r3, com.google.protobuf.ExtensionRegistryLite r4) throws java.io.IOException {
                /*
                    r2 = this;
                    r0 = 0
                    com.google.protobuf.Parser<com.avos.avoscloud.Messages$PatchItem> r1 = com.avos.avoscloud.Messages.PatchItem.PARSER     // Catch:{ InvalidProtocolBufferException -> 0x0011 }
                    java.lang.Object r3 = r1.parsePartialFrom(r3, r4)     // Catch:{ InvalidProtocolBufferException -> 0x0011 }
                    com.avos.avoscloud.Messages$PatchItem r3 = (com.avos.avoscloud.Messages.PatchItem) r3     // Catch:{ InvalidProtocolBufferException -> 0x0011 }
                    if (r3 == 0) goto L_0x000e
                    r2.mergeFrom(r3)
                L_0x000e:
                    return r2
                L_0x000f:
                    r3 = move-exception
                    goto L_0x001f
                L_0x0011:
                    r3 = move-exception
                    com.google.protobuf.MessageLite r4 = r3.getUnfinishedMessage()     // Catch:{ all -> 0x000f }
                    com.avos.avoscloud.Messages$PatchItem r4 = (com.avos.avoscloud.Messages.PatchItem) r4     // Catch:{ all -> 0x000f }
                    java.io.IOException r3 = r3.unwrapIOException()     // Catch:{ all -> 0x001d }
                    throw r3     // Catch:{ all -> 0x001d }
                L_0x001d:
                    r3 = move-exception
                    r0 = r4
                L_0x001f:
                    if (r0 == 0) goto L_0x0024
                    r2.mergeFrom(r0)
                L_0x0024:
                    throw r3
                */
                throw new UnsupportedOperationException("Method not decompiled: com.avos.avoscloud.Messages.PatchItem.Builder.mergeFrom(com.google.protobuf.CodedInputStream, com.google.protobuf.ExtensionRegistryLite):com.avos.avoscloud.Messages$PatchItem$Builder");
            }

            public boolean hasCid() {
                return (this.bitField0_ & 1) == 1;
            }

            public String getCid() {
                Object obj = this.cid_;
                if (obj instanceof String) {
                    return (String) obj;
                }
                ByteString byteString = (ByteString) obj;
                String stringUtf8 = byteString.toStringUtf8();
                if (byteString.isValidUtf8()) {
                    this.cid_ = stringUtf8;
                }
                return stringUtf8;
            }

            public ByteString getCidBytes() {
                Object obj = this.cid_;
                if (!(obj instanceof String)) {
                    return (ByteString) obj;
                }
                ByteString copyFromUtf8 = ByteString.copyFromUtf8((String) obj);
                this.cid_ = copyFromUtf8;
                return copyFromUtf8;
            }

            public Builder setCid(String str) {
                if (str != null) {
                    this.bitField0_ |= 1;
                    this.cid_ = str;
                    onChanged();
                    return this;
                }
                throw new NullPointerException();
            }

            public Builder clearCid() {
                this.bitField0_ &= -2;
                this.cid_ = PatchItem.getDefaultInstance().getCid();
                onChanged();
                return this;
            }

            public Builder setCidBytes(ByteString byteString) {
                if (byteString != null) {
                    this.bitField0_ |= 1;
                    this.cid_ = byteString;
                    onChanged();
                    return this;
                }
                throw new NullPointerException();
            }

            public boolean hasMid() {
                return (this.bitField0_ & 2) == 2;
            }

            public String getMid() {
                Object obj = this.mid_;
                if (obj instanceof String) {
                    return (String) obj;
                }
                ByteString byteString = (ByteString) obj;
                String stringUtf8 = byteString.toStringUtf8();
                if (byteString.isValidUtf8()) {
                    this.mid_ = stringUtf8;
                }
                return stringUtf8;
            }

            public ByteString getMidBytes() {
                Object obj = this.mid_;
                if (!(obj instanceof String)) {
                    return (ByteString) obj;
                }
                ByteString copyFromUtf8 = ByteString.copyFromUtf8((String) obj);
                this.mid_ = copyFromUtf8;
                return copyFromUtf8;
            }

            public Builder setMid(String str) {
                if (str != null) {
                    this.bitField0_ |= 2;
                    this.mid_ = str;
                    onChanged();
                    return this;
                }
                throw new NullPointerException();
            }

            public Builder clearMid() {
                this.bitField0_ &= -3;
                this.mid_ = PatchItem.getDefaultInstance().getMid();
                onChanged();
                return this;
            }

            public Builder setMidBytes(ByteString byteString) {
                if (byteString != null) {
                    this.bitField0_ |= 2;
                    this.mid_ = byteString;
                    onChanged();
                    return this;
                }
                throw new NullPointerException();
            }

            public boolean hasTimestamp() {
                return (this.bitField0_ & 4) == 4;
            }

            public long getTimestamp() {
                return this.timestamp_;
            }

            public Builder setTimestamp(long j) {
                this.bitField0_ |= 4;
                this.timestamp_ = j;
                onChanged();
                return this;
            }

            public Builder clearTimestamp() {
                this.bitField0_ &= -5;
                this.timestamp_ = 0;
                onChanged();
                return this;
            }

            public boolean hasRecall() {
                return (this.bitField0_ & 8) == 8;
            }

            public boolean getRecall() {
                return this.recall_;
            }

            public Builder setRecall(boolean z) {
                this.bitField0_ |= 8;
                this.recall_ = z;
                onChanged();
                return this;
            }

            public Builder clearRecall() {
                this.bitField0_ &= -9;
                this.recall_ = false;
                onChanged();
                return this;
            }

            public boolean hasData() {
                return (this.bitField0_ & 16) == 16;
            }

            public String getData() {
                Object obj = this.data_;
                if (obj instanceof String) {
                    return (String) obj;
                }
                ByteString byteString = (ByteString) obj;
                String stringUtf8 = byteString.toStringUtf8();
                if (byteString.isValidUtf8()) {
                    this.data_ = stringUtf8;
                }
                return stringUtf8;
            }

            public ByteString getDataBytes() {
                Object obj = this.data_;
                if (!(obj instanceof String)) {
                    return (ByteString) obj;
                }
                ByteString copyFromUtf8 = ByteString.copyFromUtf8((String) obj);
                this.data_ = copyFromUtf8;
                return copyFromUtf8;
            }

            public Builder setData(String str) {
                if (str != null) {
                    this.bitField0_ |= 16;
                    this.data_ = str;
                    onChanged();
                    return this;
                }
                throw new NullPointerException();
            }

            public Builder clearData() {
                this.bitField0_ &= -17;
                this.data_ = PatchItem.getDefaultInstance().getData();
                onChanged();
                return this;
            }

            public Builder setDataBytes(ByteString byteString) {
                if (byteString != null) {
                    this.bitField0_ |= 16;
                    this.data_ = byteString;
                    onChanged();
                    return this;
                }
                throw new NullPointerException();
            }

            public boolean hasPatchTimestamp() {
                return (this.bitField0_ & 32) == 32;
            }

            public long getPatchTimestamp() {
                return this.patchTimestamp_;
            }

            public Builder setPatchTimestamp(long j) {
                this.bitField0_ |= 32;
                this.patchTimestamp_ = j;
                onChanged();
                return this;
            }

            public Builder clearPatchTimestamp() {
                this.bitField0_ &= -33;
                this.patchTimestamp_ = 0;
                onChanged();
                return this;
            }

            public boolean hasFrom() {
                return (this.bitField0_ & 64) == 64;
            }

            public String getFrom() {
                Object obj = this.from_;
                if (obj instanceof String) {
                    return (String) obj;
                }
                ByteString byteString = (ByteString) obj;
                String stringUtf8 = byteString.toStringUtf8();
                if (byteString.isValidUtf8()) {
                    this.from_ = stringUtf8;
                }
                return stringUtf8;
            }

            public ByteString getFromBytes() {
                Object obj = this.from_;
                if (!(obj instanceof String)) {
                    return (ByteString) obj;
                }
                ByteString copyFromUtf8 = ByteString.copyFromUtf8((String) obj);
                this.from_ = copyFromUtf8;
                return copyFromUtf8;
            }

            public Builder setFrom(String str) {
                if (str != null) {
                    this.bitField0_ |= 64;
                    this.from_ = str;
                    onChanged();
                    return this;
                }
                throw new NullPointerException();
            }

            public Builder clearFrom() {
                this.bitField0_ &= -65;
                this.from_ = PatchItem.getDefaultInstance().getFrom();
                onChanged();
                return this;
            }

            public Builder setFromBytes(ByteString byteString) {
                if (byteString != null) {
                    this.bitField0_ |= 64;
                    this.from_ = byteString;
                    onChanged();
                    return this;
                }
                throw new NullPointerException();
            }

            public boolean hasBinaryMsg() {
                return (this.bitField0_ & 128) == 128;
            }

            public ByteString getBinaryMsg() {
                return this.binaryMsg_;
            }

            public Builder setBinaryMsg(ByteString byteString) {
                if (byteString != null) {
                    this.bitField0_ |= 128;
                    this.binaryMsg_ = byteString;
                    onChanged();
                    return this;
                }
                throw new NullPointerException();
            }

            public Builder clearBinaryMsg() {
                this.bitField0_ &= -129;
                this.binaryMsg_ = PatchItem.getDefaultInstance().getBinaryMsg();
                onChanged();
                return this;
            }

            public boolean hasMentionAll() {
                return (this.bitField0_ & 256) == 256;
            }

            public boolean getMentionAll() {
                return this.mentionAll_;
            }

            public Builder setMentionAll(boolean z) {
                this.bitField0_ |= 256;
                this.mentionAll_ = z;
                onChanged();
                return this;
            }

            public Builder clearMentionAll() {
                this.bitField0_ &= -257;
                this.mentionAll_ = false;
                onChanged();
                return this;
            }

            private void ensureMentionPidsIsMutable() {
                if ((this.bitField0_ & 512) != 512) {
                    this.mentionPids_ = new LazyStringArrayList(this.mentionPids_);
                    this.bitField0_ |= 512;
                }
            }

            public ProtocolStringList getMentionPidsList() {
                return this.mentionPids_.getUnmodifiableView();
            }

            public int getMentionPidsCount() {
                return this.mentionPids_.size();
            }

            public String getMentionPids(int i) {
                return (String) this.mentionPids_.get(i);
            }

            public ByteString getMentionPidsBytes(int i) {
                return this.mentionPids_.getByteString(i);
            }

            public Builder setMentionPids(int i, String str) {
                if (str != null) {
                    ensureMentionPidsIsMutable();
                    this.mentionPids_.set(i, str);
                    onChanged();
                    return this;
                }
                throw new NullPointerException();
            }

            public Builder addMentionPids(String str) {
                if (str != null) {
                    ensureMentionPidsIsMutable();
                    this.mentionPids_.add(str);
                    onChanged();
                    return this;
                }
                throw new NullPointerException();
            }

            public Builder addAllMentionPids(Iterable<String> iterable) {
                ensureMentionPidsIsMutable();
                com.google.protobuf.AbstractMessageLite.Builder.addAll((Iterable) iterable, (List) this.mentionPids_);
                onChanged();
                return this;
            }

            public Builder clearMentionPids() {
                this.mentionPids_ = LazyStringArrayList.EMPTY;
                this.bitField0_ &= -513;
                onChanged();
                return this;
            }

            public Builder addMentionPidsBytes(ByteString byteString) {
                if (byteString != null) {
                    ensureMentionPidsIsMutable();
                    this.mentionPids_.add(byteString);
                    onChanged();
                    return this;
                }
                throw new NullPointerException();
            }

            public final Builder setUnknownFields(UnknownFieldSet unknownFieldSet) {
                return (Builder) super.setUnknownFields(unknownFieldSet);
            }

            public final Builder mergeUnknownFields(UnknownFieldSet unknownFieldSet) {
                return (Builder) super.mergeUnknownFields(unknownFieldSet);
            }
        }

        private PatchItem(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
            super(builder);
            this.memoizedIsInitialized = -1;
        }

        private PatchItem() {
            this.memoizedIsInitialized = -1;
            String str = "";
            this.cid_ = str;
            this.mid_ = str;
            this.timestamp_ = 0;
            this.recall_ = false;
            this.data_ = str;
            this.patchTimestamp_ = 0;
            this.from_ = str;
            this.binaryMsg_ = ByteString.EMPTY;
            this.mentionAll_ = false;
            this.mentionPids_ = LazyStringArrayList.EMPTY;
        }

        public final UnknownFieldSet getUnknownFields() {
            return this.unknownFields;
        }

        private PatchItem(CodedInputStream codedInputStream, ExtensionRegistryLite extensionRegistryLite) throws InvalidProtocolBufferException {
            this();
            com.google.protobuf.UnknownFieldSet.Builder newBuilder = UnknownFieldSet.newBuilder();
            boolean z = false;
            boolean z2 = false;
            while (!z) {
                try {
                    int readTag = codedInputStream.readTag();
                    switch (readTag) {
                        case 0:
                            z = true;
                            break;
                        case 10:
                            ByteString readBytes = codedInputStream.readBytes();
                            this.bitField0_ = 1 | this.bitField0_;
                            this.cid_ = readBytes;
                            break;
                        case 18:
                            ByteString readBytes2 = codedInputStream.readBytes();
                            this.bitField0_ |= 2;
                            this.mid_ = readBytes2;
                            break;
                        case 24:
                            this.bitField0_ |= 4;
                            this.timestamp_ = codedInputStream.readInt64();
                            break;
                        case 32:
                            this.bitField0_ |= 8;
                            this.recall_ = codedInputStream.readBool();
                            break;
                        case 42:
                            ByteString readBytes3 = codedInputStream.readBytes();
                            this.bitField0_ |= 16;
                            this.data_ = readBytes3;
                            break;
                        case 48:
                            this.bitField0_ |= 32;
                            this.patchTimestamp_ = codedInputStream.readInt64();
                            break;
                        case 58:
                            ByteString readBytes4 = codedInputStream.readBytes();
                            this.bitField0_ |= 64;
                            this.from_ = readBytes4;
                            break;
                        case 66:
                            this.bitField0_ |= 128;
                            this.binaryMsg_ = codedInputStream.readBytes();
                            break;
                        case 72:
                            this.bitField0_ |= 256;
                            this.mentionAll_ = codedInputStream.readBool();
                            break;
                        case 82:
                            ByteString readBytes5 = codedInputStream.readBytes();
                            if (!(z2 & true)) {
                                this.mentionPids_ = new LazyStringArrayList();
                                z2 |= true;
                            }
                            this.mentionPids_.add(readBytes5);
                            break;
                        default:
                            if (parseUnknownField(codedInputStream, newBuilder, extensionRegistryLite, readTag)) {
                                break;
                            }
                            z = true;
                            break;
                    }
                } catch (InvalidProtocolBufferException e) {
                    throw e.setUnfinishedMessage(this);
                } catch (IOException e2) {
                    throw new InvalidProtocolBufferException(e2).setUnfinishedMessage(this);
                } catch (Throwable th) {
                    if (z2 & true) {
                        this.mentionPids_ = this.mentionPids_.getUnmodifiableView();
                    }
                    this.unknownFields = newBuilder.build();
                    makeExtensionsImmutable();
                    throw th;
                }
            }
            if (z2 & true) {
                this.mentionPids_ = this.mentionPids_.getUnmodifiableView();
            }
            this.unknownFields = newBuilder.build();
            makeExtensionsImmutable();
        }

        public static final Descriptor getDescriptor() {
            return Messages.internal_static_com_avos_avoscloud_PatchItem_descriptor;
        }

        /* access modifiers changed from: protected */
        public FieldAccessorTable internalGetFieldAccessorTable() {
            return Messages.internal_static_com_avos_avoscloud_PatchItem_fieldAccessorTable.ensureFieldAccessorsInitialized(PatchItem.class, Builder.class);
        }

        public boolean hasCid() {
            return (this.bitField0_ & 1) == 1;
        }

        public String getCid() {
            Object obj = this.cid_;
            if (obj instanceof String) {
                return (String) obj;
            }
            ByteString byteString = (ByteString) obj;
            String stringUtf8 = byteString.toStringUtf8();
            if (byteString.isValidUtf8()) {
                this.cid_ = stringUtf8;
            }
            return stringUtf8;
        }

        public ByteString getCidBytes() {
            Object obj = this.cid_;
            if (!(obj instanceof String)) {
                return (ByteString) obj;
            }
            ByteString copyFromUtf8 = ByteString.copyFromUtf8((String) obj);
            this.cid_ = copyFromUtf8;
            return copyFromUtf8;
        }

        public boolean hasMid() {
            return (this.bitField0_ & 2) == 2;
        }

        public String getMid() {
            Object obj = this.mid_;
            if (obj instanceof String) {
                return (String) obj;
            }
            ByteString byteString = (ByteString) obj;
            String stringUtf8 = byteString.toStringUtf8();
            if (byteString.isValidUtf8()) {
                this.mid_ = stringUtf8;
            }
            return stringUtf8;
        }

        public ByteString getMidBytes() {
            Object obj = this.mid_;
            if (!(obj instanceof String)) {
                return (ByteString) obj;
            }
            ByteString copyFromUtf8 = ByteString.copyFromUtf8((String) obj);
            this.mid_ = copyFromUtf8;
            return copyFromUtf8;
        }

        public boolean hasTimestamp() {
            return (this.bitField0_ & 4) == 4;
        }

        public long getTimestamp() {
            return this.timestamp_;
        }

        public boolean hasRecall() {
            return (this.bitField0_ & 8) == 8;
        }

        public boolean getRecall() {
            return this.recall_;
        }

        public boolean hasData() {
            return (this.bitField0_ & 16) == 16;
        }

        public String getData() {
            Object obj = this.data_;
            if (obj instanceof String) {
                return (String) obj;
            }
            ByteString byteString = (ByteString) obj;
            String stringUtf8 = byteString.toStringUtf8();
            if (byteString.isValidUtf8()) {
                this.data_ = stringUtf8;
            }
            return stringUtf8;
        }

        public ByteString getDataBytes() {
            Object obj = this.data_;
            if (!(obj instanceof String)) {
                return (ByteString) obj;
            }
            ByteString copyFromUtf8 = ByteString.copyFromUtf8((String) obj);
            this.data_ = copyFromUtf8;
            return copyFromUtf8;
        }

        public boolean hasPatchTimestamp() {
            return (this.bitField0_ & 32) == 32;
        }

        public long getPatchTimestamp() {
            return this.patchTimestamp_;
        }

        public boolean hasFrom() {
            return (this.bitField0_ & 64) == 64;
        }

        public String getFrom() {
            Object obj = this.from_;
            if (obj instanceof String) {
                return (String) obj;
            }
            ByteString byteString = (ByteString) obj;
            String stringUtf8 = byteString.toStringUtf8();
            if (byteString.isValidUtf8()) {
                this.from_ = stringUtf8;
            }
            return stringUtf8;
        }

        public ByteString getFromBytes() {
            Object obj = this.from_;
            if (!(obj instanceof String)) {
                return (ByteString) obj;
            }
            ByteString copyFromUtf8 = ByteString.copyFromUtf8((String) obj);
            this.from_ = copyFromUtf8;
            return copyFromUtf8;
        }

        public boolean hasBinaryMsg() {
            return (this.bitField0_ & 128) == 128;
        }

        public ByteString getBinaryMsg() {
            return this.binaryMsg_;
        }

        public boolean hasMentionAll() {
            return (this.bitField0_ & 256) == 256;
        }

        public boolean getMentionAll() {
            return this.mentionAll_;
        }

        public ProtocolStringList getMentionPidsList() {
            return this.mentionPids_;
        }

        public int getMentionPidsCount() {
            return this.mentionPids_.size();
        }

        public String getMentionPids(int i) {
            return (String) this.mentionPids_.get(i);
        }

        public ByteString getMentionPidsBytes(int i) {
            return this.mentionPids_.getByteString(i);
        }

        public final boolean isInitialized() {
            byte b = this.memoizedIsInitialized;
            if (b == 1) {
                return true;
            }
            if (b == 0) {
                return false;
            }
            this.memoizedIsInitialized = 1;
            return true;
        }

        public void writeTo(CodedOutputStream codedOutputStream) throws IOException {
            if ((this.bitField0_ & 1) == 1) {
                GeneratedMessageV3.writeString(codedOutputStream, 1, this.cid_);
            }
            if ((this.bitField0_ & 2) == 2) {
                GeneratedMessageV3.writeString(codedOutputStream, 2, this.mid_);
            }
            if ((this.bitField0_ & 4) == 4) {
                codedOutputStream.writeInt64(3, this.timestamp_);
            }
            if ((this.bitField0_ & 8) == 8) {
                codedOutputStream.writeBool(4, this.recall_);
            }
            if ((this.bitField0_ & 16) == 16) {
                GeneratedMessageV3.writeString(codedOutputStream, 5, this.data_);
            }
            if ((this.bitField0_ & 32) == 32) {
                codedOutputStream.writeInt64(6, this.patchTimestamp_);
            }
            if ((this.bitField0_ & 64) == 64) {
                GeneratedMessageV3.writeString(codedOutputStream, 7, this.from_);
            }
            if ((this.bitField0_ & 128) == 128) {
                codedOutputStream.writeBytes(8, this.binaryMsg_);
            }
            if ((this.bitField0_ & 256) == 256) {
                codedOutputStream.writeBool(9, this.mentionAll_);
            }
            for (int i = 0; i < this.mentionPids_.size(); i++) {
                GeneratedMessageV3.writeString(codedOutputStream, 10, this.mentionPids_.getRaw(i));
            }
            this.unknownFields.writeTo(codedOutputStream);
        }

        public int getSerializedSize() {
            int i = this.memoizedSize;
            if (i != -1) {
                return i;
            }
            int computeStringSize = (this.bitField0_ & 1) == 1 ? GeneratedMessageV3.computeStringSize(1, this.cid_) + 0 : 0;
            if ((this.bitField0_ & 2) == 2) {
                computeStringSize += GeneratedMessageV3.computeStringSize(2, this.mid_);
            }
            if ((this.bitField0_ & 4) == 4) {
                computeStringSize += CodedOutputStream.computeInt64Size(3, this.timestamp_);
            }
            if ((this.bitField0_ & 8) == 8) {
                computeStringSize += CodedOutputStream.computeBoolSize(4, this.recall_);
            }
            if ((this.bitField0_ & 16) == 16) {
                computeStringSize += GeneratedMessageV3.computeStringSize(5, this.data_);
            }
            if ((this.bitField0_ & 32) == 32) {
                computeStringSize += CodedOutputStream.computeInt64Size(6, this.patchTimestamp_);
            }
            if ((this.bitField0_ & 64) == 64) {
                computeStringSize += GeneratedMessageV3.computeStringSize(7, this.from_);
            }
            if ((this.bitField0_ & 128) == 128) {
                computeStringSize += CodedOutputStream.computeBytesSize(8, this.binaryMsg_);
            }
            if ((this.bitField0_ & 256) == 256) {
                computeStringSize += CodedOutputStream.computeBoolSize(9, this.mentionAll_);
            }
            int i2 = 0;
            for (int i3 = 0; i3 < this.mentionPids_.size(); i3++) {
                i2 += computeStringSizeNoTag(this.mentionPids_.getRaw(i3));
            }
            int size = computeStringSize + i2 + (getMentionPidsList().size() * 1) + this.unknownFields.getSerializedSize();
            this.memoizedSize = size;
            return size;
        }

        public boolean equals(Object obj) {
            boolean z = true;
            if (obj == this) {
                return true;
            }
            if (!(obj instanceof PatchItem)) {
                return super.equals(obj);
            }
            PatchItem patchItem = (PatchItem) obj;
            boolean z2 = hasCid() == patchItem.hasCid();
            if (hasCid()) {
                z2 = z2 && getCid().equals(patchItem.getCid());
            }
            boolean z3 = z2 && hasMid() == patchItem.hasMid();
            if (hasMid()) {
                z3 = z3 && getMid().equals(patchItem.getMid());
            }
            boolean z4 = z3 && hasTimestamp() == patchItem.hasTimestamp();
            if (hasTimestamp()) {
                z4 = z4 && getTimestamp() == patchItem.getTimestamp();
            }
            boolean z5 = z4 && hasRecall() == patchItem.hasRecall();
            if (hasRecall()) {
                z5 = z5 && getRecall() == patchItem.getRecall();
            }
            boolean z6 = z5 && hasData() == patchItem.hasData();
            if (hasData()) {
                z6 = z6 && getData().equals(patchItem.getData());
            }
            boolean z7 = z6 && hasPatchTimestamp() == patchItem.hasPatchTimestamp();
            if (hasPatchTimestamp()) {
                z7 = z7 && getPatchTimestamp() == patchItem.getPatchTimestamp();
            }
            boolean z8 = z7 && hasFrom() == patchItem.hasFrom();
            if (hasFrom()) {
                z8 = z8 && getFrom().equals(patchItem.getFrom());
            }
            boolean z9 = z8 && hasBinaryMsg() == patchItem.hasBinaryMsg();
            if (hasBinaryMsg()) {
                z9 = z9 && getBinaryMsg().equals(patchItem.getBinaryMsg());
            }
            boolean z10 = z9 && hasMentionAll() == patchItem.hasMentionAll();
            if (hasMentionAll()) {
                z10 = z10 && getMentionAll() == patchItem.getMentionAll();
            }
            if (!(z10 && getMentionPidsList().equals(patchItem.getMentionPidsList())) || !this.unknownFields.equals(patchItem.unknownFields)) {
                z = false;
            }
            return z;
        }

        public int hashCode() {
            if (this.memoizedHashCode != 0) {
                return this.memoizedHashCode;
            }
            int hashCode = 779 + getDescriptor().hashCode();
            if (hasCid()) {
                hashCode = (((hashCode * 37) + 1) * 53) + getCid().hashCode();
            }
            if (hasMid()) {
                hashCode = (((hashCode * 37) + 2) * 53) + getMid().hashCode();
            }
            if (hasTimestamp()) {
                hashCode = (((hashCode * 37) + 3) * 53) + Internal.hashLong(getTimestamp());
            }
            if (hasRecall()) {
                hashCode = (((hashCode * 37) + 4) * 53) + Internal.hashBoolean(getRecall());
            }
            if (hasData()) {
                hashCode = (((hashCode * 37) + 5) * 53) + getData().hashCode();
            }
            if (hasPatchTimestamp()) {
                hashCode = (((hashCode * 37) + 6) * 53) + Internal.hashLong(getPatchTimestamp());
            }
            if (hasFrom()) {
                hashCode = (((hashCode * 37) + 7) * 53) + getFrom().hashCode();
            }
            if (hasBinaryMsg()) {
                hashCode = (((hashCode * 37) + 8) * 53) + getBinaryMsg().hashCode();
            }
            if (hasMentionAll()) {
                hashCode = (((hashCode * 37) + 9) * 53) + Internal.hashBoolean(getMentionAll());
            }
            if (getMentionPidsCount() > 0) {
                hashCode = (((hashCode * 37) + 10) * 53) + getMentionPidsList().hashCode();
            }
            int hashCode2 = (hashCode * 29) + this.unknownFields.hashCode();
            this.memoizedHashCode = hashCode2;
            return hashCode2;
        }

        public static PatchItem parseFrom(ByteBuffer byteBuffer) throws InvalidProtocolBufferException {
            return (PatchItem) PARSER.parseFrom(byteBuffer);
        }

        public static PatchItem parseFrom(ByteBuffer byteBuffer, ExtensionRegistryLite extensionRegistryLite) throws InvalidProtocolBufferException {
            return (PatchItem) PARSER.parseFrom(byteBuffer, extensionRegistryLite);
        }

        public static PatchItem parseFrom(ByteString byteString) throws InvalidProtocolBufferException {
            return (PatchItem) PARSER.parseFrom(byteString);
        }

        public static PatchItem parseFrom(ByteString byteString, ExtensionRegistryLite extensionRegistryLite) throws InvalidProtocolBufferException {
            return (PatchItem) PARSER.parseFrom(byteString, extensionRegistryLite);
        }

        public static PatchItem parseFrom(byte[] bArr) throws InvalidProtocolBufferException {
            return (PatchItem) PARSER.parseFrom(bArr);
        }

        public static PatchItem parseFrom(byte[] bArr, ExtensionRegistryLite extensionRegistryLite) throws InvalidProtocolBufferException {
            return (PatchItem) PARSER.parseFrom(bArr, extensionRegistryLite);
        }

        public static PatchItem parseFrom(InputStream inputStream) throws IOException {
            return (PatchItem) GeneratedMessageV3.parseWithIOException(PARSER, inputStream);
        }

        public static PatchItem parseFrom(InputStream inputStream, ExtensionRegistryLite extensionRegistryLite) throws IOException {
            return (PatchItem) GeneratedMessageV3.parseWithIOException(PARSER, inputStream, extensionRegistryLite);
        }

        public static PatchItem parseDelimitedFrom(InputStream inputStream) throws IOException {
            return (PatchItem) GeneratedMessageV3.parseDelimitedWithIOException(PARSER, inputStream);
        }

        public static PatchItem parseDelimitedFrom(InputStream inputStream, ExtensionRegistryLite extensionRegistryLite) throws IOException {
            return (PatchItem) GeneratedMessageV3.parseDelimitedWithIOException(PARSER, inputStream, extensionRegistryLite);
        }

        public static PatchItem parseFrom(CodedInputStream codedInputStream) throws IOException {
            return (PatchItem) GeneratedMessageV3.parseWithIOException(PARSER, codedInputStream);
        }

        public static PatchItem parseFrom(CodedInputStream codedInputStream, ExtensionRegistryLite extensionRegistryLite) throws IOException {
            return (PatchItem) GeneratedMessageV3.parseWithIOException(PARSER, codedInputStream, extensionRegistryLite);
        }

        public Builder newBuilderForType() {
            return newBuilder();
        }

        public static Builder newBuilder() {
            return DEFAULT_INSTANCE.toBuilder();
        }

        public static Builder newBuilder(PatchItem patchItem) {
            return DEFAULT_INSTANCE.toBuilder().mergeFrom(patchItem);
        }

        public Builder toBuilder() {
            if (this == DEFAULT_INSTANCE) {
                return new Builder();
            }
            return new Builder().mergeFrom(this);
        }

        /* access modifiers changed from: protected */
        public Builder newBuilderForType(BuilderParent builderParent) {
            return new Builder(builderParent);
        }

        public static PatchItem getDefaultInstance() {
            return DEFAULT_INSTANCE;
        }

        public static Parser<PatchItem> parser() {
            return PARSER;
        }

        public Parser<PatchItem> getParserForType() {
            return PARSER;
        }

        public PatchItem getDefaultInstanceForType() {
            return DEFAULT_INSTANCE;
        }
    }

    public interface PatchItemOrBuilder extends MessageOrBuilder {
        ByteString getBinaryMsg();

        String getCid();

        ByteString getCidBytes();

        String getData();

        ByteString getDataBytes();

        String getFrom();

        ByteString getFromBytes();

        boolean getMentionAll();

        String getMentionPids(int i);

        ByteString getMentionPidsBytes(int i);

        int getMentionPidsCount();

        List<String> getMentionPidsList();

        String getMid();

        ByteString getMidBytes();

        long getPatchTimestamp();

        boolean getRecall();

        long getTimestamp();

        boolean hasBinaryMsg();

        boolean hasCid();

        boolean hasData();

        boolean hasFrom();

        boolean hasMentionAll();

        boolean hasMid();

        boolean hasPatchTimestamp();

        boolean hasRecall();

        boolean hasTimestamp();
    }

    public static final class PresenceCommand extends GeneratedMessageV3 implements PresenceCommandOrBuilder {
        public static final int CID_FIELD_NUMBER = 3;
        private static final PresenceCommand DEFAULT_INSTANCE = new PresenceCommand();
        @Deprecated
        public static final Parser<PresenceCommand> PARSER = new AbstractParser<PresenceCommand>() {
            public PresenceCommand parsePartialFrom(CodedInputStream codedInputStream, ExtensionRegistryLite extensionRegistryLite) throws InvalidProtocolBufferException {
                return new PresenceCommand(codedInputStream, extensionRegistryLite);
            }
        };
        public static final int SESSIONPEERIDS_FIELD_NUMBER = 2;
        public static final int STATUS_FIELD_NUMBER = 1;
        private static final long serialVersionUID = 0;
        /* access modifiers changed from: private */
        public int bitField0_;
        /* access modifiers changed from: private */
        public volatile Object cid_;
        private byte memoizedIsInitialized;
        /* access modifiers changed from: private */
        public LazyStringList sessionPeerIds_;
        /* access modifiers changed from: private */
        public int status_;

        public static final class Builder extends com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements PresenceCommandOrBuilder {
            private int bitField0_;
            private Object cid_;
            private LazyStringList sessionPeerIds_;
            private int status_;

            public final boolean isInitialized() {
                return true;
            }

            public static final Descriptor getDescriptor() {
                return Messages.internal_static_com_avos_avoscloud_PresenceCommand_descriptor;
            }

            /* access modifiers changed from: protected */
            public FieldAccessorTable internalGetFieldAccessorTable() {
                return Messages.internal_static_com_avos_avoscloud_PresenceCommand_fieldAccessorTable.ensureFieldAccessorsInitialized(PresenceCommand.class, Builder.class);
            }

            private Builder() {
                this.status_ = 1;
                this.sessionPeerIds_ = LazyStringArrayList.EMPTY;
                this.cid_ = "";
                maybeForceBuilderInitialization();
            }

            private Builder(BuilderParent builderParent) {
                super(builderParent);
                this.status_ = 1;
                this.sessionPeerIds_ = LazyStringArrayList.EMPTY;
                this.cid_ = "";
                maybeForceBuilderInitialization();
            }

            private void maybeForceBuilderInitialization() {
                PresenceCommand.alwaysUseFieldBuilders;
            }

            public Builder clear() {
                super.clear();
                this.status_ = 1;
                this.bitField0_ &= -2;
                this.sessionPeerIds_ = LazyStringArrayList.EMPTY;
                this.bitField0_ &= -3;
                this.cid_ = "";
                this.bitField0_ &= -5;
                return this;
            }

            public Descriptor getDescriptorForType() {
                return Messages.internal_static_com_avos_avoscloud_PresenceCommand_descriptor;
            }

            public PresenceCommand getDefaultInstanceForType() {
                return PresenceCommand.getDefaultInstance();
            }

            public PresenceCommand build() {
                PresenceCommand buildPartial = buildPartial();
                if (buildPartial.isInitialized()) {
                    return buildPartial;
                }
                throw newUninitializedMessageException(buildPartial);
            }

            public PresenceCommand buildPartial() {
                PresenceCommand presenceCommand = new PresenceCommand((com.google.protobuf.GeneratedMessageV3.Builder) this);
                int i = this.bitField0_;
                int i2 = 1;
                if ((i & 1) != 1) {
                    i2 = 0;
                }
                presenceCommand.status_ = this.status_;
                if ((this.bitField0_ & 2) == 2) {
                    this.sessionPeerIds_ = this.sessionPeerIds_.getUnmodifiableView();
                    this.bitField0_ &= -3;
                }
                presenceCommand.sessionPeerIds_ = this.sessionPeerIds_;
                if ((i & 4) == 4) {
                    i2 |= 2;
                }
                presenceCommand.cid_ = this.cid_;
                presenceCommand.bitField0_ = i2;
                onBuilt();
                return presenceCommand;
            }

            public Builder clone() {
                return (Builder) super.clone();
            }

            public Builder setField(FieldDescriptor fieldDescriptor, Object obj) {
                return (Builder) super.setField(fieldDescriptor, obj);
            }

            public Builder clearField(FieldDescriptor fieldDescriptor) {
                return (Builder) super.clearField(fieldDescriptor);
            }

            public Builder clearOneof(OneofDescriptor oneofDescriptor) {
                return (Builder) super.clearOneof(oneofDescriptor);
            }

            public Builder setRepeatedField(FieldDescriptor fieldDescriptor, int i, Object obj) {
                return (Builder) super.setRepeatedField(fieldDescriptor, i, obj);
            }

            public Builder addRepeatedField(FieldDescriptor fieldDescriptor, Object obj) {
                return (Builder) super.addRepeatedField(fieldDescriptor, obj);
            }

            public Builder mergeFrom(Message message) {
                if (message instanceof PresenceCommand) {
                    return mergeFrom((PresenceCommand) message);
                }
                super.mergeFrom(message);
                return this;
            }

            public Builder mergeFrom(PresenceCommand presenceCommand) {
                if (presenceCommand == PresenceCommand.getDefaultInstance()) {
                    return this;
                }
                if (presenceCommand.hasStatus()) {
                    setStatus(presenceCommand.getStatus());
                }
                if (!presenceCommand.sessionPeerIds_.isEmpty()) {
                    if (this.sessionPeerIds_.isEmpty()) {
                        this.sessionPeerIds_ = presenceCommand.sessionPeerIds_;
                        this.bitField0_ &= -3;
                    } else {
                        ensureSessionPeerIdsIsMutable();
                        this.sessionPeerIds_.addAll(presenceCommand.sessionPeerIds_);
                    }
                    onChanged();
                }
                if (presenceCommand.hasCid()) {
                    this.bitField0_ |= 4;
                    this.cid_ = presenceCommand.cid_;
                    onChanged();
                }
                mergeUnknownFields(presenceCommand.unknownFields);
                onChanged();
                return this;
            }

            /* JADX WARNING: Removed duplicated region for block: B:16:0x0021  */
            /* Code decompiled incorrectly, please refer to instructions dump. */
            public com.avos.avoscloud.Messages.PresenceCommand.Builder mergeFrom(com.google.protobuf.CodedInputStream r3, com.google.protobuf.ExtensionRegistryLite r4) throws java.io.IOException {
                /*
                    r2 = this;
                    r0 = 0
                    com.google.protobuf.Parser<com.avos.avoscloud.Messages$PresenceCommand> r1 = com.avos.avoscloud.Messages.PresenceCommand.PARSER     // Catch:{ InvalidProtocolBufferException -> 0x0011 }
                    java.lang.Object r3 = r1.parsePartialFrom(r3, r4)     // Catch:{ InvalidProtocolBufferException -> 0x0011 }
                    com.avos.avoscloud.Messages$PresenceCommand r3 = (com.avos.avoscloud.Messages.PresenceCommand) r3     // Catch:{ InvalidProtocolBufferException -> 0x0011 }
                    if (r3 == 0) goto L_0x000e
                    r2.mergeFrom(r3)
                L_0x000e:
                    return r2
                L_0x000f:
                    r3 = move-exception
                    goto L_0x001f
                L_0x0011:
                    r3 = move-exception
                    com.google.protobuf.MessageLite r4 = r3.getUnfinishedMessage()     // Catch:{ all -> 0x000f }
                    com.avos.avoscloud.Messages$PresenceCommand r4 = (com.avos.avoscloud.Messages.PresenceCommand) r4     // Catch:{ all -> 0x000f }
                    java.io.IOException r3 = r3.unwrapIOException()     // Catch:{ all -> 0x001d }
                    throw r3     // Catch:{ all -> 0x001d }
                L_0x001d:
                    r3 = move-exception
                    r0 = r4
                L_0x001f:
                    if (r0 == 0) goto L_0x0024
                    r2.mergeFrom(r0)
                L_0x0024:
                    throw r3
                */
                throw new UnsupportedOperationException("Method not decompiled: com.avos.avoscloud.Messages.PresenceCommand.Builder.mergeFrom(com.google.protobuf.CodedInputStream, com.google.protobuf.ExtensionRegistryLite):com.avos.avoscloud.Messages$PresenceCommand$Builder");
            }

            public boolean hasStatus() {
                return (this.bitField0_ & 1) == 1;
            }

            public StatusType getStatus() {
                StatusType valueOf = StatusType.valueOf(this.status_);
                return valueOf == null ? StatusType.on : valueOf;
            }

            public Builder setStatus(StatusType statusType) {
                if (statusType != null) {
                    this.bitField0_ |= 1;
                    this.status_ = statusType.getNumber();
                    onChanged();
                    return this;
                }
                throw new NullPointerException();
            }

            public Builder clearStatus() {
                this.bitField0_ &= -2;
                this.status_ = 1;
                onChanged();
                return this;
            }

            private void ensureSessionPeerIdsIsMutable() {
                if ((this.bitField0_ & 2) != 2) {
                    this.sessionPeerIds_ = new LazyStringArrayList(this.sessionPeerIds_);
                    this.bitField0_ |= 2;
                }
            }

            public ProtocolStringList getSessionPeerIdsList() {
                return this.sessionPeerIds_.getUnmodifiableView();
            }

            public int getSessionPeerIdsCount() {
                return this.sessionPeerIds_.size();
            }

            public String getSessionPeerIds(int i) {
                return (String) this.sessionPeerIds_.get(i);
            }

            public ByteString getSessionPeerIdsBytes(int i) {
                return this.sessionPeerIds_.getByteString(i);
            }

            public Builder setSessionPeerIds(int i, String str) {
                if (str != null) {
                    ensureSessionPeerIdsIsMutable();
                    this.sessionPeerIds_.set(i, str);
                    onChanged();
                    return this;
                }
                throw new NullPointerException();
            }

            public Builder addSessionPeerIds(String str) {
                if (str != null) {
                    ensureSessionPeerIdsIsMutable();
                    this.sessionPeerIds_.add(str);
                    onChanged();
                    return this;
                }
                throw new NullPointerException();
            }

            public Builder addAllSessionPeerIds(Iterable<String> iterable) {
                ensureSessionPeerIdsIsMutable();
                com.google.protobuf.AbstractMessageLite.Builder.addAll((Iterable) iterable, (List) this.sessionPeerIds_);
                onChanged();
                return this;
            }

            public Builder clearSessionPeerIds() {
                this.sessionPeerIds_ = LazyStringArrayList.EMPTY;
                this.bitField0_ &= -3;
                onChanged();
                return this;
            }

            public Builder addSessionPeerIdsBytes(ByteString byteString) {
                if (byteString != null) {
                    ensureSessionPeerIdsIsMutable();
                    this.sessionPeerIds_.add(byteString);
                    onChanged();
                    return this;
                }
                throw new NullPointerException();
            }

            public boolean hasCid() {
                return (this.bitField0_ & 4) == 4;
            }

            public String getCid() {
                Object obj = this.cid_;
                if (obj instanceof String) {
                    return (String) obj;
                }
                ByteString byteString = (ByteString) obj;
                String stringUtf8 = byteString.toStringUtf8();
                if (byteString.isValidUtf8()) {
                    this.cid_ = stringUtf8;
                }
                return stringUtf8;
            }

            public ByteString getCidBytes() {
                Object obj = this.cid_;
                if (!(obj instanceof String)) {
                    return (ByteString) obj;
                }
                ByteString copyFromUtf8 = ByteString.copyFromUtf8((String) obj);
                this.cid_ = copyFromUtf8;
                return copyFromUtf8;
            }

            public Builder setCid(String str) {
                if (str != null) {
                    this.bitField0_ |= 4;
                    this.cid_ = str;
                    onChanged();
                    return this;
                }
                throw new NullPointerException();
            }

            public Builder clearCid() {
                this.bitField0_ &= -5;
                this.cid_ = PresenceCommand.getDefaultInstance().getCid();
                onChanged();
                return this;
            }

            public Builder setCidBytes(ByteString byteString) {
                if (byteString != null) {
                    this.bitField0_ |= 4;
                    this.cid_ = byteString;
                    onChanged();
                    return this;
                }
                throw new NullPointerException();
            }

            public final Builder setUnknownFields(UnknownFieldSet unknownFieldSet) {
                return (Builder) super.setUnknownFields(unknownFieldSet);
            }

            public final Builder mergeUnknownFields(UnknownFieldSet unknownFieldSet) {
                return (Builder) super.mergeUnknownFields(unknownFieldSet);
            }
        }

        private PresenceCommand(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
            super(builder);
            this.memoizedIsInitialized = -1;
        }

        private PresenceCommand() {
            this.memoizedIsInitialized = -1;
            this.status_ = 1;
            this.sessionPeerIds_ = LazyStringArrayList.EMPTY;
            this.cid_ = "";
        }

        public final UnknownFieldSet getUnknownFields() {
            return this.unknownFields;
        }

        private PresenceCommand(CodedInputStream codedInputStream, ExtensionRegistryLite extensionRegistryLite) throws InvalidProtocolBufferException {
            this();
            com.google.protobuf.UnknownFieldSet.Builder newBuilder = UnknownFieldSet.newBuilder();
            boolean z = false;
            boolean z2 = false;
            while (!z) {
                try {
                    int readTag = codedInputStream.readTag();
                    if (readTag != 0) {
                        if (readTag == 8) {
                            int readEnum = codedInputStream.readEnum();
                            if (StatusType.valueOf(readEnum) == null) {
                                newBuilder.mergeVarintField(1, readEnum);
                            } else {
                                this.bitField0_ = 1 | this.bitField0_;
                                this.status_ = readEnum;
                            }
                        } else if (readTag == 18) {
                            ByteString readBytes = codedInputStream.readBytes();
                            if (!(z2 & true)) {
                                this.sessionPeerIds_ = new LazyStringArrayList();
                                z2 |= true;
                            }
                            this.sessionPeerIds_.add(readBytes);
                        } else if (readTag == 26) {
                            ByteString readBytes2 = codedInputStream.readBytes();
                            this.bitField0_ |= 2;
                            this.cid_ = readBytes2;
                        } else if (!parseUnknownField(codedInputStream, newBuilder, extensionRegistryLite, readTag)) {
                        }
                    }
                    z = true;
                } catch (InvalidProtocolBufferException e) {
                    throw e.setUnfinishedMessage(this);
                } catch (IOException e2) {
                    throw new InvalidProtocolBufferException(e2).setUnfinishedMessage(this);
                } catch (Throwable th) {
                    if (z2 & true) {
                        this.sessionPeerIds_ = this.sessionPeerIds_.getUnmodifiableView();
                    }
                    this.unknownFields = newBuilder.build();
                    makeExtensionsImmutable();
                    throw th;
                }
            }
            if (z2 & true) {
                this.sessionPeerIds_ = this.sessionPeerIds_.getUnmodifiableView();
            }
            this.unknownFields = newBuilder.build();
            makeExtensionsImmutable();
        }

        public static final Descriptor getDescriptor() {
            return Messages.internal_static_com_avos_avoscloud_PresenceCommand_descriptor;
        }

        /* access modifiers changed from: protected */
        public FieldAccessorTable internalGetFieldAccessorTable() {
            return Messages.internal_static_com_avos_avoscloud_PresenceCommand_fieldAccessorTable.ensureFieldAccessorsInitialized(PresenceCommand.class, Builder.class);
        }

        public boolean hasStatus() {
            return (this.bitField0_ & 1) == 1;
        }

        public StatusType getStatus() {
            StatusType valueOf = StatusType.valueOf(this.status_);
            return valueOf == null ? StatusType.on : valueOf;
        }

        public ProtocolStringList getSessionPeerIdsList() {
            return this.sessionPeerIds_;
        }

        public int getSessionPeerIdsCount() {
            return this.sessionPeerIds_.size();
        }

        public String getSessionPeerIds(int i) {
            return (String) this.sessionPeerIds_.get(i);
        }

        public ByteString getSessionPeerIdsBytes(int i) {
            return this.sessionPeerIds_.getByteString(i);
        }

        public boolean hasCid() {
            return (this.bitField0_ & 2) == 2;
        }

        public String getCid() {
            Object obj = this.cid_;
            if (obj instanceof String) {
                return (String) obj;
            }
            ByteString byteString = (ByteString) obj;
            String stringUtf8 = byteString.toStringUtf8();
            if (byteString.isValidUtf8()) {
                this.cid_ = stringUtf8;
            }
            return stringUtf8;
        }

        public ByteString getCidBytes() {
            Object obj = this.cid_;
            if (!(obj instanceof String)) {
                return (ByteString) obj;
            }
            ByteString copyFromUtf8 = ByteString.copyFromUtf8((String) obj);
            this.cid_ = copyFromUtf8;
            return copyFromUtf8;
        }

        public final boolean isInitialized() {
            byte b = this.memoizedIsInitialized;
            if (b == 1) {
                return true;
            }
            if (b == 0) {
                return false;
            }
            this.memoizedIsInitialized = 1;
            return true;
        }

        public void writeTo(CodedOutputStream codedOutputStream) throws IOException {
            if ((this.bitField0_ & 1) == 1) {
                codedOutputStream.writeEnum(1, this.status_);
            }
            for (int i = 0; i < this.sessionPeerIds_.size(); i++) {
                GeneratedMessageV3.writeString(codedOutputStream, 2, this.sessionPeerIds_.getRaw(i));
            }
            if ((this.bitField0_ & 2) == 2) {
                GeneratedMessageV3.writeString(codedOutputStream, 3, this.cid_);
            }
            this.unknownFields.writeTo(codedOutputStream);
        }

        public int getSerializedSize() {
            int i = this.memoizedSize;
            if (i != -1) {
                return i;
            }
            int computeEnumSize = (this.bitField0_ & 1) == 1 ? CodedOutputStream.computeEnumSize(1, this.status_) + 0 : 0;
            int i2 = 0;
            for (int i3 = 0; i3 < this.sessionPeerIds_.size(); i3++) {
                i2 += computeStringSizeNoTag(this.sessionPeerIds_.getRaw(i3));
            }
            int size = computeEnumSize + i2 + (getSessionPeerIdsList().size() * 1);
            if ((this.bitField0_ & 2) == 2) {
                size += GeneratedMessageV3.computeStringSize(3, this.cid_);
            }
            int serializedSize = size + this.unknownFields.getSerializedSize();
            this.memoizedSize = serializedSize;
            return serializedSize;
        }

        public boolean equals(Object obj) {
            boolean z = true;
            if (obj == this) {
                return true;
            }
            if (!(obj instanceof PresenceCommand)) {
                return super.equals(obj);
            }
            PresenceCommand presenceCommand = (PresenceCommand) obj;
            boolean z2 = hasStatus() == presenceCommand.hasStatus();
            if (hasStatus()) {
                z2 = z2 && this.status_ == presenceCommand.status_;
            }
            boolean z3 = (z2 && getSessionPeerIdsList().equals(presenceCommand.getSessionPeerIdsList())) && hasCid() == presenceCommand.hasCid();
            if (hasCid()) {
                z3 = z3 && getCid().equals(presenceCommand.getCid());
            }
            if (!z3 || !this.unknownFields.equals(presenceCommand.unknownFields)) {
                z = false;
            }
            return z;
        }

        public int hashCode() {
            if (this.memoizedHashCode != 0) {
                return this.memoizedHashCode;
            }
            int hashCode = 779 + getDescriptor().hashCode();
            if (hasStatus()) {
                hashCode = (((hashCode * 37) + 1) * 53) + this.status_;
            }
            if (getSessionPeerIdsCount() > 0) {
                hashCode = (((hashCode * 37) + 2) * 53) + getSessionPeerIdsList().hashCode();
            }
            if (hasCid()) {
                hashCode = (((hashCode * 37) + 3) * 53) + getCid().hashCode();
            }
            int hashCode2 = (hashCode * 29) + this.unknownFields.hashCode();
            this.memoizedHashCode = hashCode2;
            return hashCode2;
        }

        public static PresenceCommand parseFrom(ByteBuffer byteBuffer) throws InvalidProtocolBufferException {
            return (PresenceCommand) PARSER.parseFrom(byteBuffer);
        }

        public static PresenceCommand parseFrom(ByteBuffer byteBuffer, ExtensionRegistryLite extensionRegistryLite) throws InvalidProtocolBufferException {
            return (PresenceCommand) PARSER.parseFrom(byteBuffer, extensionRegistryLite);
        }

        public static PresenceCommand parseFrom(ByteString byteString) throws InvalidProtocolBufferException {
            return (PresenceCommand) PARSER.parseFrom(byteString);
        }

        public static PresenceCommand parseFrom(ByteString byteString, ExtensionRegistryLite extensionRegistryLite) throws InvalidProtocolBufferException {
            return (PresenceCommand) PARSER.parseFrom(byteString, extensionRegistryLite);
        }

        public static PresenceCommand parseFrom(byte[] bArr) throws InvalidProtocolBufferException {
            return (PresenceCommand) PARSER.parseFrom(bArr);
        }

        public static PresenceCommand parseFrom(byte[] bArr, ExtensionRegistryLite extensionRegistryLite) throws InvalidProtocolBufferException {
            return (PresenceCommand) PARSER.parseFrom(bArr, extensionRegistryLite);
        }

        public static PresenceCommand parseFrom(InputStream inputStream) throws IOException {
            return (PresenceCommand) GeneratedMessageV3.parseWithIOException(PARSER, inputStream);
        }

        public static PresenceCommand parseFrom(InputStream inputStream, ExtensionRegistryLite extensionRegistryLite) throws IOException {
            return (PresenceCommand) GeneratedMessageV3.parseWithIOException(PARSER, inputStream, extensionRegistryLite);
        }

        public static PresenceCommand parseDelimitedFrom(InputStream inputStream) throws IOException {
            return (PresenceCommand) GeneratedMessageV3.parseDelimitedWithIOException(PARSER, inputStream);
        }

        public static PresenceCommand parseDelimitedFrom(InputStream inputStream, ExtensionRegistryLite extensionRegistryLite) throws IOException {
            return (PresenceCommand) GeneratedMessageV3.parseDelimitedWithIOException(PARSER, inputStream, extensionRegistryLite);
        }

        public static PresenceCommand parseFrom(CodedInputStream codedInputStream) throws IOException {
            return (PresenceCommand) GeneratedMessageV3.parseWithIOException(PARSER, codedInputStream);
        }

        public static PresenceCommand parseFrom(CodedInputStream codedInputStream, ExtensionRegistryLite extensionRegistryLite) throws IOException {
            return (PresenceCommand) GeneratedMessageV3.parseWithIOException(PARSER, codedInputStream, extensionRegistryLite);
        }

        public Builder newBuilderForType() {
            return newBuilder();
        }

        public static Builder newBuilder() {
            return DEFAULT_INSTANCE.toBuilder();
        }

        public static Builder newBuilder(PresenceCommand presenceCommand) {
            return DEFAULT_INSTANCE.toBuilder().mergeFrom(presenceCommand);
        }

        public Builder toBuilder() {
            if (this == DEFAULT_INSTANCE) {
                return new Builder();
            }
            return new Builder().mergeFrom(this);
        }

        /* access modifiers changed from: protected */
        public Builder newBuilderForType(BuilderParent builderParent) {
            return new Builder(builderParent);
        }

        public static PresenceCommand getDefaultInstance() {
            return DEFAULT_INSTANCE;
        }

        public static Parser<PresenceCommand> parser() {
            return PARSER;
        }

        public Parser<PresenceCommand> getParserForType() {
            return PARSER;
        }

        public PresenceCommand getDefaultInstanceForType() {
            return DEFAULT_INSTANCE;
        }
    }

    public interface PresenceCommandOrBuilder extends MessageOrBuilder {
        String getCid();

        ByteString getCidBytes();

        String getSessionPeerIds(int i);

        ByteString getSessionPeerIdsBytes(int i);

        int getSessionPeerIdsCount();

        List<String> getSessionPeerIdsList();

        StatusType getStatus();

        boolean hasCid();

        boolean hasStatus();
    }

    public static final class PubsubCommand extends GeneratedMessageV3 implements PubsubCommandOrBuilder {
        public static final int CIDS_FIELD_NUMBER = 2;
        public static final int CID_FIELD_NUMBER = 1;
        private static final PubsubCommand DEFAULT_INSTANCE = new PubsubCommand();
        @Deprecated
        public static final Parser<PubsubCommand> PARSER = new AbstractParser<PubsubCommand>() {
            public PubsubCommand parsePartialFrom(CodedInputStream codedInputStream, ExtensionRegistryLite extensionRegistryLite) throws InvalidProtocolBufferException {
                return new PubsubCommand(codedInputStream, extensionRegistryLite);
            }
        };
        public static final int RESULTS_FIELD_NUMBER = 7;
        public static final int SUBTOPICS_FIELD_NUMBER = 6;
        public static final int SUBTOPIC_FIELD_NUMBER = 4;
        public static final int TOPICS_FIELD_NUMBER = 5;
        public static final int TOPIC_FIELD_NUMBER = 3;
        private static final long serialVersionUID = 0;
        /* access modifiers changed from: private */
        public int bitField0_;
        /* access modifiers changed from: private */
        public volatile Object cid_;
        /* access modifiers changed from: private */
        public LazyStringList cids_;
        private byte memoizedIsInitialized;
        /* access modifiers changed from: private */
        public JsonObjectMessage results_;
        /* access modifiers changed from: private */
        public volatile Object subtopic_;
        /* access modifiers changed from: private */
        public LazyStringList subtopics_;
        /* access modifiers changed from: private */
        public volatile Object topic_;
        /* access modifiers changed from: private */
        public LazyStringList topics_;

        public static final class Builder extends com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements PubsubCommandOrBuilder {
            private int bitField0_;
            private Object cid_;
            private LazyStringList cids_;
            private SingleFieldBuilderV3<JsonObjectMessage, Builder, JsonObjectMessageOrBuilder> resultsBuilder_;
            private JsonObjectMessage results_;
            private Object subtopic_;
            private LazyStringList subtopics_;
            private Object topic_;
            private LazyStringList topics_;

            public static final Descriptor getDescriptor() {
                return Messages.internal_static_com_avos_avoscloud_PubsubCommand_descriptor;
            }

            /* access modifiers changed from: protected */
            public FieldAccessorTable internalGetFieldAccessorTable() {
                return Messages.internal_static_com_avos_avoscloud_PubsubCommand_fieldAccessorTable.ensureFieldAccessorsInitialized(PubsubCommand.class, Builder.class);
            }

            private Builder() {
                String str = "";
                this.cid_ = str;
                this.cids_ = LazyStringArrayList.EMPTY;
                this.topic_ = str;
                this.subtopic_ = str;
                this.topics_ = LazyStringArrayList.EMPTY;
                this.subtopics_ = LazyStringArrayList.EMPTY;
                this.results_ = null;
                maybeForceBuilderInitialization();
            }

            private Builder(BuilderParent builderParent) {
                super(builderParent);
                String str = "";
                this.cid_ = str;
                this.cids_ = LazyStringArrayList.EMPTY;
                this.topic_ = str;
                this.subtopic_ = str;
                this.topics_ = LazyStringArrayList.EMPTY;
                this.subtopics_ = LazyStringArrayList.EMPTY;
                this.results_ = null;
                maybeForceBuilderInitialization();
            }

            private void maybeForceBuilderInitialization() {
                if (PubsubCommand.alwaysUseFieldBuilders) {
                    getResultsFieldBuilder();
                }
            }

            public Builder clear() {
                super.clear();
                String str = "";
                this.cid_ = str;
                this.bitField0_ &= -2;
                this.cids_ = LazyStringArrayList.EMPTY;
                this.bitField0_ &= -3;
                this.topic_ = str;
                this.bitField0_ &= -5;
                this.subtopic_ = str;
                this.bitField0_ &= -9;
                this.topics_ = LazyStringArrayList.EMPTY;
                this.bitField0_ &= -17;
                this.subtopics_ = LazyStringArrayList.EMPTY;
                this.bitField0_ &= -33;
                SingleFieldBuilderV3<JsonObjectMessage, Builder, JsonObjectMessageOrBuilder> singleFieldBuilderV3 = this.resultsBuilder_;
                if (singleFieldBuilderV3 == null) {
                    this.results_ = null;
                } else {
                    singleFieldBuilderV3.clear();
                }
                this.bitField0_ &= -65;
                return this;
            }

            public Descriptor getDescriptorForType() {
                return Messages.internal_static_com_avos_avoscloud_PubsubCommand_descriptor;
            }

            public PubsubCommand getDefaultInstanceForType() {
                return PubsubCommand.getDefaultInstance();
            }

            public PubsubCommand build() {
                PubsubCommand buildPartial = buildPartial();
                if (buildPartial.isInitialized()) {
                    return buildPartial;
                }
                throw newUninitializedMessageException(buildPartial);
            }

            public PubsubCommand buildPartial() {
                PubsubCommand pubsubCommand = new PubsubCommand((com.google.protobuf.GeneratedMessageV3.Builder) this);
                int i = this.bitField0_;
                int i2 = 1;
                if ((i & 1) != 1) {
                    i2 = 0;
                }
                pubsubCommand.cid_ = this.cid_;
                if ((this.bitField0_ & 2) == 2) {
                    this.cids_ = this.cids_.getUnmodifiableView();
                    this.bitField0_ &= -3;
                }
                pubsubCommand.cids_ = this.cids_;
                if ((i & 4) == 4) {
                    i2 |= 2;
                }
                pubsubCommand.topic_ = this.topic_;
                if ((i & 8) == 8) {
                    i2 |= 4;
                }
                pubsubCommand.subtopic_ = this.subtopic_;
                if ((this.bitField0_ & 16) == 16) {
                    this.topics_ = this.topics_.getUnmodifiableView();
                    this.bitField0_ &= -17;
                }
                pubsubCommand.topics_ = this.topics_;
                if ((this.bitField0_ & 32) == 32) {
                    this.subtopics_ = this.subtopics_.getUnmodifiableView();
                    this.bitField0_ &= -33;
                }
                pubsubCommand.subtopics_ = this.subtopics_;
                if ((i & 64) == 64) {
                    i2 |= 8;
                }
                SingleFieldBuilderV3<JsonObjectMessage, Builder, JsonObjectMessageOrBuilder> singleFieldBuilderV3 = this.resultsBuilder_;
                if (singleFieldBuilderV3 == null) {
                    pubsubCommand.results_ = this.results_;
                } else {
                    pubsubCommand.results_ = (JsonObjectMessage) singleFieldBuilderV3.build();
                }
                pubsubCommand.bitField0_ = i2;
                onBuilt();
                return pubsubCommand;
            }

            public Builder clone() {
                return (Builder) super.clone();
            }

            public Builder setField(FieldDescriptor fieldDescriptor, Object obj) {
                return (Builder) super.setField(fieldDescriptor, obj);
            }

            public Builder clearField(FieldDescriptor fieldDescriptor) {
                return (Builder) super.clearField(fieldDescriptor);
            }

            public Builder clearOneof(OneofDescriptor oneofDescriptor) {
                return (Builder) super.clearOneof(oneofDescriptor);
            }

            public Builder setRepeatedField(FieldDescriptor fieldDescriptor, int i, Object obj) {
                return (Builder) super.setRepeatedField(fieldDescriptor, i, obj);
            }

            public Builder addRepeatedField(FieldDescriptor fieldDescriptor, Object obj) {
                return (Builder) super.addRepeatedField(fieldDescriptor, obj);
            }

            public Builder mergeFrom(Message message) {
                if (message instanceof PubsubCommand) {
                    return mergeFrom((PubsubCommand) message);
                }
                super.mergeFrom(message);
                return this;
            }

            public Builder mergeFrom(PubsubCommand pubsubCommand) {
                if (pubsubCommand == PubsubCommand.getDefaultInstance()) {
                    return this;
                }
                if (pubsubCommand.hasCid()) {
                    this.bitField0_ |= 1;
                    this.cid_ = pubsubCommand.cid_;
                    onChanged();
                }
                if (!pubsubCommand.cids_.isEmpty()) {
                    if (this.cids_.isEmpty()) {
                        this.cids_ = pubsubCommand.cids_;
                        this.bitField0_ &= -3;
                    } else {
                        ensureCidsIsMutable();
                        this.cids_.addAll(pubsubCommand.cids_);
                    }
                    onChanged();
                }
                if (pubsubCommand.hasTopic()) {
                    this.bitField0_ |= 4;
                    this.topic_ = pubsubCommand.topic_;
                    onChanged();
                }
                if (pubsubCommand.hasSubtopic()) {
                    this.bitField0_ |= 8;
                    this.subtopic_ = pubsubCommand.subtopic_;
                    onChanged();
                }
                if (!pubsubCommand.topics_.isEmpty()) {
                    if (this.topics_.isEmpty()) {
                        this.topics_ = pubsubCommand.topics_;
                        this.bitField0_ &= -17;
                    } else {
                        ensureTopicsIsMutable();
                        this.topics_.addAll(pubsubCommand.topics_);
                    }
                    onChanged();
                }
                if (!pubsubCommand.subtopics_.isEmpty()) {
                    if (this.subtopics_.isEmpty()) {
                        this.subtopics_ = pubsubCommand.subtopics_;
                        this.bitField0_ &= -33;
                    } else {
                        ensureSubtopicsIsMutable();
                        this.subtopics_.addAll(pubsubCommand.subtopics_);
                    }
                    onChanged();
                }
                if (pubsubCommand.hasResults()) {
                    mergeResults(pubsubCommand.getResults());
                }
                mergeUnknownFields(pubsubCommand.unknownFields);
                onChanged();
                return this;
            }

            public final boolean isInitialized() {
                return !hasResults() || getResults().isInitialized();
            }

            /* JADX WARNING: Removed duplicated region for block: B:16:0x0021  */
            /* Code decompiled incorrectly, please refer to instructions dump. */
            public com.avos.avoscloud.Messages.PubsubCommand.Builder mergeFrom(com.google.protobuf.CodedInputStream r3, com.google.protobuf.ExtensionRegistryLite r4) throws java.io.IOException {
                /*
                    r2 = this;
                    r0 = 0
                    com.google.protobuf.Parser<com.avos.avoscloud.Messages$PubsubCommand> r1 = com.avos.avoscloud.Messages.PubsubCommand.PARSER     // Catch:{ InvalidProtocolBufferException -> 0x0011 }
                    java.lang.Object r3 = r1.parsePartialFrom(r3, r4)     // Catch:{ InvalidProtocolBufferException -> 0x0011 }
                    com.avos.avoscloud.Messages$PubsubCommand r3 = (com.avos.avoscloud.Messages.PubsubCommand) r3     // Catch:{ InvalidProtocolBufferException -> 0x0011 }
                    if (r3 == 0) goto L_0x000e
                    r2.mergeFrom(r3)
                L_0x000e:
                    return r2
                L_0x000f:
                    r3 = move-exception
                    goto L_0x001f
                L_0x0011:
                    r3 = move-exception
                    com.google.protobuf.MessageLite r4 = r3.getUnfinishedMessage()     // Catch:{ all -> 0x000f }
                    com.avos.avoscloud.Messages$PubsubCommand r4 = (com.avos.avoscloud.Messages.PubsubCommand) r4     // Catch:{ all -> 0x000f }
                    java.io.IOException r3 = r3.unwrapIOException()     // Catch:{ all -> 0x001d }
                    throw r3     // Catch:{ all -> 0x001d }
                L_0x001d:
                    r3 = move-exception
                    r0 = r4
                L_0x001f:
                    if (r0 == 0) goto L_0x0024
                    r2.mergeFrom(r0)
                L_0x0024:
                    throw r3
                */
                throw new UnsupportedOperationException("Method not decompiled: com.avos.avoscloud.Messages.PubsubCommand.Builder.mergeFrom(com.google.protobuf.CodedInputStream, com.google.protobuf.ExtensionRegistryLite):com.avos.avoscloud.Messages$PubsubCommand$Builder");
            }

            public boolean hasCid() {
                return (this.bitField0_ & 1) == 1;
            }

            public String getCid() {
                Object obj = this.cid_;
                if (obj instanceof String) {
                    return (String) obj;
                }
                ByteString byteString = (ByteString) obj;
                String stringUtf8 = byteString.toStringUtf8();
                if (byteString.isValidUtf8()) {
                    this.cid_ = stringUtf8;
                }
                return stringUtf8;
            }

            public ByteString getCidBytes() {
                Object obj = this.cid_;
                if (!(obj instanceof String)) {
                    return (ByteString) obj;
                }
                ByteString copyFromUtf8 = ByteString.copyFromUtf8((String) obj);
                this.cid_ = copyFromUtf8;
                return copyFromUtf8;
            }

            public Builder setCid(String str) {
                if (str != null) {
                    this.bitField0_ |= 1;
                    this.cid_ = str;
                    onChanged();
                    return this;
                }
                throw new NullPointerException();
            }

            public Builder clearCid() {
                this.bitField0_ &= -2;
                this.cid_ = PubsubCommand.getDefaultInstance().getCid();
                onChanged();
                return this;
            }

            public Builder setCidBytes(ByteString byteString) {
                if (byteString != null) {
                    this.bitField0_ |= 1;
                    this.cid_ = byteString;
                    onChanged();
                    return this;
                }
                throw new NullPointerException();
            }

            private void ensureCidsIsMutable() {
                if ((this.bitField0_ & 2) != 2) {
                    this.cids_ = new LazyStringArrayList(this.cids_);
                    this.bitField0_ |= 2;
                }
            }

            public ProtocolStringList getCidsList() {
                return this.cids_.getUnmodifiableView();
            }

            public int getCidsCount() {
                return this.cids_.size();
            }

            public String getCids(int i) {
                return (String) this.cids_.get(i);
            }

            public ByteString getCidsBytes(int i) {
                return this.cids_.getByteString(i);
            }

            public Builder setCids(int i, String str) {
                if (str != null) {
                    ensureCidsIsMutable();
                    this.cids_.set(i, str);
                    onChanged();
                    return this;
                }
                throw new NullPointerException();
            }

            public Builder addCids(String str) {
                if (str != null) {
                    ensureCidsIsMutable();
                    this.cids_.add(str);
                    onChanged();
                    return this;
                }
                throw new NullPointerException();
            }

            public Builder addAllCids(Iterable<String> iterable) {
                ensureCidsIsMutable();
                com.google.protobuf.AbstractMessageLite.Builder.addAll((Iterable) iterable, (List) this.cids_);
                onChanged();
                return this;
            }

            public Builder clearCids() {
                this.cids_ = LazyStringArrayList.EMPTY;
                this.bitField0_ &= -3;
                onChanged();
                return this;
            }

            public Builder addCidsBytes(ByteString byteString) {
                if (byteString != null) {
                    ensureCidsIsMutable();
                    this.cids_.add(byteString);
                    onChanged();
                    return this;
                }
                throw new NullPointerException();
            }

            public boolean hasTopic() {
                return (this.bitField0_ & 4) == 4;
            }

            public String getTopic() {
                Object obj = this.topic_;
                if (obj instanceof String) {
                    return (String) obj;
                }
                ByteString byteString = (ByteString) obj;
                String stringUtf8 = byteString.toStringUtf8();
                if (byteString.isValidUtf8()) {
                    this.topic_ = stringUtf8;
                }
                return stringUtf8;
            }

            public ByteString getTopicBytes() {
                Object obj = this.topic_;
                if (!(obj instanceof String)) {
                    return (ByteString) obj;
                }
                ByteString copyFromUtf8 = ByteString.copyFromUtf8((String) obj);
                this.topic_ = copyFromUtf8;
                return copyFromUtf8;
            }

            public Builder setTopic(String str) {
                if (str != null) {
                    this.bitField0_ |= 4;
                    this.topic_ = str;
                    onChanged();
                    return this;
                }
                throw new NullPointerException();
            }

            public Builder clearTopic() {
                this.bitField0_ &= -5;
                this.topic_ = PubsubCommand.getDefaultInstance().getTopic();
                onChanged();
                return this;
            }

            public Builder setTopicBytes(ByteString byteString) {
                if (byteString != null) {
                    this.bitField0_ |= 4;
                    this.topic_ = byteString;
                    onChanged();
                    return this;
                }
                throw new NullPointerException();
            }

            public boolean hasSubtopic() {
                return (this.bitField0_ & 8) == 8;
            }

            public String getSubtopic() {
                Object obj = this.subtopic_;
                if (obj instanceof String) {
                    return (String) obj;
                }
                ByteString byteString = (ByteString) obj;
                String stringUtf8 = byteString.toStringUtf8();
                if (byteString.isValidUtf8()) {
                    this.subtopic_ = stringUtf8;
                }
                return stringUtf8;
            }

            public ByteString getSubtopicBytes() {
                Object obj = this.subtopic_;
                if (!(obj instanceof String)) {
                    return (ByteString) obj;
                }
                ByteString copyFromUtf8 = ByteString.copyFromUtf8((String) obj);
                this.subtopic_ = copyFromUtf8;
                return copyFromUtf8;
            }

            public Builder setSubtopic(String str) {
                if (str != null) {
                    this.bitField0_ |= 8;
                    this.subtopic_ = str;
                    onChanged();
                    return this;
                }
                throw new NullPointerException();
            }

            public Builder clearSubtopic() {
                this.bitField0_ &= -9;
                this.subtopic_ = PubsubCommand.getDefaultInstance().getSubtopic();
                onChanged();
                return this;
            }

            public Builder setSubtopicBytes(ByteString byteString) {
                if (byteString != null) {
                    this.bitField0_ |= 8;
                    this.subtopic_ = byteString;
                    onChanged();
                    return this;
                }
                throw new NullPointerException();
            }

            private void ensureTopicsIsMutable() {
                if ((this.bitField0_ & 16) != 16) {
                    this.topics_ = new LazyStringArrayList(this.topics_);
                    this.bitField0_ |= 16;
                }
            }

            public ProtocolStringList getTopicsList() {
                return this.topics_.getUnmodifiableView();
            }

            public int getTopicsCount() {
                return this.topics_.size();
            }

            public String getTopics(int i) {
                return (String) this.topics_.get(i);
            }

            public ByteString getTopicsBytes(int i) {
                return this.topics_.getByteString(i);
            }

            public Builder setTopics(int i, String str) {
                if (str != null) {
                    ensureTopicsIsMutable();
                    this.topics_.set(i, str);
                    onChanged();
                    return this;
                }
                throw new NullPointerException();
            }

            public Builder addTopics(String str) {
                if (str != null) {
                    ensureTopicsIsMutable();
                    this.topics_.add(str);
                    onChanged();
                    return this;
                }
                throw new NullPointerException();
            }

            public Builder addAllTopics(Iterable<String> iterable) {
                ensureTopicsIsMutable();
                com.google.protobuf.AbstractMessageLite.Builder.addAll((Iterable) iterable, (List) this.topics_);
                onChanged();
                return this;
            }

            public Builder clearTopics() {
                this.topics_ = LazyStringArrayList.EMPTY;
                this.bitField0_ &= -17;
                onChanged();
                return this;
            }

            public Builder addTopicsBytes(ByteString byteString) {
                if (byteString != null) {
                    ensureTopicsIsMutable();
                    this.topics_.add(byteString);
                    onChanged();
                    return this;
                }
                throw new NullPointerException();
            }

            private void ensureSubtopicsIsMutable() {
                if ((this.bitField0_ & 32) != 32) {
                    this.subtopics_ = new LazyStringArrayList(this.subtopics_);
                    this.bitField0_ |= 32;
                }
            }

            public ProtocolStringList getSubtopicsList() {
                return this.subtopics_.getUnmodifiableView();
            }

            public int getSubtopicsCount() {
                return this.subtopics_.size();
            }

            public String getSubtopics(int i) {
                return (String) this.subtopics_.get(i);
            }

            public ByteString getSubtopicsBytes(int i) {
                return this.subtopics_.getByteString(i);
            }

            public Builder setSubtopics(int i, String str) {
                if (str != null) {
                    ensureSubtopicsIsMutable();
                    this.subtopics_.set(i, str);
                    onChanged();
                    return this;
                }
                throw new NullPointerException();
            }

            public Builder addSubtopics(String str) {
                if (str != null) {
                    ensureSubtopicsIsMutable();
                    this.subtopics_.add(str);
                    onChanged();
                    return this;
                }
                throw new NullPointerException();
            }

            public Builder addAllSubtopics(Iterable<String> iterable) {
                ensureSubtopicsIsMutable();
                com.google.protobuf.AbstractMessageLite.Builder.addAll((Iterable) iterable, (List) this.subtopics_);
                onChanged();
                return this;
            }

            public Builder clearSubtopics() {
                this.subtopics_ = LazyStringArrayList.EMPTY;
                this.bitField0_ &= -33;
                onChanged();
                return this;
            }

            public Builder addSubtopicsBytes(ByteString byteString) {
                if (byteString != null) {
                    ensureSubtopicsIsMutable();
                    this.subtopics_.add(byteString);
                    onChanged();
                    return this;
                }
                throw new NullPointerException();
            }

            public boolean hasResults() {
                return (this.bitField0_ & 64) == 64;
            }

            public JsonObjectMessage getResults() {
                SingleFieldBuilderV3<JsonObjectMessage, Builder, JsonObjectMessageOrBuilder> singleFieldBuilderV3 = this.resultsBuilder_;
                if (singleFieldBuilderV3 != null) {
                    return (JsonObjectMessage) singleFieldBuilderV3.getMessage();
                }
                JsonObjectMessage jsonObjectMessage = this.results_;
                if (jsonObjectMessage == null) {
                    jsonObjectMessage = JsonObjectMessage.getDefaultInstance();
                }
                return jsonObjectMessage;
            }

            public Builder setResults(JsonObjectMessage jsonObjectMessage) {
                SingleFieldBuilderV3<JsonObjectMessage, Builder, JsonObjectMessageOrBuilder> singleFieldBuilderV3 = this.resultsBuilder_;
                if (singleFieldBuilderV3 != null) {
                    singleFieldBuilderV3.setMessage(jsonObjectMessage);
                } else if (jsonObjectMessage != null) {
                    this.results_ = jsonObjectMessage;
                    onChanged();
                } else {
                    throw new NullPointerException();
                }
                this.bitField0_ |= 64;
                return this;
            }

            public Builder setResults(Builder builder) {
                SingleFieldBuilderV3<JsonObjectMessage, Builder, JsonObjectMessageOrBuilder> singleFieldBuilderV3 = this.resultsBuilder_;
                if (singleFieldBuilderV3 == null) {
                    this.results_ = builder.build();
                    onChanged();
                } else {
                    singleFieldBuilderV3.setMessage(builder.build());
                }
                this.bitField0_ |= 64;
                return this;
            }

            public Builder mergeResults(JsonObjectMessage jsonObjectMessage) {
                SingleFieldBuilderV3<JsonObjectMessage, Builder, JsonObjectMessageOrBuilder> singleFieldBuilderV3 = this.resultsBuilder_;
                if (singleFieldBuilderV3 == null) {
                    if ((this.bitField0_ & 64) == 64) {
                        JsonObjectMessage jsonObjectMessage2 = this.results_;
                        if (!(jsonObjectMessage2 == null || jsonObjectMessage2 == JsonObjectMessage.getDefaultInstance())) {
                            this.results_ = JsonObjectMessage.newBuilder(this.results_).mergeFrom(jsonObjectMessage).buildPartial();
                            onChanged();
                        }
                    }
                    this.results_ = jsonObjectMessage;
                    onChanged();
                } else {
                    singleFieldBuilderV3.mergeFrom(jsonObjectMessage);
                }
                this.bitField0_ |= 64;
                return this;
            }

            public Builder clearResults() {
                SingleFieldBuilderV3<JsonObjectMessage, Builder, JsonObjectMessageOrBuilder> singleFieldBuilderV3 = this.resultsBuilder_;
                if (singleFieldBuilderV3 == null) {
                    this.results_ = null;
                    onChanged();
                } else {
                    singleFieldBuilderV3.clear();
                }
                this.bitField0_ &= -65;
                return this;
            }

            public Builder getResultsBuilder() {
                this.bitField0_ |= 64;
                onChanged();
                return (Builder) getResultsFieldBuilder().getBuilder();
            }

            public JsonObjectMessageOrBuilder getResultsOrBuilder() {
                SingleFieldBuilderV3<JsonObjectMessage, Builder, JsonObjectMessageOrBuilder> singleFieldBuilderV3 = this.resultsBuilder_;
                if (singleFieldBuilderV3 != null) {
                    return (JsonObjectMessageOrBuilder) singleFieldBuilderV3.getMessageOrBuilder();
                }
                JsonObjectMessage jsonObjectMessage = this.results_;
                if (jsonObjectMessage == null) {
                    jsonObjectMessage = JsonObjectMessage.getDefaultInstance();
                }
                return jsonObjectMessage;
            }

            private SingleFieldBuilderV3<JsonObjectMessage, Builder, JsonObjectMessageOrBuilder> getResultsFieldBuilder() {
                if (this.resultsBuilder_ == null) {
                    this.resultsBuilder_ = new SingleFieldBuilderV3<>(getResults(), getParentForChildren(), isClean());
                    this.results_ = null;
                }
                return this.resultsBuilder_;
            }

            public final Builder setUnknownFields(UnknownFieldSet unknownFieldSet) {
                return (Builder) super.setUnknownFields(unknownFieldSet);
            }

            public final Builder mergeUnknownFields(UnknownFieldSet unknownFieldSet) {
                return (Builder) super.mergeUnknownFields(unknownFieldSet);
            }
        }

        private PubsubCommand(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
            super(builder);
            this.memoizedIsInitialized = -1;
        }

        private PubsubCommand() {
            this.memoizedIsInitialized = -1;
            String str = "";
            this.cid_ = str;
            this.cids_ = LazyStringArrayList.EMPTY;
            this.topic_ = str;
            this.subtopic_ = str;
            this.topics_ = LazyStringArrayList.EMPTY;
            this.subtopics_ = LazyStringArrayList.EMPTY;
        }

        public final UnknownFieldSet getUnknownFields() {
            return this.unknownFields;
        }

        private PubsubCommand(CodedInputStream codedInputStream, ExtensionRegistryLite extensionRegistryLite) throws InvalidProtocolBufferException {
            this();
            com.google.protobuf.UnknownFieldSet.Builder newBuilder = UnknownFieldSet.newBuilder();
            boolean z = false;
            boolean z2 = false;
            while (!z) {
                try {
                    int readTag = codedInputStream.readTag();
                    if (readTag != 0) {
                        if (readTag == 10) {
                            ByteString readBytes = codedInputStream.readBytes();
                            this.bitField0_ = 1 | this.bitField0_;
                            this.cid_ = readBytes;
                        } else if (readTag == 18) {
                            ByteString readBytes2 = codedInputStream.readBytes();
                            if (!(z2 & true)) {
                                this.cids_ = new LazyStringArrayList();
                                z2 |= true;
                            }
                            this.cids_.add(readBytes2);
                        } else if (readTag == 26) {
                            ByteString readBytes3 = codedInputStream.readBytes();
                            this.bitField0_ |= 2;
                            this.topic_ = readBytes3;
                        } else if (readTag == 34) {
                            ByteString readBytes4 = codedInputStream.readBytes();
                            this.bitField0_ |= 4;
                            this.subtopic_ = readBytes4;
                        } else if (readTag == 42) {
                            ByteString readBytes5 = codedInputStream.readBytes();
                            if (!(z2 & true)) {
                                this.topics_ = new LazyStringArrayList();
                                z2 |= true;
                            }
                            this.topics_.add(readBytes5);
                        } else if (readTag == 50) {
                            ByteString readBytes6 = codedInputStream.readBytes();
                            if (!(z2 & true)) {
                                this.subtopics_ = new LazyStringArrayList();
                                z2 |= true;
                            }
                            this.subtopics_.add(readBytes6);
                        } else if (readTag == 58) {
                            Builder builder = null;
                            if ((this.bitField0_ & 8) == 8) {
                                builder = this.results_.toBuilder();
                            }
                            this.results_ = (JsonObjectMessage) codedInputStream.readMessage(JsonObjectMessage.PARSER, extensionRegistryLite);
                            if (builder != null) {
                                builder.mergeFrom(this.results_);
                                this.results_ = builder.buildPartial();
                            }
                            this.bitField0_ |= 8;
                        } else if (!parseUnknownField(codedInputStream, newBuilder, extensionRegistryLite, readTag)) {
                        }
                    }
                    z = true;
                } catch (InvalidProtocolBufferException e) {
                    throw e.setUnfinishedMessage(this);
                } catch (IOException e2) {
                    throw new InvalidProtocolBufferException(e2).setUnfinishedMessage(this);
                } catch (Throwable th) {
                    if (z2 & true) {
                        this.cids_ = this.cids_.getUnmodifiableView();
                    }
                    if (z2 & true) {
                        this.topics_ = this.topics_.getUnmodifiableView();
                    }
                    if (z2 & true) {
                        this.subtopics_ = this.subtopics_.getUnmodifiableView();
                    }
                    this.unknownFields = newBuilder.build();
                    makeExtensionsImmutable();
                    throw th;
                }
            }
            if (z2 & true) {
                this.cids_ = this.cids_.getUnmodifiableView();
            }
            if (z2 & true) {
                this.topics_ = this.topics_.getUnmodifiableView();
            }
            if (z2 & true) {
                this.subtopics_ = this.subtopics_.getUnmodifiableView();
            }
            this.unknownFields = newBuilder.build();
            makeExtensionsImmutable();
        }

        public static final Descriptor getDescriptor() {
            return Messages.internal_static_com_avos_avoscloud_PubsubCommand_descriptor;
        }

        /* access modifiers changed from: protected */
        public FieldAccessorTable internalGetFieldAccessorTable() {
            return Messages.internal_static_com_avos_avoscloud_PubsubCommand_fieldAccessorTable.ensureFieldAccessorsInitialized(PubsubCommand.class, Builder.class);
        }

        public boolean hasCid() {
            return (this.bitField0_ & 1) == 1;
        }

        public String getCid() {
            Object obj = this.cid_;
            if (obj instanceof String) {
                return (String) obj;
            }
            ByteString byteString = (ByteString) obj;
            String stringUtf8 = byteString.toStringUtf8();
            if (byteString.isValidUtf8()) {
                this.cid_ = stringUtf8;
            }
            return stringUtf8;
        }

        public ByteString getCidBytes() {
            Object obj = this.cid_;
            if (!(obj instanceof String)) {
                return (ByteString) obj;
            }
            ByteString copyFromUtf8 = ByteString.copyFromUtf8((String) obj);
            this.cid_ = copyFromUtf8;
            return copyFromUtf8;
        }

        public ProtocolStringList getCidsList() {
            return this.cids_;
        }

        public int getCidsCount() {
            return this.cids_.size();
        }

        public String getCids(int i) {
            return (String) this.cids_.get(i);
        }

        public ByteString getCidsBytes(int i) {
            return this.cids_.getByteString(i);
        }

        public boolean hasTopic() {
            return (this.bitField0_ & 2) == 2;
        }

        public String getTopic() {
            Object obj = this.topic_;
            if (obj instanceof String) {
                return (String) obj;
            }
            ByteString byteString = (ByteString) obj;
            String stringUtf8 = byteString.toStringUtf8();
            if (byteString.isValidUtf8()) {
                this.topic_ = stringUtf8;
            }
            return stringUtf8;
        }

        public ByteString getTopicBytes() {
            Object obj = this.topic_;
            if (!(obj instanceof String)) {
                return (ByteString) obj;
            }
            ByteString copyFromUtf8 = ByteString.copyFromUtf8((String) obj);
            this.topic_ = copyFromUtf8;
            return copyFromUtf8;
        }

        public boolean hasSubtopic() {
            return (this.bitField0_ & 4) == 4;
        }

        public String getSubtopic() {
            Object obj = this.subtopic_;
            if (obj instanceof String) {
                return (String) obj;
            }
            ByteString byteString = (ByteString) obj;
            String stringUtf8 = byteString.toStringUtf8();
            if (byteString.isValidUtf8()) {
                this.subtopic_ = stringUtf8;
            }
            return stringUtf8;
        }

        public ByteString getSubtopicBytes() {
            Object obj = this.subtopic_;
            if (!(obj instanceof String)) {
                return (ByteString) obj;
            }
            ByteString copyFromUtf8 = ByteString.copyFromUtf8((String) obj);
            this.subtopic_ = copyFromUtf8;
            return copyFromUtf8;
        }

        public ProtocolStringList getTopicsList() {
            return this.topics_;
        }

        public int getTopicsCount() {
            return this.topics_.size();
        }

        public String getTopics(int i) {
            return (String) this.topics_.get(i);
        }

        public ByteString getTopicsBytes(int i) {
            return this.topics_.getByteString(i);
        }

        public ProtocolStringList getSubtopicsList() {
            return this.subtopics_;
        }

        public int getSubtopicsCount() {
            return this.subtopics_.size();
        }

        public String getSubtopics(int i) {
            return (String) this.subtopics_.get(i);
        }

        public ByteString getSubtopicsBytes(int i) {
            return this.subtopics_.getByteString(i);
        }

        public boolean hasResults() {
            return (this.bitField0_ & 8) == 8;
        }

        public JsonObjectMessage getResults() {
            JsonObjectMessage jsonObjectMessage = this.results_;
            return jsonObjectMessage == null ? JsonObjectMessage.getDefaultInstance() : jsonObjectMessage;
        }

        public JsonObjectMessageOrBuilder getResultsOrBuilder() {
            JsonObjectMessage jsonObjectMessage = this.results_;
            return jsonObjectMessage == null ? JsonObjectMessage.getDefaultInstance() : jsonObjectMessage;
        }

        public final boolean isInitialized() {
            byte b = this.memoizedIsInitialized;
            if (b == 1) {
                return true;
            }
            if (b == 0) {
                return false;
            }
            if (!hasResults() || getResults().isInitialized()) {
                this.memoizedIsInitialized = 1;
                return true;
            }
            this.memoizedIsInitialized = 0;
            return false;
        }

        public void writeTo(CodedOutputStream codedOutputStream) throws IOException {
            if ((this.bitField0_ & 1) == 1) {
                GeneratedMessageV3.writeString(codedOutputStream, 1, this.cid_);
            }
            for (int i = 0; i < this.cids_.size(); i++) {
                GeneratedMessageV3.writeString(codedOutputStream, 2, this.cids_.getRaw(i));
            }
            if ((this.bitField0_ & 2) == 2) {
                GeneratedMessageV3.writeString(codedOutputStream, 3, this.topic_);
            }
            if ((this.bitField0_ & 4) == 4) {
                GeneratedMessageV3.writeString(codedOutputStream, 4, this.subtopic_);
            }
            for (int i2 = 0; i2 < this.topics_.size(); i2++) {
                GeneratedMessageV3.writeString(codedOutputStream, 5, this.topics_.getRaw(i2));
            }
            for (int i3 = 0; i3 < this.subtopics_.size(); i3++) {
                GeneratedMessageV3.writeString(codedOutputStream, 6, this.subtopics_.getRaw(i3));
            }
            if ((this.bitField0_ & 8) == 8) {
                codedOutputStream.writeMessage(7, getResults());
            }
            this.unknownFields.writeTo(codedOutputStream);
        }

        public int getSerializedSize() {
            int i = this.memoizedSize;
            if (i != -1) {
                return i;
            }
            int computeStringSize = (this.bitField0_ & 1) == 1 ? GeneratedMessageV3.computeStringSize(1, this.cid_) + 0 : 0;
            int i2 = 0;
            for (int i3 = 0; i3 < this.cids_.size(); i3++) {
                i2 += computeStringSizeNoTag(this.cids_.getRaw(i3));
            }
            int size = computeStringSize + i2 + (getCidsList().size() * 1);
            if ((this.bitField0_ & 2) == 2) {
                size += GeneratedMessageV3.computeStringSize(3, this.topic_);
            }
            if ((this.bitField0_ & 4) == 4) {
                size += GeneratedMessageV3.computeStringSize(4, this.subtopic_);
            }
            int i4 = 0;
            for (int i5 = 0; i5 < this.topics_.size(); i5++) {
                i4 += computeStringSizeNoTag(this.topics_.getRaw(i5));
            }
            int size2 = size + i4 + (getTopicsList().size() * 1);
            int i6 = 0;
            for (int i7 = 0; i7 < this.subtopics_.size(); i7++) {
                i6 += computeStringSizeNoTag(this.subtopics_.getRaw(i7));
            }
            int size3 = size2 + i6 + (getSubtopicsList().size() * 1);
            if ((this.bitField0_ & 8) == 8) {
                size3 += CodedOutputStream.computeMessageSize(7, getResults());
            }
            int serializedSize = size3 + this.unknownFields.getSerializedSize();
            this.memoizedSize = serializedSize;
            return serializedSize;
        }

        public boolean equals(Object obj) {
            boolean z = true;
            if (obj == this) {
                return true;
            }
            if (!(obj instanceof PubsubCommand)) {
                return super.equals(obj);
            }
            PubsubCommand pubsubCommand = (PubsubCommand) obj;
            boolean z2 = hasCid() == pubsubCommand.hasCid();
            if (hasCid()) {
                z2 = z2 && getCid().equals(pubsubCommand.getCid());
            }
            boolean z3 = (z2 && getCidsList().equals(pubsubCommand.getCidsList())) && hasTopic() == pubsubCommand.hasTopic();
            if (hasTopic()) {
                z3 = z3 && getTopic().equals(pubsubCommand.getTopic());
            }
            boolean z4 = z3 && hasSubtopic() == pubsubCommand.hasSubtopic();
            if (hasSubtopic()) {
                z4 = z4 && getSubtopic().equals(pubsubCommand.getSubtopic());
            }
            boolean z5 = ((z4 && getTopicsList().equals(pubsubCommand.getTopicsList())) && getSubtopicsList().equals(pubsubCommand.getSubtopicsList())) && hasResults() == pubsubCommand.hasResults();
            if (hasResults()) {
                z5 = z5 && getResults().equals(pubsubCommand.getResults());
            }
            if (!z5 || !this.unknownFields.equals(pubsubCommand.unknownFields)) {
                z = false;
            }
            return z;
        }

        public int hashCode() {
            if (this.memoizedHashCode != 0) {
                return this.memoizedHashCode;
            }
            int hashCode = 779 + getDescriptor().hashCode();
            if (hasCid()) {
                hashCode = (((hashCode * 37) + 1) * 53) + getCid().hashCode();
            }
            if (getCidsCount() > 0) {
                hashCode = (((hashCode * 37) + 2) * 53) + getCidsList().hashCode();
            }
            if (hasTopic()) {
                hashCode = (((hashCode * 37) + 3) * 53) + getTopic().hashCode();
            }
            if (hasSubtopic()) {
                hashCode = (((hashCode * 37) + 4) * 53) + getSubtopic().hashCode();
            }
            if (getTopicsCount() > 0) {
                hashCode = (((hashCode * 37) + 5) * 53) + getTopicsList().hashCode();
            }
            if (getSubtopicsCount() > 0) {
                hashCode = (((hashCode * 37) + 6) * 53) + getSubtopicsList().hashCode();
            }
            if (hasResults()) {
                hashCode = (((hashCode * 37) + 7) * 53) + getResults().hashCode();
            }
            int hashCode2 = (hashCode * 29) + this.unknownFields.hashCode();
            this.memoizedHashCode = hashCode2;
            return hashCode2;
        }

        public static PubsubCommand parseFrom(ByteBuffer byteBuffer) throws InvalidProtocolBufferException {
            return (PubsubCommand) PARSER.parseFrom(byteBuffer);
        }

        public static PubsubCommand parseFrom(ByteBuffer byteBuffer, ExtensionRegistryLite extensionRegistryLite) throws InvalidProtocolBufferException {
            return (PubsubCommand) PARSER.parseFrom(byteBuffer, extensionRegistryLite);
        }

        public static PubsubCommand parseFrom(ByteString byteString) throws InvalidProtocolBufferException {
            return (PubsubCommand) PARSER.parseFrom(byteString);
        }

        public static PubsubCommand parseFrom(ByteString byteString, ExtensionRegistryLite extensionRegistryLite) throws InvalidProtocolBufferException {
            return (PubsubCommand) PARSER.parseFrom(byteString, extensionRegistryLite);
        }

        public static PubsubCommand parseFrom(byte[] bArr) throws InvalidProtocolBufferException {
            return (PubsubCommand) PARSER.parseFrom(bArr);
        }

        public static PubsubCommand parseFrom(byte[] bArr, ExtensionRegistryLite extensionRegistryLite) throws InvalidProtocolBufferException {
            return (PubsubCommand) PARSER.parseFrom(bArr, extensionRegistryLite);
        }

        public static PubsubCommand parseFrom(InputStream inputStream) throws IOException {
            return (PubsubCommand) GeneratedMessageV3.parseWithIOException(PARSER, inputStream);
        }

        public static PubsubCommand parseFrom(InputStream inputStream, ExtensionRegistryLite extensionRegistryLite) throws IOException {
            return (PubsubCommand) GeneratedMessageV3.parseWithIOException(PARSER, inputStream, extensionRegistryLite);
        }

        public static PubsubCommand parseDelimitedFrom(InputStream inputStream) throws IOException {
            return (PubsubCommand) GeneratedMessageV3.parseDelimitedWithIOException(PARSER, inputStream);
        }

        public static PubsubCommand parseDelimitedFrom(InputStream inputStream, ExtensionRegistryLite extensionRegistryLite) throws IOException {
            return (PubsubCommand) GeneratedMessageV3.parseDelimitedWithIOException(PARSER, inputStream, extensionRegistryLite);
        }

        public static PubsubCommand parseFrom(CodedInputStream codedInputStream) throws IOException {
            return (PubsubCommand) GeneratedMessageV3.parseWithIOException(PARSER, codedInputStream);
        }

        public static PubsubCommand parseFrom(CodedInputStream codedInputStream, ExtensionRegistryLite extensionRegistryLite) throws IOException {
            return (PubsubCommand) GeneratedMessageV3.parseWithIOException(PARSER, codedInputStream, extensionRegistryLite);
        }

        public Builder newBuilderForType() {
            return newBuilder();
        }

        public static Builder newBuilder() {
            return DEFAULT_INSTANCE.toBuilder();
        }

        public static Builder newBuilder(PubsubCommand pubsubCommand) {
            return DEFAULT_INSTANCE.toBuilder().mergeFrom(pubsubCommand);
        }

        public Builder toBuilder() {
            if (this == DEFAULT_INSTANCE) {
                return new Builder();
            }
            return new Builder().mergeFrom(this);
        }

        /* access modifiers changed from: protected */
        public Builder newBuilderForType(BuilderParent builderParent) {
            return new Builder(builderParent);
        }

        public static PubsubCommand getDefaultInstance() {
            return DEFAULT_INSTANCE;
        }

        public static Parser<PubsubCommand> parser() {
            return PARSER;
        }

        public Parser<PubsubCommand> getParserForType() {
            return PARSER;
        }

        public PubsubCommand getDefaultInstanceForType() {
            return DEFAULT_INSTANCE;
        }
    }

    public interface PubsubCommandOrBuilder extends MessageOrBuilder {
        String getCid();

        ByteString getCidBytes();

        String getCids(int i);

        ByteString getCidsBytes(int i);

        int getCidsCount();

        List<String> getCidsList();

        JsonObjectMessage getResults();

        JsonObjectMessageOrBuilder getResultsOrBuilder();

        String getSubtopic();

        ByteString getSubtopicBytes();

        String getSubtopics(int i);

        ByteString getSubtopicsBytes(int i);

        int getSubtopicsCount();

        List<String> getSubtopicsList();

        String getTopic();

        ByteString getTopicBytes();

        String getTopics(int i);

        ByteString getTopicsBytes(int i);

        int getTopicsCount();

        List<String> getTopicsList();

        boolean hasCid();

        boolean hasResults();

        boolean hasSubtopic();

        boolean hasTopic();
    }

    public static final class RcpCommand extends GeneratedMessageV3 implements RcpCommandOrBuilder {
        public static final int CID_FIELD_NUMBER = 2;
        private static final RcpCommand DEFAULT_INSTANCE = new RcpCommand();
        public static final int FROM_FIELD_NUMBER = 5;
        public static final int ID_FIELD_NUMBER = 1;
        @Deprecated
        public static final Parser<RcpCommand> PARSER = new AbstractParser<RcpCommand>() {
            public RcpCommand parsePartialFrom(CodedInputStream codedInputStream, ExtensionRegistryLite extensionRegistryLite) throws InvalidProtocolBufferException {
                return new RcpCommand(codedInputStream, extensionRegistryLite);
            }
        };
        public static final int READ_FIELD_NUMBER = 4;
        public static final int T_FIELD_NUMBER = 3;
        private static final long serialVersionUID = 0;
        /* access modifiers changed from: private */
        public int bitField0_;
        /* access modifiers changed from: private */
        public volatile Object cid_;
        /* access modifiers changed from: private */
        public volatile Object from_;
        /* access modifiers changed from: private */
        public volatile Object id_;
        private byte memoizedIsInitialized;
        /* access modifiers changed from: private */
        public boolean read_;
        /* access modifiers changed from: private */
        public long t_;

        public static final class Builder extends com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements RcpCommandOrBuilder {
            private int bitField0_;
            private Object cid_;
            private Object from_;
            private Object id_;
            private boolean read_;
            private long t_;

            public final boolean isInitialized() {
                return true;
            }

            public static final Descriptor getDescriptor() {
                return Messages.internal_static_com_avos_avoscloud_RcpCommand_descriptor;
            }

            /* access modifiers changed from: protected */
            public FieldAccessorTable internalGetFieldAccessorTable() {
                return Messages.internal_static_com_avos_avoscloud_RcpCommand_fieldAccessorTable.ensureFieldAccessorsInitialized(RcpCommand.class, Builder.class);
            }

            private Builder() {
                String str = "";
                this.id_ = str;
                this.cid_ = str;
                this.from_ = str;
                maybeForceBuilderInitialization();
            }

            private Builder(BuilderParent builderParent) {
                super(builderParent);
                String str = "";
                this.id_ = str;
                this.cid_ = str;
                this.from_ = str;
                maybeForceBuilderInitialization();
            }

            private void maybeForceBuilderInitialization() {
                RcpCommand.alwaysUseFieldBuilders;
            }

            public Builder clear() {
                super.clear();
                String str = "";
                this.id_ = str;
                this.bitField0_ &= -2;
                this.cid_ = str;
                this.bitField0_ &= -3;
                this.t_ = 0;
                this.bitField0_ &= -5;
                this.read_ = false;
                this.bitField0_ &= -9;
                this.from_ = str;
                this.bitField0_ &= -17;
                return this;
            }

            public Descriptor getDescriptorForType() {
                return Messages.internal_static_com_avos_avoscloud_RcpCommand_descriptor;
            }

            public RcpCommand getDefaultInstanceForType() {
                return RcpCommand.getDefaultInstance();
            }

            public RcpCommand build() {
                RcpCommand buildPartial = buildPartial();
                if (buildPartial.isInitialized()) {
                    return buildPartial;
                }
                throw newUninitializedMessageException(buildPartial);
            }

            public RcpCommand buildPartial() {
                RcpCommand rcpCommand = new RcpCommand((com.google.protobuf.GeneratedMessageV3.Builder) this);
                int i = this.bitField0_;
                int i2 = 1;
                if ((i & 1) != 1) {
                    i2 = 0;
                }
                rcpCommand.id_ = this.id_;
                if ((i & 2) == 2) {
                    i2 |= 2;
                }
                rcpCommand.cid_ = this.cid_;
                if ((i & 4) == 4) {
                    i2 |= 4;
                }
                rcpCommand.t_ = this.t_;
                if ((i & 8) == 8) {
                    i2 |= 8;
                }
                rcpCommand.read_ = this.read_;
                if ((i & 16) == 16) {
                    i2 |= 16;
                }
                rcpCommand.from_ = this.from_;
                rcpCommand.bitField0_ = i2;
                onBuilt();
                return rcpCommand;
            }

            public Builder clone() {
                return (Builder) super.clone();
            }

            public Builder setField(FieldDescriptor fieldDescriptor, Object obj) {
                return (Builder) super.setField(fieldDescriptor, obj);
            }

            public Builder clearField(FieldDescriptor fieldDescriptor) {
                return (Builder) super.clearField(fieldDescriptor);
            }

            public Builder clearOneof(OneofDescriptor oneofDescriptor) {
                return (Builder) super.clearOneof(oneofDescriptor);
            }

            public Builder setRepeatedField(FieldDescriptor fieldDescriptor, int i, Object obj) {
                return (Builder) super.setRepeatedField(fieldDescriptor, i, obj);
            }

            public Builder addRepeatedField(FieldDescriptor fieldDescriptor, Object obj) {
                return (Builder) super.addRepeatedField(fieldDescriptor, obj);
            }

            public Builder mergeFrom(Message message) {
                if (message instanceof RcpCommand) {
                    return mergeFrom((RcpCommand) message);
                }
                super.mergeFrom(message);
                return this;
            }

            public Builder mergeFrom(RcpCommand rcpCommand) {
                if (rcpCommand == RcpCommand.getDefaultInstance()) {
                    return this;
                }
                if (rcpCommand.hasId()) {
                    this.bitField0_ |= 1;
                    this.id_ = rcpCommand.id_;
                    onChanged();
                }
                if (rcpCommand.hasCid()) {
                    this.bitField0_ |= 2;
                    this.cid_ = rcpCommand.cid_;
                    onChanged();
                }
                if (rcpCommand.hasT()) {
                    setT(rcpCommand.getT());
                }
                if (rcpCommand.hasRead()) {
                    setRead(rcpCommand.getRead());
                }
                if (rcpCommand.hasFrom()) {
                    this.bitField0_ |= 16;
                    this.from_ = rcpCommand.from_;
                    onChanged();
                }
                mergeUnknownFields(rcpCommand.unknownFields);
                onChanged();
                return this;
            }

            /* JADX WARNING: Removed duplicated region for block: B:16:0x0021  */
            /* Code decompiled incorrectly, please refer to instructions dump. */
            public com.avos.avoscloud.Messages.RcpCommand.Builder mergeFrom(com.google.protobuf.CodedInputStream r3, com.google.protobuf.ExtensionRegistryLite r4) throws java.io.IOException {
                /*
                    r2 = this;
                    r0 = 0
                    com.google.protobuf.Parser<com.avos.avoscloud.Messages$RcpCommand> r1 = com.avos.avoscloud.Messages.RcpCommand.PARSER     // Catch:{ InvalidProtocolBufferException -> 0x0011 }
                    java.lang.Object r3 = r1.parsePartialFrom(r3, r4)     // Catch:{ InvalidProtocolBufferException -> 0x0011 }
                    com.avos.avoscloud.Messages$RcpCommand r3 = (com.avos.avoscloud.Messages.RcpCommand) r3     // Catch:{ InvalidProtocolBufferException -> 0x0011 }
                    if (r3 == 0) goto L_0x000e
                    r2.mergeFrom(r3)
                L_0x000e:
                    return r2
                L_0x000f:
                    r3 = move-exception
                    goto L_0x001f
                L_0x0011:
                    r3 = move-exception
                    com.google.protobuf.MessageLite r4 = r3.getUnfinishedMessage()     // Catch:{ all -> 0x000f }
                    com.avos.avoscloud.Messages$RcpCommand r4 = (com.avos.avoscloud.Messages.RcpCommand) r4     // Catch:{ all -> 0x000f }
                    java.io.IOException r3 = r3.unwrapIOException()     // Catch:{ all -> 0x001d }
                    throw r3     // Catch:{ all -> 0x001d }
                L_0x001d:
                    r3 = move-exception
                    r0 = r4
                L_0x001f:
                    if (r0 == 0) goto L_0x0024
                    r2.mergeFrom(r0)
                L_0x0024:
                    throw r3
                */
                throw new UnsupportedOperationException("Method not decompiled: com.avos.avoscloud.Messages.RcpCommand.Builder.mergeFrom(com.google.protobuf.CodedInputStream, com.google.protobuf.ExtensionRegistryLite):com.avos.avoscloud.Messages$RcpCommand$Builder");
            }

            public boolean hasId() {
                return (this.bitField0_ & 1) == 1;
            }

            public String getId() {
                Object obj = this.id_;
                if (obj instanceof String) {
                    return (String) obj;
                }
                ByteString byteString = (ByteString) obj;
                String stringUtf8 = byteString.toStringUtf8();
                if (byteString.isValidUtf8()) {
                    this.id_ = stringUtf8;
                }
                return stringUtf8;
            }

            public ByteString getIdBytes() {
                Object obj = this.id_;
                if (!(obj instanceof String)) {
                    return (ByteString) obj;
                }
                ByteString copyFromUtf8 = ByteString.copyFromUtf8((String) obj);
                this.id_ = copyFromUtf8;
                return copyFromUtf8;
            }

            public Builder setId(String str) {
                if (str != null) {
                    this.bitField0_ |= 1;
                    this.id_ = str;
                    onChanged();
                    return this;
                }
                throw new NullPointerException();
            }

            public Builder clearId() {
                this.bitField0_ &= -2;
                this.id_ = RcpCommand.getDefaultInstance().getId();
                onChanged();
                return this;
            }

            public Builder setIdBytes(ByteString byteString) {
                if (byteString != null) {
                    this.bitField0_ |= 1;
                    this.id_ = byteString;
                    onChanged();
                    return this;
                }
                throw new NullPointerException();
            }

            public boolean hasCid() {
                return (this.bitField0_ & 2) == 2;
            }

            public String getCid() {
                Object obj = this.cid_;
                if (obj instanceof String) {
                    return (String) obj;
                }
                ByteString byteString = (ByteString) obj;
                String stringUtf8 = byteString.toStringUtf8();
                if (byteString.isValidUtf8()) {
                    this.cid_ = stringUtf8;
                }
                return stringUtf8;
            }

            public ByteString getCidBytes() {
                Object obj = this.cid_;
                if (!(obj instanceof String)) {
                    return (ByteString) obj;
                }
                ByteString copyFromUtf8 = ByteString.copyFromUtf8((String) obj);
                this.cid_ = copyFromUtf8;
                return copyFromUtf8;
            }

            public Builder setCid(String str) {
                if (str != null) {
                    this.bitField0_ |= 2;
                    this.cid_ = str;
                    onChanged();
                    return this;
                }
                throw new NullPointerException();
            }

            public Builder clearCid() {
                this.bitField0_ &= -3;
                this.cid_ = RcpCommand.getDefaultInstance().getCid();
                onChanged();
                return this;
            }

            public Builder setCidBytes(ByteString byteString) {
                if (byteString != null) {
                    this.bitField0_ |= 2;
                    this.cid_ = byteString;
                    onChanged();
                    return this;
                }
                throw new NullPointerException();
            }

            public boolean hasT() {
                return (this.bitField0_ & 4) == 4;
            }

            public long getT() {
                return this.t_;
            }

            public Builder setT(long j) {
                this.bitField0_ |= 4;
                this.t_ = j;
                onChanged();
                return this;
            }

            public Builder clearT() {
                this.bitField0_ &= -5;
                this.t_ = 0;
                onChanged();
                return this;
            }

            public boolean hasRead() {
                return (this.bitField0_ & 8) == 8;
            }

            public boolean getRead() {
                return this.read_;
            }

            public Builder setRead(boolean z) {
                this.bitField0_ |= 8;
                this.read_ = z;
                onChanged();
                return this;
            }

            public Builder clearRead() {
                this.bitField0_ &= -9;
                this.read_ = false;
                onChanged();
                return this;
            }

            public boolean hasFrom() {
                return (this.bitField0_ & 16) == 16;
            }

            public String getFrom() {
                Object obj = this.from_;
                if (obj instanceof String) {
                    return (String) obj;
                }
                ByteString byteString = (ByteString) obj;
                String stringUtf8 = byteString.toStringUtf8();
                if (byteString.isValidUtf8()) {
                    this.from_ = stringUtf8;
                }
                return stringUtf8;
            }

            public ByteString getFromBytes() {
                Object obj = this.from_;
                if (!(obj instanceof String)) {
                    return (ByteString) obj;
                }
                ByteString copyFromUtf8 = ByteString.copyFromUtf8((String) obj);
                this.from_ = copyFromUtf8;
                return copyFromUtf8;
            }

            public Builder setFrom(String str) {
                if (str != null) {
                    this.bitField0_ |= 16;
                    this.from_ = str;
                    onChanged();
                    return this;
                }
                throw new NullPointerException();
            }

            public Builder clearFrom() {
                this.bitField0_ &= -17;
                this.from_ = RcpCommand.getDefaultInstance().getFrom();
                onChanged();
                return this;
            }

            public Builder setFromBytes(ByteString byteString) {
                if (byteString != null) {
                    this.bitField0_ |= 16;
                    this.from_ = byteString;
                    onChanged();
                    return this;
                }
                throw new NullPointerException();
            }

            public final Builder setUnknownFields(UnknownFieldSet unknownFieldSet) {
                return (Builder) super.setUnknownFields(unknownFieldSet);
            }

            public final Builder mergeUnknownFields(UnknownFieldSet unknownFieldSet) {
                return (Builder) super.mergeUnknownFields(unknownFieldSet);
            }
        }

        private RcpCommand(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
            super(builder);
            this.memoizedIsInitialized = -1;
        }

        private RcpCommand() {
            this.memoizedIsInitialized = -1;
            String str = "";
            this.id_ = str;
            this.cid_ = str;
            this.t_ = 0;
            this.read_ = false;
            this.from_ = str;
        }

        public final UnknownFieldSet getUnknownFields() {
            return this.unknownFields;
        }

        private RcpCommand(CodedInputStream codedInputStream, ExtensionRegistryLite extensionRegistryLite) throws InvalidProtocolBufferException {
            this();
            com.google.protobuf.UnknownFieldSet.Builder newBuilder = UnknownFieldSet.newBuilder();
            boolean z = false;
            while (!z) {
                try {
                    int readTag = codedInputStream.readTag();
                    if (readTag != 0) {
                        if (readTag == 10) {
                            ByteString readBytes = codedInputStream.readBytes();
                            this.bitField0_ = 1 | this.bitField0_;
                            this.id_ = readBytes;
                        } else if (readTag == 18) {
                            ByteString readBytes2 = codedInputStream.readBytes();
                            this.bitField0_ |= 2;
                            this.cid_ = readBytes2;
                        } else if (readTag == 24) {
                            this.bitField0_ |= 4;
                            this.t_ = codedInputStream.readInt64();
                        } else if (readTag == 32) {
                            this.bitField0_ |= 8;
                            this.read_ = codedInputStream.readBool();
                        } else if (readTag == 42) {
                            ByteString readBytes3 = codedInputStream.readBytes();
                            this.bitField0_ |= 16;
                            this.from_ = readBytes3;
                        } else if (!parseUnknownField(codedInputStream, newBuilder, extensionRegistryLite, readTag)) {
                        }
                    }
                    z = true;
                } catch (InvalidProtocolBufferException e) {
                    throw e.setUnfinishedMessage(this);
                } catch (IOException e2) {
                    throw new InvalidProtocolBufferException(e2).setUnfinishedMessage(this);
                } catch (Throwable th) {
                    this.unknownFields = newBuilder.build();
                    makeExtensionsImmutable();
                    throw th;
                }
            }
            this.unknownFields = newBuilder.build();
            makeExtensionsImmutable();
        }

        public static final Descriptor getDescriptor() {
            return Messages.internal_static_com_avos_avoscloud_RcpCommand_descriptor;
        }

        /* access modifiers changed from: protected */
        public FieldAccessorTable internalGetFieldAccessorTable() {
            return Messages.internal_static_com_avos_avoscloud_RcpCommand_fieldAccessorTable.ensureFieldAccessorsInitialized(RcpCommand.class, Builder.class);
        }

        public boolean hasId() {
            return (this.bitField0_ & 1) == 1;
        }

        public String getId() {
            Object obj = this.id_;
            if (obj instanceof String) {
                return (String) obj;
            }
            ByteString byteString = (ByteString) obj;
            String stringUtf8 = byteString.toStringUtf8();
            if (byteString.isValidUtf8()) {
                this.id_ = stringUtf8;
            }
            return stringUtf8;
        }

        public ByteString getIdBytes() {
            Object obj = this.id_;
            if (!(obj instanceof String)) {
                return (ByteString) obj;
            }
            ByteString copyFromUtf8 = ByteString.copyFromUtf8((String) obj);
            this.id_ = copyFromUtf8;
            return copyFromUtf8;
        }

        public boolean hasCid() {
            return (this.bitField0_ & 2) == 2;
        }

        public String getCid() {
            Object obj = this.cid_;
            if (obj instanceof String) {
                return (String) obj;
            }
            ByteString byteString = (ByteString) obj;
            String stringUtf8 = byteString.toStringUtf8();
            if (byteString.isValidUtf8()) {
                this.cid_ = stringUtf8;
            }
            return stringUtf8;
        }

        public ByteString getCidBytes() {
            Object obj = this.cid_;
            if (!(obj instanceof String)) {
                return (ByteString) obj;
            }
            ByteString copyFromUtf8 = ByteString.copyFromUtf8((String) obj);
            this.cid_ = copyFromUtf8;
            return copyFromUtf8;
        }

        public boolean hasT() {
            return (this.bitField0_ & 4) == 4;
        }

        public long getT() {
            return this.t_;
        }

        public boolean hasRead() {
            return (this.bitField0_ & 8) == 8;
        }

        public boolean getRead() {
            return this.read_;
        }

        public boolean hasFrom() {
            return (this.bitField0_ & 16) == 16;
        }

        public String getFrom() {
            Object obj = this.from_;
            if (obj instanceof String) {
                return (String) obj;
            }
            ByteString byteString = (ByteString) obj;
            String stringUtf8 = byteString.toStringUtf8();
            if (byteString.isValidUtf8()) {
                this.from_ = stringUtf8;
            }
            return stringUtf8;
        }

        public ByteString getFromBytes() {
            Object obj = this.from_;
            if (!(obj instanceof String)) {
                return (ByteString) obj;
            }
            ByteString copyFromUtf8 = ByteString.copyFromUtf8((String) obj);
            this.from_ = copyFromUtf8;
            return copyFromUtf8;
        }

        public final boolean isInitialized() {
            byte b = this.memoizedIsInitialized;
            if (b == 1) {
                return true;
            }
            if (b == 0) {
                return false;
            }
            this.memoizedIsInitialized = 1;
            return true;
        }

        public void writeTo(CodedOutputStream codedOutputStream) throws IOException {
            if ((this.bitField0_ & 1) == 1) {
                GeneratedMessageV3.writeString(codedOutputStream, 1, this.id_);
            }
            if ((this.bitField0_ & 2) == 2) {
                GeneratedMessageV3.writeString(codedOutputStream, 2, this.cid_);
            }
            if ((this.bitField0_ & 4) == 4) {
                codedOutputStream.writeInt64(3, this.t_);
            }
            if ((this.bitField0_ & 8) == 8) {
                codedOutputStream.writeBool(4, this.read_);
            }
            if ((this.bitField0_ & 16) == 16) {
                GeneratedMessageV3.writeString(codedOutputStream, 5, this.from_);
            }
            this.unknownFields.writeTo(codedOutputStream);
        }

        public int getSerializedSize() {
            int i = this.memoizedSize;
            if (i != -1) {
                return i;
            }
            int i2 = 0;
            if ((this.bitField0_ & 1) == 1) {
                i2 = 0 + GeneratedMessageV3.computeStringSize(1, this.id_);
            }
            if ((this.bitField0_ & 2) == 2) {
                i2 += GeneratedMessageV3.computeStringSize(2, this.cid_);
            }
            if ((this.bitField0_ & 4) == 4) {
                i2 += CodedOutputStream.computeInt64Size(3, this.t_);
            }
            if ((this.bitField0_ & 8) == 8) {
                i2 += CodedOutputStream.computeBoolSize(4, this.read_);
            }
            if ((this.bitField0_ & 16) == 16) {
                i2 += GeneratedMessageV3.computeStringSize(5, this.from_);
            }
            int serializedSize = i2 + this.unknownFields.getSerializedSize();
            this.memoizedSize = serializedSize;
            return serializedSize;
        }

        public boolean equals(Object obj) {
            boolean z = true;
            if (obj == this) {
                return true;
            }
            if (!(obj instanceof RcpCommand)) {
                return super.equals(obj);
            }
            RcpCommand rcpCommand = (RcpCommand) obj;
            boolean z2 = hasId() == rcpCommand.hasId();
            if (hasId()) {
                z2 = z2 && getId().equals(rcpCommand.getId());
            }
            boolean z3 = z2 && hasCid() == rcpCommand.hasCid();
            if (hasCid()) {
                z3 = z3 && getCid().equals(rcpCommand.getCid());
            }
            boolean z4 = z3 && hasT() == rcpCommand.hasT();
            if (hasT()) {
                z4 = z4 && getT() == rcpCommand.getT();
            }
            boolean z5 = z4 && hasRead() == rcpCommand.hasRead();
            if (hasRead()) {
                z5 = z5 && getRead() == rcpCommand.getRead();
            }
            boolean z6 = z5 && hasFrom() == rcpCommand.hasFrom();
            if (hasFrom()) {
                z6 = z6 && getFrom().equals(rcpCommand.getFrom());
            }
            if (!z6 || !this.unknownFields.equals(rcpCommand.unknownFields)) {
                z = false;
            }
            return z;
        }

        public int hashCode() {
            if (this.memoizedHashCode != 0) {
                return this.memoizedHashCode;
            }
            int hashCode = 779 + getDescriptor().hashCode();
            if (hasId()) {
                hashCode = (((hashCode * 37) + 1) * 53) + getId().hashCode();
            }
            if (hasCid()) {
                hashCode = (((hashCode * 37) + 2) * 53) + getCid().hashCode();
            }
            if (hasT()) {
                hashCode = (((hashCode * 37) + 3) * 53) + Internal.hashLong(getT());
            }
            if (hasRead()) {
                hashCode = (((hashCode * 37) + 4) * 53) + Internal.hashBoolean(getRead());
            }
            if (hasFrom()) {
                hashCode = (((hashCode * 37) + 5) * 53) + getFrom().hashCode();
            }
            int hashCode2 = (hashCode * 29) + this.unknownFields.hashCode();
            this.memoizedHashCode = hashCode2;
            return hashCode2;
        }

        public static RcpCommand parseFrom(ByteBuffer byteBuffer) throws InvalidProtocolBufferException {
            return (RcpCommand) PARSER.parseFrom(byteBuffer);
        }

        public static RcpCommand parseFrom(ByteBuffer byteBuffer, ExtensionRegistryLite extensionRegistryLite) throws InvalidProtocolBufferException {
            return (RcpCommand) PARSER.parseFrom(byteBuffer, extensionRegistryLite);
        }

        public static RcpCommand parseFrom(ByteString byteString) throws InvalidProtocolBufferException {
            return (RcpCommand) PARSER.parseFrom(byteString);
        }

        public static RcpCommand parseFrom(ByteString byteString, ExtensionRegistryLite extensionRegistryLite) throws InvalidProtocolBufferException {
            return (RcpCommand) PARSER.parseFrom(byteString, extensionRegistryLite);
        }

        public static RcpCommand parseFrom(byte[] bArr) throws InvalidProtocolBufferException {
            return (RcpCommand) PARSER.parseFrom(bArr);
        }

        public static RcpCommand parseFrom(byte[] bArr, ExtensionRegistryLite extensionRegistryLite) throws InvalidProtocolBufferException {
            return (RcpCommand) PARSER.parseFrom(bArr, extensionRegistryLite);
        }

        public static RcpCommand parseFrom(InputStream inputStream) throws IOException {
            return (RcpCommand) GeneratedMessageV3.parseWithIOException(PARSER, inputStream);
        }

        public static RcpCommand parseFrom(InputStream inputStream, ExtensionRegistryLite extensionRegistryLite) throws IOException {
            return (RcpCommand) GeneratedMessageV3.parseWithIOException(PARSER, inputStream, extensionRegistryLite);
        }

        public static RcpCommand parseDelimitedFrom(InputStream inputStream) throws IOException {
            return (RcpCommand) GeneratedMessageV3.parseDelimitedWithIOException(PARSER, inputStream);
        }

        public static RcpCommand parseDelimitedFrom(InputStream inputStream, ExtensionRegistryLite extensionRegistryLite) throws IOException {
            return (RcpCommand) GeneratedMessageV3.parseDelimitedWithIOException(PARSER, inputStream, extensionRegistryLite);
        }

        public static RcpCommand parseFrom(CodedInputStream codedInputStream) throws IOException {
            return (RcpCommand) GeneratedMessageV3.parseWithIOException(PARSER, codedInputStream);
        }

        public static RcpCommand parseFrom(CodedInputStream codedInputStream, ExtensionRegistryLite extensionRegistryLite) throws IOException {
            return (RcpCommand) GeneratedMessageV3.parseWithIOException(PARSER, codedInputStream, extensionRegistryLite);
        }

        public Builder newBuilderForType() {
            return newBuilder();
        }

        public static Builder newBuilder() {
            return DEFAULT_INSTANCE.toBuilder();
        }

        public static Builder newBuilder(RcpCommand rcpCommand) {
            return DEFAULT_INSTANCE.toBuilder().mergeFrom(rcpCommand);
        }

        public Builder toBuilder() {
            if (this == DEFAULT_INSTANCE) {
                return new Builder();
            }
            return new Builder().mergeFrom(this);
        }

        /* access modifiers changed from: protected */
        public Builder newBuilderForType(BuilderParent builderParent) {
            return new Builder(builderParent);
        }

        public static RcpCommand getDefaultInstance() {
            return DEFAULT_INSTANCE;
        }

        public static Parser<RcpCommand> parser() {
            return PARSER;
        }

        public Parser<RcpCommand> getParserForType() {
            return PARSER;
        }

        public RcpCommand getDefaultInstanceForType() {
            return DEFAULT_INSTANCE;
        }
    }

    public interface RcpCommandOrBuilder extends MessageOrBuilder {
        String getCid();

        ByteString getCidBytes();

        String getFrom();

        ByteString getFromBytes();

        String getId();

        ByteString getIdBytes();

        boolean getRead();

        long getT();

        boolean hasCid();

        boolean hasFrom();

        boolean hasId();

        boolean hasRead();

        boolean hasT();
    }

    public static final class ReadCommand extends GeneratedMessageV3 implements ReadCommandOrBuilder {
        public static final int CIDS_FIELD_NUMBER = 2;
        public static final int CID_FIELD_NUMBER = 1;
        public static final int CONVS_FIELD_NUMBER = 3;
        private static final ReadCommand DEFAULT_INSTANCE = new ReadCommand();
        @Deprecated
        public static final Parser<ReadCommand> PARSER = new AbstractParser<ReadCommand>() {
            public ReadCommand parsePartialFrom(CodedInputStream codedInputStream, ExtensionRegistryLite extensionRegistryLite) throws InvalidProtocolBufferException {
                return new ReadCommand(codedInputStream, extensionRegistryLite);
            }
        };
        private static final long serialVersionUID = 0;
        /* access modifiers changed from: private */
        public int bitField0_;
        /* access modifiers changed from: private */
        public volatile Object cid_;
        /* access modifiers changed from: private */
        public LazyStringList cids_;
        /* access modifiers changed from: private */
        public List<ReadTuple> convs_;
        private byte memoizedIsInitialized;

        public static final class Builder extends com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements ReadCommandOrBuilder {
            private int bitField0_;
            private Object cid_;
            private LazyStringList cids_;
            private RepeatedFieldBuilderV3<ReadTuple, Builder, ReadTupleOrBuilder> convsBuilder_;
            private List<ReadTuple> convs_;

            public static final Descriptor getDescriptor() {
                return Messages.internal_static_com_avos_avoscloud_ReadCommand_descriptor;
            }

            /* access modifiers changed from: protected */
            public FieldAccessorTable internalGetFieldAccessorTable() {
                return Messages.internal_static_com_avos_avoscloud_ReadCommand_fieldAccessorTable.ensureFieldAccessorsInitialized(ReadCommand.class, Builder.class);
            }

            private Builder() {
                this.cid_ = "";
                this.cids_ = LazyStringArrayList.EMPTY;
                this.convs_ = Collections.emptyList();
                maybeForceBuilderInitialization();
            }

            private Builder(BuilderParent builderParent) {
                super(builderParent);
                this.cid_ = "";
                this.cids_ = LazyStringArrayList.EMPTY;
                this.convs_ = Collections.emptyList();
                maybeForceBuilderInitialization();
            }

            private void maybeForceBuilderInitialization() {
                if (ReadCommand.alwaysUseFieldBuilders) {
                    getConvsFieldBuilder();
                }
            }

            public Builder clear() {
                super.clear();
                this.cid_ = "";
                this.bitField0_ &= -2;
                this.cids_ = LazyStringArrayList.EMPTY;
                this.bitField0_ &= -3;
                RepeatedFieldBuilderV3<ReadTuple, Builder, ReadTupleOrBuilder> repeatedFieldBuilderV3 = this.convsBuilder_;
                if (repeatedFieldBuilderV3 == null) {
                    this.convs_ = Collections.emptyList();
                    this.bitField0_ &= -5;
                } else {
                    repeatedFieldBuilderV3.clear();
                }
                return this;
            }

            public Descriptor getDescriptorForType() {
                return Messages.internal_static_com_avos_avoscloud_ReadCommand_descriptor;
            }

            public ReadCommand getDefaultInstanceForType() {
                return ReadCommand.getDefaultInstance();
            }

            public ReadCommand build() {
                ReadCommand buildPartial = buildPartial();
                if (buildPartial.isInitialized()) {
                    return buildPartial;
                }
                throw newUninitializedMessageException(buildPartial);
            }

            public ReadCommand buildPartial() {
                ReadCommand readCommand = new ReadCommand((com.google.protobuf.GeneratedMessageV3.Builder) this);
                int i = 1;
                if ((this.bitField0_ & 1) != 1) {
                    i = 0;
                }
                readCommand.cid_ = this.cid_;
                if ((this.bitField0_ & 2) == 2) {
                    this.cids_ = this.cids_.getUnmodifiableView();
                    this.bitField0_ &= -3;
                }
                readCommand.cids_ = this.cids_;
                RepeatedFieldBuilderV3<ReadTuple, Builder, ReadTupleOrBuilder> repeatedFieldBuilderV3 = this.convsBuilder_;
                if (repeatedFieldBuilderV3 == null) {
                    if ((this.bitField0_ & 4) == 4) {
                        this.convs_ = Collections.unmodifiableList(this.convs_);
                        this.bitField0_ &= -5;
                    }
                    readCommand.convs_ = this.convs_;
                } else {
                    readCommand.convs_ = repeatedFieldBuilderV3.build();
                }
                readCommand.bitField0_ = i;
                onBuilt();
                return readCommand;
            }

            public Builder clone() {
                return (Builder) super.clone();
            }

            public Builder setField(FieldDescriptor fieldDescriptor, Object obj) {
                return (Builder) super.setField(fieldDescriptor, obj);
            }

            public Builder clearField(FieldDescriptor fieldDescriptor) {
                return (Builder) super.clearField(fieldDescriptor);
            }

            public Builder clearOneof(OneofDescriptor oneofDescriptor) {
                return (Builder) super.clearOneof(oneofDescriptor);
            }

            public Builder setRepeatedField(FieldDescriptor fieldDescriptor, int i, Object obj) {
                return (Builder) super.setRepeatedField(fieldDescriptor, i, obj);
            }

            public Builder addRepeatedField(FieldDescriptor fieldDescriptor, Object obj) {
                return (Builder) super.addRepeatedField(fieldDescriptor, obj);
            }

            public Builder mergeFrom(Message message) {
                if (message instanceof ReadCommand) {
                    return mergeFrom((ReadCommand) message);
                }
                super.mergeFrom(message);
                return this;
            }

            public Builder mergeFrom(ReadCommand readCommand) {
                if (readCommand == ReadCommand.getDefaultInstance()) {
                    return this;
                }
                if (readCommand.hasCid()) {
                    this.bitField0_ |= 1;
                    this.cid_ = readCommand.cid_;
                    onChanged();
                }
                if (!readCommand.cids_.isEmpty()) {
                    if (this.cids_.isEmpty()) {
                        this.cids_ = readCommand.cids_;
                        this.bitField0_ &= -3;
                    } else {
                        ensureCidsIsMutable();
                        this.cids_.addAll(readCommand.cids_);
                    }
                    onChanged();
                }
                if (this.convsBuilder_ == null) {
                    if (!readCommand.convs_.isEmpty()) {
                        if (this.convs_.isEmpty()) {
                            this.convs_ = readCommand.convs_;
                            this.bitField0_ &= -5;
                        } else {
                            ensureConvsIsMutable();
                            this.convs_.addAll(readCommand.convs_);
                        }
                        onChanged();
                    }
                } else if (!readCommand.convs_.isEmpty()) {
                    if (this.convsBuilder_.isEmpty()) {
                        this.convsBuilder_.dispose();
                        RepeatedFieldBuilderV3<ReadTuple, Builder, ReadTupleOrBuilder> repeatedFieldBuilderV3 = null;
                        this.convsBuilder_ = null;
                        this.convs_ = readCommand.convs_;
                        this.bitField0_ &= -5;
                        if (ReadCommand.alwaysUseFieldBuilders) {
                            repeatedFieldBuilderV3 = getConvsFieldBuilder();
                        }
                        this.convsBuilder_ = repeatedFieldBuilderV3;
                    } else {
                        this.convsBuilder_.addAllMessages(readCommand.convs_);
                    }
                }
                mergeUnknownFields(readCommand.unknownFields);
                onChanged();
                return this;
            }

            public final boolean isInitialized() {
                for (int i = 0; i < getConvsCount(); i++) {
                    if (!getConvs(i).isInitialized()) {
                        return false;
                    }
                }
                return true;
            }

            /* JADX WARNING: Removed duplicated region for block: B:16:0x0021  */
            /* Code decompiled incorrectly, please refer to instructions dump. */
            public com.avos.avoscloud.Messages.ReadCommand.Builder mergeFrom(com.google.protobuf.CodedInputStream r3, com.google.protobuf.ExtensionRegistryLite r4) throws java.io.IOException {
                /*
                    r2 = this;
                    r0 = 0
                    com.google.protobuf.Parser<com.avos.avoscloud.Messages$ReadCommand> r1 = com.avos.avoscloud.Messages.ReadCommand.PARSER     // Catch:{ InvalidProtocolBufferException -> 0x0011 }
                    java.lang.Object r3 = r1.parsePartialFrom(r3, r4)     // Catch:{ InvalidProtocolBufferException -> 0x0011 }
                    com.avos.avoscloud.Messages$ReadCommand r3 = (com.avos.avoscloud.Messages.ReadCommand) r3     // Catch:{ InvalidProtocolBufferException -> 0x0011 }
                    if (r3 == 0) goto L_0x000e
                    r2.mergeFrom(r3)
                L_0x000e:
                    return r2
                L_0x000f:
                    r3 = move-exception
                    goto L_0x001f
                L_0x0011:
                    r3 = move-exception
                    com.google.protobuf.MessageLite r4 = r3.getUnfinishedMessage()     // Catch:{ all -> 0x000f }
                    com.avos.avoscloud.Messages$ReadCommand r4 = (com.avos.avoscloud.Messages.ReadCommand) r4     // Catch:{ all -> 0x000f }
                    java.io.IOException r3 = r3.unwrapIOException()     // Catch:{ all -> 0x001d }
                    throw r3     // Catch:{ all -> 0x001d }
                L_0x001d:
                    r3 = move-exception
                    r0 = r4
                L_0x001f:
                    if (r0 == 0) goto L_0x0024
                    r2.mergeFrom(r0)
                L_0x0024:
                    throw r3
                */
                throw new UnsupportedOperationException("Method not decompiled: com.avos.avoscloud.Messages.ReadCommand.Builder.mergeFrom(com.google.protobuf.CodedInputStream, com.google.protobuf.ExtensionRegistryLite):com.avos.avoscloud.Messages$ReadCommand$Builder");
            }

            public boolean hasCid() {
                return (this.bitField0_ & 1) == 1;
            }

            public String getCid() {
                Object obj = this.cid_;
                if (obj instanceof String) {
                    return (String) obj;
                }
                ByteString byteString = (ByteString) obj;
                String stringUtf8 = byteString.toStringUtf8();
                if (byteString.isValidUtf8()) {
                    this.cid_ = stringUtf8;
                }
                return stringUtf8;
            }

            public ByteString getCidBytes() {
                Object obj = this.cid_;
                if (!(obj instanceof String)) {
                    return (ByteString) obj;
                }
                ByteString copyFromUtf8 = ByteString.copyFromUtf8((String) obj);
                this.cid_ = copyFromUtf8;
                return copyFromUtf8;
            }

            public Builder setCid(String str) {
                if (str != null) {
                    this.bitField0_ |= 1;
                    this.cid_ = str;
                    onChanged();
                    return this;
                }
                throw new NullPointerException();
            }

            public Builder clearCid() {
                this.bitField0_ &= -2;
                this.cid_ = ReadCommand.getDefaultInstance().getCid();
                onChanged();
                return this;
            }

            public Builder setCidBytes(ByteString byteString) {
                if (byteString != null) {
                    this.bitField0_ |= 1;
                    this.cid_ = byteString;
                    onChanged();
                    return this;
                }
                throw new NullPointerException();
            }

            private void ensureCidsIsMutable() {
                if ((this.bitField0_ & 2) != 2) {
                    this.cids_ = new LazyStringArrayList(this.cids_);
                    this.bitField0_ |= 2;
                }
            }

            public ProtocolStringList getCidsList() {
                return this.cids_.getUnmodifiableView();
            }

            public int getCidsCount() {
                return this.cids_.size();
            }

            public String getCids(int i) {
                return (String) this.cids_.get(i);
            }

            public ByteString getCidsBytes(int i) {
                return this.cids_.getByteString(i);
            }

            public Builder setCids(int i, String str) {
                if (str != null) {
                    ensureCidsIsMutable();
                    this.cids_.set(i, str);
                    onChanged();
                    return this;
                }
                throw new NullPointerException();
            }

            public Builder addCids(String str) {
                if (str != null) {
                    ensureCidsIsMutable();
                    this.cids_.add(str);
                    onChanged();
                    return this;
                }
                throw new NullPointerException();
            }

            public Builder addAllCids(Iterable<String> iterable) {
                ensureCidsIsMutable();
                com.google.protobuf.AbstractMessageLite.Builder.addAll((Iterable) iterable, (List) this.cids_);
                onChanged();
                return this;
            }

            public Builder clearCids() {
                this.cids_ = LazyStringArrayList.EMPTY;
                this.bitField0_ &= -3;
                onChanged();
                return this;
            }

            public Builder addCidsBytes(ByteString byteString) {
                if (byteString != null) {
                    ensureCidsIsMutable();
                    this.cids_.add(byteString);
                    onChanged();
                    return this;
                }
                throw new NullPointerException();
            }

            private void ensureConvsIsMutable() {
                if ((this.bitField0_ & 4) != 4) {
                    this.convs_ = new ArrayList(this.convs_);
                    this.bitField0_ |= 4;
                }
            }

            public List<ReadTuple> getConvsList() {
                RepeatedFieldBuilderV3<ReadTuple, Builder, ReadTupleOrBuilder> repeatedFieldBuilderV3 = this.convsBuilder_;
                if (repeatedFieldBuilderV3 == null) {
                    return Collections.unmodifiableList(this.convs_);
                }
                return repeatedFieldBuilderV3.getMessageList();
            }

            public int getConvsCount() {
                RepeatedFieldBuilderV3<ReadTuple, Builder, ReadTupleOrBuilder> repeatedFieldBuilderV3 = this.convsBuilder_;
                if (repeatedFieldBuilderV3 == null) {
                    return this.convs_.size();
                }
                return repeatedFieldBuilderV3.getCount();
            }

            public ReadTuple getConvs(int i) {
                RepeatedFieldBuilderV3<ReadTuple, Builder, ReadTupleOrBuilder> repeatedFieldBuilderV3 = this.convsBuilder_;
                if (repeatedFieldBuilderV3 == null) {
                    return (ReadTuple) this.convs_.get(i);
                }
                return (ReadTuple) repeatedFieldBuilderV3.getMessage(i);
            }

            public Builder setConvs(int i, ReadTuple readTuple) {
                RepeatedFieldBuilderV3<ReadTuple, Builder, ReadTupleOrBuilder> repeatedFieldBuilderV3 = this.convsBuilder_;
                if (repeatedFieldBuilderV3 != null) {
                    repeatedFieldBuilderV3.setMessage(i, readTuple);
                } else if (readTuple != null) {
                    ensureConvsIsMutable();
                    this.convs_.set(i, readTuple);
                    onChanged();
                } else {
                    throw new NullPointerException();
                }
                return this;
            }

            public Builder setConvs(int i, Builder builder) {
                RepeatedFieldBuilderV3<ReadTuple, Builder, ReadTupleOrBuilder> repeatedFieldBuilderV3 = this.convsBuilder_;
                if (repeatedFieldBuilderV3 == null) {
                    ensureConvsIsMutable();
                    this.convs_.set(i, builder.build());
                    onChanged();
                } else {
                    repeatedFieldBuilderV3.setMessage(i, builder.build());
                }
                return this;
            }

            public Builder addConvs(ReadTuple readTuple) {
                RepeatedFieldBuilderV3<ReadTuple, Builder, ReadTupleOrBuilder> repeatedFieldBuilderV3 = this.convsBuilder_;
                if (repeatedFieldBuilderV3 != null) {
                    repeatedFieldBuilderV3.addMessage(readTuple);
                } else if (readTuple != null) {
                    ensureConvsIsMutable();
                    this.convs_.add(readTuple);
                    onChanged();
                } else {
                    throw new NullPointerException();
                }
                return this;
            }

            public Builder addConvs(int i, ReadTuple readTuple) {
                RepeatedFieldBuilderV3<ReadTuple, Builder, ReadTupleOrBuilder> repeatedFieldBuilderV3 = this.convsBuilder_;
                if (repeatedFieldBuilderV3 != null) {
                    repeatedFieldBuilderV3.addMessage(i, readTuple);
                } else if (readTuple != null) {
                    ensureConvsIsMutable();
                    this.convs_.add(i, readTuple);
                    onChanged();
                } else {
                    throw new NullPointerException();
                }
                return this;
            }

            public Builder addConvs(Builder builder) {
                RepeatedFieldBuilderV3<ReadTuple, Builder, ReadTupleOrBuilder> repeatedFieldBuilderV3 = this.convsBuilder_;
                if (repeatedFieldBuilderV3 == null) {
                    ensureConvsIsMutable();
                    this.convs_.add(builder.build());
                    onChanged();
                } else {
                    repeatedFieldBuilderV3.addMessage(builder.build());
                }
                return this;
            }

            public Builder addConvs(int i, Builder builder) {
                RepeatedFieldBuilderV3<ReadTuple, Builder, ReadTupleOrBuilder> repeatedFieldBuilderV3 = this.convsBuilder_;
                if (repeatedFieldBuilderV3 == null) {
                    ensureConvsIsMutable();
                    this.convs_.add(i, builder.build());
                    onChanged();
                } else {
                    repeatedFieldBuilderV3.addMessage(i, builder.build());
                }
                return this;
            }

            public Builder addAllConvs(Iterable<? extends ReadTuple> iterable) {
                RepeatedFieldBuilderV3<ReadTuple, Builder, ReadTupleOrBuilder> repeatedFieldBuilderV3 = this.convsBuilder_;
                if (repeatedFieldBuilderV3 == null) {
                    ensureConvsIsMutable();
                    com.google.protobuf.AbstractMessageLite.Builder.addAll((Iterable) iterable, (List) this.convs_);
                    onChanged();
                } else {
                    repeatedFieldBuilderV3.addAllMessages(iterable);
                }
                return this;
            }

            public Builder clearConvs() {
                RepeatedFieldBuilderV3<ReadTuple, Builder, ReadTupleOrBuilder> repeatedFieldBuilderV3 = this.convsBuilder_;
                if (repeatedFieldBuilderV3 == null) {
                    this.convs_ = Collections.emptyList();
                    this.bitField0_ &= -5;
                    onChanged();
                } else {
                    repeatedFieldBuilderV3.clear();
                }
                return this;
            }

            public Builder removeConvs(int i) {
                RepeatedFieldBuilderV3<ReadTuple, Builder, ReadTupleOrBuilder> repeatedFieldBuilderV3 = this.convsBuilder_;
                if (repeatedFieldBuilderV3 == null) {
                    ensureConvsIsMutable();
                    this.convs_.remove(i);
                    onChanged();
                } else {
                    repeatedFieldBuilderV3.remove(i);
                }
                return this;
            }

            public Builder getConvsBuilder(int i) {
                return (Builder) getConvsFieldBuilder().getBuilder(i);
            }

            public ReadTupleOrBuilder getConvsOrBuilder(int i) {
                RepeatedFieldBuilderV3<ReadTuple, Builder, ReadTupleOrBuilder> repeatedFieldBuilderV3 = this.convsBuilder_;
                if (repeatedFieldBuilderV3 == null) {
                    return (ReadTupleOrBuilder) this.convs_.get(i);
                }
                return (ReadTupleOrBuilder) repeatedFieldBuilderV3.getMessageOrBuilder(i);
            }

            public List<? extends ReadTupleOrBuilder> getConvsOrBuilderList() {
                RepeatedFieldBuilderV3<ReadTuple, Builder, ReadTupleOrBuilder> repeatedFieldBuilderV3 = this.convsBuilder_;
                if (repeatedFieldBuilderV3 != null) {
                    return repeatedFieldBuilderV3.getMessageOrBuilderList();
                }
                return Collections.unmodifiableList(this.convs_);
            }

            public Builder addConvsBuilder() {
                return (Builder) getConvsFieldBuilder().addBuilder(ReadTuple.getDefaultInstance());
            }

            public Builder addConvsBuilder(int i) {
                return (Builder) getConvsFieldBuilder().addBuilder(i, ReadTuple.getDefaultInstance());
            }

            public List<Builder> getConvsBuilderList() {
                return getConvsFieldBuilder().getBuilderList();
            }

            private RepeatedFieldBuilderV3<ReadTuple, Builder, ReadTupleOrBuilder> getConvsFieldBuilder() {
                if (this.convsBuilder_ == null) {
                    this.convsBuilder_ = new RepeatedFieldBuilderV3<>(this.convs_, (this.bitField0_ & 4) == 4, getParentForChildren(), isClean());
                    this.convs_ = null;
                }
                return this.convsBuilder_;
            }

            public final Builder setUnknownFields(UnknownFieldSet unknownFieldSet) {
                return (Builder) super.setUnknownFields(unknownFieldSet);
            }

            public final Builder mergeUnknownFields(UnknownFieldSet unknownFieldSet) {
                return (Builder) super.mergeUnknownFields(unknownFieldSet);
            }
        }

        private ReadCommand(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
            super(builder);
            this.memoizedIsInitialized = -1;
        }

        private ReadCommand() {
            this.memoizedIsInitialized = -1;
            this.cid_ = "";
            this.cids_ = LazyStringArrayList.EMPTY;
            this.convs_ = Collections.emptyList();
        }

        public final UnknownFieldSet getUnknownFields() {
            return this.unknownFields;
        }

        private ReadCommand(CodedInputStream codedInputStream, ExtensionRegistryLite extensionRegistryLite) throws InvalidProtocolBufferException {
            this();
            com.google.protobuf.UnknownFieldSet.Builder newBuilder = UnknownFieldSet.newBuilder();
            boolean z = false;
            boolean z2 = false;
            while (!z) {
                try {
                    int readTag = codedInputStream.readTag();
                    if (readTag != 0) {
                        if (readTag == 10) {
                            ByteString readBytes = codedInputStream.readBytes();
                            this.bitField0_ = 1 | this.bitField0_;
                            this.cid_ = readBytes;
                        } else if (readTag == 18) {
                            ByteString readBytes2 = codedInputStream.readBytes();
                            if (!(z2 & true)) {
                                this.cids_ = new LazyStringArrayList();
                                z2 |= true;
                            }
                            this.cids_.add(readBytes2);
                        } else if (readTag == 26) {
                            if (!(z2 & true)) {
                                this.convs_ = new ArrayList();
                                z2 |= true;
                            }
                            this.convs_.add(codedInputStream.readMessage(ReadTuple.PARSER, extensionRegistryLite));
                        } else if (!parseUnknownField(codedInputStream, newBuilder, extensionRegistryLite, readTag)) {
                        }
                    }
                    z = true;
                } catch (InvalidProtocolBufferException e) {
                    throw e.setUnfinishedMessage(this);
                } catch (IOException e2) {
                    throw new InvalidProtocolBufferException(e2).setUnfinishedMessage(this);
                } catch (Throwable th) {
                    if (z2 & true) {
                        this.cids_ = this.cids_.getUnmodifiableView();
                    }
                    if (z2 & true) {
                        this.convs_ = Collections.unmodifiableList(this.convs_);
                    }
                    this.unknownFields = newBuilder.build();
                    makeExtensionsImmutable();
                    throw th;
                }
            }
            if (z2 & true) {
                this.cids_ = this.cids_.getUnmodifiableView();
            }
            if (z2 & true) {
                this.convs_ = Collections.unmodifiableList(this.convs_);
            }
            this.unknownFields = newBuilder.build();
            makeExtensionsImmutable();
        }

        public static final Descriptor getDescriptor() {
            return Messages.internal_static_com_avos_avoscloud_ReadCommand_descriptor;
        }

        /* access modifiers changed from: protected */
        public FieldAccessorTable internalGetFieldAccessorTable() {
            return Messages.internal_static_com_avos_avoscloud_ReadCommand_fieldAccessorTable.ensureFieldAccessorsInitialized(ReadCommand.class, Builder.class);
        }

        public boolean hasCid() {
            return (this.bitField0_ & 1) == 1;
        }

        public String getCid() {
            Object obj = this.cid_;
            if (obj instanceof String) {
                return (String) obj;
            }
            ByteString byteString = (ByteString) obj;
            String stringUtf8 = byteString.toStringUtf8();
            if (byteString.isValidUtf8()) {
                this.cid_ = stringUtf8;
            }
            return stringUtf8;
        }

        public ByteString getCidBytes() {
            Object obj = this.cid_;
            if (!(obj instanceof String)) {
                return (ByteString) obj;
            }
            ByteString copyFromUtf8 = ByteString.copyFromUtf8((String) obj);
            this.cid_ = copyFromUtf8;
            return copyFromUtf8;
        }

        public ProtocolStringList getCidsList() {
            return this.cids_;
        }

        public int getCidsCount() {
            return this.cids_.size();
        }

        public String getCids(int i) {
            return (String) this.cids_.get(i);
        }

        public ByteString getCidsBytes(int i) {
            return this.cids_.getByteString(i);
        }

        public List<ReadTuple> getConvsList() {
            return this.convs_;
        }

        public List<? extends ReadTupleOrBuilder> getConvsOrBuilderList() {
            return this.convs_;
        }

        public int getConvsCount() {
            return this.convs_.size();
        }

        public ReadTuple getConvs(int i) {
            return (ReadTuple) this.convs_.get(i);
        }

        public ReadTupleOrBuilder getConvsOrBuilder(int i) {
            return (ReadTupleOrBuilder) this.convs_.get(i);
        }

        public final boolean isInitialized() {
            byte b = this.memoizedIsInitialized;
            if (b == 1) {
                return true;
            }
            if (b == 0) {
                return false;
            }
            for (int i = 0; i < getConvsCount(); i++) {
                if (!getConvs(i).isInitialized()) {
                    this.memoizedIsInitialized = 0;
                    return false;
                }
            }
            this.memoizedIsInitialized = 1;
            return true;
        }

        public void writeTo(CodedOutputStream codedOutputStream) throws IOException {
            if ((this.bitField0_ & 1) == 1) {
                GeneratedMessageV3.writeString(codedOutputStream, 1, this.cid_);
            }
            for (int i = 0; i < this.cids_.size(); i++) {
                GeneratedMessageV3.writeString(codedOutputStream, 2, this.cids_.getRaw(i));
            }
            for (int i2 = 0; i2 < this.convs_.size(); i2++) {
                codedOutputStream.writeMessage(3, (MessageLite) this.convs_.get(i2));
            }
            this.unknownFields.writeTo(codedOutputStream);
        }

        public int getSerializedSize() {
            int i = this.memoizedSize;
            if (i != -1) {
                return i;
            }
            int computeStringSize = (this.bitField0_ & 1) == 1 ? GeneratedMessageV3.computeStringSize(1, this.cid_) + 0 : 0;
            int i2 = 0;
            for (int i3 = 0; i3 < this.cids_.size(); i3++) {
                i2 += computeStringSizeNoTag(this.cids_.getRaw(i3));
            }
            int size = computeStringSize + i2 + (getCidsList().size() * 1);
            for (int i4 = 0; i4 < this.convs_.size(); i4++) {
                size += CodedOutputStream.computeMessageSize(3, (MessageLite) this.convs_.get(i4));
            }
            int serializedSize = size + this.unknownFields.getSerializedSize();
            this.memoizedSize = serializedSize;
            return serializedSize;
        }

        public boolean equals(Object obj) {
            boolean z = true;
            if (obj == this) {
                return true;
            }
            if (!(obj instanceof ReadCommand)) {
                return super.equals(obj);
            }
            ReadCommand readCommand = (ReadCommand) obj;
            boolean z2 = hasCid() == readCommand.hasCid();
            if (hasCid()) {
                z2 = z2 && getCid().equals(readCommand.getCid());
            }
            if (!((z2 && getCidsList().equals(readCommand.getCidsList())) && getConvsList().equals(readCommand.getConvsList())) || !this.unknownFields.equals(readCommand.unknownFields)) {
                z = false;
            }
            return z;
        }

        public int hashCode() {
            if (this.memoizedHashCode != 0) {
                return this.memoizedHashCode;
            }
            int hashCode = 779 + getDescriptor().hashCode();
            if (hasCid()) {
                hashCode = (((hashCode * 37) + 1) * 53) + getCid().hashCode();
            }
            if (getCidsCount() > 0) {
                hashCode = (((hashCode * 37) + 2) * 53) + getCidsList().hashCode();
            }
            if (getConvsCount() > 0) {
                hashCode = (((hashCode * 37) + 3) * 53) + getConvsList().hashCode();
            }
            int hashCode2 = (hashCode * 29) + this.unknownFields.hashCode();
            this.memoizedHashCode = hashCode2;
            return hashCode2;
        }

        public static ReadCommand parseFrom(ByteBuffer byteBuffer) throws InvalidProtocolBufferException {
            return (ReadCommand) PARSER.parseFrom(byteBuffer);
        }

        public static ReadCommand parseFrom(ByteBuffer byteBuffer, ExtensionRegistryLite extensionRegistryLite) throws InvalidProtocolBufferException {
            return (ReadCommand) PARSER.parseFrom(byteBuffer, extensionRegistryLite);
        }

        public static ReadCommand parseFrom(ByteString byteString) throws InvalidProtocolBufferException {
            return (ReadCommand) PARSER.parseFrom(byteString);
        }

        public static ReadCommand parseFrom(ByteString byteString, ExtensionRegistryLite extensionRegistryLite) throws InvalidProtocolBufferException {
            return (ReadCommand) PARSER.parseFrom(byteString, extensionRegistryLite);
        }

        public static ReadCommand parseFrom(byte[] bArr) throws InvalidProtocolBufferException {
            return (ReadCommand) PARSER.parseFrom(bArr);
        }

        public static ReadCommand parseFrom(byte[] bArr, ExtensionRegistryLite extensionRegistryLite) throws InvalidProtocolBufferException {
            return (ReadCommand) PARSER.parseFrom(bArr, extensionRegistryLite);
        }

        public static ReadCommand parseFrom(InputStream inputStream) throws IOException {
            return (ReadCommand) GeneratedMessageV3.parseWithIOException(PARSER, inputStream);
        }

        public static ReadCommand parseFrom(InputStream inputStream, ExtensionRegistryLite extensionRegistryLite) throws IOException {
            return (ReadCommand) GeneratedMessageV3.parseWithIOException(PARSER, inputStream, extensionRegistryLite);
        }

        public static ReadCommand parseDelimitedFrom(InputStream inputStream) throws IOException {
            return (ReadCommand) GeneratedMessageV3.parseDelimitedWithIOException(PARSER, inputStream);
        }

        public static ReadCommand parseDelimitedFrom(InputStream inputStream, ExtensionRegistryLite extensionRegistryLite) throws IOException {
            return (ReadCommand) GeneratedMessageV3.parseDelimitedWithIOException(PARSER, inputStream, extensionRegistryLite);
        }

        public static ReadCommand parseFrom(CodedInputStream codedInputStream) throws IOException {
            return (ReadCommand) GeneratedMessageV3.parseWithIOException(PARSER, codedInputStream);
        }

        public static ReadCommand parseFrom(CodedInputStream codedInputStream, ExtensionRegistryLite extensionRegistryLite) throws IOException {
            return (ReadCommand) GeneratedMessageV3.parseWithIOException(PARSER, codedInputStream, extensionRegistryLite);
        }

        public Builder newBuilderForType() {
            return newBuilder();
        }

        public static Builder newBuilder() {
            return DEFAULT_INSTANCE.toBuilder();
        }

        public static Builder newBuilder(ReadCommand readCommand) {
            return DEFAULT_INSTANCE.toBuilder().mergeFrom(readCommand);
        }

        public Builder toBuilder() {
            if (this == DEFAULT_INSTANCE) {
                return new Builder();
            }
            return new Builder().mergeFrom(this);
        }

        /* access modifiers changed from: protected */
        public Builder newBuilderForType(BuilderParent builderParent) {
            return new Builder(builderParent);
        }

        public static ReadCommand getDefaultInstance() {
            return DEFAULT_INSTANCE;
        }

        public static Parser<ReadCommand> parser() {
            return PARSER;
        }

        public Parser<ReadCommand> getParserForType() {
            return PARSER;
        }

        public ReadCommand getDefaultInstanceForType() {
            return DEFAULT_INSTANCE;
        }
    }

    public interface ReadCommandOrBuilder extends MessageOrBuilder {
        String getCid();

        ByteString getCidBytes();

        String getCids(int i);

        ByteString getCidsBytes(int i);

        int getCidsCount();

        List<String> getCidsList();

        ReadTuple getConvs(int i);

        int getConvsCount();

        List<ReadTuple> getConvsList();

        ReadTupleOrBuilder getConvsOrBuilder(int i);

        List<? extends ReadTupleOrBuilder> getConvsOrBuilderList();

        boolean hasCid();
    }

    public static final class ReadTuple extends GeneratedMessageV3 implements ReadTupleOrBuilder {
        public static final int CID_FIELD_NUMBER = 1;
        private static final ReadTuple DEFAULT_INSTANCE = new ReadTuple();
        public static final int MID_FIELD_NUMBER = 3;
        @Deprecated
        public static final Parser<ReadTuple> PARSER = new AbstractParser<ReadTuple>() {
            public ReadTuple parsePartialFrom(CodedInputStream codedInputStream, ExtensionRegistryLite extensionRegistryLite) throws InvalidProtocolBufferException {
                return new ReadTuple(codedInputStream, extensionRegistryLite);
            }
        };
        public static final int TIMESTAMP_FIELD_NUMBER = 2;
        private static final long serialVersionUID = 0;
        /* access modifiers changed from: private */
        public int bitField0_;
        /* access modifiers changed from: private */
        public volatile Object cid_;
        private byte memoizedIsInitialized;
        /* access modifiers changed from: private */
        public volatile Object mid_;
        /* access modifiers changed from: private */
        public long timestamp_;

        public static final class Builder extends com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements ReadTupleOrBuilder {
            private int bitField0_;
            private Object cid_;
            private Object mid_;
            private long timestamp_;

            public static final Descriptor getDescriptor() {
                return Messages.internal_static_com_avos_avoscloud_ReadTuple_descriptor;
            }

            /* access modifiers changed from: protected */
            public FieldAccessorTable internalGetFieldAccessorTable() {
                return Messages.internal_static_com_avos_avoscloud_ReadTuple_fieldAccessorTable.ensureFieldAccessorsInitialized(ReadTuple.class, Builder.class);
            }

            private Builder() {
                String str = "";
                this.cid_ = str;
                this.mid_ = str;
                maybeForceBuilderInitialization();
            }

            private Builder(BuilderParent builderParent) {
                super(builderParent);
                String str = "";
                this.cid_ = str;
                this.mid_ = str;
                maybeForceBuilderInitialization();
            }

            private void maybeForceBuilderInitialization() {
                ReadTuple.alwaysUseFieldBuilders;
            }

            public Builder clear() {
                super.clear();
                String str = "";
                this.cid_ = str;
                this.bitField0_ &= -2;
                this.timestamp_ = 0;
                this.bitField0_ &= -3;
                this.mid_ = str;
                this.bitField0_ &= -5;
                return this;
            }

            public Descriptor getDescriptorForType() {
                return Messages.internal_static_com_avos_avoscloud_ReadTuple_descriptor;
            }

            public ReadTuple getDefaultInstanceForType() {
                return ReadTuple.getDefaultInstance();
            }

            public ReadTuple build() {
                ReadTuple buildPartial = buildPartial();
                if (buildPartial.isInitialized()) {
                    return buildPartial;
                }
                throw newUninitializedMessageException(buildPartial);
            }

            public ReadTuple buildPartial() {
                ReadTuple readTuple = new ReadTuple((com.google.protobuf.GeneratedMessageV3.Builder) this);
                int i = this.bitField0_;
                int i2 = 1;
                if ((i & 1) != 1) {
                    i2 = 0;
                }
                readTuple.cid_ = this.cid_;
                if ((i & 2) == 2) {
                    i2 |= 2;
                }
                readTuple.timestamp_ = this.timestamp_;
                if ((i & 4) == 4) {
                    i2 |= 4;
                }
                readTuple.mid_ = this.mid_;
                readTuple.bitField0_ = i2;
                onBuilt();
                return readTuple;
            }

            public Builder clone() {
                return (Builder) super.clone();
            }

            public Builder setField(FieldDescriptor fieldDescriptor, Object obj) {
                return (Builder) super.setField(fieldDescriptor, obj);
            }

            public Builder clearField(FieldDescriptor fieldDescriptor) {
                return (Builder) super.clearField(fieldDescriptor);
            }

            public Builder clearOneof(OneofDescriptor oneofDescriptor) {
                return (Builder) super.clearOneof(oneofDescriptor);
            }

            public Builder setRepeatedField(FieldDescriptor fieldDescriptor, int i, Object obj) {
                return (Builder) super.setRepeatedField(fieldDescriptor, i, obj);
            }

            public Builder addRepeatedField(FieldDescriptor fieldDescriptor, Object obj) {
                return (Builder) super.addRepeatedField(fieldDescriptor, obj);
            }

            public Builder mergeFrom(Message message) {
                if (message instanceof ReadTuple) {
                    return mergeFrom((ReadTuple) message);
                }
                super.mergeFrom(message);
                return this;
            }

            public Builder mergeFrom(ReadTuple readTuple) {
                if (readTuple == ReadTuple.getDefaultInstance()) {
                    return this;
                }
                if (readTuple.hasCid()) {
                    this.bitField0_ |= 1;
                    this.cid_ = readTuple.cid_;
                    onChanged();
                }
                if (readTuple.hasTimestamp()) {
                    setTimestamp(readTuple.getTimestamp());
                }
                if (readTuple.hasMid()) {
                    this.bitField0_ |= 4;
                    this.mid_ = readTuple.mid_;
                    onChanged();
                }
                mergeUnknownFields(readTuple.unknownFields);
                onChanged();
                return this;
            }

            public final boolean isInitialized() {
                return hasCid();
            }

            /* JADX WARNING: Removed duplicated region for block: B:16:0x0021  */
            /* Code decompiled incorrectly, please refer to instructions dump. */
            public com.avos.avoscloud.Messages.ReadTuple.Builder mergeFrom(com.google.protobuf.CodedInputStream r3, com.google.protobuf.ExtensionRegistryLite r4) throws java.io.IOException {
                /*
                    r2 = this;
                    r0 = 0
                    com.google.protobuf.Parser<com.avos.avoscloud.Messages$ReadTuple> r1 = com.avos.avoscloud.Messages.ReadTuple.PARSER     // Catch:{ InvalidProtocolBufferException -> 0x0011 }
                    java.lang.Object r3 = r1.parsePartialFrom(r3, r4)     // Catch:{ InvalidProtocolBufferException -> 0x0011 }
                    com.avos.avoscloud.Messages$ReadTuple r3 = (com.avos.avoscloud.Messages.ReadTuple) r3     // Catch:{ InvalidProtocolBufferException -> 0x0011 }
                    if (r3 == 0) goto L_0x000e
                    r2.mergeFrom(r3)
                L_0x000e:
                    return r2
                L_0x000f:
                    r3 = move-exception
                    goto L_0x001f
                L_0x0011:
                    r3 = move-exception
                    com.google.protobuf.MessageLite r4 = r3.getUnfinishedMessage()     // Catch:{ all -> 0x000f }
                    com.avos.avoscloud.Messages$ReadTuple r4 = (com.avos.avoscloud.Messages.ReadTuple) r4     // Catch:{ all -> 0x000f }
                    java.io.IOException r3 = r3.unwrapIOException()     // Catch:{ all -> 0x001d }
                    throw r3     // Catch:{ all -> 0x001d }
                L_0x001d:
                    r3 = move-exception
                    r0 = r4
                L_0x001f:
                    if (r0 == 0) goto L_0x0024
                    r2.mergeFrom(r0)
                L_0x0024:
                    throw r3
                */
                throw new UnsupportedOperationException("Method not decompiled: com.avos.avoscloud.Messages.ReadTuple.Builder.mergeFrom(com.google.protobuf.CodedInputStream, com.google.protobuf.ExtensionRegistryLite):com.avos.avoscloud.Messages$ReadTuple$Builder");
            }

            public boolean hasCid() {
                return (this.bitField0_ & 1) == 1;
            }

            public String getCid() {
                Object obj = this.cid_;
                if (obj instanceof String) {
                    return (String) obj;
                }
                ByteString byteString = (ByteString) obj;
                String stringUtf8 = byteString.toStringUtf8();
                if (byteString.isValidUtf8()) {
                    this.cid_ = stringUtf8;
                }
                return stringUtf8;
            }

            public ByteString getCidBytes() {
                Object obj = this.cid_;
                if (!(obj instanceof String)) {
                    return (ByteString) obj;
                }
                ByteString copyFromUtf8 = ByteString.copyFromUtf8((String) obj);
                this.cid_ = copyFromUtf8;
                return copyFromUtf8;
            }

            public Builder setCid(String str) {
                if (str != null) {
                    this.bitField0_ |= 1;
                    this.cid_ = str;
                    onChanged();
                    return this;
                }
                throw new NullPointerException();
            }

            public Builder clearCid() {
                this.bitField0_ &= -2;
                this.cid_ = ReadTuple.getDefaultInstance().getCid();
                onChanged();
                return this;
            }

            public Builder setCidBytes(ByteString byteString) {
                if (byteString != null) {
                    this.bitField0_ |= 1;
                    this.cid_ = byteString;
                    onChanged();
                    return this;
                }
                throw new NullPointerException();
            }

            public boolean hasTimestamp() {
                return (this.bitField0_ & 2) == 2;
            }

            public long getTimestamp() {
                return this.timestamp_;
            }

            public Builder setTimestamp(long j) {
                this.bitField0_ |= 2;
                this.timestamp_ = j;
                onChanged();
                return this;
            }

            public Builder clearTimestamp() {
                this.bitField0_ &= -3;
                this.timestamp_ = 0;
                onChanged();
                return this;
            }

            public boolean hasMid() {
                return (this.bitField0_ & 4) == 4;
            }

            public String getMid() {
                Object obj = this.mid_;
                if (obj instanceof String) {
                    return (String) obj;
                }
                ByteString byteString = (ByteString) obj;
                String stringUtf8 = byteString.toStringUtf8();
                if (byteString.isValidUtf8()) {
                    this.mid_ = stringUtf8;
                }
                return stringUtf8;
            }

            public ByteString getMidBytes() {
                Object obj = this.mid_;
                if (!(obj instanceof String)) {
                    return (ByteString) obj;
                }
                ByteString copyFromUtf8 = ByteString.copyFromUtf8((String) obj);
                this.mid_ = copyFromUtf8;
                return copyFromUtf8;
            }

            public Builder setMid(String str) {
                if (str != null) {
                    this.bitField0_ |= 4;
                    this.mid_ = str;
                    onChanged();
                    return this;
                }
                throw new NullPointerException();
            }

            public Builder clearMid() {
                this.bitField0_ &= -5;
                this.mid_ = ReadTuple.getDefaultInstance().getMid();
                onChanged();
                return this;
            }

            public Builder setMidBytes(ByteString byteString) {
                if (byteString != null) {
                    this.bitField0_ |= 4;
                    this.mid_ = byteString;
                    onChanged();
                    return this;
                }
                throw new NullPointerException();
            }

            public final Builder setUnknownFields(UnknownFieldSet unknownFieldSet) {
                return (Builder) super.setUnknownFields(unknownFieldSet);
            }

            public final Builder mergeUnknownFields(UnknownFieldSet unknownFieldSet) {
                return (Builder) super.mergeUnknownFields(unknownFieldSet);
            }
        }

        private ReadTuple(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
            super(builder);
            this.memoizedIsInitialized = -1;
        }

        private ReadTuple() {
            this.memoizedIsInitialized = -1;
            String str = "";
            this.cid_ = str;
            this.timestamp_ = 0;
            this.mid_ = str;
        }

        public final UnknownFieldSet getUnknownFields() {
            return this.unknownFields;
        }

        private ReadTuple(CodedInputStream codedInputStream, ExtensionRegistryLite extensionRegistryLite) throws InvalidProtocolBufferException {
            this();
            com.google.protobuf.UnknownFieldSet.Builder newBuilder = UnknownFieldSet.newBuilder();
            boolean z = false;
            while (!z) {
                try {
                    int readTag = codedInputStream.readTag();
                    if (readTag != 0) {
                        if (readTag == 10) {
                            ByteString readBytes = codedInputStream.readBytes();
                            this.bitField0_ = 1 | this.bitField0_;
                            this.cid_ = readBytes;
                        } else if (readTag == 16) {
                            this.bitField0_ |= 2;
                            this.timestamp_ = codedInputStream.readInt64();
                        } else if (readTag == 26) {
                            ByteString readBytes2 = codedInputStream.readBytes();
                            this.bitField0_ |= 4;
                            this.mid_ = readBytes2;
                        } else if (!parseUnknownField(codedInputStream, newBuilder, extensionRegistryLite, readTag)) {
                        }
                    }
                    z = true;
                } catch (InvalidProtocolBufferException e) {
                    throw e.setUnfinishedMessage(this);
                } catch (IOException e2) {
                    throw new InvalidProtocolBufferException(e2).setUnfinishedMessage(this);
                } catch (Throwable th) {
                    this.unknownFields = newBuilder.build();
                    makeExtensionsImmutable();
                    throw th;
                }
            }
            this.unknownFields = newBuilder.build();
            makeExtensionsImmutable();
        }

        public static final Descriptor getDescriptor() {
            return Messages.internal_static_com_avos_avoscloud_ReadTuple_descriptor;
        }

        /* access modifiers changed from: protected */
        public FieldAccessorTable internalGetFieldAccessorTable() {
            return Messages.internal_static_com_avos_avoscloud_ReadTuple_fieldAccessorTable.ensureFieldAccessorsInitialized(ReadTuple.class, Builder.class);
        }

        public boolean hasCid() {
            return (this.bitField0_ & 1) == 1;
        }

        public String getCid() {
            Object obj = this.cid_;
            if (obj instanceof String) {
                return (String) obj;
            }
            ByteString byteString = (ByteString) obj;
            String stringUtf8 = byteString.toStringUtf8();
            if (byteString.isValidUtf8()) {
                this.cid_ = stringUtf8;
            }
            return stringUtf8;
        }

        public ByteString getCidBytes() {
            Object obj = this.cid_;
            if (!(obj instanceof String)) {
                return (ByteString) obj;
            }
            ByteString copyFromUtf8 = ByteString.copyFromUtf8((String) obj);
            this.cid_ = copyFromUtf8;
            return copyFromUtf8;
        }

        public boolean hasTimestamp() {
            return (this.bitField0_ & 2) == 2;
        }

        public long getTimestamp() {
            return this.timestamp_;
        }

        public boolean hasMid() {
            return (this.bitField0_ & 4) == 4;
        }

        public String getMid() {
            Object obj = this.mid_;
            if (obj instanceof String) {
                return (String) obj;
            }
            ByteString byteString = (ByteString) obj;
            String stringUtf8 = byteString.toStringUtf8();
            if (byteString.isValidUtf8()) {
                this.mid_ = stringUtf8;
            }
            return stringUtf8;
        }

        public ByteString getMidBytes() {
            Object obj = this.mid_;
            if (!(obj instanceof String)) {
                return (ByteString) obj;
            }
            ByteString copyFromUtf8 = ByteString.copyFromUtf8((String) obj);
            this.mid_ = copyFromUtf8;
            return copyFromUtf8;
        }

        public final boolean isInitialized() {
            byte b = this.memoizedIsInitialized;
            if (b == 1) {
                return true;
            }
            if (b == 0) {
                return false;
            }
            if (!hasCid()) {
                this.memoizedIsInitialized = 0;
                return false;
            }
            this.memoizedIsInitialized = 1;
            return true;
        }

        public void writeTo(CodedOutputStream codedOutputStream) throws IOException {
            if ((this.bitField0_ & 1) == 1) {
                GeneratedMessageV3.writeString(codedOutputStream, 1, this.cid_);
            }
            if ((this.bitField0_ & 2) == 2) {
                codedOutputStream.writeInt64(2, this.timestamp_);
            }
            if ((this.bitField0_ & 4) == 4) {
                GeneratedMessageV3.writeString(codedOutputStream, 3, this.mid_);
            }
            this.unknownFields.writeTo(codedOutputStream);
        }

        public int getSerializedSize() {
            int i = this.memoizedSize;
            if (i != -1) {
                return i;
            }
            int i2 = 0;
            if ((this.bitField0_ & 1) == 1) {
                i2 = 0 + GeneratedMessageV3.computeStringSize(1, this.cid_);
            }
            if ((this.bitField0_ & 2) == 2) {
                i2 += CodedOutputStream.computeInt64Size(2, this.timestamp_);
            }
            if ((this.bitField0_ & 4) == 4) {
                i2 += GeneratedMessageV3.computeStringSize(3, this.mid_);
            }
            int serializedSize = i2 + this.unknownFields.getSerializedSize();
            this.memoizedSize = serializedSize;
            return serializedSize;
        }

        public boolean equals(Object obj) {
            boolean z = true;
            if (obj == this) {
                return true;
            }
            if (!(obj instanceof ReadTuple)) {
                return super.equals(obj);
            }
            ReadTuple readTuple = (ReadTuple) obj;
            boolean z2 = hasCid() == readTuple.hasCid();
            if (hasCid()) {
                z2 = z2 && getCid().equals(readTuple.getCid());
            }
            boolean z3 = z2 && hasTimestamp() == readTuple.hasTimestamp();
            if (hasTimestamp()) {
                z3 = z3 && getTimestamp() == readTuple.getTimestamp();
            }
            boolean z4 = z3 && hasMid() == readTuple.hasMid();
            if (hasMid()) {
                z4 = z4 && getMid().equals(readTuple.getMid());
            }
            if (!z4 || !this.unknownFields.equals(readTuple.unknownFields)) {
                z = false;
            }
            return z;
        }

        public int hashCode() {
            if (this.memoizedHashCode != 0) {
                return this.memoizedHashCode;
            }
            int hashCode = 779 + getDescriptor().hashCode();
            if (hasCid()) {
                hashCode = (((hashCode * 37) + 1) * 53) + getCid().hashCode();
            }
            if (hasTimestamp()) {
                hashCode = (((hashCode * 37) + 2) * 53) + Internal.hashLong(getTimestamp());
            }
            if (hasMid()) {
                hashCode = (((hashCode * 37) + 3) * 53) + getMid().hashCode();
            }
            int hashCode2 = (hashCode * 29) + this.unknownFields.hashCode();
            this.memoizedHashCode = hashCode2;
            return hashCode2;
        }

        public static ReadTuple parseFrom(ByteBuffer byteBuffer) throws InvalidProtocolBufferException {
            return (ReadTuple) PARSER.parseFrom(byteBuffer);
        }

        public static ReadTuple parseFrom(ByteBuffer byteBuffer, ExtensionRegistryLite extensionRegistryLite) throws InvalidProtocolBufferException {
            return (ReadTuple) PARSER.parseFrom(byteBuffer, extensionRegistryLite);
        }

        public static ReadTuple parseFrom(ByteString byteString) throws InvalidProtocolBufferException {
            return (ReadTuple) PARSER.parseFrom(byteString);
        }

        public static ReadTuple parseFrom(ByteString byteString, ExtensionRegistryLite extensionRegistryLite) throws InvalidProtocolBufferException {
            return (ReadTuple) PARSER.parseFrom(byteString, extensionRegistryLite);
        }

        public static ReadTuple parseFrom(byte[] bArr) throws InvalidProtocolBufferException {
            return (ReadTuple) PARSER.parseFrom(bArr);
        }

        public static ReadTuple parseFrom(byte[] bArr, ExtensionRegistryLite extensionRegistryLite) throws InvalidProtocolBufferException {
            return (ReadTuple) PARSER.parseFrom(bArr, extensionRegistryLite);
        }

        public static ReadTuple parseFrom(InputStream inputStream) throws IOException {
            return (ReadTuple) GeneratedMessageV3.parseWithIOException(PARSER, inputStream);
        }

        public static ReadTuple parseFrom(InputStream inputStream, ExtensionRegistryLite extensionRegistryLite) throws IOException {
            return (ReadTuple) GeneratedMessageV3.parseWithIOException(PARSER, inputStream, extensionRegistryLite);
        }

        public static ReadTuple parseDelimitedFrom(InputStream inputStream) throws IOException {
            return (ReadTuple) GeneratedMessageV3.parseDelimitedWithIOException(PARSER, inputStream);
        }

        public static ReadTuple parseDelimitedFrom(InputStream inputStream, ExtensionRegistryLite extensionRegistryLite) throws IOException {
            return (ReadTuple) GeneratedMessageV3.parseDelimitedWithIOException(PARSER, inputStream, extensionRegistryLite);
        }

        public static ReadTuple parseFrom(CodedInputStream codedInputStream) throws IOException {
            return (ReadTuple) GeneratedMessageV3.parseWithIOException(PARSER, codedInputStream);
        }

        public static ReadTuple parseFrom(CodedInputStream codedInputStream, ExtensionRegistryLite extensionRegistryLite) throws IOException {
            return (ReadTuple) GeneratedMessageV3.parseWithIOException(PARSER, codedInputStream, extensionRegistryLite);
        }

        public Builder newBuilderForType() {
            return newBuilder();
        }

        public static Builder newBuilder() {
            return DEFAULT_INSTANCE.toBuilder();
        }

        public static Builder newBuilder(ReadTuple readTuple) {
            return DEFAULT_INSTANCE.toBuilder().mergeFrom(readTuple);
        }

        public Builder toBuilder() {
            if (this == DEFAULT_INSTANCE) {
                return new Builder();
            }
            return new Builder().mergeFrom(this);
        }

        /* access modifiers changed from: protected */
        public Builder newBuilderForType(BuilderParent builderParent) {
            return new Builder(builderParent);
        }

        public static ReadTuple getDefaultInstance() {
            return DEFAULT_INSTANCE;
        }

        public static Parser<ReadTuple> parser() {
            return PARSER;
        }

        public Parser<ReadTuple> getParserForType() {
            return PARSER;
        }

        public ReadTuple getDefaultInstanceForType() {
            return DEFAULT_INSTANCE;
        }
    }

    public interface ReadTupleOrBuilder extends MessageOrBuilder {
        String getCid();

        ByteString getCidBytes();

        String getMid();

        ByteString getMidBytes();

        long getTimestamp();

        boolean hasCid();

        boolean hasMid();

        boolean hasTimestamp();
    }

    public static final class ReportCommand extends GeneratedMessageV3 implements ReportCommandOrBuilder {
        public static final int DATA_FIELD_NUMBER = 3;
        private static final ReportCommand DEFAULT_INSTANCE = new ReportCommand();
        public static final int INITIATIVE_FIELD_NUMBER = 1;
        @Deprecated
        public static final Parser<ReportCommand> PARSER = new AbstractParser<ReportCommand>() {
            public ReportCommand parsePartialFrom(CodedInputStream codedInputStream, ExtensionRegistryLite extensionRegistryLite) throws InvalidProtocolBufferException {
                return new ReportCommand(codedInputStream, extensionRegistryLite);
            }
        };
        public static final int TYPE_FIELD_NUMBER = 2;
        private static final long serialVersionUID = 0;
        /* access modifiers changed from: private */
        public int bitField0_;
        /* access modifiers changed from: private */
        public volatile Object data_;
        /* access modifiers changed from: private */
        public boolean initiative_;
        private byte memoizedIsInitialized;
        /* access modifiers changed from: private */
        public volatile Object type_;

        public static final class Builder extends com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements ReportCommandOrBuilder {
            private int bitField0_;
            private Object data_;
            private boolean initiative_;
            private Object type_;

            public final boolean isInitialized() {
                return true;
            }

            public static final Descriptor getDescriptor() {
                return Messages.internal_static_com_avos_avoscloud_ReportCommand_descriptor;
            }

            /* access modifiers changed from: protected */
            public FieldAccessorTable internalGetFieldAccessorTable() {
                return Messages.internal_static_com_avos_avoscloud_ReportCommand_fieldAccessorTable.ensureFieldAccessorsInitialized(ReportCommand.class, Builder.class);
            }

            private Builder() {
                String str = "";
                this.type_ = str;
                this.data_ = str;
                maybeForceBuilderInitialization();
            }

            private Builder(BuilderParent builderParent) {
                super(builderParent);
                String str = "";
                this.type_ = str;
                this.data_ = str;
                maybeForceBuilderInitialization();
            }

            private void maybeForceBuilderInitialization() {
                ReportCommand.alwaysUseFieldBuilders;
            }

            public Builder clear() {
                super.clear();
                this.initiative_ = false;
                this.bitField0_ &= -2;
                String str = "";
                this.type_ = str;
                this.bitField0_ &= -3;
                this.data_ = str;
                this.bitField0_ &= -5;
                return this;
            }

            public Descriptor getDescriptorForType() {
                return Messages.internal_static_com_avos_avoscloud_ReportCommand_descriptor;
            }

            public ReportCommand getDefaultInstanceForType() {
                return ReportCommand.getDefaultInstance();
            }

            public ReportCommand build() {
                ReportCommand buildPartial = buildPartial();
                if (buildPartial.isInitialized()) {
                    return buildPartial;
                }
                throw newUninitializedMessageException(buildPartial);
            }

            public ReportCommand buildPartial() {
                ReportCommand reportCommand = new ReportCommand((com.google.protobuf.GeneratedMessageV3.Builder) this);
                int i = this.bitField0_;
                int i2 = 1;
                if ((i & 1) != 1) {
                    i2 = 0;
                }
                reportCommand.initiative_ = this.initiative_;
                if ((i & 2) == 2) {
                    i2 |= 2;
                }
                reportCommand.type_ = this.type_;
                if ((i & 4) == 4) {
                    i2 |= 4;
                }
                reportCommand.data_ = this.data_;
                reportCommand.bitField0_ = i2;
                onBuilt();
                return reportCommand;
            }

            public Builder clone() {
                return (Builder) super.clone();
            }

            public Builder setField(FieldDescriptor fieldDescriptor, Object obj) {
                return (Builder) super.setField(fieldDescriptor, obj);
            }

            public Builder clearField(FieldDescriptor fieldDescriptor) {
                return (Builder) super.clearField(fieldDescriptor);
            }

            public Builder clearOneof(OneofDescriptor oneofDescriptor) {
                return (Builder) super.clearOneof(oneofDescriptor);
            }

            public Builder setRepeatedField(FieldDescriptor fieldDescriptor, int i, Object obj) {
                return (Builder) super.setRepeatedField(fieldDescriptor, i, obj);
            }

            public Builder addRepeatedField(FieldDescriptor fieldDescriptor, Object obj) {
                return (Builder) super.addRepeatedField(fieldDescriptor, obj);
            }

            public Builder mergeFrom(Message message) {
                if (message instanceof ReportCommand) {
                    return mergeFrom((ReportCommand) message);
                }
                super.mergeFrom(message);
                return this;
            }

            public Builder mergeFrom(ReportCommand reportCommand) {
                if (reportCommand == ReportCommand.getDefaultInstance()) {
                    return this;
                }
                if (reportCommand.hasInitiative()) {
                    setInitiative(reportCommand.getInitiative());
                }
                if (reportCommand.hasType()) {
                    this.bitField0_ |= 2;
                    this.type_ = reportCommand.type_;
                    onChanged();
                }
                if (reportCommand.hasData()) {
                    this.bitField0_ |= 4;
                    this.data_ = reportCommand.data_;
                    onChanged();
                }
                mergeUnknownFields(reportCommand.unknownFields);
                onChanged();
                return this;
            }

            /* JADX WARNING: Removed duplicated region for block: B:16:0x0021  */
            /* Code decompiled incorrectly, please refer to instructions dump. */
            public com.avos.avoscloud.Messages.ReportCommand.Builder mergeFrom(com.google.protobuf.CodedInputStream r3, com.google.protobuf.ExtensionRegistryLite r4) throws java.io.IOException {
                /*
                    r2 = this;
                    r0 = 0
                    com.google.protobuf.Parser<com.avos.avoscloud.Messages$ReportCommand> r1 = com.avos.avoscloud.Messages.ReportCommand.PARSER     // Catch:{ InvalidProtocolBufferException -> 0x0011 }
                    java.lang.Object r3 = r1.parsePartialFrom(r3, r4)     // Catch:{ InvalidProtocolBufferException -> 0x0011 }
                    com.avos.avoscloud.Messages$ReportCommand r3 = (com.avos.avoscloud.Messages.ReportCommand) r3     // Catch:{ InvalidProtocolBufferException -> 0x0011 }
                    if (r3 == 0) goto L_0x000e
                    r2.mergeFrom(r3)
                L_0x000e:
                    return r2
                L_0x000f:
                    r3 = move-exception
                    goto L_0x001f
                L_0x0011:
                    r3 = move-exception
                    com.google.protobuf.MessageLite r4 = r3.getUnfinishedMessage()     // Catch:{ all -> 0x000f }
                    com.avos.avoscloud.Messages$ReportCommand r4 = (com.avos.avoscloud.Messages.ReportCommand) r4     // Catch:{ all -> 0x000f }
                    java.io.IOException r3 = r3.unwrapIOException()     // Catch:{ all -> 0x001d }
                    throw r3     // Catch:{ all -> 0x001d }
                L_0x001d:
                    r3 = move-exception
                    r0 = r4
                L_0x001f:
                    if (r0 == 0) goto L_0x0024
                    r2.mergeFrom(r0)
                L_0x0024:
                    throw r3
                */
                throw new UnsupportedOperationException("Method not decompiled: com.avos.avoscloud.Messages.ReportCommand.Builder.mergeFrom(com.google.protobuf.CodedInputStream, com.google.protobuf.ExtensionRegistryLite):com.avos.avoscloud.Messages$ReportCommand$Builder");
            }

            public boolean hasInitiative() {
                return (this.bitField0_ & 1) == 1;
            }

            public boolean getInitiative() {
                return this.initiative_;
            }

            public Builder setInitiative(boolean z) {
                this.bitField0_ |= 1;
                this.initiative_ = z;
                onChanged();
                return this;
            }

            public Builder clearInitiative() {
                this.bitField0_ &= -2;
                this.initiative_ = false;
                onChanged();
                return this;
            }

            public boolean hasType() {
                return (this.bitField0_ & 2) == 2;
            }

            public String getType() {
                Object obj = this.type_;
                if (obj instanceof String) {
                    return (String) obj;
                }
                ByteString byteString = (ByteString) obj;
                String stringUtf8 = byteString.toStringUtf8();
                if (byteString.isValidUtf8()) {
                    this.type_ = stringUtf8;
                }
                return stringUtf8;
            }

            public ByteString getTypeBytes() {
                Object obj = this.type_;
                if (!(obj instanceof String)) {
                    return (ByteString) obj;
                }
                ByteString copyFromUtf8 = ByteString.copyFromUtf8((String) obj);
                this.type_ = copyFromUtf8;
                return copyFromUtf8;
            }

            public Builder setType(String str) {
                if (str != null) {
                    this.bitField0_ |= 2;
                    this.type_ = str;
                    onChanged();
                    return this;
                }
                throw new NullPointerException();
            }

            public Builder clearType() {
                this.bitField0_ &= -3;
                this.type_ = ReportCommand.getDefaultInstance().getType();
                onChanged();
                return this;
            }

            public Builder setTypeBytes(ByteString byteString) {
                if (byteString != null) {
                    this.bitField0_ |= 2;
                    this.type_ = byteString;
                    onChanged();
                    return this;
                }
                throw new NullPointerException();
            }

            public boolean hasData() {
                return (this.bitField0_ & 4) == 4;
            }

            public String getData() {
                Object obj = this.data_;
                if (obj instanceof String) {
                    return (String) obj;
                }
                ByteString byteString = (ByteString) obj;
                String stringUtf8 = byteString.toStringUtf8();
                if (byteString.isValidUtf8()) {
                    this.data_ = stringUtf8;
                }
                return stringUtf8;
            }

            public ByteString getDataBytes() {
                Object obj = this.data_;
                if (!(obj instanceof String)) {
                    return (ByteString) obj;
                }
                ByteString copyFromUtf8 = ByteString.copyFromUtf8((String) obj);
                this.data_ = copyFromUtf8;
                return copyFromUtf8;
            }

            public Builder setData(String str) {
                if (str != null) {
                    this.bitField0_ |= 4;
                    this.data_ = str;
                    onChanged();
                    return this;
                }
                throw new NullPointerException();
            }

            public Builder clearData() {
                this.bitField0_ &= -5;
                this.data_ = ReportCommand.getDefaultInstance().getData();
                onChanged();
                return this;
            }

            public Builder setDataBytes(ByteString byteString) {
                if (byteString != null) {
                    this.bitField0_ |= 4;
                    this.data_ = byteString;
                    onChanged();
                    return this;
                }
                throw new NullPointerException();
            }

            public final Builder setUnknownFields(UnknownFieldSet unknownFieldSet) {
                return (Builder) super.setUnknownFields(unknownFieldSet);
            }

            public final Builder mergeUnknownFields(UnknownFieldSet unknownFieldSet) {
                return (Builder) super.mergeUnknownFields(unknownFieldSet);
            }
        }

        private ReportCommand(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
            super(builder);
            this.memoizedIsInitialized = -1;
        }

        private ReportCommand() {
            this.memoizedIsInitialized = -1;
            this.initiative_ = false;
            String str = "";
            this.type_ = str;
            this.data_ = str;
        }

        public final UnknownFieldSet getUnknownFields() {
            return this.unknownFields;
        }

        private ReportCommand(CodedInputStream codedInputStream, ExtensionRegistryLite extensionRegistryLite) throws InvalidProtocolBufferException {
            this();
            com.google.protobuf.UnknownFieldSet.Builder newBuilder = UnknownFieldSet.newBuilder();
            boolean z = false;
            while (!z) {
                try {
                    int readTag = codedInputStream.readTag();
                    if (readTag != 0) {
                        if (readTag == 8) {
                            this.bitField0_ |= 1;
                            this.initiative_ = codedInputStream.readBool();
                        } else if (readTag == 18) {
                            ByteString readBytes = codedInputStream.readBytes();
                            this.bitField0_ |= 2;
                            this.type_ = readBytes;
                        } else if (readTag == 26) {
                            ByteString readBytes2 = codedInputStream.readBytes();
                            this.bitField0_ |= 4;
                            this.data_ = readBytes2;
                        } else if (!parseUnknownField(codedInputStream, newBuilder, extensionRegistryLite, readTag)) {
                        }
                    }
                    z = true;
                } catch (InvalidProtocolBufferException e) {
                    throw e.setUnfinishedMessage(this);
                } catch (IOException e2) {
                    throw new InvalidProtocolBufferException(e2).setUnfinishedMessage(this);
                } catch (Throwable th) {
                    this.unknownFields = newBuilder.build();
                    makeExtensionsImmutable();
                    throw th;
                }
            }
            this.unknownFields = newBuilder.build();
            makeExtensionsImmutable();
        }

        public static final Descriptor getDescriptor() {
            return Messages.internal_static_com_avos_avoscloud_ReportCommand_descriptor;
        }

        /* access modifiers changed from: protected */
        public FieldAccessorTable internalGetFieldAccessorTable() {
            return Messages.internal_static_com_avos_avoscloud_ReportCommand_fieldAccessorTable.ensureFieldAccessorsInitialized(ReportCommand.class, Builder.class);
        }

        public boolean hasInitiative() {
            return (this.bitField0_ & 1) == 1;
        }

        public boolean getInitiative() {
            return this.initiative_;
        }

        public boolean hasType() {
            return (this.bitField0_ & 2) == 2;
        }

        public String getType() {
            Object obj = this.type_;
            if (obj instanceof String) {
                return (String) obj;
            }
            ByteString byteString = (ByteString) obj;
            String stringUtf8 = byteString.toStringUtf8();
            if (byteString.isValidUtf8()) {
                this.type_ = stringUtf8;
            }
            return stringUtf8;
        }

        public ByteString getTypeBytes() {
            Object obj = this.type_;
            if (!(obj instanceof String)) {
                return (ByteString) obj;
            }
            ByteString copyFromUtf8 = ByteString.copyFromUtf8((String) obj);
            this.type_ = copyFromUtf8;
            return copyFromUtf8;
        }

        public boolean hasData() {
            return (this.bitField0_ & 4) == 4;
        }

        public String getData() {
            Object obj = this.data_;
            if (obj instanceof String) {
                return (String) obj;
            }
            ByteString byteString = (ByteString) obj;
            String stringUtf8 = byteString.toStringUtf8();
            if (byteString.isValidUtf8()) {
                this.data_ = stringUtf8;
            }
            return stringUtf8;
        }

        public ByteString getDataBytes() {
            Object obj = this.data_;
            if (!(obj instanceof String)) {
                return (ByteString) obj;
            }
            ByteString copyFromUtf8 = ByteString.copyFromUtf8((String) obj);
            this.data_ = copyFromUtf8;
            return copyFromUtf8;
        }

        public final boolean isInitialized() {
            byte b = this.memoizedIsInitialized;
            if (b == 1) {
                return true;
            }
            if (b == 0) {
                return false;
            }
            this.memoizedIsInitialized = 1;
            return true;
        }

        public void writeTo(CodedOutputStream codedOutputStream) throws IOException {
            if ((this.bitField0_ & 1) == 1) {
                codedOutputStream.writeBool(1, this.initiative_);
            }
            if ((this.bitField0_ & 2) == 2) {
                GeneratedMessageV3.writeString(codedOutputStream, 2, this.type_);
            }
            if ((this.bitField0_ & 4) == 4) {
                GeneratedMessageV3.writeString(codedOutputStream, 3, this.data_);
            }
            this.unknownFields.writeTo(codedOutputStream);
        }

        public int getSerializedSize() {
            int i = this.memoizedSize;
            if (i != -1) {
                return i;
            }
            int i2 = 0;
            if ((this.bitField0_ & 1) == 1) {
                i2 = 0 + CodedOutputStream.computeBoolSize(1, this.initiative_);
            }
            if ((this.bitField0_ & 2) == 2) {
                i2 += GeneratedMessageV3.computeStringSize(2, this.type_);
            }
            if ((this.bitField0_ & 4) == 4) {
                i2 += GeneratedMessageV3.computeStringSize(3, this.data_);
            }
            int serializedSize = i2 + this.unknownFields.getSerializedSize();
            this.memoizedSize = serializedSize;
            return serializedSize;
        }

        public boolean equals(Object obj) {
            boolean z = true;
            if (obj == this) {
                return true;
            }
            if (!(obj instanceof ReportCommand)) {
                return super.equals(obj);
            }
            ReportCommand reportCommand = (ReportCommand) obj;
            boolean z2 = hasInitiative() == reportCommand.hasInitiative();
            if (hasInitiative()) {
                z2 = z2 && getInitiative() == reportCommand.getInitiative();
            }
            boolean z3 = z2 && hasType() == reportCommand.hasType();
            if (hasType()) {
                z3 = z3 && getType().equals(reportCommand.getType());
            }
            boolean z4 = z3 && hasData() == reportCommand.hasData();
            if (hasData()) {
                z4 = z4 && getData().equals(reportCommand.getData());
            }
            if (!z4 || !this.unknownFields.equals(reportCommand.unknownFields)) {
                z = false;
            }
            return z;
        }

        public int hashCode() {
            if (this.memoizedHashCode != 0) {
                return this.memoizedHashCode;
            }
            int hashCode = 779 + getDescriptor().hashCode();
            if (hasInitiative()) {
                hashCode = (((hashCode * 37) + 1) * 53) + Internal.hashBoolean(getInitiative());
            }
            if (hasType()) {
                hashCode = (((hashCode * 37) + 2) * 53) + getType().hashCode();
            }
            if (hasData()) {
                hashCode = (((hashCode * 37) + 3) * 53) + getData().hashCode();
            }
            int hashCode2 = (hashCode * 29) + this.unknownFields.hashCode();
            this.memoizedHashCode = hashCode2;
            return hashCode2;
        }

        public static ReportCommand parseFrom(ByteBuffer byteBuffer) throws InvalidProtocolBufferException {
            return (ReportCommand) PARSER.parseFrom(byteBuffer);
        }

        public static ReportCommand parseFrom(ByteBuffer byteBuffer, ExtensionRegistryLite extensionRegistryLite) throws InvalidProtocolBufferException {
            return (ReportCommand) PARSER.parseFrom(byteBuffer, extensionRegistryLite);
        }

        public static ReportCommand parseFrom(ByteString byteString) throws InvalidProtocolBufferException {
            return (ReportCommand) PARSER.parseFrom(byteString);
        }

        public static ReportCommand parseFrom(ByteString byteString, ExtensionRegistryLite extensionRegistryLite) throws InvalidProtocolBufferException {
            return (ReportCommand) PARSER.parseFrom(byteString, extensionRegistryLite);
        }

        public static ReportCommand parseFrom(byte[] bArr) throws InvalidProtocolBufferException {
            return (ReportCommand) PARSER.parseFrom(bArr);
        }

        public static ReportCommand parseFrom(byte[] bArr, ExtensionRegistryLite extensionRegistryLite) throws InvalidProtocolBufferException {
            return (ReportCommand) PARSER.parseFrom(bArr, extensionRegistryLite);
        }

        public static ReportCommand parseFrom(InputStream inputStream) throws IOException {
            return (ReportCommand) GeneratedMessageV3.parseWithIOException(PARSER, inputStream);
        }

        public static ReportCommand parseFrom(InputStream inputStream, ExtensionRegistryLite extensionRegistryLite) throws IOException {
            return (ReportCommand) GeneratedMessageV3.parseWithIOException(PARSER, inputStream, extensionRegistryLite);
        }

        public static ReportCommand parseDelimitedFrom(InputStream inputStream) throws IOException {
            return (ReportCommand) GeneratedMessageV3.parseDelimitedWithIOException(PARSER, inputStream);
        }

        public static ReportCommand parseDelimitedFrom(InputStream inputStream, ExtensionRegistryLite extensionRegistryLite) throws IOException {
            return (ReportCommand) GeneratedMessageV3.parseDelimitedWithIOException(PARSER, inputStream, extensionRegistryLite);
        }

        public static ReportCommand parseFrom(CodedInputStream codedInputStream) throws IOException {
            return (ReportCommand) GeneratedMessageV3.parseWithIOException(PARSER, codedInputStream);
        }

        public static ReportCommand parseFrom(CodedInputStream codedInputStream, ExtensionRegistryLite extensionRegistryLite) throws IOException {
            return (ReportCommand) GeneratedMessageV3.parseWithIOException(PARSER, codedInputStream, extensionRegistryLite);
        }

        public Builder newBuilderForType() {
            return newBuilder();
        }

        public static Builder newBuilder() {
            return DEFAULT_INSTANCE.toBuilder();
        }

        public static Builder newBuilder(ReportCommand reportCommand) {
            return DEFAULT_INSTANCE.toBuilder().mergeFrom(reportCommand);
        }

        public Builder toBuilder() {
            if (this == DEFAULT_INSTANCE) {
                return new Builder();
            }
            return new Builder().mergeFrom(this);
        }

        /* access modifiers changed from: protected */
        public Builder newBuilderForType(BuilderParent builderParent) {
            return new Builder(builderParent);
        }

        public static ReportCommand getDefaultInstance() {
            return DEFAULT_INSTANCE;
        }

        public static Parser<ReportCommand> parser() {
            return PARSER;
        }

        public Parser<ReportCommand> getParserForType() {
            return PARSER;
        }

        public ReportCommand getDefaultInstanceForType() {
            return DEFAULT_INSTANCE;
        }
    }

    public interface ReportCommandOrBuilder extends MessageOrBuilder {
        String getData();

        ByteString getDataBytes();

        boolean getInitiative();

        String getType();

        ByteString getTypeBytes();

        boolean hasData();

        boolean hasInitiative();

        boolean hasType();
    }

    public static final class RoomCommand extends GeneratedMessageV3 implements RoomCommandOrBuilder {
        public static final int BYPEERID_FIELD_NUMBER = 7;
        private static final RoomCommand DEFAULT_INSTANCE = new RoomCommand();
        public static final int N_FIELD_NUMBER = 4;
        @Deprecated
        public static final Parser<RoomCommand> PARSER = new AbstractParser<RoomCommand>() {
            public RoomCommand parsePartialFrom(CodedInputStream codedInputStream, ExtensionRegistryLite extensionRegistryLite) throws InvalidProtocolBufferException {
                return new RoomCommand(codedInputStream, extensionRegistryLite);
            }
        };
        public static final int ROOMID_FIELD_NUMBER = 1;
        public static final int ROOMPEERIDS_FIELD_NUMBER = 6;
        public static final int S_FIELD_NUMBER = 2;
        public static final int TRANSIENT_FIELD_NUMBER = 5;
        public static final int T_FIELD_NUMBER = 3;
        private static final long serialVersionUID = 0;
        /* access modifiers changed from: private */
        public int bitField0_;
        /* access modifiers changed from: private */
        public volatile Object byPeerId_;
        private byte memoizedIsInitialized;
        /* access modifiers changed from: private */
        public volatile Object n_;
        /* access modifiers changed from: private */
        public volatile Object roomId_;
        /* access modifiers changed from: private */
        public LazyStringList roomPeerIds_;
        /* access modifiers changed from: private */
        public volatile Object s_;
        /* access modifiers changed from: private */
        public long t_;
        /* access modifiers changed from: private */
        public boolean transient_;

        public static final class Builder extends com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements RoomCommandOrBuilder {
            private int bitField0_;
            private Object byPeerId_;
            private Object n_;
            private Object roomId_;
            private LazyStringList roomPeerIds_;
            private Object s_;
            private long t_;
            private boolean transient_;

            public final boolean isInitialized() {
                return true;
            }

            public static final Descriptor getDescriptor() {
                return Messages.internal_static_com_avos_avoscloud_RoomCommand_descriptor;
            }

            /* access modifiers changed from: protected */
            public FieldAccessorTable internalGetFieldAccessorTable() {
                return Messages.internal_static_com_avos_avoscloud_RoomCommand_fieldAccessorTable.ensureFieldAccessorsInitialized(RoomCommand.class, Builder.class);
            }

            private Builder() {
                String str = "";
                this.roomId_ = str;
                this.s_ = str;
                this.n_ = str;
                this.roomPeerIds_ = LazyStringArrayList.EMPTY;
                this.byPeerId_ = str;
                maybeForceBuilderInitialization();
            }

            private Builder(BuilderParent builderParent) {
                super(builderParent);
                String str = "";
                this.roomId_ = str;
                this.s_ = str;
                this.n_ = str;
                this.roomPeerIds_ = LazyStringArrayList.EMPTY;
                this.byPeerId_ = str;
                maybeForceBuilderInitialization();
            }

            private void maybeForceBuilderInitialization() {
                RoomCommand.alwaysUseFieldBuilders;
            }

            public Builder clear() {
                super.clear();
                String str = "";
                this.roomId_ = str;
                this.bitField0_ &= -2;
                this.s_ = str;
                this.bitField0_ &= -3;
                this.t_ = 0;
                this.bitField0_ &= -5;
                this.n_ = str;
                this.bitField0_ &= -9;
                this.transient_ = false;
                this.bitField0_ &= -17;
                this.roomPeerIds_ = LazyStringArrayList.EMPTY;
                this.bitField0_ &= -33;
                this.byPeerId_ = str;
                this.bitField0_ &= -65;
                return this;
            }

            public Descriptor getDescriptorForType() {
                return Messages.internal_static_com_avos_avoscloud_RoomCommand_descriptor;
            }

            public RoomCommand getDefaultInstanceForType() {
                return RoomCommand.getDefaultInstance();
            }

            public RoomCommand build() {
                RoomCommand buildPartial = buildPartial();
                if (buildPartial.isInitialized()) {
                    return buildPartial;
                }
                throw newUninitializedMessageException(buildPartial);
            }

            public RoomCommand buildPartial() {
                RoomCommand roomCommand = new RoomCommand((com.google.protobuf.GeneratedMessageV3.Builder) this);
                int i = this.bitField0_;
                int i2 = 1;
                if ((i & 1) != 1) {
                    i2 = 0;
                }
                roomCommand.roomId_ = this.roomId_;
                if ((i & 2) == 2) {
                    i2 |= 2;
                }
                roomCommand.s_ = this.s_;
                if ((i & 4) == 4) {
                    i2 |= 4;
                }
                roomCommand.t_ = this.t_;
                if ((i & 8) == 8) {
                    i2 |= 8;
                }
                roomCommand.n_ = this.n_;
                if ((i & 16) == 16) {
                    i2 |= 16;
                }
                roomCommand.transient_ = this.transient_;
                if ((this.bitField0_ & 32) == 32) {
                    this.roomPeerIds_ = this.roomPeerIds_.getUnmodifiableView();
                    this.bitField0_ &= -33;
                }
                roomCommand.roomPeerIds_ = this.roomPeerIds_;
                if ((i & 64) == 64) {
                    i2 |= 32;
                }
                roomCommand.byPeerId_ = this.byPeerId_;
                roomCommand.bitField0_ = i2;
                onBuilt();
                return roomCommand;
            }

            public Builder clone() {
                return (Builder) super.clone();
            }

            public Builder setField(FieldDescriptor fieldDescriptor, Object obj) {
                return (Builder) super.setField(fieldDescriptor, obj);
            }

            public Builder clearField(FieldDescriptor fieldDescriptor) {
                return (Builder) super.clearField(fieldDescriptor);
            }

            public Builder clearOneof(OneofDescriptor oneofDescriptor) {
                return (Builder) super.clearOneof(oneofDescriptor);
            }

            public Builder setRepeatedField(FieldDescriptor fieldDescriptor, int i, Object obj) {
                return (Builder) super.setRepeatedField(fieldDescriptor, i, obj);
            }

            public Builder addRepeatedField(FieldDescriptor fieldDescriptor, Object obj) {
                return (Builder) super.addRepeatedField(fieldDescriptor, obj);
            }

            public Builder mergeFrom(Message message) {
                if (message instanceof RoomCommand) {
                    return mergeFrom((RoomCommand) message);
                }
                super.mergeFrom(message);
                return this;
            }

            public Builder mergeFrom(RoomCommand roomCommand) {
                if (roomCommand == RoomCommand.getDefaultInstance()) {
                    return this;
                }
                if (roomCommand.hasRoomId()) {
                    this.bitField0_ |= 1;
                    this.roomId_ = roomCommand.roomId_;
                    onChanged();
                }
                if (roomCommand.hasS()) {
                    this.bitField0_ |= 2;
                    this.s_ = roomCommand.s_;
                    onChanged();
                }
                if (roomCommand.hasT()) {
                    setT(roomCommand.getT());
                }
                if (roomCommand.hasN()) {
                    this.bitField0_ |= 8;
                    this.n_ = roomCommand.n_;
                    onChanged();
                }
                if (roomCommand.hasTransient()) {
                    setTransient(roomCommand.getTransient());
                }
                if (!roomCommand.roomPeerIds_.isEmpty()) {
                    if (this.roomPeerIds_.isEmpty()) {
                        this.roomPeerIds_ = roomCommand.roomPeerIds_;
                        this.bitField0_ &= -33;
                    } else {
                        ensureRoomPeerIdsIsMutable();
                        this.roomPeerIds_.addAll(roomCommand.roomPeerIds_);
                    }
                    onChanged();
                }
                if (roomCommand.hasByPeerId()) {
                    this.bitField0_ |= 64;
                    this.byPeerId_ = roomCommand.byPeerId_;
                    onChanged();
                }
                mergeUnknownFields(roomCommand.unknownFields);
                onChanged();
                return this;
            }

            /* JADX WARNING: Removed duplicated region for block: B:16:0x0021  */
            /* Code decompiled incorrectly, please refer to instructions dump. */
            public com.avos.avoscloud.Messages.RoomCommand.Builder mergeFrom(com.google.protobuf.CodedInputStream r3, com.google.protobuf.ExtensionRegistryLite r4) throws java.io.IOException {
                /*
                    r2 = this;
                    r0 = 0
                    com.google.protobuf.Parser<com.avos.avoscloud.Messages$RoomCommand> r1 = com.avos.avoscloud.Messages.RoomCommand.PARSER     // Catch:{ InvalidProtocolBufferException -> 0x0011 }
                    java.lang.Object r3 = r1.parsePartialFrom(r3, r4)     // Catch:{ InvalidProtocolBufferException -> 0x0011 }
                    com.avos.avoscloud.Messages$RoomCommand r3 = (com.avos.avoscloud.Messages.RoomCommand) r3     // Catch:{ InvalidProtocolBufferException -> 0x0011 }
                    if (r3 == 0) goto L_0x000e
                    r2.mergeFrom(r3)
                L_0x000e:
                    return r2
                L_0x000f:
                    r3 = move-exception
                    goto L_0x001f
                L_0x0011:
                    r3 = move-exception
                    com.google.protobuf.MessageLite r4 = r3.getUnfinishedMessage()     // Catch:{ all -> 0x000f }
                    com.avos.avoscloud.Messages$RoomCommand r4 = (com.avos.avoscloud.Messages.RoomCommand) r4     // Catch:{ all -> 0x000f }
                    java.io.IOException r3 = r3.unwrapIOException()     // Catch:{ all -> 0x001d }
                    throw r3     // Catch:{ all -> 0x001d }
                L_0x001d:
                    r3 = move-exception
                    r0 = r4
                L_0x001f:
                    if (r0 == 0) goto L_0x0024
                    r2.mergeFrom(r0)
                L_0x0024:
                    throw r3
                */
                throw new UnsupportedOperationException("Method not decompiled: com.avos.avoscloud.Messages.RoomCommand.Builder.mergeFrom(com.google.protobuf.CodedInputStream, com.google.protobuf.ExtensionRegistryLite):com.avos.avoscloud.Messages$RoomCommand$Builder");
            }

            public boolean hasRoomId() {
                return (this.bitField0_ & 1) == 1;
            }

            public String getRoomId() {
                Object obj = this.roomId_;
                if (obj instanceof String) {
                    return (String) obj;
                }
                ByteString byteString = (ByteString) obj;
                String stringUtf8 = byteString.toStringUtf8();
                if (byteString.isValidUtf8()) {
                    this.roomId_ = stringUtf8;
                }
                return stringUtf8;
            }

            public ByteString getRoomIdBytes() {
                Object obj = this.roomId_;
                if (!(obj instanceof String)) {
                    return (ByteString) obj;
                }
                ByteString copyFromUtf8 = ByteString.copyFromUtf8((String) obj);
                this.roomId_ = copyFromUtf8;
                return copyFromUtf8;
            }

            public Builder setRoomId(String str) {
                if (str != null) {
                    this.bitField0_ |= 1;
                    this.roomId_ = str;
                    onChanged();
                    return this;
                }
                throw new NullPointerException();
            }

            public Builder clearRoomId() {
                this.bitField0_ &= -2;
                this.roomId_ = RoomCommand.getDefaultInstance().getRoomId();
                onChanged();
                return this;
            }

            public Builder setRoomIdBytes(ByteString byteString) {
                if (byteString != null) {
                    this.bitField0_ |= 1;
                    this.roomId_ = byteString;
                    onChanged();
                    return this;
                }
                throw new NullPointerException();
            }

            public boolean hasS() {
                return (this.bitField0_ & 2) == 2;
            }

            public String getS() {
                Object obj = this.s_;
                if (obj instanceof String) {
                    return (String) obj;
                }
                ByteString byteString = (ByteString) obj;
                String stringUtf8 = byteString.toStringUtf8();
                if (byteString.isValidUtf8()) {
                    this.s_ = stringUtf8;
                }
                return stringUtf8;
            }

            public ByteString getSBytes() {
                Object obj = this.s_;
                if (!(obj instanceof String)) {
                    return (ByteString) obj;
                }
                ByteString copyFromUtf8 = ByteString.copyFromUtf8((String) obj);
                this.s_ = copyFromUtf8;
                return copyFromUtf8;
            }

            public Builder setS(String str) {
                if (str != null) {
                    this.bitField0_ |= 2;
                    this.s_ = str;
                    onChanged();
                    return this;
                }
                throw new NullPointerException();
            }

            public Builder clearS() {
                this.bitField0_ &= -3;
                this.s_ = RoomCommand.getDefaultInstance().getS();
                onChanged();
                return this;
            }

            public Builder setSBytes(ByteString byteString) {
                if (byteString != null) {
                    this.bitField0_ |= 2;
                    this.s_ = byteString;
                    onChanged();
                    return this;
                }
                throw new NullPointerException();
            }

            public boolean hasT() {
                return (this.bitField0_ & 4) == 4;
            }

            public long getT() {
                return this.t_;
            }

            public Builder setT(long j) {
                this.bitField0_ |= 4;
                this.t_ = j;
                onChanged();
                return this;
            }

            public Builder clearT() {
                this.bitField0_ &= -5;
                this.t_ = 0;
                onChanged();
                return this;
            }

            public boolean hasN() {
                return (this.bitField0_ & 8) == 8;
            }

            public String getN() {
                Object obj = this.n_;
                if (obj instanceof String) {
                    return (String) obj;
                }
                ByteString byteString = (ByteString) obj;
                String stringUtf8 = byteString.toStringUtf8();
                if (byteString.isValidUtf8()) {
                    this.n_ = stringUtf8;
                }
                return stringUtf8;
            }

            public ByteString getNBytes() {
                Object obj = this.n_;
                if (!(obj instanceof String)) {
                    return (ByteString) obj;
                }
                ByteString copyFromUtf8 = ByteString.copyFromUtf8((String) obj);
                this.n_ = copyFromUtf8;
                return copyFromUtf8;
            }

            public Builder setN(String str) {
                if (str != null) {
                    this.bitField0_ |= 8;
                    this.n_ = str;
                    onChanged();
                    return this;
                }
                throw new NullPointerException();
            }

            public Builder clearN() {
                this.bitField0_ &= -9;
                this.n_ = RoomCommand.getDefaultInstance().getN();
                onChanged();
                return this;
            }

            public Builder setNBytes(ByteString byteString) {
                if (byteString != null) {
                    this.bitField0_ |= 8;
                    this.n_ = byteString;
                    onChanged();
                    return this;
                }
                throw new NullPointerException();
            }

            public boolean hasTransient() {
                return (this.bitField0_ & 16) == 16;
            }

            public boolean getTransient() {
                return this.transient_;
            }

            public Builder setTransient(boolean z) {
                this.bitField0_ |= 16;
                this.transient_ = z;
                onChanged();
                return this;
            }

            public Builder clearTransient() {
                this.bitField0_ &= -17;
                this.transient_ = false;
                onChanged();
                return this;
            }

            private void ensureRoomPeerIdsIsMutable() {
                if ((this.bitField0_ & 32) != 32) {
                    this.roomPeerIds_ = new LazyStringArrayList(this.roomPeerIds_);
                    this.bitField0_ |= 32;
                }
            }

            public ProtocolStringList getRoomPeerIdsList() {
                return this.roomPeerIds_.getUnmodifiableView();
            }

            public int getRoomPeerIdsCount() {
                return this.roomPeerIds_.size();
            }

            public String getRoomPeerIds(int i) {
                return (String) this.roomPeerIds_.get(i);
            }

            public ByteString getRoomPeerIdsBytes(int i) {
                return this.roomPeerIds_.getByteString(i);
            }

            public Builder setRoomPeerIds(int i, String str) {
                if (str != null) {
                    ensureRoomPeerIdsIsMutable();
                    this.roomPeerIds_.set(i, str);
                    onChanged();
                    return this;
                }
                throw new NullPointerException();
            }

            public Builder addRoomPeerIds(String str) {
                if (str != null) {
                    ensureRoomPeerIdsIsMutable();
                    this.roomPeerIds_.add(str);
                    onChanged();
                    return this;
                }
                throw new NullPointerException();
            }

            public Builder addAllRoomPeerIds(Iterable<String> iterable) {
                ensureRoomPeerIdsIsMutable();
                com.google.protobuf.AbstractMessageLite.Builder.addAll((Iterable) iterable, (List) this.roomPeerIds_);
                onChanged();
                return this;
            }

            public Builder clearRoomPeerIds() {
                this.roomPeerIds_ = LazyStringArrayList.EMPTY;
                this.bitField0_ &= -33;
                onChanged();
                return this;
            }

            public Builder addRoomPeerIdsBytes(ByteString byteString) {
                if (byteString != null) {
                    ensureRoomPeerIdsIsMutable();
                    this.roomPeerIds_.add(byteString);
                    onChanged();
                    return this;
                }
                throw new NullPointerException();
            }

            public boolean hasByPeerId() {
                return (this.bitField0_ & 64) == 64;
            }

            public String getByPeerId() {
                Object obj = this.byPeerId_;
                if (obj instanceof String) {
                    return (String) obj;
                }
                ByteString byteString = (ByteString) obj;
                String stringUtf8 = byteString.toStringUtf8();
                if (byteString.isValidUtf8()) {
                    this.byPeerId_ = stringUtf8;
                }
                return stringUtf8;
            }

            public ByteString getByPeerIdBytes() {
                Object obj = this.byPeerId_;
                if (!(obj instanceof String)) {
                    return (ByteString) obj;
                }
                ByteString copyFromUtf8 = ByteString.copyFromUtf8((String) obj);
                this.byPeerId_ = copyFromUtf8;
                return copyFromUtf8;
            }

            public Builder setByPeerId(String str) {
                if (str != null) {
                    this.bitField0_ |= 64;
                    this.byPeerId_ = str;
                    onChanged();
                    return this;
                }
                throw new NullPointerException();
            }

            public Builder clearByPeerId() {
                this.bitField0_ &= -65;
                this.byPeerId_ = RoomCommand.getDefaultInstance().getByPeerId();
                onChanged();
                return this;
            }

            public Builder setByPeerIdBytes(ByteString byteString) {
                if (byteString != null) {
                    this.bitField0_ |= 64;
                    this.byPeerId_ = byteString;
                    onChanged();
                    return this;
                }
                throw new NullPointerException();
            }

            public final Builder setUnknownFields(UnknownFieldSet unknownFieldSet) {
                return (Builder) super.setUnknownFields(unknownFieldSet);
            }

            public final Builder mergeUnknownFields(UnknownFieldSet unknownFieldSet) {
                return (Builder) super.mergeUnknownFields(unknownFieldSet);
            }
        }

        private RoomCommand(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
            super(builder);
            this.memoizedIsInitialized = -1;
        }

        private RoomCommand() {
            this.memoizedIsInitialized = -1;
            String str = "";
            this.roomId_ = str;
            this.s_ = str;
            this.t_ = 0;
            this.n_ = str;
            this.transient_ = false;
            this.roomPeerIds_ = LazyStringArrayList.EMPTY;
            this.byPeerId_ = str;
        }

        public final UnknownFieldSet getUnknownFields() {
            return this.unknownFields;
        }

        private RoomCommand(CodedInputStream codedInputStream, ExtensionRegistryLite extensionRegistryLite) throws InvalidProtocolBufferException {
            this();
            com.google.protobuf.UnknownFieldSet.Builder newBuilder = UnknownFieldSet.newBuilder();
            boolean z = false;
            boolean z2 = false;
            while (!z) {
                try {
                    int readTag = codedInputStream.readTag();
                    if (readTag != 0) {
                        if (readTag == 10) {
                            ByteString readBytes = codedInputStream.readBytes();
                            this.bitField0_ = 1 | this.bitField0_;
                            this.roomId_ = readBytes;
                        } else if (readTag == 18) {
                            ByteString readBytes2 = codedInputStream.readBytes();
                            this.bitField0_ |= 2;
                            this.s_ = readBytes2;
                        } else if (readTag == 24) {
                            this.bitField0_ |= 4;
                            this.t_ = codedInputStream.readInt64();
                        } else if (readTag == 34) {
                            ByteString readBytes3 = codedInputStream.readBytes();
                            this.bitField0_ |= 8;
                            this.n_ = readBytes3;
                        } else if (readTag == 40) {
                            this.bitField0_ |= 16;
                            this.transient_ = codedInputStream.readBool();
                        } else if (readTag == 50) {
                            ByteString readBytes4 = codedInputStream.readBytes();
                            if (!(z2 & true)) {
                                this.roomPeerIds_ = new LazyStringArrayList();
                                z2 |= true;
                            }
                            this.roomPeerIds_.add(readBytes4);
                        } else if (readTag == 58) {
                            ByteString readBytes5 = codedInputStream.readBytes();
                            this.bitField0_ |= 32;
                            this.byPeerId_ = readBytes5;
                        } else if (!parseUnknownField(codedInputStream, newBuilder, extensionRegistryLite, readTag)) {
                        }
                    }
                    z = true;
                } catch (InvalidProtocolBufferException e) {
                    throw e.setUnfinishedMessage(this);
                } catch (IOException e2) {
                    throw new InvalidProtocolBufferException(e2).setUnfinishedMessage(this);
                } catch (Throwable th) {
                    if (z2 & true) {
                        this.roomPeerIds_ = this.roomPeerIds_.getUnmodifiableView();
                    }
                    this.unknownFields = newBuilder.build();
                    makeExtensionsImmutable();
                    throw th;
                }
            }
            if (z2 & true) {
                this.roomPeerIds_ = this.roomPeerIds_.getUnmodifiableView();
            }
            this.unknownFields = newBuilder.build();
            makeExtensionsImmutable();
        }

        public static final Descriptor getDescriptor() {
            return Messages.internal_static_com_avos_avoscloud_RoomCommand_descriptor;
        }

        /* access modifiers changed from: protected */
        public FieldAccessorTable internalGetFieldAccessorTable() {
            return Messages.internal_static_com_avos_avoscloud_RoomCommand_fieldAccessorTable.ensureFieldAccessorsInitialized(RoomCommand.class, Builder.class);
        }

        public boolean hasRoomId() {
            return (this.bitField0_ & 1) == 1;
        }

        public String getRoomId() {
            Object obj = this.roomId_;
            if (obj instanceof String) {
                return (String) obj;
            }
            ByteString byteString = (ByteString) obj;
            String stringUtf8 = byteString.toStringUtf8();
            if (byteString.isValidUtf8()) {
                this.roomId_ = stringUtf8;
            }
            return stringUtf8;
        }

        public ByteString getRoomIdBytes() {
            Object obj = this.roomId_;
            if (!(obj instanceof String)) {
                return (ByteString) obj;
            }
            ByteString copyFromUtf8 = ByteString.copyFromUtf8((String) obj);
            this.roomId_ = copyFromUtf8;
            return copyFromUtf8;
        }

        public boolean hasS() {
            return (this.bitField0_ & 2) == 2;
        }

        public String getS() {
            Object obj = this.s_;
            if (obj instanceof String) {
                return (String) obj;
            }
            ByteString byteString = (ByteString) obj;
            String stringUtf8 = byteString.toStringUtf8();
            if (byteString.isValidUtf8()) {
                this.s_ = stringUtf8;
            }
            return stringUtf8;
        }

        public ByteString getSBytes() {
            Object obj = this.s_;
            if (!(obj instanceof String)) {
                return (ByteString) obj;
            }
            ByteString copyFromUtf8 = ByteString.copyFromUtf8((String) obj);
            this.s_ = copyFromUtf8;
            return copyFromUtf8;
        }

        public boolean hasT() {
            return (this.bitField0_ & 4) == 4;
        }

        public long getT() {
            return this.t_;
        }

        public boolean hasN() {
            return (this.bitField0_ & 8) == 8;
        }

        public String getN() {
            Object obj = this.n_;
            if (obj instanceof String) {
                return (String) obj;
            }
            ByteString byteString = (ByteString) obj;
            String stringUtf8 = byteString.toStringUtf8();
            if (byteString.isValidUtf8()) {
                this.n_ = stringUtf8;
            }
            return stringUtf8;
        }

        public ByteString getNBytes() {
            Object obj = this.n_;
            if (!(obj instanceof String)) {
                return (ByteString) obj;
            }
            ByteString copyFromUtf8 = ByteString.copyFromUtf8((String) obj);
            this.n_ = copyFromUtf8;
            return copyFromUtf8;
        }

        public boolean hasTransient() {
            return (this.bitField0_ & 16) == 16;
        }

        public boolean getTransient() {
            return this.transient_;
        }

        public ProtocolStringList getRoomPeerIdsList() {
            return this.roomPeerIds_;
        }

        public int getRoomPeerIdsCount() {
            return this.roomPeerIds_.size();
        }

        public String getRoomPeerIds(int i) {
            return (String) this.roomPeerIds_.get(i);
        }

        public ByteString getRoomPeerIdsBytes(int i) {
            return this.roomPeerIds_.getByteString(i);
        }

        public boolean hasByPeerId() {
            return (this.bitField0_ & 32) == 32;
        }

        public String getByPeerId() {
            Object obj = this.byPeerId_;
            if (obj instanceof String) {
                return (String) obj;
            }
            ByteString byteString = (ByteString) obj;
            String stringUtf8 = byteString.toStringUtf8();
            if (byteString.isValidUtf8()) {
                this.byPeerId_ = stringUtf8;
            }
            return stringUtf8;
        }

        public ByteString getByPeerIdBytes() {
            Object obj = this.byPeerId_;
            if (!(obj instanceof String)) {
                return (ByteString) obj;
            }
            ByteString copyFromUtf8 = ByteString.copyFromUtf8((String) obj);
            this.byPeerId_ = copyFromUtf8;
            return copyFromUtf8;
        }

        public final boolean isInitialized() {
            byte b = this.memoizedIsInitialized;
            if (b == 1) {
                return true;
            }
            if (b == 0) {
                return false;
            }
            this.memoizedIsInitialized = 1;
            return true;
        }

        public void writeTo(CodedOutputStream codedOutputStream) throws IOException {
            if ((this.bitField0_ & 1) == 1) {
                GeneratedMessageV3.writeString(codedOutputStream, 1, this.roomId_);
            }
            if ((this.bitField0_ & 2) == 2) {
                GeneratedMessageV3.writeString(codedOutputStream, 2, this.s_);
            }
            if ((this.bitField0_ & 4) == 4) {
                codedOutputStream.writeInt64(3, this.t_);
            }
            if ((this.bitField0_ & 8) == 8) {
                GeneratedMessageV3.writeString(codedOutputStream, 4, this.n_);
            }
            if ((this.bitField0_ & 16) == 16) {
                codedOutputStream.writeBool(5, this.transient_);
            }
            for (int i = 0; i < this.roomPeerIds_.size(); i++) {
                GeneratedMessageV3.writeString(codedOutputStream, 6, this.roomPeerIds_.getRaw(i));
            }
            if ((this.bitField0_ & 32) == 32) {
                GeneratedMessageV3.writeString(codedOutputStream, 7, this.byPeerId_);
            }
            this.unknownFields.writeTo(codedOutputStream);
        }

        public int getSerializedSize() {
            int i = this.memoizedSize;
            if (i != -1) {
                return i;
            }
            int computeStringSize = (this.bitField0_ & 1) == 1 ? GeneratedMessageV3.computeStringSize(1, this.roomId_) + 0 : 0;
            if ((this.bitField0_ & 2) == 2) {
                computeStringSize += GeneratedMessageV3.computeStringSize(2, this.s_);
            }
            if ((this.bitField0_ & 4) == 4) {
                computeStringSize += CodedOutputStream.computeInt64Size(3, this.t_);
            }
            if ((this.bitField0_ & 8) == 8) {
                computeStringSize += GeneratedMessageV3.computeStringSize(4, this.n_);
            }
            if ((this.bitField0_ & 16) == 16) {
                computeStringSize += CodedOutputStream.computeBoolSize(5, this.transient_);
            }
            int i2 = 0;
            for (int i3 = 0; i3 < this.roomPeerIds_.size(); i3++) {
                i2 += computeStringSizeNoTag(this.roomPeerIds_.getRaw(i3));
            }
            int size = computeStringSize + i2 + (getRoomPeerIdsList().size() * 1);
            if ((this.bitField0_ & 32) == 32) {
                size += GeneratedMessageV3.computeStringSize(7, this.byPeerId_);
            }
            int serializedSize = size + this.unknownFields.getSerializedSize();
            this.memoizedSize = serializedSize;
            return serializedSize;
        }

        public boolean equals(Object obj) {
            boolean z = true;
            if (obj == this) {
                return true;
            }
            if (!(obj instanceof RoomCommand)) {
                return super.equals(obj);
            }
            RoomCommand roomCommand = (RoomCommand) obj;
            boolean z2 = hasRoomId() == roomCommand.hasRoomId();
            if (hasRoomId()) {
                z2 = z2 && getRoomId().equals(roomCommand.getRoomId());
            }
            boolean z3 = z2 && hasS() == roomCommand.hasS();
            if (hasS()) {
                z3 = z3 && getS().equals(roomCommand.getS());
            }
            boolean z4 = z3 && hasT() == roomCommand.hasT();
            if (hasT()) {
                z4 = z4 && getT() == roomCommand.getT();
            }
            boolean z5 = z4 && hasN() == roomCommand.hasN();
            if (hasN()) {
                z5 = z5 && getN().equals(roomCommand.getN());
            }
            boolean z6 = z5 && hasTransient() == roomCommand.hasTransient();
            if (hasTransient()) {
                z6 = z6 && getTransient() == roomCommand.getTransient();
            }
            boolean z7 = (z6 && getRoomPeerIdsList().equals(roomCommand.getRoomPeerIdsList())) && hasByPeerId() == roomCommand.hasByPeerId();
            if (hasByPeerId()) {
                z7 = z7 && getByPeerId().equals(roomCommand.getByPeerId());
            }
            if (!z7 || !this.unknownFields.equals(roomCommand.unknownFields)) {
                z = false;
            }
            return z;
        }

        public int hashCode() {
            if (this.memoizedHashCode != 0) {
                return this.memoizedHashCode;
            }
            int hashCode = 779 + getDescriptor().hashCode();
            if (hasRoomId()) {
                hashCode = (((hashCode * 37) + 1) * 53) + getRoomId().hashCode();
            }
            if (hasS()) {
                hashCode = (((hashCode * 37) + 2) * 53) + getS().hashCode();
            }
            if (hasT()) {
                hashCode = (((hashCode * 37) + 3) * 53) + Internal.hashLong(getT());
            }
            if (hasN()) {
                hashCode = (((hashCode * 37) + 4) * 53) + getN().hashCode();
            }
            if (hasTransient()) {
                hashCode = (((hashCode * 37) + 5) * 53) + Internal.hashBoolean(getTransient());
            }
            if (getRoomPeerIdsCount() > 0) {
                hashCode = (((hashCode * 37) + 6) * 53) + getRoomPeerIdsList().hashCode();
            }
            if (hasByPeerId()) {
                hashCode = (((hashCode * 37) + 7) * 53) + getByPeerId().hashCode();
            }
            int hashCode2 = (hashCode * 29) + this.unknownFields.hashCode();
            this.memoizedHashCode = hashCode2;
            return hashCode2;
        }

        public static RoomCommand parseFrom(ByteBuffer byteBuffer) throws InvalidProtocolBufferException {
            return (RoomCommand) PARSER.parseFrom(byteBuffer);
        }

        public static RoomCommand parseFrom(ByteBuffer byteBuffer, ExtensionRegistryLite extensionRegistryLite) throws InvalidProtocolBufferException {
            return (RoomCommand) PARSER.parseFrom(byteBuffer, extensionRegistryLite);
        }

        public static RoomCommand parseFrom(ByteString byteString) throws InvalidProtocolBufferException {
            return (RoomCommand) PARSER.parseFrom(byteString);
        }

        public static RoomCommand parseFrom(ByteString byteString, ExtensionRegistryLite extensionRegistryLite) throws InvalidProtocolBufferException {
            return (RoomCommand) PARSER.parseFrom(byteString, extensionRegistryLite);
        }

        public static RoomCommand parseFrom(byte[] bArr) throws InvalidProtocolBufferException {
            return (RoomCommand) PARSER.parseFrom(bArr);
        }

        public static RoomCommand parseFrom(byte[] bArr, ExtensionRegistryLite extensionRegistryLite) throws InvalidProtocolBufferException {
            return (RoomCommand) PARSER.parseFrom(bArr, extensionRegistryLite);
        }

        public static RoomCommand parseFrom(InputStream inputStream) throws IOException {
            return (RoomCommand) GeneratedMessageV3.parseWithIOException(PARSER, inputStream);
        }

        public static RoomCommand parseFrom(InputStream inputStream, ExtensionRegistryLite extensionRegistryLite) throws IOException {
            return (RoomCommand) GeneratedMessageV3.parseWithIOException(PARSER, inputStream, extensionRegistryLite);
        }

        public static RoomCommand parseDelimitedFrom(InputStream inputStream) throws IOException {
            return (RoomCommand) GeneratedMessageV3.parseDelimitedWithIOException(PARSER, inputStream);
        }

        public static RoomCommand parseDelimitedFrom(InputStream inputStream, ExtensionRegistryLite extensionRegistryLite) throws IOException {
            return (RoomCommand) GeneratedMessageV3.parseDelimitedWithIOException(PARSER, inputStream, extensionRegistryLite);
        }

        public static RoomCommand parseFrom(CodedInputStream codedInputStream) throws IOException {
            return (RoomCommand) GeneratedMessageV3.parseWithIOException(PARSER, codedInputStream);
        }

        public static RoomCommand parseFrom(CodedInputStream codedInputStream, ExtensionRegistryLite extensionRegistryLite) throws IOException {
            return (RoomCommand) GeneratedMessageV3.parseWithIOException(PARSER, codedInputStream, extensionRegistryLite);
        }

        public Builder newBuilderForType() {
            return newBuilder();
        }

        public static Builder newBuilder() {
            return DEFAULT_INSTANCE.toBuilder();
        }

        public static Builder newBuilder(RoomCommand roomCommand) {
            return DEFAULT_INSTANCE.toBuilder().mergeFrom(roomCommand);
        }

        public Builder toBuilder() {
            if (this == DEFAULT_INSTANCE) {
                return new Builder();
            }
            return new Builder().mergeFrom(this);
        }

        /* access modifiers changed from: protected */
        public Builder newBuilderForType(BuilderParent builderParent) {
            return new Builder(builderParent);
        }

        public static RoomCommand getDefaultInstance() {
            return DEFAULT_INSTANCE;
        }

        public static Parser<RoomCommand> parser() {
            return PARSER;
        }

        public Parser<RoomCommand> getParserForType() {
            return PARSER;
        }

        public RoomCommand getDefaultInstanceForType() {
            return DEFAULT_INSTANCE;
        }
    }

    public interface RoomCommandOrBuilder extends MessageOrBuilder {
        String getByPeerId();

        ByteString getByPeerIdBytes();

        String getN();

        ByteString getNBytes();

        String getRoomId();

        ByteString getRoomIdBytes();

        String getRoomPeerIds(int i);

        ByteString getRoomPeerIdsBytes(int i);

        int getRoomPeerIdsCount();

        List<String> getRoomPeerIdsList();

        String getS();

        ByteString getSBytes();

        long getT();

        boolean getTransient();

        boolean hasByPeerId();

        boolean hasN();

        boolean hasRoomId();

        boolean hasS();

        boolean hasT();

        boolean hasTransient();
    }

    public static final class SessionCommand extends GeneratedMessageV3 implements SessionCommandOrBuilder {
        public static final int CODE_FIELD_NUMBER = 12;
        public static final int CONFIGBITMAP_FIELD_NUMBER = 19;
        private static final SessionCommand DEFAULT_INSTANCE = new SessionCommand();
        public static final int DETAIL_FIELD_NUMBER = 16;
        public static final int DEVICEID_FIELD_NUMBER = 7;
        public static final int DEVICETOKEN_FIELD_NUMBER = 14;
        public static final int LASTPATCHTIME_FIELD_NUMBER = 18;
        public static final int LASTUNREADNOTIFTIME_FIELD_NUMBER = 17;
        public static final int N_FIELD_NUMBER = 2;
        public static final int ONLINESESSIONPEERIDS_FIELD_NUMBER = 9;
        @Deprecated
        public static final Parser<SessionCommand> PARSER = new AbstractParser<SessionCommand>() {
            public SessionCommand parsePartialFrom(CodedInputStream codedInputStream, ExtensionRegistryLite extensionRegistryLite) throws InvalidProtocolBufferException {
                return new SessionCommand(codedInputStream, extensionRegistryLite);
            }
        };
        public static final int REASON_FIELD_NUMBER = 13;
        public static final int R_FIELD_NUMBER = 5;
        public static final int SESSIONPEERIDS_FIELD_NUMBER = 8;
        public static final int SP_FIELD_NUMBER = 15;
        public static final int STTTL_FIELD_NUMBER = 11;
        public static final int ST_FIELD_NUMBER = 10;
        public static final int S_FIELD_NUMBER = 3;
        public static final int TAG_FIELD_NUMBER = 6;
        public static final int T_FIELD_NUMBER = 1;
        public static final int UA_FIELD_NUMBER = 4;
        private static final long serialVersionUID = 0;
        /* access modifiers changed from: private */
        public int bitField0_;
        /* access modifiers changed from: private */
        public int code_;
        /* access modifiers changed from: private */
        public long configBitmap_;
        /* access modifiers changed from: private */
        public volatile Object detail_;
        /* access modifiers changed from: private */
        public volatile Object deviceId_;
        /* access modifiers changed from: private */
        public volatile Object deviceToken_;
        /* access modifiers changed from: private */
        public long lastPatchTime_;
        /* access modifiers changed from: private */
        public long lastUnreadNotifTime_;
        private byte memoizedIsInitialized;
        /* access modifiers changed from: private */
        public volatile Object n_;
        /* access modifiers changed from: private */
        public LazyStringList onlineSessionPeerIds_;
        /* access modifiers changed from: private */
        public boolean r_;
        /* access modifiers changed from: private */
        public volatile Object reason_;
        /* access modifiers changed from: private */
        public volatile Object s_;
        /* access modifiers changed from: private */
        public LazyStringList sessionPeerIds_;
        /* access modifiers changed from: private */
        public boolean sp_;
        /* access modifiers changed from: private */
        public int stTtl_;
        /* access modifiers changed from: private */
        public volatile Object st_;
        /* access modifiers changed from: private */
        public long t_;
        /* access modifiers changed from: private */
        public volatile Object tag_;
        /* access modifiers changed from: private */
        public volatile Object ua_;

        public static final class Builder extends com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements SessionCommandOrBuilder {
            private int bitField0_;
            private int code_;
            private long configBitmap_;
            private Object detail_;
            private Object deviceId_;
            private Object deviceToken_;
            private long lastPatchTime_;
            private long lastUnreadNotifTime_;
            private Object n_;
            private LazyStringList onlineSessionPeerIds_;
            private boolean r_;
            private Object reason_;
            private Object s_;
            private LazyStringList sessionPeerIds_;
            private boolean sp_;
            private int stTtl_;
            private Object st_;
            private long t_;
            private Object tag_;
            private Object ua_;

            public final boolean isInitialized() {
                return true;
            }

            public static final Descriptor getDescriptor() {
                return Messages.internal_static_com_avos_avoscloud_SessionCommand_descriptor;
            }

            /* access modifiers changed from: protected */
            public FieldAccessorTable internalGetFieldAccessorTable() {
                return Messages.internal_static_com_avos_avoscloud_SessionCommand_fieldAccessorTable.ensureFieldAccessorsInitialized(SessionCommand.class, Builder.class);
            }

            private Builder() {
                String str = "";
                this.n_ = str;
                this.s_ = str;
                this.ua_ = str;
                this.tag_ = str;
                this.deviceId_ = str;
                this.sessionPeerIds_ = LazyStringArrayList.EMPTY;
                this.onlineSessionPeerIds_ = LazyStringArrayList.EMPTY;
                this.st_ = str;
                this.reason_ = str;
                this.deviceToken_ = str;
                this.detail_ = str;
                maybeForceBuilderInitialization();
            }

            private Builder(BuilderParent builderParent) {
                super(builderParent);
                String str = "";
                this.n_ = str;
                this.s_ = str;
                this.ua_ = str;
                this.tag_ = str;
                this.deviceId_ = str;
                this.sessionPeerIds_ = LazyStringArrayList.EMPTY;
                this.onlineSessionPeerIds_ = LazyStringArrayList.EMPTY;
                this.st_ = str;
                this.reason_ = str;
                this.deviceToken_ = str;
                this.detail_ = str;
                maybeForceBuilderInitialization();
            }

            private void maybeForceBuilderInitialization() {
                SessionCommand.alwaysUseFieldBuilders;
            }

            public Builder clear() {
                super.clear();
                this.t_ = 0;
                this.bitField0_ &= -2;
                String str = "";
                this.n_ = str;
                this.bitField0_ &= -3;
                this.s_ = str;
                this.bitField0_ &= -5;
                this.ua_ = str;
                this.bitField0_ &= -9;
                this.r_ = false;
                this.bitField0_ &= -17;
                this.tag_ = str;
                this.bitField0_ &= -33;
                this.deviceId_ = str;
                this.bitField0_ &= -65;
                this.sessionPeerIds_ = LazyStringArrayList.EMPTY;
                this.bitField0_ &= -129;
                this.onlineSessionPeerIds_ = LazyStringArrayList.EMPTY;
                this.bitField0_ &= -257;
                this.st_ = str;
                this.bitField0_ &= -513;
                this.stTtl_ = 0;
                this.bitField0_ &= -1025;
                this.code_ = 0;
                this.bitField0_ &= -2049;
                this.reason_ = str;
                this.bitField0_ &= -4097;
                this.deviceToken_ = str;
                this.bitField0_ &= -8193;
                this.sp_ = false;
                this.bitField0_ &= -16385;
                this.detail_ = str;
                this.bitField0_ &= -32769;
                this.lastUnreadNotifTime_ = 0;
                this.bitField0_ &= CommandPacket.UNSUPPORTED_OPERATION;
                this.lastPatchTime_ = 0;
                this.bitField0_ &= -131073;
                this.configBitmap_ = 0;
                this.bitField0_ &= -262145;
                return this;
            }

            public Descriptor getDescriptorForType() {
                return Messages.internal_static_com_avos_avoscloud_SessionCommand_descriptor;
            }

            public SessionCommand getDefaultInstanceForType() {
                return SessionCommand.getDefaultInstance();
            }

            public SessionCommand build() {
                SessionCommand buildPartial = buildPartial();
                if (buildPartial.isInitialized()) {
                    return buildPartial;
                }
                throw newUninitializedMessageException(buildPartial);
            }

            public SessionCommand buildPartial() {
                SessionCommand sessionCommand = new SessionCommand((com.google.protobuf.GeneratedMessageV3.Builder) this);
                int i = this.bitField0_;
                int i2 = 1;
                if ((i & 1) != 1) {
                    i2 = 0;
                }
                sessionCommand.t_ = this.t_;
                if ((i & 2) == 2) {
                    i2 |= 2;
                }
                sessionCommand.n_ = this.n_;
                if ((i & 4) == 4) {
                    i2 |= 4;
                }
                sessionCommand.s_ = this.s_;
                if ((i & 8) == 8) {
                    i2 |= 8;
                }
                sessionCommand.ua_ = this.ua_;
                if ((i & 16) == 16) {
                    i2 |= 16;
                }
                sessionCommand.r_ = this.r_;
                if ((i & 32) == 32) {
                    i2 |= 32;
                }
                sessionCommand.tag_ = this.tag_;
                if ((i & 64) == 64) {
                    i2 |= 64;
                }
                sessionCommand.deviceId_ = this.deviceId_;
                if ((this.bitField0_ & 128) == 128) {
                    this.sessionPeerIds_ = this.sessionPeerIds_.getUnmodifiableView();
                    this.bitField0_ &= -129;
                }
                sessionCommand.sessionPeerIds_ = this.sessionPeerIds_;
                if ((this.bitField0_ & 256) == 256) {
                    this.onlineSessionPeerIds_ = this.onlineSessionPeerIds_.getUnmodifiableView();
                    this.bitField0_ &= -257;
                }
                sessionCommand.onlineSessionPeerIds_ = this.onlineSessionPeerIds_;
                if ((i & 512) == 512) {
                    i2 |= 128;
                }
                sessionCommand.st_ = this.st_;
                if ((i & 1024) == 1024) {
                    i2 |= 256;
                }
                sessionCommand.stTtl_ = this.stTtl_;
                if ((i & 2048) == 2048) {
                    i2 |= 512;
                }
                sessionCommand.code_ = this.code_;
                if ((i & 4096) == 4096) {
                    i2 |= 1024;
                }
                sessionCommand.reason_ = this.reason_;
                if ((i & 8192) == 8192) {
                    i2 |= 2048;
                }
                sessionCommand.deviceToken_ = this.deviceToken_;
                if ((i & 16384) == 16384) {
                    i2 |= 4096;
                }
                sessionCommand.sp_ = this.sp_;
                if ((32768 & i) == 32768) {
                    i2 |= 8192;
                }
                sessionCommand.detail_ = this.detail_;
                if ((65536 & i) == 65536) {
                    i2 |= 16384;
                }
                sessionCommand.lastUnreadNotifTime_ = this.lastUnreadNotifTime_;
                if ((131072 & i) == 131072) {
                    i2 |= 32768;
                }
                sessionCommand.lastPatchTime_ = this.lastPatchTime_;
                if ((i & 262144) == 262144) {
                    i2 |= 65536;
                }
                sessionCommand.configBitmap_ = this.configBitmap_;
                sessionCommand.bitField0_ = i2;
                onBuilt();
                return sessionCommand;
            }

            public Builder clone() {
                return (Builder) super.clone();
            }

            public Builder setField(FieldDescriptor fieldDescriptor, Object obj) {
                return (Builder) super.setField(fieldDescriptor, obj);
            }

            public Builder clearField(FieldDescriptor fieldDescriptor) {
                return (Builder) super.clearField(fieldDescriptor);
            }

            public Builder clearOneof(OneofDescriptor oneofDescriptor) {
                return (Builder) super.clearOneof(oneofDescriptor);
            }

            public Builder setRepeatedField(FieldDescriptor fieldDescriptor, int i, Object obj) {
                return (Builder) super.setRepeatedField(fieldDescriptor, i, obj);
            }

            public Builder addRepeatedField(FieldDescriptor fieldDescriptor, Object obj) {
                return (Builder) super.addRepeatedField(fieldDescriptor, obj);
            }

            public Builder mergeFrom(Message message) {
                if (message instanceof SessionCommand) {
                    return mergeFrom((SessionCommand) message);
                }
                super.mergeFrom(message);
                return this;
            }

            public Builder mergeFrom(SessionCommand sessionCommand) {
                if (sessionCommand == SessionCommand.getDefaultInstance()) {
                    return this;
                }
                if (sessionCommand.hasT()) {
                    setT(sessionCommand.getT());
                }
                if (sessionCommand.hasN()) {
                    this.bitField0_ |= 2;
                    this.n_ = sessionCommand.n_;
                    onChanged();
                }
                if (sessionCommand.hasS()) {
                    this.bitField0_ |= 4;
                    this.s_ = sessionCommand.s_;
                    onChanged();
                }
                if (sessionCommand.hasUa()) {
                    this.bitField0_ |= 8;
                    this.ua_ = sessionCommand.ua_;
                    onChanged();
                }
                if (sessionCommand.hasR()) {
                    setR(sessionCommand.getR());
                }
                if (sessionCommand.hasTag()) {
                    this.bitField0_ |= 32;
                    this.tag_ = sessionCommand.tag_;
                    onChanged();
                }
                if (sessionCommand.hasDeviceId()) {
                    this.bitField0_ |= 64;
                    this.deviceId_ = sessionCommand.deviceId_;
                    onChanged();
                }
                if (!sessionCommand.sessionPeerIds_.isEmpty()) {
                    if (this.sessionPeerIds_.isEmpty()) {
                        this.sessionPeerIds_ = sessionCommand.sessionPeerIds_;
                        this.bitField0_ &= -129;
                    } else {
                        ensureSessionPeerIdsIsMutable();
                        this.sessionPeerIds_.addAll(sessionCommand.sessionPeerIds_);
                    }
                    onChanged();
                }
                if (!sessionCommand.onlineSessionPeerIds_.isEmpty()) {
                    if (this.onlineSessionPeerIds_.isEmpty()) {
                        this.onlineSessionPeerIds_ = sessionCommand.onlineSessionPeerIds_;
                        this.bitField0_ &= -257;
                    } else {
                        ensureOnlineSessionPeerIdsIsMutable();
                        this.onlineSessionPeerIds_.addAll(sessionCommand.onlineSessionPeerIds_);
                    }
                    onChanged();
                }
                if (sessionCommand.hasSt()) {
                    this.bitField0_ |= 512;
                    this.st_ = sessionCommand.st_;
                    onChanged();
                }
                if (sessionCommand.hasStTtl()) {
                    setStTtl(sessionCommand.getStTtl());
                }
                if (sessionCommand.hasCode()) {
                    setCode(sessionCommand.getCode());
                }
                if (sessionCommand.hasReason()) {
                    this.bitField0_ |= 4096;
                    this.reason_ = sessionCommand.reason_;
                    onChanged();
                }
                if (sessionCommand.hasDeviceToken()) {
                    this.bitField0_ |= 8192;
                    this.deviceToken_ = sessionCommand.deviceToken_;
                    onChanged();
                }
                if (sessionCommand.hasSp()) {
                    setSp(sessionCommand.getSp());
                }
                if (sessionCommand.hasDetail()) {
                    this.bitField0_ |= 32768;
                    this.detail_ = sessionCommand.detail_;
                    onChanged();
                }
                if (sessionCommand.hasLastUnreadNotifTime()) {
                    setLastUnreadNotifTime(sessionCommand.getLastUnreadNotifTime());
                }
                if (sessionCommand.hasLastPatchTime()) {
                    setLastPatchTime(sessionCommand.getLastPatchTime());
                }
                if (sessionCommand.hasConfigBitmap()) {
                    setConfigBitmap(sessionCommand.getConfigBitmap());
                }
                mergeUnknownFields(sessionCommand.unknownFields);
                onChanged();
                return this;
            }

            /* JADX WARNING: Removed duplicated region for block: B:16:0x0021  */
            /* Code decompiled incorrectly, please refer to instructions dump. */
            public com.avos.avoscloud.Messages.SessionCommand.Builder mergeFrom(com.google.protobuf.CodedInputStream r3, com.google.protobuf.ExtensionRegistryLite r4) throws java.io.IOException {
                /*
                    r2 = this;
                    r0 = 0
                    com.google.protobuf.Parser<com.avos.avoscloud.Messages$SessionCommand> r1 = com.avos.avoscloud.Messages.SessionCommand.PARSER     // Catch:{ InvalidProtocolBufferException -> 0x0011 }
                    java.lang.Object r3 = r1.parsePartialFrom(r3, r4)     // Catch:{ InvalidProtocolBufferException -> 0x0011 }
                    com.avos.avoscloud.Messages$SessionCommand r3 = (com.avos.avoscloud.Messages.SessionCommand) r3     // Catch:{ InvalidProtocolBufferException -> 0x0011 }
                    if (r3 == 0) goto L_0x000e
                    r2.mergeFrom(r3)
                L_0x000e:
                    return r2
                L_0x000f:
                    r3 = move-exception
                    goto L_0x001f
                L_0x0011:
                    r3 = move-exception
                    com.google.protobuf.MessageLite r4 = r3.getUnfinishedMessage()     // Catch:{ all -> 0x000f }
                    com.avos.avoscloud.Messages$SessionCommand r4 = (com.avos.avoscloud.Messages.SessionCommand) r4     // Catch:{ all -> 0x000f }
                    java.io.IOException r3 = r3.unwrapIOException()     // Catch:{ all -> 0x001d }
                    throw r3     // Catch:{ all -> 0x001d }
                L_0x001d:
                    r3 = move-exception
                    r0 = r4
                L_0x001f:
                    if (r0 == 0) goto L_0x0024
                    r2.mergeFrom(r0)
                L_0x0024:
                    throw r3
                */
                throw new UnsupportedOperationException("Method not decompiled: com.avos.avoscloud.Messages.SessionCommand.Builder.mergeFrom(com.google.protobuf.CodedInputStream, com.google.protobuf.ExtensionRegistryLite):com.avos.avoscloud.Messages$SessionCommand$Builder");
            }

            public boolean hasT() {
                return (this.bitField0_ & 1) == 1;
            }

            public long getT() {
                return this.t_;
            }

            public Builder setT(long j) {
                this.bitField0_ |= 1;
                this.t_ = j;
                onChanged();
                return this;
            }

            public Builder clearT() {
                this.bitField0_ &= -2;
                this.t_ = 0;
                onChanged();
                return this;
            }

            public boolean hasN() {
                return (this.bitField0_ & 2) == 2;
            }

            public String getN() {
                Object obj = this.n_;
                if (obj instanceof String) {
                    return (String) obj;
                }
                ByteString byteString = (ByteString) obj;
                String stringUtf8 = byteString.toStringUtf8();
                if (byteString.isValidUtf8()) {
                    this.n_ = stringUtf8;
                }
                return stringUtf8;
            }

            public ByteString getNBytes() {
                Object obj = this.n_;
                if (!(obj instanceof String)) {
                    return (ByteString) obj;
                }
                ByteString copyFromUtf8 = ByteString.copyFromUtf8((String) obj);
                this.n_ = copyFromUtf8;
                return copyFromUtf8;
            }

            public Builder setN(String str) {
                if (str != null) {
                    this.bitField0_ |= 2;
                    this.n_ = str;
                    onChanged();
                    return this;
                }
                throw new NullPointerException();
            }

            public Builder clearN() {
                this.bitField0_ &= -3;
                this.n_ = SessionCommand.getDefaultInstance().getN();
                onChanged();
                return this;
            }

            public Builder setNBytes(ByteString byteString) {
                if (byteString != null) {
                    this.bitField0_ |= 2;
                    this.n_ = byteString;
                    onChanged();
                    return this;
                }
                throw new NullPointerException();
            }

            public boolean hasS() {
                return (this.bitField0_ & 4) == 4;
            }

            public String getS() {
                Object obj = this.s_;
                if (obj instanceof String) {
                    return (String) obj;
                }
                ByteString byteString = (ByteString) obj;
                String stringUtf8 = byteString.toStringUtf8();
                if (byteString.isValidUtf8()) {
                    this.s_ = stringUtf8;
                }
                return stringUtf8;
            }

            public ByteString getSBytes() {
                Object obj = this.s_;
                if (!(obj instanceof String)) {
                    return (ByteString) obj;
                }
                ByteString copyFromUtf8 = ByteString.copyFromUtf8((String) obj);
                this.s_ = copyFromUtf8;
                return copyFromUtf8;
            }

            public Builder setS(String str) {
                if (str != null) {
                    this.bitField0_ |= 4;
                    this.s_ = str;
                    onChanged();
                    return this;
                }
                throw new NullPointerException();
            }

            public Builder clearS() {
                this.bitField0_ &= -5;
                this.s_ = SessionCommand.getDefaultInstance().getS();
                onChanged();
                return this;
            }

            public Builder setSBytes(ByteString byteString) {
                if (byteString != null) {
                    this.bitField0_ |= 4;
                    this.s_ = byteString;
                    onChanged();
                    return this;
                }
                throw new NullPointerException();
            }

            public boolean hasUa() {
                return (this.bitField0_ & 8) == 8;
            }

            public String getUa() {
                Object obj = this.ua_;
                if (obj instanceof String) {
                    return (String) obj;
                }
                ByteString byteString = (ByteString) obj;
                String stringUtf8 = byteString.toStringUtf8();
                if (byteString.isValidUtf8()) {
                    this.ua_ = stringUtf8;
                }
                return stringUtf8;
            }

            public ByteString getUaBytes() {
                Object obj = this.ua_;
                if (!(obj instanceof String)) {
                    return (ByteString) obj;
                }
                ByteString copyFromUtf8 = ByteString.copyFromUtf8((String) obj);
                this.ua_ = copyFromUtf8;
                return copyFromUtf8;
            }

            public Builder setUa(String str) {
                if (str != null) {
                    this.bitField0_ |= 8;
                    this.ua_ = str;
                    onChanged();
                    return this;
                }
                throw new NullPointerException();
            }

            public Builder clearUa() {
                this.bitField0_ &= -9;
                this.ua_ = SessionCommand.getDefaultInstance().getUa();
                onChanged();
                return this;
            }

            public Builder setUaBytes(ByteString byteString) {
                if (byteString != null) {
                    this.bitField0_ |= 8;
                    this.ua_ = byteString;
                    onChanged();
                    return this;
                }
                throw new NullPointerException();
            }

            public boolean hasR() {
                return (this.bitField0_ & 16) == 16;
            }

            public boolean getR() {
                return this.r_;
            }

            public Builder setR(boolean z) {
                this.bitField0_ |= 16;
                this.r_ = z;
                onChanged();
                return this;
            }

            public Builder clearR() {
                this.bitField0_ &= -17;
                this.r_ = false;
                onChanged();
                return this;
            }

            public boolean hasTag() {
                return (this.bitField0_ & 32) == 32;
            }

            public String getTag() {
                Object obj = this.tag_;
                if (obj instanceof String) {
                    return (String) obj;
                }
                ByteString byteString = (ByteString) obj;
                String stringUtf8 = byteString.toStringUtf8();
                if (byteString.isValidUtf8()) {
                    this.tag_ = stringUtf8;
                }
                return stringUtf8;
            }

            public ByteString getTagBytes() {
                Object obj = this.tag_;
                if (!(obj instanceof String)) {
                    return (ByteString) obj;
                }
                ByteString copyFromUtf8 = ByteString.copyFromUtf8((String) obj);
                this.tag_ = copyFromUtf8;
                return copyFromUtf8;
            }

            public Builder setTag(String str) {
                if (str != null) {
                    this.bitField0_ |= 32;
                    this.tag_ = str;
                    onChanged();
                    return this;
                }
                throw new NullPointerException();
            }

            public Builder clearTag() {
                this.bitField0_ &= -33;
                this.tag_ = SessionCommand.getDefaultInstance().getTag();
                onChanged();
                return this;
            }

            public Builder setTagBytes(ByteString byteString) {
                if (byteString != null) {
                    this.bitField0_ |= 32;
                    this.tag_ = byteString;
                    onChanged();
                    return this;
                }
                throw new NullPointerException();
            }

            public boolean hasDeviceId() {
                return (this.bitField0_ & 64) == 64;
            }

            public String getDeviceId() {
                Object obj = this.deviceId_;
                if (obj instanceof String) {
                    return (String) obj;
                }
                ByteString byteString = (ByteString) obj;
                String stringUtf8 = byteString.toStringUtf8();
                if (byteString.isValidUtf8()) {
                    this.deviceId_ = stringUtf8;
                }
                return stringUtf8;
            }

            public ByteString getDeviceIdBytes() {
                Object obj = this.deviceId_;
                if (!(obj instanceof String)) {
                    return (ByteString) obj;
                }
                ByteString copyFromUtf8 = ByteString.copyFromUtf8((String) obj);
                this.deviceId_ = copyFromUtf8;
                return copyFromUtf8;
            }

            public Builder setDeviceId(String str) {
                if (str != null) {
                    this.bitField0_ |= 64;
                    this.deviceId_ = str;
                    onChanged();
                    return this;
                }
                throw new NullPointerException();
            }

            public Builder clearDeviceId() {
                this.bitField0_ &= -65;
                this.deviceId_ = SessionCommand.getDefaultInstance().getDeviceId();
                onChanged();
                return this;
            }

            public Builder setDeviceIdBytes(ByteString byteString) {
                if (byteString != null) {
                    this.bitField0_ |= 64;
                    this.deviceId_ = byteString;
                    onChanged();
                    return this;
                }
                throw new NullPointerException();
            }

            private void ensureSessionPeerIdsIsMutable() {
                if ((this.bitField0_ & 128) != 128) {
                    this.sessionPeerIds_ = new LazyStringArrayList(this.sessionPeerIds_);
                    this.bitField0_ |= 128;
                }
            }

            public ProtocolStringList getSessionPeerIdsList() {
                return this.sessionPeerIds_.getUnmodifiableView();
            }

            public int getSessionPeerIdsCount() {
                return this.sessionPeerIds_.size();
            }

            public String getSessionPeerIds(int i) {
                return (String) this.sessionPeerIds_.get(i);
            }

            public ByteString getSessionPeerIdsBytes(int i) {
                return this.sessionPeerIds_.getByteString(i);
            }

            public Builder setSessionPeerIds(int i, String str) {
                if (str != null) {
                    ensureSessionPeerIdsIsMutable();
                    this.sessionPeerIds_.set(i, str);
                    onChanged();
                    return this;
                }
                throw new NullPointerException();
            }

            public Builder addSessionPeerIds(String str) {
                if (str != null) {
                    ensureSessionPeerIdsIsMutable();
                    this.sessionPeerIds_.add(str);
                    onChanged();
                    return this;
                }
                throw new NullPointerException();
            }

            public Builder addAllSessionPeerIds(Iterable<String> iterable) {
                ensureSessionPeerIdsIsMutable();
                com.google.protobuf.AbstractMessageLite.Builder.addAll((Iterable) iterable, (List) this.sessionPeerIds_);
                onChanged();
                return this;
            }

            public Builder clearSessionPeerIds() {
                this.sessionPeerIds_ = LazyStringArrayList.EMPTY;
                this.bitField0_ &= -129;
                onChanged();
                return this;
            }

            public Builder addSessionPeerIdsBytes(ByteString byteString) {
                if (byteString != null) {
                    ensureSessionPeerIdsIsMutable();
                    this.sessionPeerIds_.add(byteString);
                    onChanged();
                    return this;
                }
                throw new NullPointerException();
            }

            private void ensureOnlineSessionPeerIdsIsMutable() {
                if ((this.bitField0_ & 256) != 256) {
                    this.onlineSessionPeerIds_ = new LazyStringArrayList(this.onlineSessionPeerIds_);
                    this.bitField0_ |= 256;
                }
            }

            public ProtocolStringList getOnlineSessionPeerIdsList() {
                return this.onlineSessionPeerIds_.getUnmodifiableView();
            }

            public int getOnlineSessionPeerIdsCount() {
                return this.onlineSessionPeerIds_.size();
            }

            public String getOnlineSessionPeerIds(int i) {
                return (String) this.onlineSessionPeerIds_.get(i);
            }

            public ByteString getOnlineSessionPeerIdsBytes(int i) {
                return this.onlineSessionPeerIds_.getByteString(i);
            }

            public Builder setOnlineSessionPeerIds(int i, String str) {
                if (str != null) {
                    ensureOnlineSessionPeerIdsIsMutable();
                    this.onlineSessionPeerIds_.set(i, str);
                    onChanged();
                    return this;
                }
                throw new NullPointerException();
            }

            public Builder addOnlineSessionPeerIds(String str) {
                if (str != null) {
                    ensureOnlineSessionPeerIdsIsMutable();
                    this.onlineSessionPeerIds_.add(str);
                    onChanged();
                    return this;
                }
                throw new NullPointerException();
            }

            public Builder addAllOnlineSessionPeerIds(Iterable<String> iterable) {
                ensureOnlineSessionPeerIdsIsMutable();
                com.google.protobuf.AbstractMessageLite.Builder.addAll((Iterable) iterable, (List) this.onlineSessionPeerIds_);
                onChanged();
                return this;
            }

            public Builder clearOnlineSessionPeerIds() {
                this.onlineSessionPeerIds_ = LazyStringArrayList.EMPTY;
                this.bitField0_ &= -257;
                onChanged();
                return this;
            }

            public Builder addOnlineSessionPeerIdsBytes(ByteString byteString) {
                if (byteString != null) {
                    ensureOnlineSessionPeerIdsIsMutable();
                    this.onlineSessionPeerIds_.add(byteString);
                    onChanged();
                    return this;
                }
                throw new NullPointerException();
            }

            public boolean hasSt() {
                return (this.bitField0_ & 512) == 512;
            }

            public String getSt() {
                Object obj = this.st_;
                if (obj instanceof String) {
                    return (String) obj;
                }
                ByteString byteString = (ByteString) obj;
                String stringUtf8 = byteString.toStringUtf8();
                if (byteString.isValidUtf8()) {
                    this.st_ = stringUtf8;
                }
                return stringUtf8;
            }

            public ByteString getStBytes() {
                Object obj = this.st_;
                if (!(obj instanceof String)) {
                    return (ByteString) obj;
                }
                ByteString copyFromUtf8 = ByteString.copyFromUtf8((String) obj);
                this.st_ = copyFromUtf8;
                return copyFromUtf8;
            }

            public Builder setSt(String str) {
                if (str != null) {
                    this.bitField0_ |= 512;
                    this.st_ = str;
                    onChanged();
                    return this;
                }
                throw new NullPointerException();
            }

            public Builder clearSt() {
                this.bitField0_ &= -513;
                this.st_ = SessionCommand.getDefaultInstance().getSt();
                onChanged();
                return this;
            }

            public Builder setStBytes(ByteString byteString) {
                if (byteString != null) {
                    this.bitField0_ |= 512;
                    this.st_ = byteString;
                    onChanged();
                    return this;
                }
                throw new NullPointerException();
            }

            public boolean hasStTtl() {
                return (this.bitField0_ & 1024) == 1024;
            }

            public int getStTtl() {
                return this.stTtl_;
            }

            public Builder setStTtl(int i) {
                this.bitField0_ |= 1024;
                this.stTtl_ = i;
                onChanged();
                return this;
            }

            public Builder clearStTtl() {
                this.bitField0_ &= -1025;
                this.stTtl_ = 0;
                onChanged();
                return this;
            }

            public boolean hasCode() {
                return (this.bitField0_ & 2048) == 2048;
            }

            public int getCode() {
                return this.code_;
            }

            public Builder setCode(int i) {
                this.bitField0_ |= 2048;
                this.code_ = i;
                onChanged();
                return this;
            }

            public Builder clearCode() {
                this.bitField0_ &= -2049;
                this.code_ = 0;
                onChanged();
                return this;
            }

            public boolean hasReason() {
                return (this.bitField0_ & 4096) == 4096;
            }

            public String getReason() {
                Object obj = this.reason_;
                if (obj instanceof String) {
                    return (String) obj;
                }
                ByteString byteString = (ByteString) obj;
                String stringUtf8 = byteString.toStringUtf8();
                if (byteString.isValidUtf8()) {
                    this.reason_ = stringUtf8;
                }
                return stringUtf8;
            }

            public ByteString getReasonBytes() {
                Object obj = this.reason_;
                if (!(obj instanceof String)) {
                    return (ByteString) obj;
                }
                ByteString copyFromUtf8 = ByteString.copyFromUtf8((String) obj);
                this.reason_ = copyFromUtf8;
                return copyFromUtf8;
            }

            public Builder setReason(String str) {
                if (str != null) {
                    this.bitField0_ |= 4096;
                    this.reason_ = str;
                    onChanged();
                    return this;
                }
                throw new NullPointerException();
            }

            public Builder clearReason() {
                this.bitField0_ &= -4097;
                this.reason_ = SessionCommand.getDefaultInstance().getReason();
                onChanged();
                return this;
            }

            public Builder setReasonBytes(ByteString byteString) {
                if (byteString != null) {
                    this.bitField0_ |= 4096;
                    this.reason_ = byteString;
                    onChanged();
                    return this;
                }
                throw new NullPointerException();
            }

            public boolean hasDeviceToken() {
                return (this.bitField0_ & 8192) == 8192;
            }

            public String getDeviceToken() {
                Object obj = this.deviceToken_;
                if (obj instanceof String) {
                    return (String) obj;
                }
                ByteString byteString = (ByteString) obj;
                String stringUtf8 = byteString.toStringUtf8();
                if (byteString.isValidUtf8()) {
                    this.deviceToken_ = stringUtf8;
                }
                return stringUtf8;
            }

            public ByteString getDeviceTokenBytes() {
                Object obj = this.deviceToken_;
                if (!(obj instanceof String)) {
                    return (ByteString) obj;
                }
                ByteString copyFromUtf8 = ByteString.copyFromUtf8((String) obj);
                this.deviceToken_ = copyFromUtf8;
                return copyFromUtf8;
            }

            public Builder setDeviceToken(String str) {
                if (str != null) {
                    this.bitField0_ |= 8192;
                    this.deviceToken_ = str;
                    onChanged();
                    return this;
                }
                throw new NullPointerException();
            }

            public Builder clearDeviceToken() {
                this.bitField0_ &= -8193;
                this.deviceToken_ = SessionCommand.getDefaultInstance().getDeviceToken();
                onChanged();
                return this;
            }

            public Builder setDeviceTokenBytes(ByteString byteString) {
                if (byteString != null) {
                    this.bitField0_ |= 8192;
                    this.deviceToken_ = byteString;
                    onChanged();
                    return this;
                }
                throw new NullPointerException();
            }

            public boolean hasSp() {
                return (this.bitField0_ & 16384) == 16384;
            }

            public boolean getSp() {
                return this.sp_;
            }

            public Builder setSp(boolean z) {
                this.bitField0_ |= 16384;
                this.sp_ = z;
                onChanged();
                return this;
            }

            public Builder clearSp() {
                this.bitField0_ &= -16385;
                this.sp_ = false;
                onChanged();
                return this;
            }

            public boolean hasDetail() {
                return (this.bitField0_ & 32768) == 32768;
            }

            public String getDetail() {
                Object obj = this.detail_;
                if (obj instanceof String) {
                    return (String) obj;
                }
                ByteString byteString = (ByteString) obj;
                String stringUtf8 = byteString.toStringUtf8();
                if (byteString.isValidUtf8()) {
                    this.detail_ = stringUtf8;
                }
                return stringUtf8;
            }

            public ByteString getDetailBytes() {
                Object obj = this.detail_;
                if (!(obj instanceof String)) {
                    return (ByteString) obj;
                }
                ByteString copyFromUtf8 = ByteString.copyFromUtf8((String) obj);
                this.detail_ = copyFromUtf8;
                return copyFromUtf8;
            }

            public Builder setDetail(String str) {
                if (str != null) {
                    this.bitField0_ |= 32768;
                    this.detail_ = str;
                    onChanged();
                    return this;
                }
                throw new NullPointerException();
            }

            public Builder clearDetail() {
                this.bitField0_ &= -32769;
                this.detail_ = SessionCommand.getDefaultInstance().getDetail();
                onChanged();
                return this;
            }

            public Builder setDetailBytes(ByteString byteString) {
                if (byteString != null) {
                    this.bitField0_ |= 32768;
                    this.detail_ = byteString;
                    onChanged();
                    return this;
                }
                throw new NullPointerException();
            }

            public boolean hasLastUnreadNotifTime() {
                return (this.bitField0_ & 65536) == 65536;
            }

            public long getLastUnreadNotifTime() {
                return this.lastUnreadNotifTime_;
            }

            public Builder setLastUnreadNotifTime(long j) {
                this.bitField0_ |= 65536;
                this.lastUnreadNotifTime_ = j;
                onChanged();
                return this;
            }

            public Builder clearLastUnreadNotifTime() {
                this.bitField0_ &= CommandPacket.UNSUPPORTED_OPERATION;
                this.lastUnreadNotifTime_ = 0;
                onChanged();
                return this;
            }

            public boolean hasLastPatchTime() {
                return (this.bitField0_ & 131072) == 131072;
            }

            public long getLastPatchTime() {
                return this.lastPatchTime_;
            }

            public Builder setLastPatchTime(long j) {
                this.bitField0_ |= 131072;
                this.lastPatchTime_ = j;
                onChanged();
                return this;
            }

            public Builder clearLastPatchTime() {
                this.bitField0_ &= -131073;
                this.lastPatchTime_ = 0;
                onChanged();
                return this;
            }

            public boolean hasConfigBitmap() {
                return (this.bitField0_ & 262144) == 262144;
            }

            public long getConfigBitmap() {
                return this.configBitmap_;
            }

            public Builder setConfigBitmap(long j) {
                this.bitField0_ |= 262144;
                this.configBitmap_ = j;
                onChanged();
                return this;
            }

            public Builder clearConfigBitmap() {
                this.bitField0_ &= -262145;
                this.configBitmap_ = 0;
                onChanged();
                return this;
            }

            public final Builder setUnknownFields(UnknownFieldSet unknownFieldSet) {
                return (Builder) super.setUnknownFields(unknownFieldSet);
            }

            public final Builder mergeUnknownFields(UnknownFieldSet unknownFieldSet) {
                return (Builder) super.mergeUnknownFields(unknownFieldSet);
            }
        }

        private SessionCommand(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
            super(builder);
            this.memoizedIsInitialized = -1;
        }

        private SessionCommand() {
            this.memoizedIsInitialized = -1;
            this.t_ = 0;
            String str = "";
            this.n_ = str;
            this.s_ = str;
            this.ua_ = str;
            this.r_ = false;
            this.tag_ = str;
            this.deviceId_ = str;
            this.sessionPeerIds_ = LazyStringArrayList.EMPTY;
            this.onlineSessionPeerIds_ = LazyStringArrayList.EMPTY;
            this.st_ = str;
            this.stTtl_ = 0;
            this.code_ = 0;
            this.reason_ = str;
            this.deviceToken_ = str;
            this.sp_ = false;
            this.detail_ = str;
            this.lastUnreadNotifTime_ = 0;
            this.lastPatchTime_ = 0;
            this.configBitmap_ = 0;
        }

        public final UnknownFieldSet getUnknownFields() {
            return this.unknownFields;
        }

        private SessionCommand(CodedInputStream codedInputStream, ExtensionRegistryLite extensionRegistryLite) throws InvalidProtocolBufferException {
            this();
            com.google.protobuf.UnknownFieldSet.Builder newBuilder = UnknownFieldSet.newBuilder();
            boolean z = false;
            boolean z2 = false;
            while (!z) {
                try {
                    int readTag = codedInputStream.readTag();
                    switch (readTag) {
                        case 0:
                            z = true;
                            break;
                        case 8:
                            this.bitField0_ |= 1;
                            this.t_ = codedInputStream.readInt64();
                            break;
                        case 18:
                            ByteString readBytes = codedInputStream.readBytes();
                            this.bitField0_ |= 2;
                            this.n_ = readBytes;
                            break;
                        case 26:
                            ByteString readBytes2 = codedInputStream.readBytes();
                            this.bitField0_ |= 4;
                            this.s_ = readBytes2;
                            break;
                        case 34:
                            ByteString readBytes3 = codedInputStream.readBytes();
                            this.bitField0_ |= 8;
                            this.ua_ = readBytes3;
                            break;
                        case 40:
                            this.bitField0_ |= 16;
                            this.r_ = codedInputStream.readBool();
                            break;
                        case 50:
                            ByteString readBytes4 = codedInputStream.readBytes();
                            this.bitField0_ |= 32;
                            this.tag_ = readBytes4;
                            break;
                        case 58:
                            ByteString readBytes5 = codedInputStream.readBytes();
                            this.bitField0_ |= 64;
                            this.deviceId_ = readBytes5;
                            break;
                        case 66:
                            ByteString readBytes6 = codedInputStream.readBytes();
                            if (!(z2 & true)) {
                                this.sessionPeerIds_ = new LazyStringArrayList();
                                z2 |= true;
                            }
                            this.sessionPeerIds_.add(readBytes6);
                            break;
                        case 74:
                            ByteString readBytes7 = codedInputStream.readBytes();
                            if (!(z2 & true)) {
                                this.onlineSessionPeerIds_ = new LazyStringArrayList();
                                z2 |= true;
                            }
                            this.onlineSessionPeerIds_.add(readBytes7);
                            break;
                        case 82:
                            ByteString readBytes8 = codedInputStream.readBytes();
                            this.bitField0_ |= 128;
                            this.st_ = readBytes8;
                            break;
                        case 88:
                            this.bitField0_ |= 256;
                            this.stTtl_ = codedInputStream.readInt32();
                            break;
                        case 96:
                            this.bitField0_ |= 512;
                            this.code_ = codedInputStream.readInt32();
                            break;
                        case 106:
                            ByteString readBytes9 = codedInputStream.readBytes();
                            this.bitField0_ |= 1024;
                            this.reason_ = readBytes9;
                            break;
                        case 114:
                            ByteString readBytes10 = codedInputStream.readBytes();
                            this.bitField0_ |= 2048;
                            this.deviceToken_ = readBytes10;
                            break;
                        case 120:
                            this.bitField0_ |= 4096;
                            this.sp_ = codedInputStream.readBool();
                            break;
                        case TsExtractor.TS_STREAM_TYPE_HDMV_DTS /*130*/:
                            ByteString readBytes11 = codedInputStream.readBytes();
                            this.bitField0_ |= 8192;
                            this.detail_ = readBytes11;
                            break;
                        case 136:
                            this.bitField0_ |= 16384;
                            this.lastUnreadNotifTime_ = codedInputStream.readInt64();
                            break;
                        case IjkMediaMeta.FF_PROFILE_H264_HIGH_444 /*144*/:
                            this.bitField0_ |= 32768;
                            this.lastPatchTime_ = codedInputStream.readInt64();
                            break;
                        case 152:
                            this.bitField0_ |= 65536;
                            this.configBitmap_ = codedInputStream.readInt64();
                            break;
                        default:
                            if (parseUnknownField(codedInputStream, newBuilder, extensionRegistryLite, readTag)) {
                                break;
                            }
                            z = true;
                            break;
                    }
                } catch (InvalidProtocolBufferException e) {
                    throw e.setUnfinishedMessage(this);
                } catch (IOException e2) {
                    throw new InvalidProtocolBufferException(e2).setUnfinishedMessage(this);
                } catch (Throwable th) {
                    if (z2 & true) {
                        this.sessionPeerIds_ = this.sessionPeerIds_.getUnmodifiableView();
                    }
                    if (z2 & true) {
                        this.onlineSessionPeerIds_ = this.onlineSessionPeerIds_.getUnmodifiableView();
                    }
                    this.unknownFields = newBuilder.build();
                    makeExtensionsImmutable();
                    throw th;
                }
            }
            if (z2 & true) {
                this.sessionPeerIds_ = this.sessionPeerIds_.getUnmodifiableView();
            }
            if (z2 & true) {
                this.onlineSessionPeerIds_ = this.onlineSessionPeerIds_.getUnmodifiableView();
            }
            this.unknownFields = newBuilder.build();
            makeExtensionsImmutable();
        }

        public static final Descriptor getDescriptor() {
            return Messages.internal_static_com_avos_avoscloud_SessionCommand_descriptor;
        }

        /* access modifiers changed from: protected */
        public FieldAccessorTable internalGetFieldAccessorTable() {
            return Messages.internal_static_com_avos_avoscloud_SessionCommand_fieldAccessorTable.ensureFieldAccessorsInitialized(SessionCommand.class, Builder.class);
        }

        public boolean hasT() {
            return (this.bitField0_ & 1) == 1;
        }

        public long getT() {
            return this.t_;
        }

        public boolean hasN() {
            return (this.bitField0_ & 2) == 2;
        }

        public String getN() {
            Object obj = this.n_;
            if (obj instanceof String) {
                return (String) obj;
            }
            ByteString byteString = (ByteString) obj;
            String stringUtf8 = byteString.toStringUtf8();
            if (byteString.isValidUtf8()) {
                this.n_ = stringUtf8;
            }
            return stringUtf8;
        }

        public ByteString getNBytes() {
            Object obj = this.n_;
            if (!(obj instanceof String)) {
                return (ByteString) obj;
            }
            ByteString copyFromUtf8 = ByteString.copyFromUtf8((String) obj);
            this.n_ = copyFromUtf8;
            return copyFromUtf8;
        }

        public boolean hasS() {
            return (this.bitField0_ & 4) == 4;
        }

        public String getS() {
            Object obj = this.s_;
            if (obj instanceof String) {
                return (String) obj;
            }
            ByteString byteString = (ByteString) obj;
            String stringUtf8 = byteString.toStringUtf8();
            if (byteString.isValidUtf8()) {
                this.s_ = stringUtf8;
            }
            return stringUtf8;
        }

        public ByteString getSBytes() {
            Object obj = this.s_;
            if (!(obj instanceof String)) {
                return (ByteString) obj;
            }
            ByteString copyFromUtf8 = ByteString.copyFromUtf8((String) obj);
            this.s_ = copyFromUtf8;
            return copyFromUtf8;
        }

        public boolean hasUa() {
            return (this.bitField0_ & 8) == 8;
        }

        public String getUa() {
            Object obj = this.ua_;
            if (obj instanceof String) {
                return (String) obj;
            }
            ByteString byteString = (ByteString) obj;
            String stringUtf8 = byteString.toStringUtf8();
            if (byteString.isValidUtf8()) {
                this.ua_ = stringUtf8;
            }
            return stringUtf8;
        }

        public ByteString getUaBytes() {
            Object obj = this.ua_;
            if (!(obj instanceof String)) {
                return (ByteString) obj;
            }
            ByteString copyFromUtf8 = ByteString.copyFromUtf8((String) obj);
            this.ua_ = copyFromUtf8;
            return copyFromUtf8;
        }

        public boolean hasR() {
            return (this.bitField0_ & 16) == 16;
        }

        public boolean getR() {
            return this.r_;
        }

        public boolean hasTag() {
            return (this.bitField0_ & 32) == 32;
        }

        public String getTag() {
            Object obj = this.tag_;
            if (obj instanceof String) {
                return (String) obj;
            }
            ByteString byteString = (ByteString) obj;
            String stringUtf8 = byteString.toStringUtf8();
            if (byteString.isValidUtf8()) {
                this.tag_ = stringUtf8;
            }
            return stringUtf8;
        }

        public ByteString getTagBytes() {
            Object obj = this.tag_;
            if (!(obj instanceof String)) {
                return (ByteString) obj;
            }
            ByteString copyFromUtf8 = ByteString.copyFromUtf8((String) obj);
            this.tag_ = copyFromUtf8;
            return copyFromUtf8;
        }

        public boolean hasDeviceId() {
            return (this.bitField0_ & 64) == 64;
        }

        public String getDeviceId() {
            Object obj = this.deviceId_;
            if (obj instanceof String) {
                return (String) obj;
            }
            ByteString byteString = (ByteString) obj;
            String stringUtf8 = byteString.toStringUtf8();
            if (byteString.isValidUtf8()) {
                this.deviceId_ = stringUtf8;
            }
            return stringUtf8;
        }

        public ByteString getDeviceIdBytes() {
            Object obj = this.deviceId_;
            if (!(obj instanceof String)) {
                return (ByteString) obj;
            }
            ByteString copyFromUtf8 = ByteString.copyFromUtf8((String) obj);
            this.deviceId_ = copyFromUtf8;
            return copyFromUtf8;
        }

        public ProtocolStringList getSessionPeerIdsList() {
            return this.sessionPeerIds_;
        }

        public int getSessionPeerIdsCount() {
            return this.sessionPeerIds_.size();
        }

        public String getSessionPeerIds(int i) {
            return (String) this.sessionPeerIds_.get(i);
        }

        public ByteString getSessionPeerIdsBytes(int i) {
            return this.sessionPeerIds_.getByteString(i);
        }

        public ProtocolStringList getOnlineSessionPeerIdsList() {
            return this.onlineSessionPeerIds_;
        }

        public int getOnlineSessionPeerIdsCount() {
            return this.onlineSessionPeerIds_.size();
        }

        public String getOnlineSessionPeerIds(int i) {
            return (String) this.onlineSessionPeerIds_.get(i);
        }

        public ByteString getOnlineSessionPeerIdsBytes(int i) {
            return this.onlineSessionPeerIds_.getByteString(i);
        }

        public boolean hasSt() {
            return (this.bitField0_ & 128) == 128;
        }

        public String getSt() {
            Object obj = this.st_;
            if (obj instanceof String) {
                return (String) obj;
            }
            ByteString byteString = (ByteString) obj;
            String stringUtf8 = byteString.toStringUtf8();
            if (byteString.isValidUtf8()) {
                this.st_ = stringUtf8;
            }
            return stringUtf8;
        }

        public ByteString getStBytes() {
            Object obj = this.st_;
            if (!(obj instanceof String)) {
                return (ByteString) obj;
            }
            ByteString copyFromUtf8 = ByteString.copyFromUtf8((String) obj);
            this.st_ = copyFromUtf8;
            return copyFromUtf8;
        }

        public boolean hasStTtl() {
            return (this.bitField0_ & 256) == 256;
        }

        public int getStTtl() {
            return this.stTtl_;
        }

        public boolean hasCode() {
            return (this.bitField0_ & 512) == 512;
        }

        public int getCode() {
            return this.code_;
        }

        public boolean hasReason() {
            return (this.bitField0_ & 1024) == 1024;
        }

        public String getReason() {
            Object obj = this.reason_;
            if (obj instanceof String) {
                return (String) obj;
            }
            ByteString byteString = (ByteString) obj;
            String stringUtf8 = byteString.toStringUtf8();
            if (byteString.isValidUtf8()) {
                this.reason_ = stringUtf8;
            }
            return stringUtf8;
        }

        public ByteString getReasonBytes() {
            Object obj = this.reason_;
            if (!(obj instanceof String)) {
                return (ByteString) obj;
            }
            ByteString copyFromUtf8 = ByteString.copyFromUtf8((String) obj);
            this.reason_ = copyFromUtf8;
            return copyFromUtf8;
        }

        public boolean hasDeviceToken() {
            return (this.bitField0_ & 2048) == 2048;
        }

        public String getDeviceToken() {
            Object obj = this.deviceToken_;
            if (obj instanceof String) {
                return (String) obj;
            }
            ByteString byteString = (ByteString) obj;
            String stringUtf8 = byteString.toStringUtf8();
            if (byteString.isValidUtf8()) {
                this.deviceToken_ = stringUtf8;
            }
            return stringUtf8;
        }

        public ByteString getDeviceTokenBytes() {
            Object obj = this.deviceToken_;
            if (!(obj instanceof String)) {
                return (ByteString) obj;
            }
            ByteString copyFromUtf8 = ByteString.copyFromUtf8((String) obj);
            this.deviceToken_ = copyFromUtf8;
            return copyFromUtf8;
        }

        public boolean hasSp() {
            return (this.bitField0_ & 4096) == 4096;
        }

        public boolean getSp() {
            return this.sp_;
        }

        public boolean hasDetail() {
            return (this.bitField0_ & 8192) == 8192;
        }

        public String getDetail() {
            Object obj = this.detail_;
            if (obj instanceof String) {
                return (String) obj;
            }
            ByteString byteString = (ByteString) obj;
            String stringUtf8 = byteString.toStringUtf8();
            if (byteString.isValidUtf8()) {
                this.detail_ = stringUtf8;
            }
            return stringUtf8;
        }

        public ByteString getDetailBytes() {
            Object obj = this.detail_;
            if (!(obj instanceof String)) {
                return (ByteString) obj;
            }
            ByteString copyFromUtf8 = ByteString.copyFromUtf8((String) obj);
            this.detail_ = copyFromUtf8;
            return copyFromUtf8;
        }

        public boolean hasLastUnreadNotifTime() {
            return (this.bitField0_ & 16384) == 16384;
        }

        public long getLastUnreadNotifTime() {
            return this.lastUnreadNotifTime_;
        }

        public boolean hasLastPatchTime() {
            return (this.bitField0_ & 32768) == 32768;
        }

        public long getLastPatchTime() {
            return this.lastPatchTime_;
        }

        public boolean hasConfigBitmap() {
            return (this.bitField0_ & 65536) == 65536;
        }

        public long getConfigBitmap() {
            return this.configBitmap_;
        }

        public final boolean isInitialized() {
            byte b = this.memoizedIsInitialized;
            if (b == 1) {
                return true;
            }
            if (b == 0) {
                return false;
            }
            this.memoizedIsInitialized = 1;
            return true;
        }

        public void writeTo(CodedOutputStream codedOutputStream) throws IOException {
            if ((this.bitField0_ & 1) == 1) {
                codedOutputStream.writeInt64(1, this.t_);
            }
            if ((this.bitField0_ & 2) == 2) {
                GeneratedMessageV3.writeString(codedOutputStream, 2, this.n_);
            }
            if ((this.bitField0_ & 4) == 4) {
                GeneratedMessageV3.writeString(codedOutputStream, 3, this.s_);
            }
            if ((this.bitField0_ & 8) == 8) {
                GeneratedMessageV3.writeString(codedOutputStream, 4, this.ua_);
            }
            if ((this.bitField0_ & 16) == 16) {
                codedOutputStream.writeBool(5, this.r_);
            }
            if ((this.bitField0_ & 32) == 32) {
                GeneratedMessageV3.writeString(codedOutputStream, 6, this.tag_);
            }
            if ((this.bitField0_ & 64) == 64) {
                GeneratedMessageV3.writeString(codedOutputStream, 7, this.deviceId_);
            }
            for (int i = 0; i < this.sessionPeerIds_.size(); i++) {
                GeneratedMessageV3.writeString(codedOutputStream, 8, this.sessionPeerIds_.getRaw(i));
            }
            for (int i2 = 0; i2 < this.onlineSessionPeerIds_.size(); i2++) {
                GeneratedMessageV3.writeString(codedOutputStream, 9, this.onlineSessionPeerIds_.getRaw(i2));
            }
            if ((this.bitField0_ & 128) == 128) {
                GeneratedMessageV3.writeString(codedOutputStream, 10, this.st_);
            }
            if ((this.bitField0_ & 256) == 256) {
                codedOutputStream.writeInt32(11, this.stTtl_);
            }
            if ((this.bitField0_ & 512) == 512) {
                codedOutputStream.writeInt32(12, this.code_);
            }
            if ((this.bitField0_ & 1024) == 1024) {
                GeneratedMessageV3.writeString(codedOutputStream, 13, this.reason_);
            }
            if ((this.bitField0_ & 2048) == 2048) {
                GeneratedMessageV3.writeString(codedOutputStream, 14, this.deviceToken_);
            }
            if ((this.bitField0_ & 4096) == 4096) {
                codedOutputStream.writeBool(15, this.sp_);
            }
            if ((this.bitField0_ & 8192) == 8192) {
                GeneratedMessageV3.writeString(codedOutputStream, 16, this.detail_);
            }
            if ((this.bitField0_ & 16384) == 16384) {
                codedOutputStream.writeInt64(17, this.lastUnreadNotifTime_);
            }
            if ((this.bitField0_ & 32768) == 32768) {
                codedOutputStream.writeInt64(18, this.lastPatchTime_);
            }
            if ((this.bitField0_ & 65536) == 65536) {
                codedOutputStream.writeInt64(19, this.configBitmap_);
            }
            this.unknownFields.writeTo(codedOutputStream);
        }

        public int getSerializedSize() {
            int i = this.memoizedSize;
            if (i != -1) {
                return i;
            }
            int computeInt64Size = (this.bitField0_ & 1) == 1 ? CodedOutputStream.computeInt64Size(1, this.t_) + 0 : 0;
            if ((this.bitField0_ & 2) == 2) {
                computeInt64Size += GeneratedMessageV3.computeStringSize(2, this.n_);
            }
            if ((this.bitField0_ & 4) == 4) {
                computeInt64Size += GeneratedMessageV3.computeStringSize(3, this.s_);
            }
            if ((this.bitField0_ & 8) == 8) {
                computeInt64Size += GeneratedMessageV3.computeStringSize(4, this.ua_);
            }
            if ((this.bitField0_ & 16) == 16) {
                computeInt64Size += CodedOutputStream.computeBoolSize(5, this.r_);
            }
            if ((this.bitField0_ & 32) == 32) {
                computeInt64Size += GeneratedMessageV3.computeStringSize(6, this.tag_);
            }
            if ((this.bitField0_ & 64) == 64) {
                computeInt64Size += GeneratedMessageV3.computeStringSize(7, this.deviceId_);
            }
            int i2 = 0;
            for (int i3 = 0; i3 < this.sessionPeerIds_.size(); i3++) {
                i2 += computeStringSizeNoTag(this.sessionPeerIds_.getRaw(i3));
            }
            int size = computeInt64Size + i2 + (getSessionPeerIdsList().size() * 1);
            int i4 = 0;
            for (int i5 = 0; i5 < this.onlineSessionPeerIds_.size(); i5++) {
                i4 += computeStringSizeNoTag(this.onlineSessionPeerIds_.getRaw(i5));
            }
            int size2 = size + i4 + (getOnlineSessionPeerIdsList().size() * 1);
            if ((this.bitField0_ & 128) == 128) {
                size2 += GeneratedMessageV3.computeStringSize(10, this.st_);
            }
            if ((this.bitField0_ & 256) == 256) {
                size2 += CodedOutputStream.computeInt32Size(11, this.stTtl_);
            }
            if ((this.bitField0_ & 512) == 512) {
                size2 += CodedOutputStream.computeInt32Size(12, this.code_);
            }
            if ((this.bitField0_ & 1024) == 1024) {
                size2 += GeneratedMessageV3.computeStringSize(13, this.reason_);
            }
            if ((this.bitField0_ & 2048) == 2048) {
                size2 += GeneratedMessageV3.computeStringSize(14, this.deviceToken_);
            }
            if ((this.bitField0_ & 4096) == 4096) {
                size2 += CodedOutputStream.computeBoolSize(15, this.sp_);
            }
            if ((this.bitField0_ & 8192) == 8192) {
                size2 += GeneratedMessageV3.computeStringSize(16, this.detail_);
            }
            if ((this.bitField0_ & 16384) == 16384) {
                size2 += CodedOutputStream.computeInt64Size(17, this.lastUnreadNotifTime_);
            }
            if ((this.bitField0_ & 32768) == 32768) {
                size2 += CodedOutputStream.computeInt64Size(18, this.lastPatchTime_);
            }
            if ((this.bitField0_ & 65536) == 65536) {
                size2 += CodedOutputStream.computeInt64Size(19, this.configBitmap_);
            }
            int serializedSize = size2 + this.unknownFields.getSerializedSize();
            this.memoizedSize = serializedSize;
            return serializedSize;
        }

        public boolean equals(Object obj) {
            boolean z = true;
            if (obj == this) {
                return true;
            }
            if (!(obj instanceof SessionCommand)) {
                return super.equals(obj);
            }
            SessionCommand sessionCommand = (SessionCommand) obj;
            boolean z2 = hasT() == sessionCommand.hasT();
            if (hasT()) {
                z2 = z2 && getT() == sessionCommand.getT();
            }
            boolean z3 = z2 && hasN() == sessionCommand.hasN();
            if (hasN()) {
                z3 = z3 && getN().equals(sessionCommand.getN());
            }
            boolean z4 = z3 && hasS() == sessionCommand.hasS();
            if (hasS()) {
                z4 = z4 && getS().equals(sessionCommand.getS());
            }
            boolean z5 = z4 && hasUa() == sessionCommand.hasUa();
            if (hasUa()) {
                z5 = z5 && getUa().equals(sessionCommand.getUa());
            }
            boolean z6 = z5 && hasR() == sessionCommand.hasR();
            if (hasR()) {
                z6 = z6 && getR() == sessionCommand.getR();
            }
            boolean z7 = z6 && hasTag() == sessionCommand.hasTag();
            if (hasTag()) {
                z7 = z7 && getTag().equals(sessionCommand.getTag());
            }
            boolean z8 = z7 && hasDeviceId() == sessionCommand.hasDeviceId();
            if (hasDeviceId()) {
                z8 = z8 && getDeviceId().equals(sessionCommand.getDeviceId());
            }
            boolean z9 = ((z8 && getSessionPeerIdsList().equals(sessionCommand.getSessionPeerIdsList())) && getOnlineSessionPeerIdsList().equals(sessionCommand.getOnlineSessionPeerIdsList())) && hasSt() == sessionCommand.hasSt();
            if (hasSt()) {
                z9 = z9 && getSt().equals(sessionCommand.getSt());
            }
            boolean z10 = z9 && hasStTtl() == sessionCommand.hasStTtl();
            if (hasStTtl()) {
                z10 = z10 && getStTtl() == sessionCommand.getStTtl();
            }
            boolean z11 = z10 && hasCode() == sessionCommand.hasCode();
            if (hasCode()) {
                z11 = z11 && getCode() == sessionCommand.getCode();
            }
            boolean z12 = z11 && hasReason() == sessionCommand.hasReason();
            if (hasReason()) {
                z12 = z12 && getReason().equals(sessionCommand.getReason());
            }
            boolean z13 = z12 && hasDeviceToken() == sessionCommand.hasDeviceToken();
            if (hasDeviceToken()) {
                z13 = z13 && getDeviceToken().equals(sessionCommand.getDeviceToken());
            }
            boolean z14 = z13 && hasSp() == sessionCommand.hasSp();
            if (hasSp()) {
                z14 = z14 && getSp() == sessionCommand.getSp();
            }
            boolean z15 = z14 && hasDetail() == sessionCommand.hasDetail();
            if (hasDetail()) {
                z15 = z15 && getDetail().equals(sessionCommand.getDetail());
            }
            boolean z16 = z15 && hasLastUnreadNotifTime() == sessionCommand.hasLastUnreadNotifTime();
            if (hasLastUnreadNotifTime()) {
                z16 = z16 && getLastUnreadNotifTime() == sessionCommand.getLastUnreadNotifTime();
            }
            boolean z17 = z16 && hasLastPatchTime() == sessionCommand.hasLastPatchTime();
            if (hasLastPatchTime()) {
                z17 = z17 && getLastPatchTime() == sessionCommand.getLastPatchTime();
            }
            boolean z18 = z17 && hasConfigBitmap() == sessionCommand.hasConfigBitmap();
            if (hasConfigBitmap()) {
                z18 = z18 && getConfigBitmap() == sessionCommand.getConfigBitmap();
            }
            if (!z18 || !this.unknownFields.equals(sessionCommand.unknownFields)) {
                z = false;
            }
            return z;
        }

        public int hashCode() {
            if (this.memoizedHashCode != 0) {
                return this.memoizedHashCode;
            }
            int hashCode = 779 + getDescriptor().hashCode();
            if (hasT()) {
                hashCode = (((hashCode * 37) + 1) * 53) + Internal.hashLong(getT());
            }
            if (hasN()) {
                hashCode = (((hashCode * 37) + 2) * 53) + getN().hashCode();
            }
            if (hasS()) {
                hashCode = (((hashCode * 37) + 3) * 53) + getS().hashCode();
            }
            if (hasUa()) {
                hashCode = (((hashCode * 37) + 4) * 53) + getUa().hashCode();
            }
            if (hasR()) {
                hashCode = (((hashCode * 37) + 5) * 53) + Internal.hashBoolean(getR());
            }
            if (hasTag()) {
                hashCode = (((hashCode * 37) + 6) * 53) + getTag().hashCode();
            }
            if (hasDeviceId()) {
                hashCode = (((hashCode * 37) + 7) * 53) + getDeviceId().hashCode();
            }
            if (getSessionPeerIdsCount() > 0) {
                hashCode = (((hashCode * 37) + 8) * 53) + getSessionPeerIdsList().hashCode();
            }
            if (getOnlineSessionPeerIdsCount() > 0) {
                hashCode = (((hashCode * 37) + 9) * 53) + getOnlineSessionPeerIdsList().hashCode();
            }
            if (hasSt()) {
                hashCode = (((hashCode * 37) + 10) * 53) + getSt().hashCode();
            }
            if (hasStTtl()) {
                hashCode = (((hashCode * 37) + 11) * 53) + getStTtl();
            }
            if (hasCode()) {
                hashCode = (((hashCode * 37) + 12) * 53) + getCode();
            }
            if (hasReason()) {
                hashCode = (((hashCode * 37) + 13) * 53) + getReason().hashCode();
            }
            if (hasDeviceToken()) {
                hashCode = (((hashCode * 37) + 14) * 53) + getDeviceToken().hashCode();
            }
            if (hasSp()) {
                hashCode = (((hashCode * 37) + 15) * 53) + Internal.hashBoolean(getSp());
            }
            if (hasDetail()) {
                hashCode = (((hashCode * 37) + 16) * 53) + getDetail().hashCode();
            }
            if (hasLastUnreadNotifTime()) {
                hashCode = (((hashCode * 37) + 17) * 53) + Internal.hashLong(getLastUnreadNotifTime());
            }
            if (hasLastPatchTime()) {
                hashCode = (((hashCode * 37) + 18) * 53) + Internal.hashLong(getLastPatchTime());
            }
            if (hasConfigBitmap()) {
                hashCode = (((hashCode * 37) + 19) * 53) + Internal.hashLong(getConfigBitmap());
            }
            int hashCode2 = (hashCode * 29) + this.unknownFields.hashCode();
            this.memoizedHashCode = hashCode2;
            return hashCode2;
        }

        public static SessionCommand parseFrom(ByteBuffer byteBuffer) throws InvalidProtocolBufferException {
            return (SessionCommand) PARSER.parseFrom(byteBuffer);
        }

        public static SessionCommand parseFrom(ByteBuffer byteBuffer, ExtensionRegistryLite extensionRegistryLite) throws InvalidProtocolBufferException {
            return (SessionCommand) PARSER.parseFrom(byteBuffer, extensionRegistryLite);
        }

        public static SessionCommand parseFrom(ByteString byteString) throws InvalidProtocolBufferException {
            return (SessionCommand) PARSER.parseFrom(byteString);
        }

        public static SessionCommand parseFrom(ByteString byteString, ExtensionRegistryLite extensionRegistryLite) throws InvalidProtocolBufferException {
            return (SessionCommand) PARSER.parseFrom(byteString, extensionRegistryLite);
        }

        public static SessionCommand parseFrom(byte[] bArr) throws InvalidProtocolBufferException {
            return (SessionCommand) PARSER.parseFrom(bArr);
        }

        public static SessionCommand parseFrom(byte[] bArr, ExtensionRegistryLite extensionRegistryLite) throws InvalidProtocolBufferException {
            return (SessionCommand) PARSER.parseFrom(bArr, extensionRegistryLite);
        }

        public static SessionCommand parseFrom(InputStream inputStream) throws IOException {
            return (SessionCommand) GeneratedMessageV3.parseWithIOException(PARSER, inputStream);
        }

        public static SessionCommand parseFrom(InputStream inputStream, ExtensionRegistryLite extensionRegistryLite) throws IOException {
            return (SessionCommand) GeneratedMessageV3.parseWithIOException(PARSER, inputStream, extensionRegistryLite);
        }

        public static SessionCommand parseDelimitedFrom(InputStream inputStream) throws IOException {
            return (SessionCommand) GeneratedMessageV3.parseDelimitedWithIOException(PARSER, inputStream);
        }

        public static SessionCommand parseDelimitedFrom(InputStream inputStream, ExtensionRegistryLite extensionRegistryLite) throws IOException {
            return (SessionCommand) GeneratedMessageV3.parseDelimitedWithIOException(PARSER, inputStream, extensionRegistryLite);
        }

        public static SessionCommand parseFrom(CodedInputStream codedInputStream) throws IOException {
            return (SessionCommand) GeneratedMessageV3.parseWithIOException(PARSER, codedInputStream);
        }

        public static SessionCommand parseFrom(CodedInputStream codedInputStream, ExtensionRegistryLite extensionRegistryLite) throws IOException {
            return (SessionCommand) GeneratedMessageV3.parseWithIOException(PARSER, codedInputStream, extensionRegistryLite);
        }

        public Builder newBuilderForType() {
            return newBuilder();
        }

        public static Builder newBuilder() {
            return DEFAULT_INSTANCE.toBuilder();
        }

        public static Builder newBuilder(SessionCommand sessionCommand) {
            return DEFAULT_INSTANCE.toBuilder().mergeFrom(sessionCommand);
        }

        public Builder toBuilder() {
            if (this == DEFAULT_INSTANCE) {
                return new Builder();
            }
            return new Builder().mergeFrom(this);
        }

        /* access modifiers changed from: protected */
        public Builder newBuilderForType(BuilderParent builderParent) {
            return new Builder(builderParent);
        }

        public static SessionCommand getDefaultInstance() {
            return DEFAULT_INSTANCE;
        }

        public static Parser<SessionCommand> parser() {
            return PARSER;
        }

        public Parser<SessionCommand> getParserForType() {
            return PARSER;
        }

        public SessionCommand getDefaultInstanceForType() {
            return DEFAULT_INSTANCE;
        }
    }

    public interface SessionCommandOrBuilder extends MessageOrBuilder {
        int getCode();

        long getConfigBitmap();

        String getDetail();

        ByteString getDetailBytes();

        String getDeviceId();

        ByteString getDeviceIdBytes();

        String getDeviceToken();

        ByteString getDeviceTokenBytes();

        long getLastPatchTime();

        long getLastUnreadNotifTime();

        String getN();

        ByteString getNBytes();

        String getOnlineSessionPeerIds(int i);

        ByteString getOnlineSessionPeerIdsBytes(int i);

        int getOnlineSessionPeerIdsCount();

        List<String> getOnlineSessionPeerIdsList();

        boolean getR();

        String getReason();

        ByteString getReasonBytes();

        String getS();

        ByteString getSBytes();

        String getSessionPeerIds(int i);

        ByteString getSessionPeerIdsBytes(int i);

        int getSessionPeerIdsCount();

        List<String> getSessionPeerIdsList();

        boolean getSp();

        String getSt();

        ByteString getStBytes();

        int getStTtl();

        long getT();

        String getTag();

        ByteString getTagBytes();

        String getUa();

        ByteString getUaBytes();

        boolean hasCode();

        boolean hasConfigBitmap();

        boolean hasDetail();

        boolean hasDeviceId();

        boolean hasDeviceToken();

        boolean hasLastPatchTime();

        boolean hasLastUnreadNotifTime();

        boolean hasN();

        boolean hasR();

        boolean hasReason();

        boolean hasS();

        boolean hasSp();

        boolean hasSt();

        boolean hasStTtl();

        boolean hasT();

        boolean hasTag();

        boolean hasUa();
    }

    public enum StatusType implements ProtocolMessageEnum {
        on(1),
        off(2);
        
        private static final StatusType[] VALUES = null;
        private static final EnumLiteMap<StatusType> internalValueMap = null;
        public static final int off_VALUE = 2;
        public static final int on_VALUE = 1;
        private final int value;

        static {
            internalValueMap = new EnumLiteMap<StatusType>() {
                public StatusType findValueByNumber(int i) {
                    return StatusType.forNumber(i);
                }
            };
            VALUES = values();
        }

        public final int getNumber() {
            return this.value;
        }

        @Deprecated
        public static StatusType valueOf(int i) {
            return forNumber(i);
        }

        public static StatusType forNumber(int i) {
            if (i == 1) {
                return on;
            }
            if (i != 2) {
                return null;
            }
            return off;
        }

        public static EnumLiteMap<StatusType> internalGetValueMap() {
            return internalValueMap;
        }

        public final EnumValueDescriptor getValueDescriptor() {
            return (EnumValueDescriptor) getDescriptor().getValues().get(ordinal());
        }

        public final EnumDescriptor getDescriptorForType() {
            return getDescriptor();
        }

        public static final EnumDescriptor getDescriptor() {
            return (EnumDescriptor) Messages.getDescriptor().getEnumTypes().get(2);
        }

        public static StatusType valueOf(EnumValueDescriptor enumValueDescriptor) {
            if (enumValueDescriptor.getType() == getDescriptor()) {
                return VALUES[enumValueDescriptor.getIndex()];
            }
            throw new IllegalArgumentException("EnumValueDescriptor is not for this type.");
        }

        private StatusType(int i) {
            this.value = i;
        }
    }

    public static final class UnreadCommand extends GeneratedMessageV3 implements UnreadCommandOrBuilder {
        public static final int CONVS_FIELD_NUMBER = 1;
        private static final UnreadCommand DEFAULT_INSTANCE = new UnreadCommand();
        public static final int NOTIFTIME_FIELD_NUMBER = 2;
        @Deprecated
        public static final Parser<UnreadCommand> PARSER = new AbstractParser<UnreadCommand>() {
            public UnreadCommand parsePartialFrom(CodedInputStream codedInputStream, ExtensionRegistryLite extensionRegistryLite) throws InvalidProtocolBufferException {
                return new UnreadCommand(codedInputStream, extensionRegistryLite);
            }
        };
        private static final long serialVersionUID = 0;
        /* access modifiers changed from: private */
        public int bitField0_;
        /* access modifiers changed from: private */
        public List<UnreadTuple> convs_;
        private byte memoizedIsInitialized;
        /* access modifiers changed from: private */
        public long notifTime_;

        public static final class Builder extends com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements UnreadCommandOrBuilder {
            private int bitField0_;
            private RepeatedFieldBuilderV3<UnreadTuple, Builder, UnreadTupleOrBuilder> convsBuilder_;
            private List<UnreadTuple> convs_;
            private long notifTime_;

            public static final Descriptor getDescriptor() {
                return Messages.internal_static_com_avos_avoscloud_UnreadCommand_descriptor;
            }

            /* access modifiers changed from: protected */
            public FieldAccessorTable internalGetFieldAccessorTable() {
                return Messages.internal_static_com_avos_avoscloud_UnreadCommand_fieldAccessorTable.ensureFieldAccessorsInitialized(UnreadCommand.class, Builder.class);
            }

            private Builder() {
                this.convs_ = Collections.emptyList();
                maybeForceBuilderInitialization();
            }

            private Builder(BuilderParent builderParent) {
                super(builderParent);
                this.convs_ = Collections.emptyList();
                maybeForceBuilderInitialization();
            }

            private void maybeForceBuilderInitialization() {
                if (UnreadCommand.alwaysUseFieldBuilders) {
                    getConvsFieldBuilder();
                }
            }

            public Builder clear() {
                super.clear();
                RepeatedFieldBuilderV3<UnreadTuple, Builder, UnreadTupleOrBuilder> repeatedFieldBuilderV3 = this.convsBuilder_;
                if (repeatedFieldBuilderV3 == null) {
                    this.convs_ = Collections.emptyList();
                    this.bitField0_ &= -2;
                } else {
                    repeatedFieldBuilderV3.clear();
                }
                this.notifTime_ = 0;
                this.bitField0_ &= -3;
                return this;
            }

            public Descriptor getDescriptorForType() {
                return Messages.internal_static_com_avos_avoscloud_UnreadCommand_descriptor;
            }

            public UnreadCommand getDefaultInstanceForType() {
                return UnreadCommand.getDefaultInstance();
            }

            public UnreadCommand build() {
                UnreadCommand buildPartial = buildPartial();
                if (buildPartial.isInitialized()) {
                    return buildPartial;
                }
                throw newUninitializedMessageException(buildPartial);
            }

            public UnreadCommand buildPartial() {
                UnreadCommand unreadCommand = new UnreadCommand((com.google.protobuf.GeneratedMessageV3.Builder) this);
                int i = this.bitField0_;
                RepeatedFieldBuilderV3<UnreadTuple, Builder, UnreadTupleOrBuilder> repeatedFieldBuilderV3 = this.convsBuilder_;
                int i2 = 1;
                if (repeatedFieldBuilderV3 == null) {
                    if ((i & 1) == 1) {
                        this.convs_ = Collections.unmodifiableList(this.convs_);
                        this.bitField0_ &= -2;
                    }
                    unreadCommand.convs_ = this.convs_;
                } else {
                    unreadCommand.convs_ = repeatedFieldBuilderV3.build();
                }
                if ((i & 2) != 2) {
                    i2 = 0;
                }
                unreadCommand.notifTime_ = this.notifTime_;
                unreadCommand.bitField0_ = i2;
                onBuilt();
                return unreadCommand;
            }

            public Builder clone() {
                return (Builder) super.clone();
            }

            public Builder setField(FieldDescriptor fieldDescriptor, Object obj) {
                return (Builder) super.setField(fieldDescriptor, obj);
            }

            public Builder clearField(FieldDescriptor fieldDescriptor) {
                return (Builder) super.clearField(fieldDescriptor);
            }

            public Builder clearOneof(OneofDescriptor oneofDescriptor) {
                return (Builder) super.clearOneof(oneofDescriptor);
            }

            public Builder setRepeatedField(FieldDescriptor fieldDescriptor, int i, Object obj) {
                return (Builder) super.setRepeatedField(fieldDescriptor, i, obj);
            }

            public Builder addRepeatedField(FieldDescriptor fieldDescriptor, Object obj) {
                return (Builder) super.addRepeatedField(fieldDescriptor, obj);
            }

            public Builder mergeFrom(Message message) {
                if (message instanceof UnreadCommand) {
                    return mergeFrom((UnreadCommand) message);
                }
                super.mergeFrom(message);
                return this;
            }

            public Builder mergeFrom(UnreadCommand unreadCommand) {
                if (unreadCommand == UnreadCommand.getDefaultInstance()) {
                    return this;
                }
                if (this.convsBuilder_ == null) {
                    if (!unreadCommand.convs_.isEmpty()) {
                        if (this.convs_.isEmpty()) {
                            this.convs_ = unreadCommand.convs_;
                            this.bitField0_ &= -2;
                        } else {
                            ensureConvsIsMutable();
                            this.convs_.addAll(unreadCommand.convs_);
                        }
                        onChanged();
                    }
                } else if (!unreadCommand.convs_.isEmpty()) {
                    if (this.convsBuilder_.isEmpty()) {
                        this.convsBuilder_.dispose();
                        RepeatedFieldBuilderV3<UnreadTuple, Builder, UnreadTupleOrBuilder> repeatedFieldBuilderV3 = null;
                        this.convsBuilder_ = null;
                        this.convs_ = unreadCommand.convs_;
                        this.bitField0_ &= -2;
                        if (UnreadCommand.alwaysUseFieldBuilders) {
                            repeatedFieldBuilderV3 = getConvsFieldBuilder();
                        }
                        this.convsBuilder_ = repeatedFieldBuilderV3;
                    } else {
                        this.convsBuilder_.addAllMessages(unreadCommand.convs_);
                    }
                }
                if (unreadCommand.hasNotifTime()) {
                    setNotifTime(unreadCommand.getNotifTime());
                }
                mergeUnknownFields(unreadCommand.unknownFields);
                onChanged();
                return this;
            }

            public final boolean isInitialized() {
                for (int i = 0; i < getConvsCount(); i++) {
                    if (!getConvs(i).isInitialized()) {
                        return false;
                    }
                }
                return true;
            }

            /* JADX WARNING: Removed duplicated region for block: B:16:0x0021  */
            /* Code decompiled incorrectly, please refer to instructions dump. */
            public com.avos.avoscloud.Messages.UnreadCommand.Builder mergeFrom(com.google.protobuf.CodedInputStream r3, com.google.protobuf.ExtensionRegistryLite r4) throws java.io.IOException {
                /*
                    r2 = this;
                    r0 = 0
                    com.google.protobuf.Parser<com.avos.avoscloud.Messages$UnreadCommand> r1 = com.avos.avoscloud.Messages.UnreadCommand.PARSER     // Catch:{ InvalidProtocolBufferException -> 0x0011 }
                    java.lang.Object r3 = r1.parsePartialFrom(r3, r4)     // Catch:{ InvalidProtocolBufferException -> 0x0011 }
                    com.avos.avoscloud.Messages$UnreadCommand r3 = (com.avos.avoscloud.Messages.UnreadCommand) r3     // Catch:{ InvalidProtocolBufferException -> 0x0011 }
                    if (r3 == 0) goto L_0x000e
                    r2.mergeFrom(r3)
                L_0x000e:
                    return r2
                L_0x000f:
                    r3 = move-exception
                    goto L_0x001f
                L_0x0011:
                    r3 = move-exception
                    com.google.protobuf.MessageLite r4 = r3.getUnfinishedMessage()     // Catch:{ all -> 0x000f }
                    com.avos.avoscloud.Messages$UnreadCommand r4 = (com.avos.avoscloud.Messages.UnreadCommand) r4     // Catch:{ all -> 0x000f }
                    java.io.IOException r3 = r3.unwrapIOException()     // Catch:{ all -> 0x001d }
                    throw r3     // Catch:{ all -> 0x001d }
                L_0x001d:
                    r3 = move-exception
                    r0 = r4
                L_0x001f:
                    if (r0 == 0) goto L_0x0024
                    r2.mergeFrom(r0)
                L_0x0024:
                    throw r3
                */
                throw new UnsupportedOperationException("Method not decompiled: com.avos.avoscloud.Messages.UnreadCommand.Builder.mergeFrom(com.google.protobuf.CodedInputStream, com.google.protobuf.ExtensionRegistryLite):com.avos.avoscloud.Messages$UnreadCommand$Builder");
            }

            private void ensureConvsIsMutable() {
                if ((this.bitField0_ & 1) != 1) {
                    this.convs_ = new ArrayList(this.convs_);
                    this.bitField0_ |= 1;
                }
            }

            public List<UnreadTuple> getConvsList() {
                RepeatedFieldBuilderV3<UnreadTuple, Builder, UnreadTupleOrBuilder> repeatedFieldBuilderV3 = this.convsBuilder_;
                if (repeatedFieldBuilderV3 == null) {
                    return Collections.unmodifiableList(this.convs_);
                }
                return repeatedFieldBuilderV3.getMessageList();
            }

            public int getConvsCount() {
                RepeatedFieldBuilderV3<UnreadTuple, Builder, UnreadTupleOrBuilder> repeatedFieldBuilderV3 = this.convsBuilder_;
                if (repeatedFieldBuilderV3 == null) {
                    return this.convs_.size();
                }
                return repeatedFieldBuilderV3.getCount();
            }

            public UnreadTuple getConvs(int i) {
                RepeatedFieldBuilderV3<UnreadTuple, Builder, UnreadTupleOrBuilder> repeatedFieldBuilderV3 = this.convsBuilder_;
                if (repeatedFieldBuilderV3 == null) {
                    return (UnreadTuple) this.convs_.get(i);
                }
                return (UnreadTuple) repeatedFieldBuilderV3.getMessage(i);
            }

            public Builder setConvs(int i, UnreadTuple unreadTuple) {
                RepeatedFieldBuilderV3<UnreadTuple, Builder, UnreadTupleOrBuilder> repeatedFieldBuilderV3 = this.convsBuilder_;
                if (repeatedFieldBuilderV3 != null) {
                    repeatedFieldBuilderV3.setMessage(i, unreadTuple);
                } else if (unreadTuple != null) {
                    ensureConvsIsMutable();
                    this.convs_.set(i, unreadTuple);
                    onChanged();
                } else {
                    throw new NullPointerException();
                }
                return this;
            }

            public Builder setConvs(int i, Builder builder) {
                RepeatedFieldBuilderV3<UnreadTuple, Builder, UnreadTupleOrBuilder> repeatedFieldBuilderV3 = this.convsBuilder_;
                if (repeatedFieldBuilderV3 == null) {
                    ensureConvsIsMutable();
                    this.convs_.set(i, builder.build());
                    onChanged();
                } else {
                    repeatedFieldBuilderV3.setMessage(i, builder.build());
                }
                return this;
            }

            public Builder addConvs(UnreadTuple unreadTuple) {
                RepeatedFieldBuilderV3<UnreadTuple, Builder, UnreadTupleOrBuilder> repeatedFieldBuilderV3 = this.convsBuilder_;
                if (repeatedFieldBuilderV3 != null) {
                    repeatedFieldBuilderV3.addMessage(unreadTuple);
                } else if (unreadTuple != null) {
                    ensureConvsIsMutable();
                    this.convs_.add(unreadTuple);
                    onChanged();
                } else {
                    throw new NullPointerException();
                }
                return this;
            }

            public Builder addConvs(int i, UnreadTuple unreadTuple) {
                RepeatedFieldBuilderV3<UnreadTuple, Builder, UnreadTupleOrBuilder> repeatedFieldBuilderV3 = this.convsBuilder_;
                if (repeatedFieldBuilderV3 != null) {
                    repeatedFieldBuilderV3.addMessage(i, unreadTuple);
                } else if (unreadTuple != null) {
                    ensureConvsIsMutable();
                    this.convs_.add(i, unreadTuple);
                    onChanged();
                } else {
                    throw new NullPointerException();
                }
                return this;
            }

            public Builder addConvs(Builder builder) {
                RepeatedFieldBuilderV3<UnreadTuple, Builder, UnreadTupleOrBuilder> repeatedFieldBuilderV3 = this.convsBuilder_;
                if (repeatedFieldBuilderV3 == null) {
                    ensureConvsIsMutable();
                    this.convs_.add(builder.build());
                    onChanged();
                } else {
                    repeatedFieldBuilderV3.addMessage(builder.build());
                }
                return this;
            }

            public Builder addConvs(int i, Builder builder) {
                RepeatedFieldBuilderV3<UnreadTuple, Builder, UnreadTupleOrBuilder> repeatedFieldBuilderV3 = this.convsBuilder_;
                if (repeatedFieldBuilderV3 == null) {
                    ensureConvsIsMutable();
                    this.convs_.add(i, builder.build());
                    onChanged();
                } else {
                    repeatedFieldBuilderV3.addMessage(i, builder.build());
                }
                return this;
            }

            public Builder addAllConvs(Iterable<? extends UnreadTuple> iterable) {
                RepeatedFieldBuilderV3<UnreadTuple, Builder, UnreadTupleOrBuilder> repeatedFieldBuilderV3 = this.convsBuilder_;
                if (repeatedFieldBuilderV3 == null) {
                    ensureConvsIsMutable();
                    com.google.protobuf.AbstractMessageLite.Builder.addAll((Iterable) iterable, (List) this.convs_);
                    onChanged();
                } else {
                    repeatedFieldBuilderV3.addAllMessages(iterable);
                }
                return this;
            }

            public Builder clearConvs() {
                RepeatedFieldBuilderV3<UnreadTuple, Builder, UnreadTupleOrBuilder> repeatedFieldBuilderV3 = this.convsBuilder_;
                if (repeatedFieldBuilderV3 == null) {
                    this.convs_ = Collections.emptyList();
                    this.bitField0_ &= -2;
                    onChanged();
                } else {
                    repeatedFieldBuilderV3.clear();
                }
                return this;
            }

            public Builder removeConvs(int i) {
                RepeatedFieldBuilderV3<UnreadTuple, Builder, UnreadTupleOrBuilder> repeatedFieldBuilderV3 = this.convsBuilder_;
                if (repeatedFieldBuilderV3 == null) {
                    ensureConvsIsMutable();
                    this.convs_.remove(i);
                    onChanged();
                } else {
                    repeatedFieldBuilderV3.remove(i);
                }
                return this;
            }

            public Builder getConvsBuilder(int i) {
                return (Builder) getConvsFieldBuilder().getBuilder(i);
            }

            public UnreadTupleOrBuilder getConvsOrBuilder(int i) {
                RepeatedFieldBuilderV3<UnreadTuple, Builder, UnreadTupleOrBuilder> repeatedFieldBuilderV3 = this.convsBuilder_;
                if (repeatedFieldBuilderV3 == null) {
                    return (UnreadTupleOrBuilder) this.convs_.get(i);
                }
                return (UnreadTupleOrBuilder) repeatedFieldBuilderV3.getMessageOrBuilder(i);
            }

            public List<? extends UnreadTupleOrBuilder> getConvsOrBuilderList() {
                RepeatedFieldBuilderV3<UnreadTuple, Builder, UnreadTupleOrBuilder> repeatedFieldBuilderV3 = this.convsBuilder_;
                if (repeatedFieldBuilderV3 != null) {
                    return repeatedFieldBuilderV3.getMessageOrBuilderList();
                }
                return Collections.unmodifiableList(this.convs_);
            }

            public Builder addConvsBuilder() {
                return (Builder) getConvsFieldBuilder().addBuilder(UnreadTuple.getDefaultInstance());
            }

            public Builder addConvsBuilder(int i) {
                return (Builder) getConvsFieldBuilder().addBuilder(i, UnreadTuple.getDefaultInstance());
            }

            public List<Builder> getConvsBuilderList() {
                return getConvsFieldBuilder().getBuilderList();
            }

            private RepeatedFieldBuilderV3<UnreadTuple, Builder, UnreadTupleOrBuilder> getConvsFieldBuilder() {
                if (this.convsBuilder_ == null) {
                    List<UnreadTuple> list = this.convs_;
                    boolean z = true;
                    if ((this.bitField0_ & 1) != 1) {
                        z = false;
                    }
                    this.convsBuilder_ = new RepeatedFieldBuilderV3<>(list, z, getParentForChildren(), isClean());
                    this.convs_ = null;
                }
                return this.convsBuilder_;
            }

            public boolean hasNotifTime() {
                return (this.bitField0_ & 2) == 2;
            }

            public long getNotifTime() {
                return this.notifTime_;
            }

            public Builder setNotifTime(long j) {
                this.bitField0_ |= 2;
                this.notifTime_ = j;
                onChanged();
                return this;
            }

            public Builder clearNotifTime() {
                this.bitField0_ &= -3;
                this.notifTime_ = 0;
                onChanged();
                return this;
            }

            public final Builder setUnknownFields(UnknownFieldSet unknownFieldSet) {
                return (Builder) super.setUnknownFields(unknownFieldSet);
            }

            public final Builder mergeUnknownFields(UnknownFieldSet unknownFieldSet) {
                return (Builder) super.mergeUnknownFields(unknownFieldSet);
            }
        }

        private UnreadCommand(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
            super(builder);
            this.memoizedIsInitialized = -1;
        }

        private UnreadCommand() {
            this.memoizedIsInitialized = -1;
            this.convs_ = Collections.emptyList();
            this.notifTime_ = 0;
        }

        public final UnknownFieldSet getUnknownFields() {
            return this.unknownFields;
        }

        private UnreadCommand(CodedInputStream codedInputStream, ExtensionRegistryLite extensionRegistryLite) throws InvalidProtocolBufferException {
            this();
            com.google.protobuf.UnknownFieldSet.Builder newBuilder = UnknownFieldSet.newBuilder();
            boolean z = false;
            boolean z2 = false;
            while (!z) {
                try {
                    int readTag = codedInputStream.readTag();
                    if (readTag != 0) {
                        if (readTag == 10) {
                            if (!z2 || !true) {
                                this.convs_ = new ArrayList();
                                z2 |= true;
                            }
                            this.convs_.add(codedInputStream.readMessage(UnreadTuple.PARSER, extensionRegistryLite));
                        } else if (readTag == 16) {
                            this.bitField0_ |= 1;
                            this.notifTime_ = codedInputStream.readInt64();
                        } else if (!parseUnknownField(codedInputStream, newBuilder, extensionRegistryLite, readTag)) {
                        }
                    }
                    z = true;
                } catch (InvalidProtocolBufferException e) {
                    throw e.setUnfinishedMessage(this);
                } catch (IOException e2) {
                    throw new InvalidProtocolBufferException(e2).setUnfinishedMessage(this);
                } catch (Throwable th) {
                    if (z2 && true) {
                        this.convs_ = Collections.unmodifiableList(this.convs_);
                    }
                    this.unknownFields = newBuilder.build();
                    makeExtensionsImmutable();
                    throw th;
                }
            }
            if (z2 && true) {
                this.convs_ = Collections.unmodifiableList(this.convs_);
            }
            this.unknownFields = newBuilder.build();
            makeExtensionsImmutable();
        }

        public static final Descriptor getDescriptor() {
            return Messages.internal_static_com_avos_avoscloud_UnreadCommand_descriptor;
        }

        /* access modifiers changed from: protected */
        public FieldAccessorTable internalGetFieldAccessorTable() {
            return Messages.internal_static_com_avos_avoscloud_UnreadCommand_fieldAccessorTable.ensureFieldAccessorsInitialized(UnreadCommand.class, Builder.class);
        }

        public List<UnreadTuple> getConvsList() {
            return this.convs_;
        }

        public List<? extends UnreadTupleOrBuilder> getConvsOrBuilderList() {
            return this.convs_;
        }

        public int getConvsCount() {
            return this.convs_.size();
        }

        public UnreadTuple getConvs(int i) {
            return (UnreadTuple) this.convs_.get(i);
        }

        public UnreadTupleOrBuilder getConvsOrBuilder(int i) {
            return (UnreadTupleOrBuilder) this.convs_.get(i);
        }

        public boolean hasNotifTime() {
            return (this.bitField0_ & 1) == 1;
        }

        public long getNotifTime() {
            return this.notifTime_;
        }

        public final boolean isInitialized() {
            byte b = this.memoizedIsInitialized;
            if (b == 1) {
                return true;
            }
            if (b == 0) {
                return false;
            }
            for (int i = 0; i < getConvsCount(); i++) {
                if (!getConvs(i).isInitialized()) {
                    this.memoizedIsInitialized = 0;
                    return false;
                }
            }
            this.memoizedIsInitialized = 1;
            return true;
        }

        public void writeTo(CodedOutputStream codedOutputStream) throws IOException {
            for (int i = 0; i < this.convs_.size(); i++) {
                codedOutputStream.writeMessage(1, (MessageLite) this.convs_.get(i));
            }
            if ((this.bitField0_ & 1) == 1) {
                codedOutputStream.writeInt64(2, this.notifTime_);
            }
            this.unknownFields.writeTo(codedOutputStream);
        }

        public int getSerializedSize() {
            int i = this.memoizedSize;
            if (i != -1) {
                return i;
            }
            int i2 = 0;
            for (int i3 = 0; i3 < this.convs_.size(); i3++) {
                i2 += CodedOutputStream.computeMessageSize(1, (MessageLite) this.convs_.get(i3));
            }
            if ((this.bitField0_ & 1) == 1) {
                i2 += CodedOutputStream.computeInt64Size(2, this.notifTime_);
            }
            int serializedSize = i2 + this.unknownFields.getSerializedSize();
            this.memoizedSize = serializedSize;
            return serializedSize;
        }

        public boolean equals(Object obj) {
            boolean z = true;
            if (obj == this) {
                return true;
            }
            if (!(obj instanceof UnreadCommand)) {
                return super.equals(obj);
            }
            UnreadCommand unreadCommand = (UnreadCommand) obj;
            boolean z2 = (getConvsList().equals(unreadCommand.getConvsList())) && hasNotifTime() == unreadCommand.hasNotifTime();
            if (hasNotifTime()) {
                z2 = z2 && getNotifTime() == unreadCommand.getNotifTime();
            }
            if (!z2 || !this.unknownFields.equals(unreadCommand.unknownFields)) {
                z = false;
            }
            return z;
        }

        public int hashCode() {
            if (this.memoizedHashCode != 0) {
                return this.memoizedHashCode;
            }
            int hashCode = 779 + getDescriptor().hashCode();
            if (getConvsCount() > 0) {
                hashCode = (((hashCode * 37) + 1) * 53) + getConvsList().hashCode();
            }
            if (hasNotifTime()) {
                hashCode = (((hashCode * 37) + 2) * 53) + Internal.hashLong(getNotifTime());
            }
            int hashCode2 = (hashCode * 29) + this.unknownFields.hashCode();
            this.memoizedHashCode = hashCode2;
            return hashCode2;
        }

        public static UnreadCommand parseFrom(ByteBuffer byteBuffer) throws InvalidProtocolBufferException {
            return (UnreadCommand) PARSER.parseFrom(byteBuffer);
        }

        public static UnreadCommand parseFrom(ByteBuffer byteBuffer, ExtensionRegistryLite extensionRegistryLite) throws InvalidProtocolBufferException {
            return (UnreadCommand) PARSER.parseFrom(byteBuffer, extensionRegistryLite);
        }

        public static UnreadCommand parseFrom(ByteString byteString) throws InvalidProtocolBufferException {
            return (UnreadCommand) PARSER.parseFrom(byteString);
        }

        public static UnreadCommand parseFrom(ByteString byteString, ExtensionRegistryLite extensionRegistryLite) throws InvalidProtocolBufferException {
            return (UnreadCommand) PARSER.parseFrom(byteString, extensionRegistryLite);
        }

        public static UnreadCommand parseFrom(byte[] bArr) throws InvalidProtocolBufferException {
            return (UnreadCommand) PARSER.parseFrom(bArr);
        }

        public static UnreadCommand parseFrom(byte[] bArr, ExtensionRegistryLite extensionRegistryLite) throws InvalidProtocolBufferException {
            return (UnreadCommand) PARSER.parseFrom(bArr, extensionRegistryLite);
        }

        public static UnreadCommand parseFrom(InputStream inputStream) throws IOException {
            return (UnreadCommand) GeneratedMessageV3.parseWithIOException(PARSER, inputStream);
        }

        public static UnreadCommand parseFrom(InputStream inputStream, ExtensionRegistryLite extensionRegistryLite) throws IOException {
            return (UnreadCommand) GeneratedMessageV3.parseWithIOException(PARSER, inputStream, extensionRegistryLite);
        }

        public static UnreadCommand parseDelimitedFrom(InputStream inputStream) throws IOException {
            return (UnreadCommand) GeneratedMessageV3.parseDelimitedWithIOException(PARSER, inputStream);
        }

        public static UnreadCommand parseDelimitedFrom(InputStream inputStream, ExtensionRegistryLite extensionRegistryLite) throws IOException {
            return (UnreadCommand) GeneratedMessageV3.parseDelimitedWithIOException(PARSER, inputStream, extensionRegistryLite);
        }

        public static UnreadCommand parseFrom(CodedInputStream codedInputStream) throws IOException {
            return (UnreadCommand) GeneratedMessageV3.parseWithIOException(PARSER, codedInputStream);
        }

        public static UnreadCommand parseFrom(CodedInputStream codedInputStream, ExtensionRegistryLite extensionRegistryLite) throws IOException {
            return (UnreadCommand) GeneratedMessageV3.parseWithIOException(PARSER, codedInputStream, extensionRegistryLite);
        }

        public Builder newBuilderForType() {
            return newBuilder();
        }

        public static Builder newBuilder() {
            return DEFAULT_INSTANCE.toBuilder();
        }

        public static Builder newBuilder(UnreadCommand unreadCommand) {
            return DEFAULT_INSTANCE.toBuilder().mergeFrom(unreadCommand);
        }

        public Builder toBuilder() {
            if (this == DEFAULT_INSTANCE) {
                return new Builder();
            }
            return new Builder().mergeFrom(this);
        }

        /* access modifiers changed from: protected */
        public Builder newBuilderForType(BuilderParent builderParent) {
            return new Builder(builderParent);
        }

        public static UnreadCommand getDefaultInstance() {
            return DEFAULT_INSTANCE;
        }

        public static Parser<UnreadCommand> parser() {
            return PARSER;
        }

        public Parser<UnreadCommand> getParserForType() {
            return PARSER;
        }

        public UnreadCommand getDefaultInstanceForType() {
            return DEFAULT_INSTANCE;
        }
    }

    public interface UnreadCommandOrBuilder extends MessageOrBuilder {
        UnreadTuple getConvs(int i);

        int getConvsCount();

        List<UnreadTuple> getConvsList();

        UnreadTupleOrBuilder getConvsOrBuilder(int i);

        List<? extends UnreadTupleOrBuilder> getConvsOrBuilderList();

        long getNotifTime();

        boolean hasNotifTime();
    }

    public static final class UnreadTuple extends GeneratedMessageV3 implements UnreadTupleOrBuilder {
        public static final int BINARYMSG_FIELD_NUMBER = 9;
        public static final int CID_FIELD_NUMBER = 1;
        public static final int CONVTYPE_FIELD_NUMBER = 10;
        public static final int DATA_FIELD_NUMBER = 6;
        private static final UnreadTuple DEFAULT_INSTANCE = new UnreadTuple();
        public static final int FROM_FIELD_NUMBER = 5;
        public static final int MENTIONED_FIELD_NUMBER = 8;
        public static final int MID_FIELD_NUMBER = 3;
        @Deprecated
        public static final Parser<UnreadTuple> PARSER = new AbstractParser<UnreadTuple>() {
            public UnreadTuple parsePartialFrom(CodedInputStream codedInputStream, ExtensionRegistryLite extensionRegistryLite) throws InvalidProtocolBufferException {
                return new UnreadTuple(codedInputStream, extensionRegistryLite);
            }
        };
        public static final int PATCHTIMESTAMP_FIELD_NUMBER = 7;
        public static final int TIMESTAMP_FIELD_NUMBER = 4;
        public static final int UNREAD_FIELD_NUMBER = 2;
        private static final long serialVersionUID = 0;
        /* access modifiers changed from: private */
        public ByteString binaryMsg_;
        /* access modifiers changed from: private */
        public int bitField0_;
        /* access modifiers changed from: private */
        public volatile Object cid_;
        /* access modifiers changed from: private */
        public int convType_;
        /* access modifiers changed from: private */
        public volatile Object data_;
        /* access modifiers changed from: private */
        public volatile Object from_;
        private byte memoizedIsInitialized;
        /* access modifiers changed from: private */
        public boolean mentioned_;
        /* access modifiers changed from: private */
        public volatile Object mid_;
        /* access modifiers changed from: private */
        public long patchTimestamp_;
        /* access modifiers changed from: private */
        public long timestamp_;
        /* access modifiers changed from: private */
        public int unread_;

        public static final class Builder extends com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements UnreadTupleOrBuilder {
            private ByteString binaryMsg_;
            private int bitField0_;
            private Object cid_;
            private int convType_;
            private Object data_;
            private Object from_;
            private boolean mentioned_;
            private Object mid_;
            private long patchTimestamp_;
            private long timestamp_;
            private int unread_;

            public static final Descriptor getDescriptor() {
                return Messages.internal_static_com_avos_avoscloud_UnreadTuple_descriptor;
            }

            /* access modifiers changed from: protected */
            public FieldAccessorTable internalGetFieldAccessorTable() {
                return Messages.internal_static_com_avos_avoscloud_UnreadTuple_fieldAccessorTable.ensureFieldAccessorsInitialized(UnreadTuple.class, Builder.class);
            }

            private Builder() {
                String str = "";
                this.cid_ = str;
                this.mid_ = str;
                this.from_ = str;
                this.data_ = str;
                this.binaryMsg_ = ByteString.EMPTY;
                maybeForceBuilderInitialization();
            }

            private Builder(BuilderParent builderParent) {
                super(builderParent);
                String str = "";
                this.cid_ = str;
                this.mid_ = str;
                this.from_ = str;
                this.data_ = str;
                this.binaryMsg_ = ByteString.EMPTY;
                maybeForceBuilderInitialization();
            }

            private void maybeForceBuilderInitialization() {
                UnreadTuple.alwaysUseFieldBuilders;
            }

            public Builder clear() {
                super.clear();
                String str = "";
                this.cid_ = str;
                this.bitField0_ &= -2;
                this.unread_ = 0;
                this.bitField0_ &= -3;
                this.mid_ = str;
                this.bitField0_ &= -5;
                this.timestamp_ = 0;
                this.bitField0_ &= -9;
                this.from_ = str;
                this.bitField0_ &= -17;
                this.data_ = str;
                this.bitField0_ &= -33;
                this.patchTimestamp_ = 0;
                this.bitField0_ &= -65;
                this.mentioned_ = false;
                this.bitField0_ &= -129;
                this.binaryMsg_ = ByteString.EMPTY;
                this.bitField0_ &= -257;
                this.convType_ = 0;
                this.bitField0_ &= -513;
                return this;
            }

            public Descriptor getDescriptorForType() {
                return Messages.internal_static_com_avos_avoscloud_UnreadTuple_descriptor;
            }

            public UnreadTuple getDefaultInstanceForType() {
                return UnreadTuple.getDefaultInstance();
            }

            public UnreadTuple build() {
                UnreadTuple buildPartial = buildPartial();
                if (buildPartial.isInitialized()) {
                    return buildPartial;
                }
                throw newUninitializedMessageException(buildPartial);
            }

            public UnreadTuple buildPartial() {
                UnreadTuple unreadTuple = new UnreadTuple((com.google.protobuf.GeneratedMessageV3.Builder) this);
                int i = this.bitField0_;
                int i2 = 1;
                if ((i & 1) != 1) {
                    i2 = 0;
                }
                unreadTuple.cid_ = this.cid_;
                if ((i & 2) == 2) {
                    i2 |= 2;
                }
                unreadTuple.unread_ = this.unread_;
                if ((i & 4) == 4) {
                    i2 |= 4;
                }
                unreadTuple.mid_ = this.mid_;
                if ((i & 8) == 8) {
                    i2 |= 8;
                }
                unreadTuple.timestamp_ = this.timestamp_;
                if ((i & 16) == 16) {
                    i2 |= 16;
                }
                unreadTuple.from_ = this.from_;
                if ((i & 32) == 32) {
                    i2 |= 32;
                }
                unreadTuple.data_ = this.data_;
                if ((i & 64) == 64) {
                    i2 |= 64;
                }
                unreadTuple.patchTimestamp_ = this.patchTimestamp_;
                if ((i & 128) == 128) {
                    i2 |= 128;
                }
                unreadTuple.mentioned_ = this.mentioned_;
                if ((i & 256) == 256) {
                    i2 |= 256;
                }
                unreadTuple.binaryMsg_ = this.binaryMsg_;
                if ((i & 512) == 512) {
                    i2 |= 512;
                }
                unreadTuple.convType_ = this.convType_;
                unreadTuple.bitField0_ = i2;
                onBuilt();
                return unreadTuple;
            }

            public Builder clone() {
                return (Builder) super.clone();
            }

            public Builder setField(FieldDescriptor fieldDescriptor, Object obj) {
                return (Builder) super.setField(fieldDescriptor, obj);
            }

            public Builder clearField(FieldDescriptor fieldDescriptor) {
                return (Builder) super.clearField(fieldDescriptor);
            }

            public Builder clearOneof(OneofDescriptor oneofDescriptor) {
                return (Builder) super.clearOneof(oneofDescriptor);
            }

            public Builder setRepeatedField(FieldDescriptor fieldDescriptor, int i, Object obj) {
                return (Builder) super.setRepeatedField(fieldDescriptor, i, obj);
            }

            public Builder addRepeatedField(FieldDescriptor fieldDescriptor, Object obj) {
                return (Builder) super.addRepeatedField(fieldDescriptor, obj);
            }

            public Builder mergeFrom(Message message) {
                if (message instanceof UnreadTuple) {
                    return mergeFrom((UnreadTuple) message);
                }
                super.mergeFrom(message);
                return this;
            }

            public Builder mergeFrom(UnreadTuple unreadTuple) {
                if (unreadTuple == UnreadTuple.getDefaultInstance()) {
                    return this;
                }
                if (unreadTuple.hasCid()) {
                    this.bitField0_ |= 1;
                    this.cid_ = unreadTuple.cid_;
                    onChanged();
                }
                if (unreadTuple.hasUnread()) {
                    setUnread(unreadTuple.getUnread());
                }
                if (unreadTuple.hasMid()) {
                    this.bitField0_ |= 4;
                    this.mid_ = unreadTuple.mid_;
                    onChanged();
                }
                if (unreadTuple.hasTimestamp()) {
                    setTimestamp(unreadTuple.getTimestamp());
                }
                if (unreadTuple.hasFrom()) {
                    this.bitField0_ |= 16;
                    this.from_ = unreadTuple.from_;
                    onChanged();
                }
                if (unreadTuple.hasData()) {
                    this.bitField0_ |= 32;
                    this.data_ = unreadTuple.data_;
                    onChanged();
                }
                if (unreadTuple.hasPatchTimestamp()) {
                    setPatchTimestamp(unreadTuple.getPatchTimestamp());
                }
                if (unreadTuple.hasMentioned()) {
                    setMentioned(unreadTuple.getMentioned());
                }
                if (unreadTuple.hasBinaryMsg()) {
                    setBinaryMsg(unreadTuple.getBinaryMsg());
                }
                if (unreadTuple.hasConvType()) {
                    setConvType(unreadTuple.getConvType());
                }
                mergeUnknownFields(unreadTuple.unknownFields);
                onChanged();
                return this;
            }

            public final boolean isInitialized() {
                if (hasCid() && hasUnread()) {
                    return true;
                }
                return false;
            }

            /* JADX WARNING: Removed duplicated region for block: B:16:0x0021  */
            /* Code decompiled incorrectly, please refer to instructions dump. */
            public com.avos.avoscloud.Messages.UnreadTuple.Builder mergeFrom(com.google.protobuf.CodedInputStream r3, com.google.protobuf.ExtensionRegistryLite r4) throws java.io.IOException {
                /*
                    r2 = this;
                    r0 = 0
                    com.google.protobuf.Parser<com.avos.avoscloud.Messages$UnreadTuple> r1 = com.avos.avoscloud.Messages.UnreadTuple.PARSER     // Catch:{ InvalidProtocolBufferException -> 0x0011 }
                    java.lang.Object r3 = r1.parsePartialFrom(r3, r4)     // Catch:{ InvalidProtocolBufferException -> 0x0011 }
                    com.avos.avoscloud.Messages$UnreadTuple r3 = (com.avos.avoscloud.Messages.UnreadTuple) r3     // Catch:{ InvalidProtocolBufferException -> 0x0011 }
                    if (r3 == 0) goto L_0x000e
                    r2.mergeFrom(r3)
                L_0x000e:
                    return r2
                L_0x000f:
                    r3 = move-exception
                    goto L_0x001f
                L_0x0011:
                    r3 = move-exception
                    com.google.protobuf.MessageLite r4 = r3.getUnfinishedMessage()     // Catch:{ all -> 0x000f }
                    com.avos.avoscloud.Messages$UnreadTuple r4 = (com.avos.avoscloud.Messages.UnreadTuple) r4     // Catch:{ all -> 0x000f }
                    java.io.IOException r3 = r3.unwrapIOException()     // Catch:{ all -> 0x001d }
                    throw r3     // Catch:{ all -> 0x001d }
                L_0x001d:
                    r3 = move-exception
                    r0 = r4
                L_0x001f:
                    if (r0 == 0) goto L_0x0024
                    r2.mergeFrom(r0)
                L_0x0024:
                    throw r3
                */
                throw new UnsupportedOperationException("Method not decompiled: com.avos.avoscloud.Messages.UnreadTuple.Builder.mergeFrom(com.google.protobuf.CodedInputStream, com.google.protobuf.ExtensionRegistryLite):com.avos.avoscloud.Messages$UnreadTuple$Builder");
            }

            public boolean hasCid() {
                return (this.bitField0_ & 1) == 1;
            }

            public String getCid() {
                Object obj = this.cid_;
                if (obj instanceof String) {
                    return (String) obj;
                }
                ByteString byteString = (ByteString) obj;
                String stringUtf8 = byteString.toStringUtf8();
                if (byteString.isValidUtf8()) {
                    this.cid_ = stringUtf8;
                }
                return stringUtf8;
            }

            public ByteString getCidBytes() {
                Object obj = this.cid_;
                if (!(obj instanceof String)) {
                    return (ByteString) obj;
                }
                ByteString copyFromUtf8 = ByteString.copyFromUtf8((String) obj);
                this.cid_ = copyFromUtf8;
                return copyFromUtf8;
            }

            public Builder setCid(String str) {
                if (str != null) {
                    this.bitField0_ |= 1;
                    this.cid_ = str;
                    onChanged();
                    return this;
                }
                throw new NullPointerException();
            }

            public Builder clearCid() {
                this.bitField0_ &= -2;
                this.cid_ = UnreadTuple.getDefaultInstance().getCid();
                onChanged();
                return this;
            }

            public Builder setCidBytes(ByteString byteString) {
                if (byteString != null) {
                    this.bitField0_ |= 1;
                    this.cid_ = byteString;
                    onChanged();
                    return this;
                }
                throw new NullPointerException();
            }

            public boolean hasUnread() {
                return (this.bitField0_ & 2) == 2;
            }

            public int getUnread() {
                return this.unread_;
            }

            public Builder setUnread(int i) {
                this.bitField0_ |= 2;
                this.unread_ = i;
                onChanged();
                return this;
            }

            public Builder clearUnread() {
                this.bitField0_ &= -3;
                this.unread_ = 0;
                onChanged();
                return this;
            }

            public boolean hasMid() {
                return (this.bitField0_ & 4) == 4;
            }

            public String getMid() {
                Object obj = this.mid_;
                if (obj instanceof String) {
                    return (String) obj;
                }
                ByteString byteString = (ByteString) obj;
                String stringUtf8 = byteString.toStringUtf8();
                if (byteString.isValidUtf8()) {
                    this.mid_ = stringUtf8;
                }
                return stringUtf8;
            }

            public ByteString getMidBytes() {
                Object obj = this.mid_;
                if (!(obj instanceof String)) {
                    return (ByteString) obj;
                }
                ByteString copyFromUtf8 = ByteString.copyFromUtf8((String) obj);
                this.mid_ = copyFromUtf8;
                return copyFromUtf8;
            }

            public Builder setMid(String str) {
                if (str != null) {
                    this.bitField0_ |= 4;
                    this.mid_ = str;
                    onChanged();
                    return this;
                }
                throw new NullPointerException();
            }

            public Builder clearMid() {
                this.bitField0_ &= -5;
                this.mid_ = UnreadTuple.getDefaultInstance().getMid();
                onChanged();
                return this;
            }

            public Builder setMidBytes(ByteString byteString) {
                if (byteString != null) {
                    this.bitField0_ |= 4;
                    this.mid_ = byteString;
                    onChanged();
                    return this;
                }
                throw new NullPointerException();
            }

            public boolean hasTimestamp() {
                return (this.bitField0_ & 8) == 8;
            }

            public long getTimestamp() {
                return this.timestamp_;
            }

            public Builder setTimestamp(long j) {
                this.bitField0_ |= 8;
                this.timestamp_ = j;
                onChanged();
                return this;
            }

            public Builder clearTimestamp() {
                this.bitField0_ &= -9;
                this.timestamp_ = 0;
                onChanged();
                return this;
            }

            public boolean hasFrom() {
                return (this.bitField0_ & 16) == 16;
            }

            public String getFrom() {
                Object obj = this.from_;
                if (obj instanceof String) {
                    return (String) obj;
                }
                ByteString byteString = (ByteString) obj;
                String stringUtf8 = byteString.toStringUtf8();
                if (byteString.isValidUtf8()) {
                    this.from_ = stringUtf8;
                }
                return stringUtf8;
            }

            public ByteString getFromBytes() {
                Object obj = this.from_;
                if (!(obj instanceof String)) {
                    return (ByteString) obj;
                }
                ByteString copyFromUtf8 = ByteString.copyFromUtf8((String) obj);
                this.from_ = copyFromUtf8;
                return copyFromUtf8;
            }

            public Builder setFrom(String str) {
                if (str != null) {
                    this.bitField0_ |= 16;
                    this.from_ = str;
                    onChanged();
                    return this;
                }
                throw new NullPointerException();
            }

            public Builder clearFrom() {
                this.bitField0_ &= -17;
                this.from_ = UnreadTuple.getDefaultInstance().getFrom();
                onChanged();
                return this;
            }

            public Builder setFromBytes(ByteString byteString) {
                if (byteString != null) {
                    this.bitField0_ |= 16;
                    this.from_ = byteString;
                    onChanged();
                    return this;
                }
                throw new NullPointerException();
            }

            public boolean hasData() {
                return (this.bitField0_ & 32) == 32;
            }

            public String getData() {
                Object obj = this.data_;
                if (obj instanceof String) {
                    return (String) obj;
                }
                ByteString byteString = (ByteString) obj;
                String stringUtf8 = byteString.toStringUtf8();
                if (byteString.isValidUtf8()) {
                    this.data_ = stringUtf8;
                }
                return stringUtf8;
            }

            public ByteString getDataBytes() {
                Object obj = this.data_;
                if (!(obj instanceof String)) {
                    return (ByteString) obj;
                }
                ByteString copyFromUtf8 = ByteString.copyFromUtf8((String) obj);
                this.data_ = copyFromUtf8;
                return copyFromUtf8;
            }

            public Builder setData(String str) {
                if (str != null) {
                    this.bitField0_ |= 32;
                    this.data_ = str;
                    onChanged();
                    return this;
                }
                throw new NullPointerException();
            }

            public Builder clearData() {
                this.bitField0_ &= -33;
                this.data_ = UnreadTuple.getDefaultInstance().getData();
                onChanged();
                return this;
            }

            public Builder setDataBytes(ByteString byteString) {
                if (byteString != null) {
                    this.bitField0_ |= 32;
                    this.data_ = byteString;
                    onChanged();
                    return this;
                }
                throw new NullPointerException();
            }

            public boolean hasPatchTimestamp() {
                return (this.bitField0_ & 64) == 64;
            }

            public long getPatchTimestamp() {
                return this.patchTimestamp_;
            }

            public Builder setPatchTimestamp(long j) {
                this.bitField0_ |= 64;
                this.patchTimestamp_ = j;
                onChanged();
                return this;
            }

            public Builder clearPatchTimestamp() {
                this.bitField0_ &= -65;
                this.patchTimestamp_ = 0;
                onChanged();
                return this;
            }

            public boolean hasMentioned() {
                return (this.bitField0_ & 128) == 128;
            }

            public boolean getMentioned() {
                return this.mentioned_;
            }

            public Builder setMentioned(boolean z) {
                this.bitField0_ |= 128;
                this.mentioned_ = z;
                onChanged();
                return this;
            }

            public Builder clearMentioned() {
                this.bitField0_ &= -129;
                this.mentioned_ = false;
                onChanged();
                return this;
            }

            public boolean hasBinaryMsg() {
                return (this.bitField0_ & 256) == 256;
            }

            public ByteString getBinaryMsg() {
                return this.binaryMsg_;
            }

            public Builder setBinaryMsg(ByteString byteString) {
                if (byteString != null) {
                    this.bitField0_ |= 256;
                    this.binaryMsg_ = byteString;
                    onChanged();
                    return this;
                }
                throw new NullPointerException();
            }

            public Builder clearBinaryMsg() {
                this.bitField0_ &= -257;
                this.binaryMsg_ = UnreadTuple.getDefaultInstance().getBinaryMsg();
                onChanged();
                return this;
            }

            public boolean hasConvType() {
                return (this.bitField0_ & 512) == 512;
            }

            public int getConvType() {
                return this.convType_;
            }

            public Builder setConvType(int i) {
                this.bitField0_ |= 512;
                this.convType_ = i;
                onChanged();
                return this;
            }

            public Builder clearConvType() {
                this.bitField0_ &= -513;
                this.convType_ = 0;
                onChanged();
                return this;
            }

            public final Builder setUnknownFields(UnknownFieldSet unknownFieldSet) {
                return (Builder) super.setUnknownFields(unknownFieldSet);
            }

            public final Builder mergeUnknownFields(UnknownFieldSet unknownFieldSet) {
                return (Builder) super.mergeUnknownFields(unknownFieldSet);
            }
        }

        private UnreadTuple(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
            super(builder);
            this.memoizedIsInitialized = -1;
        }

        private UnreadTuple() {
            this.memoizedIsInitialized = -1;
            String str = "";
            this.cid_ = str;
            this.unread_ = 0;
            this.mid_ = str;
            this.timestamp_ = 0;
            this.from_ = str;
            this.data_ = str;
            this.patchTimestamp_ = 0;
            this.mentioned_ = false;
            this.binaryMsg_ = ByteString.EMPTY;
            this.convType_ = 0;
        }

        public final UnknownFieldSet getUnknownFields() {
            return this.unknownFields;
        }

        private UnreadTuple(CodedInputStream codedInputStream, ExtensionRegistryLite extensionRegistryLite) throws InvalidProtocolBufferException {
            this();
            com.google.protobuf.UnknownFieldSet.Builder newBuilder = UnknownFieldSet.newBuilder();
            boolean z = false;
            while (!z) {
                try {
                    int readTag = codedInputStream.readTag();
                    switch (readTag) {
                        case 0:
                            z = true;
                            break;
                        case 10:
                            ByteString readBytes = codedInputStream.readBytes();
                            this.bitField0_ = 1 | this.bitField0_;
                            this.cid_ = readBytes;
                            break;
                        case 16:
                            this.bitField0_ |= 2;
                            this.unread_ = codedInputStream.readInt32();
                            break;
                        case 26:
                            ByteString readBytes2 = codedInputStream.readBytes();
                            this.bitField0_ |= 4;
                            this.mid_ = readBytes2;
                            break;
                        case 32:
                            this.bitField0_ |= 8;
                            this.timestamp_ = codedInputStream.readInt64();
                            break;
                        case 42:
                            ByteString readBytes3 = codedInputStream.readBytes();
                            this.bitField0_ |= 16;
                            this.from_ = readBytes3;
                            break;
                        case 50:
                            ByteString readBytes4 = codedInputStream.readBytes();
                            this.bitField0_ |= 32;
                            this.data_ = readBytes4;
                            break;
                        case 56:
                            this.bitField0_ |= 64;
                            this.patchTimestamp_ = codedInputStream.readInt64();
                            break;
                        case 64:
                            this.bitField0_ |= 128;
                            this.mentioned_ = codedInputStream.readBool();
                            break;
                        case 74:
                            this.bitField0_ |= 256;
                            this.binaryMsg_ = codedInputStream.readBytes();
                            break;
                        case 80:
                            this.bitField0_ |= 512;
                            this.convType_ = codedInputStream.readInt32();
                            break;
                        default:
                            if (parseUnknownField(codedInputStream, newBuilder, extensionRegistryLite, readTag)) {
                                break;
                            }
                            z = true;
                            break;
                    }
                } catch (InvalidProtocolBufferException e) {
                    throw e.setUnfinishedMessage(this);
                } catch (IOException e2) {
                    throw new InvalidProtocolBufferException(e2).setUnfinishedMessage(this);
                } catch (Throwable th) {
                    this.unknownFields = newBuilder.build();
                    makeExtensionsImmutable();
                    throw th;
                }
            }
            this.unknownFields = newBuilder.build();
            makeExtensionsImmutable();
        }

        public static final Descriptor getDescriptor() {
            return Messages.internal_static_com_avos_avoscloud_UnreadTuple_descriptor;
        }

        /* access modifiers changed from: protected */
        public FieldAccessorTable internalGetFieldAccessorTable() {
            return Messages.internal_static_com_avos_avoscloud_UnreadTuple_fieldAccessorTable.ensureFieldAccessorsInitialized(UnreadTuple.class, Builder.class);
        }

        public boolean hasCid() {
            return (this.bitField0_ & 1) == 1;
        }

        public String getCid() {
            Object obj = this.cid_;
            if (obj instanceof String) {
                return (String) obj;
            }
            ByteString byteString = (ByteString) obj;
            String stringUtf8 = byteString.toStringUtf8();
            if (byteString.isValidUtf8()) {
                this.cid_ = stringUtf8;
            }
            return stringUtf8;
        }

        public ByteString getCidBytes() {
            Object obj = this.cid_;
            if (!(obj instanceof String)) {
                return (ByteString) obj;
            }
            ByteString copyFromUtf8 = ByteString.copyFromUtf8((String) obj);
            this.cid_ = copyFromUtf8;
            return copyFromUtf8;
        }

        public boolean hasUnread() {
            return (this.bitField0_ & 2) == 2;
        }

        public int getUnread() {
            return this.unread_;
        }

        public boolean hasMid() {
            return (this.bitField0_ & 4) == 4;
        }

        public String getMid() {
            Object obj = this.mid_;
            if (obj instanceof String) {
                return (String) obj;
            }
            ByteString byteString = (ByteString) obj;
            String stringUtf8 = byteString.toStringUtf8();
            if (byteString.isValidUtf8()) {
                this.mid_ = stringUtf8;
            }
            return stringUtf8;
        }

        public ByteString getMidBytes() {
            Object obj = this.mid_;
            if (!(obj instanceof String)) {
                return (ByteString) obj;
            }
            ByteString copyFromUtf8 = ByteString.copyFromUtf8((String) obj);
            this.mid_ = copyFromUtf8;
            return copyFromUtf8;
        }

        public boolean hasTimestamp() {
            return (this.bitField0_ & 8) == 8;
        }

        public long getTimestamp() {
            return this.timestamp_;
        }

        public boolean hasFrom() {
            return (this.bitField0_ & 16) == 16;
        }

        public String getFrom() {
            Object obj = this.from_;
            if (obj instanceof String) {
                return (String) obj;
            }
            ByteString byteString = (ByteString) obj;
            String stringUtf8 = byteString.toStringUtf8();
            if (byteString.isValidUtf8()) {
                this.from_ = stringUtf8;
            }
            return stringUtf8;
        }

        public ByteString getFromBytes() {
            Object obj = this.from_;
            if (!(obj instanceof String)) {
                return (ByteString) obj;
            }
            ByteString copyFromUtf8 = ByteString.copyFromUtf8((String) obj);
            this.from_ = copyFromUtf8;
            return copyFromUtf8;
        }

        public boolean hasData() {
            return (this.bitField0_ & 32) == 32;
        }

        public String getData() {
            Object obj = this.data_;
            if (obj instanceof String) {
                return (String) obj;
            }
            ByteString byteString = (ByteString) obj;
            String stringUtf8 = byteString.toStringUtf8();
            if (byteString.isValidUtf8()) {
                this.data_ = stringUtf8;
            }
            return stringUtf8;
        }

        public ByteString getDataBytes() {
            Object obj = this.data_;
            if (!(obj instanceof String)) {
                return (ByteString) obj;
            }
            ByteString copyFromUtf8 = ByteString.copyFromUtf8((String) obj);
            this.data_ = copyFromUtf8;
            return copyFromUtf8;
        }

        public boolean hasPatchTimestamp() {
            return (this.bitField0_ & 64) == 64;
        }

        public long getPatchTimestamp() {
            return this.patchTimestamp_;
        }

        public boolean hasMentioned() {
            return (this.bitField0_ & 128) == 128;
        }

        public boolean getMentioned() {
            return this.mentioned_;
        }

        public boolean hasBinaryMsg() {
            return (this.bitField0_ & 256) == 256;
        }

        public ByteString getBinaryMsg() {
            return this.binaryMsg_;
        }

        public boolean hasConvType() {
            return (this.bitField0_ & 512) == 512;
        }

        public int getConvType() {
            return this.convType_;
        }

        public final boolean isInitialized() {
            byte b = this.memoizedIsInitialized;
            if (b == 1) {
                return true;
            }
            if (b == 0) {
                return false;
            }
            if (!hasCid()) {
                this.memoizedIsInitialized = 0;
                return false;
            } else if (!hasUnread()) {
                this.memoizedIsInitialized = 0;
                return false;
            } else {
                this.memoizedIsInitialized = 1;
                return true;
            }
        }

        public void writeTo(CodedOutputStream codedOutputStream) throws IOException {
            if ((this.bitField0_ & 1) == 1) {
                GeneratedMessageV3.writeString(codedOutputStream, 1, this.cid_);
            }
            if ((this.bitField0_ & 2) == 2) {
                codedOutputStream.writeInt32(2, this.unread_);
            }
            if ((this.bitField0_ & 4) == 4) {
                GeneratedMessageV3.writeString(codedOutputStream, 3, this.mid_);
            }
            if ((this.bitField0_ & 8) == 8) {
                codedOutputStream.writeInt64(4, this.timestamp_);
            }
            if ((this.bitField0_ & 16) == 16) {
                GeneratedMessageV3.writeString(codedOutputStream, 5, this.from_);
            }
            if ((this.bitField0_ & 32) == 32) {
                GeneratedMessageV3.writeString(codedOutputStream, 6, this.data_);
            }
            if ((this.bitField0_ & 64) == 64) {
                codedOutputStream.writeInt64(7, this.patchTimestamp_);
            }
            if ((this.bitField0_ & 128) == 128) {
                codedOutputStream.writeBool(8, this.mentioned_);
            }
            if ((this.bitField0_ & 256) == 256) {
                codedOutputStream.writeBytes(9, this.binaryMsg_);
            }
            if ((this.bitField0_ & 512) == 512) {
                codedOutputStream.writeInt32(10, this.convType_);
            }
            this.unknownFields.writeTo(codedOutputStream);
        }

        public int getSerializedSize() {
            int i = this.memoizedSize;
            if (i != -1) {
                return i;
            }
            int i2 = 0;
            if ((this.bitField0_ & 1) == 1) {
                i2 = 0 + GeneratedMessageV3.computeStringSize(1, this.cid_);
            }
            if ((this.bitField0_ & 2) == 2) {
                i2 += CodedOutputStream.computeInt32Size(2, this.unread_);
            }
            if ((this.bitField0_ & 4) == 4) {
                i2 += GeneratedMessageV3.computeStringSize(3, this.mid_);
            }
            if ((this.bitField0_ & 8) == 8) {
                i2 += CodedOutputStream.computeInt64Size(4, this.timestamp_);
            }
            if ((this.bitField0_ & 16) == 16) {
                i2 += GeneratedMessageV3.computeStringSize(5, this.from_);
            }
            if ((this.bitField0_ & 32) == 32) {
                i2 += GeneratedMessageV3.computeStringSize(6, this.data_);
            }
            if ((this.bitField0_ & 64) == 64) {
                i2 += CodedOutputStream.computeInt64Size(7, this.patchTimestamp_);
            }
            if ((this.bitField0_ & 128) == 128) {
                i2 += CodedOutputStream.computeBoolSize(8, this.mentioned_);
            }
            if ((this.bitField0_ & 256) == 256) {
                i2 += CodedOutputStream.computeBytesSize(9, this.binaryMsg_);
            }
            if ((this.bitField0_ & 512) == 512) {
                i2 += CodedOutputStream.computeInt32Size(10, this.convType_);
            }
            int serializedSize = i2 + this.unknownFields.getSerializedSize();
            this.memoizedSize = serializedSize;
            return serializedSize;
        }

        public boolean equals(Object obj) {
            boolean z = true;
            if (obj == this) {
                return true;
            }
            if (!(obj instanceof UnreadTuple)) {
                return super.equals(obj);
            }
            UnreadTuple unreadTuple = (UnreadTuple) obj;
            boolean z2 = hasCid() == unreadTuple.hasCid();
            if (hasCid()) {
                z2 = z2 && getCid().equals(unreadTuple.getCid());
            }
            boolean z3 = z2 && hasUnread() == unreadTuple.hasUnread();
            if (hasUnread()) {
                z3 = z3 && getUnread() == unreadTuple.getUnread();
            }
            boolean z4 = z3 && hasMid() == unreadTuple.hasMid();
            if (hasMid()) {
                z4 = z4 && getMid().equals(unreadTuple.getMid());
            }
            boolean z5 = z4 && hasTimestamp() == unreadTuple.hasTimestamp();
            if (hasTimestamp()) {
                z5 = z5 && getTimestamp() == unreadTuple.getTimestamp();
            }
            boolean z6 = z5 && hasFrom() == unreadTuple.hasFrom();
            if (hasFrom()) {
                z6 = z6 && getFrom().equals(unreadTuple.getFrom());
            }
            boolean z7 = z6 && hasData() == unreadTuple.hasData();
            if (hasData()) {
                z7 = z7 && getData().equals(unreadTuple.getData());
            }
            boolean z8 = z7 && hasPatchTimestamp() == unreadTuple.hasPatchTimestamp();
            if (hasPatchTimestamp()) {
                z8 = z8 && getPatchTimestamp() == unreadTuple.getPatchTimestamp();
            }
            boolean z9 = z8 && hasMentioned() == unreadTuple.hasMentioned();
            if (hasMentioned()) {
                z9 = z9 && getMentioned() == unreadTuple.getMentioned();
            }
            boolean z10 = z9 && hasBinaryMsg() == unreadTuple.hasBinaryMsg();
            if (hasBinaryMsg()) {
                z10 = z10 && getBinaryMsg().equals(unreadTuple.getBinaryMsg());
            }
            boolean z11 = z10 && hasConvType() == unreadTuple.hasConvType();
            if (hasConvType()) {
                z11 = z11 && getConvType() == unreadTuple.getConvType();
            }
            if (!z11 || !this.unknownFields.equals(unreadTuple.unknownFields)) {
                z = false;
            }
            return z;
        }

        public int hashCode() {
            if (this.memoizedHashCode != 0) {
                return this.memoizedHashCode;
            }
            int hashCode = 779 + getDescriptor().hashCode();
            if (hasCid()) {
                hashCode = (((hashCode * 37) + 1) * 53) + getCid().hashCode();
            }
            if (hasUnread()) {
                hashCode = (((hashCode * 37) + 2) * 53) + getUnread();
            }
            if (hasMid()) {
                hashCode = (((hashCode * 37) + 3) * 53) + getMid().hashCode();
            }
            if (hasTimestamp()) {
                hashCode = (((hashCode * 37) + 4) * 53) + Internal.hashLong(getTimestamp());
            }
            if (hasFrom()) {
                hashCode = (((hashCode * 37) + 5) * 53) + getFrom().hashCode();
            }
            if (hasData()) {
                hashCode = (((hashCode * 37) + 6) * 53) + getData().hashCode();
            }
            if (hasPatchTimestamp()) {
                hashCode = (((hashCode * 37) + 7) * 53) + Internal.hashLong(getPatchTimestamp());
            }
            if (hasMentioned()) {
                hashCode = (((hashCode * 37) + 8) * 53) + Internal.hashBoolean(getMentioned());
            }
            if (hasBinaryMsg()) {
                hashCode = (((hashCode * 37) + 9) * 53) + getBinaryMsg().hashCode();
            }
            if (hasConvType()) {
                hashCode = (((hashCode * 37) + 10) * 53) + getConvType();
            }
            int hashCode2 = (hashCode * 29) + this.unknownFields.hashCode();
            this.memoizedHashCode = hashCode2;
            return hashCode2;
        }

        public static UnreadTuple parseFrom(ByteBuffer byteBuffer) throws InvalidProtocolBufferException {
            return (UnreadTuple) PARSER.parseFrom(byteBuffer);
        }

        public static UnreadTuple parseFrom(ByteBuffer byteBuffer, ExtensionRegistryLite extensionRegistryLite) throws InvalidProtocolBufferException {
            return (UnreadTuple) PARSER.parseFrom(byteBuffer, extensionRegistryLite);
        }

        public static UnreadTuple parseFrom(ByteString byteString) throws InvalidProtocolBufferException {
            return (UnreadTuple) PARSER.parseFrom(byteString);
        }

        public static UnreadTuple parseFrom(ByteString byteString, ExtensionRegistryLite extensionRegistryLite) throws InvalidProtocolBufferException {
            return (UnreadTuple) PARSER.parseFrom(byteString, extensionRegistryLite);
        }

        public static UnreadTuple parseFrom(byte[] bArr) throws InvalidProtocolBufferException {
            return (UnreadTuple) PARSER.parseFrom(bArr);
        }

        public static UnreadTuple parseFrom(byte[] bArr, ExtensionRegistryLite extensionRegistryLite) throws InvalidProtocolBufferException {
            return (UnreadTuple) PARSER.parseFrom(bArr, extensionRegistryLite);
        }

        public static UnreadTuple parseFrom(InputStream inputStream) throws IOException {
            return (UnreadTuple) GeneratedMessageV3.parseWithIOException(PARSER, inputStream);
        }

        public static UnreadTuple parseFrom(InputStream inputStream, ExtensionRegistryLite extensionRegistryLite) throws IOException {
            return (UnreadTuple) GeneratedMessageV3.parseWithIOException(PARSER, inputStream, extensionRegistryLite);
        }

        public static UnreadTuple parseDelimitedFrom(InputStream inputStream) throws IOException {
            return (UnreadTuple) GeneratedMessageV3.parseDelimitedWithIOException(PARSER, inputStream);
        }

        public static UnreadTuple parseDelimitedFrom(InputStream inputStream, ExtensionRegistryLite extensionRegistryLite) throws IOException {
            return (UnreadTuple) GeneratedMessageV3.parseDelimitedWithIOException(PARSER, inputStream, extensionRegistryLite);
        }

        public static UnreadTuple parseFrom(CodedInputStream codedInputStream) throws IOException {
            return (UnreadTuple) GeneratedMessageV3.parseWithIOException(PARSER, codedInputStream);
        }

        public static UnreadTuple parseFrom(CodedInputStream codedInputStream, ExtensionRegistryLite extensionRegistryLite) throws IOException {
            return (UnreadTuple) GeneratedMessageV3.parseWithIOException(PARSER, codedInputStream, extensionRegistryLite);
        }

        public Builder newBuilderForType() {
            return newBuilder();
        }

        public static Builder newBuilder() {
            return DEFAULT_INSTANCE.toBuilder();
        }

        public static Builder newBuilder(UnreadTuple unreadTuple) {
            return DEFAULT_INSTANCE.toBuilder().mergeFrom(unreadTuple);
        }

        public Builder toBuilder() {
            if (this == DEFAULT_INSTANCE) {
                return new Builder();
            }
            return new Builder().mergeFrom(this);
        }

        /* access modifiers changed from: protected */
        public Builder newBuilderForType(BuilderParent builderParent) {
            return new Builder(builderParent);
        }

        public static UnreadTuple getDefaultInstance() {
            return DEFAULT_INSTANCE;
        }

        public static Parser<UnreadTuple> parser() {
            return PARSER;
        }

        public Parser<UnreadTuple> getParserForType() {
            return PARSER;
        }

        public UnreadTuple getDefaultInstanceForType() {
            return DEFAULT_INSTANCE;
        }
    }

    public interface UnreadTupleOrBuilder extends MessageOrBuilder {
        ByteString getBinaryMsg();

        String getCid();

        ByteString getCidBytes();

        int getConvType();

        String getData();

        ByteString getDataBytes();

        String getFrom();

        ByteString getFromBytes();

        boolean getMentioned();

        String getMid();

        ByteString getMidBytes();

        long getPatchTimestamp();

        long getTimestamp();

        int getUnread();

        boolean hasBinaryMsg();

        boolean hasCid();

        boolean hasConvType();

        boolean hasData();

        boolean hasFrom();

        boolean hasMentioned();

        boolean hasMid();

        boolean hasPatchTimestamp();

        boolean hasTimestamp();

        boolean hasUnread();
    }

    public static void registerAllExtensions(ExtensionRegistryLite extensionRegistryLite) {
    }

    private Messages() {
    }

    public static void registerAllExtensions(ExtensionRegistry extensionRegistry) {
        registerAllExtensions((ExtensionRegistryLite) extensionRegistry);
    }

    public static FileDescriptor getDescriptor() {
        return descriptor;
    }

    static {
        FileDescriptor.internalBuildGeneratedFileFrom(new String[]{"\n\u000emessages.proto\u0012\u0012com.avos.avoscloud\"!\n\u0011JsonObjectMessage\u0012\f\n\u0004data\u0018\u0001 \u0002(\t\"¶\u0001\n\u000bUnreadTuple\u0012\u000b\n\u0003cid\u0018\u0001 \u0002(\t\u0012\u000e\n\u0006unread\u0018\u0002 \u0002(\u0005\u0012\u000b\n\u0003mid\u0018\u0003 \u0001(\t\u0012\u0011\n\ttimestamp\u0018\u0004 \u0001(\u0003\u0012\f\n\u0004from\u0018\u0005 \u0001(\t\u0012\f\n\u0004data\u0018\u0006 \u0001(\t\u0012\u0016\n\u000epatchTimestamp\u0018\u0007 \u0001(\u0003\u0012\u0011\n\tmentioned\u0018\b \u0001(\b\u0012\u0011\n\tbinaryMsg\u0018\t \u0001(\f\u0012\u0010\n\bconvType\u0018\n \u0001(\u0005\"Æ\u0001\n\u0007LogItem\u0012\f\n\u0004from\u0018\u0001 \u0001(\t\u0012\f\n\u0004data\u0018\u0002 \u0001(\t\u0012\u0011\n\ttimestamp\u0018\u0003 \u0001(\u0003\u0012\r\n\u0005msgId\u0018\u0004 \u0001(\t\u0012\r\n\u0005ackAt\u0018\u0005 \u0001(\u0003\u0012\u000e\n\u0006readAt\u0018\u0006 \u0001(\u0003\u0012\u0016\n\u000epatchTimestamp\u0018\u0007 \u0001(\u0003\u0012\u0012\n\nmentionAll\u0018", "\b \u0001(\b\u0012\u0013\n\u000bmentionPids\u0018\t \u0003(\t\u0012\u000b\n\u0003bin\u0018\n \u0001(\b\u0012\u0010\n\bconvType\u0018\u000b \u0001(\u0005\";\n\u000eConvMemberInfo\u0012\u000b\n\u0003pid\u0018\u0001 \u0001(\t\u0012\f\n\u0004role\u0018\u0002 \u0001(\t\u0012\u000e\n\u0006infoId\u0018\u0003 \u0001(\t\"_\n\u000bDataCommand\u0012\u000b\n\u0003ids\u0018\u0001 \u0003(\t\u00122\n\u0003msg\u0018\u0002 \u0003(\u000b2%.com.avos.avoscloud.JsonObjectMessage\u0012\u000f\n\u0007offline\u0018\u0003 \u0001(\b\"Ñ\u0002\n\u000eSessionCommand\u0012\t\n\u0001t\u0018\u0001 \u0001(\u0003\u0012\t\n\u0001n\u0018\u0002 \u0001(\t\u0012\t\n\u0001s\u0018\u0003 \u0001(\t\u0012\n\n\u0002ua\u0018\u0004 \u0001(\t\u0012\t\n\u0001r\u0018\u0005 \u0001(\b\u0012\u000b\n\u0003tag\u0018\u0006 \u0001(\t\u0012\u0010\n\bdeviceId\u0018\u0007 \u0001(\t\u0012\u0016\n\u000esessionPeerIds\u0018\b \u0003(\t\u0012\u001c\n\u0014onlineSessionPeerIds\u0018\t \u0003(\t\u0012\n\n\u0002st\u0018\n \u0001(\t\u0012\r\n\u0005stTtl\u0018\u000b \u0001", "(\u0005\u0012\f\n\u0004code\u0018\f \u0001(\u0005\u0012\u000e\n\u0006reason\u0018\r \u0001(\t\u0012\u0013\n\u000bdeviceToken\u0018\u000e \u0001(\t\u0012\n\n\u0002sp\u0018\u000f \u0001(\b\u0012\u000e\n\u0006detail\u0018\u0010 \u0001(\t\u0012\u001b\n\u0013lastUnreadNotifTime\u0018\u0011 \u0001(\u0003\u0012\u0015\n\rlastPatchTime\u0018\u0012 \u0001(\u0003\u0012\u0014\n\fconfigBitmap\u0018\u0013 \u0001(\u0003\"[\n\fErrorCommand\u0012\f\n\u0004code\u0018\u0001 \u0002(\u0005\u0012\u000e\n\u0006reason\u0018\u0002 \u0002(\t\u0012\u000f\n\u0007appCode\u0018\u0003 \u0001(\u0005\u0012\u000e\n\u0006detail\u0018\u0004 \u0001(\t\u0012\f\n\u0004pids\u0018\u0005 \u0003(\t\"Þ\u0002\n\rDirectCommand\u0012\u000b\n\u0003msg\u0018\u0001 \u0001(\t\u0012\u000b\n\u0003uid\u0018\u0002 \u0001(\t\u0012\u0012\n\nfromPeerId\u0018\u0003 \u0001(\t\u0012\u0011\n\ttimestamp\u0018\u0004 \u0001(\u0003\u0012\u000f\n\u0007offline\u0018\u0005 \u0001(\b\u0012\u000f\n\u0007hasMore\u0018\u0006 \u0001(\b\u0012\u0011\n\ttoPeerIds\u0018\u0007 \u0003(\t\u0012\t\n\u0001r\u0018\n \u0001(\b\u0012\u000b\n\u0003c", "id\u0018\u000b \u0001(\t\u0012\n\n\u0002id\u0018\f \u0001(\t\u0012\u0011\n\ttransient\u0018\r \u0001(\b\u0012\n\n\u0002dt\u0018\u000e \u0001(\t\u0012\u000e\n\u0006roomId\u0018\u000f \u0001(\t\u0012\u0010\n\bpushData\u0018\u0010 \u0001(\t\u0012\f\n\u0004will\u0018\u0011 \u0001(\b\u0012\u0016\n\u000epatchTimestamp\u0018\u0012 \u0001(\u0003\u0012\u0011\n\tbinaryMsg\u0018\u0013 \u0001(\f\u0012\u0013\n\u000bmentionPids\u0018\u0014 \u0003(\t\u0012\u0012\n\nmentionAll\u0018\u0015 \u0001(\b\u0012\u0010\n\bconvType\u0018\u0016 \u0001(\u0005\"¦\u0001\n\nAckCommand\u0012\f\n\u0004code\u0018\u0001 \u0001(\u0005\u0012\u000e\n\u0006reason\u0018\u0002 \u0001(\t\u0012\u000b\n\u0003mid\u0018\u0003 \u0001(\t\u0012\u000b\n\u0003cid\u0018\u0004 \u0001(\t\u0012\t\n\u0001t\u0018\u0005 \u0001(\u0003\u0012\u000b\n\u0003uid\u0018\u0006 \u0001(\t\u0012\u000e\n\u0006fromts\u0018\u0007 \u0001(\u0003\u0012\f\n\u0004tots\u0018\b \u0001(\u0003\u0012\f\n\u0004type\u0018\t \u0001(\t\u0012\u000b\n\u0003ids\u0018\n \u0003(\t\u0012\u000f\n\u0007appCode\u0018\u000b \u0001(\u0005\"R\n\rUnreadCommand\u0012.\n\u0005convs\u0018\u0001 \u0003", "(\u000b2\u001f.com.avos.avoscloud.UnreadTuple\u0012\u0011\n\tnotifTime\u0018\u0002 \u0001(\u0003\"¿\u0006\n\u000bConvCommand\u0012\t\n\u0001m\u0018\u0001 \u0003(\t\u0012\u0011\n\ttransient\u0018\u0002 \u0001(\b\u0012\u000e\n\u0006unique\u0018\u0003 \u0001(\b\u0012\u000b\n\u0003cid\u0018\u0004 \u0001(\t\u0012\r\n\u0005cdate\u0018\u0005 \u0001(\t\u0012\u000e\n\u0006initBy\u0018\u0006 \u0001(\t\u0012\f\n\u0004sort\u0018\u0007 \u0001(\t\u0012\r\n\u0005limit\u0018\b \u0001(\u0005\u0012\f\n\u0004skip\u0018\t \u0001(\u0005\u0012\f\n\u0004flag\u0018\n \u0001(\u0005\u0012\r\n\u0005count\u0018\u000b \u0001(\u0005\u0012\r\n\u0005udate\u0018\f \u0001(\t\u0012\t\n\u0001t\u0018\r \u0001(\u0003\u0012\t\n\u0001n\u0018\u000e \u0001(\t\u0012\t\n\u0001s\u0018\u000f \u0001(\t\u0012\u0011\n\tstatusSub\u0018\u0010 \u0001(\b\u0012\u0011\n\tstatusPub\u0018\u0011 \u0001(\b\u0012\u0011\n\tstatusTTL\u0018\u0012 \u0001(\u0005\u0012\u0010\n\buniqueId\u0018\u0013 \u0001(\t\u0012\u0016\n\u000etargetClientId\u0018\u0014 \u0001(\t\u0012\u0018\n\u0010maxReadTimestamp\u0018", "\u0015 \u0001(\u0003\u0012\u0017\n\u000fmaxAckTimestamp\u0018\u0016 \u0001(\u0003\u0012\u0017\n\u000fqueryAllMembers\u0018\u0017 \u0001(\b\u00127\n\rmaxReadTuples\u0018\u0018 \u0003(\u000b2 .com.avos.avoscloud.MaxReadTuple\u0012\f\n\u0004cids\u0018\u0019 \u0003(\t\u00120\n\u0004info\u0018\u001a \u0001(\u000b2\".com.avos.avoscloud.ConvMemberInfo\u0012\u0010\n\btempConv\u0018\u001b \u0001(\b\u0012\u0013\n\u000btempConvTTL\u0018\u001c \u0001(\u0005\u0012\u0013\n\u000btempConvIds\u0018\u001d \u0003(\t\u0012\u0013\n\u000ballowedPids\u0018\u001e \u0003(\t\u00124\n\nfailedPids\u0018\u001f \u0003(\u000b2 .com.avos.avoscloud.ErrorCommand\u0012\f\n\u0004next\u0018( \u0001(\t\u00126\n\u0007results\u0018d \u0001(\u000b2%.com.avos.avoscloud.JsonObjectMessage\u00124\n\u0005where\u0018e \u0001(\u000b2%.c", "om.avos.avoscloud.JsonObjectMessage\u00123\n\u0004attr\u0018g \u0001(\u000b2%.com.avos.avoscloud.JsonObjectMessage\"x\n\u000bRoomCommand\u0012\u000e\n\u0006roomId\u0018\u0001 \u0001(\t\u0012\t\n\u0001s\u0018\u0002 \u0001(\t\u0012\t\n\u0001t\u0018\u0003 \u0001(\u0003\u0012\t\n\u0001n\u0018\u0004 \u0001(\t\u0012\u0011\n\ttransient\u0018\u0005 \u0001(\b\u0012\u0013\n\u000broomPeerIds\u0018\u0006 \u0003(\t\u0012\u0010\n\bbyPeerId\u0018\u0007 \u0001(\t\"Ö\u0002\n\u000bLogsCommand\u0012\u000b\n\u0003cid\u0018\u0001 \u0001(\t\u0012\t\n\u0001l\u0018\u0002 \u0001(\u0005\u0012\r\n\u0005limit\u0018\u0003 \u0001(\u0005\u0012\t\n\u0001t\u0018\u0004 \u0001(\u0003\u0012\n\n\u0002tt\u0018\u0005 \u0001(\u0003\u0012\f\n\u0004tmid\u0018\u0006 \u0001(\t\u0012\u000b\n\u0003mid\u0018\u0007 \u0001(\t\u0012\u0010\n\bchecksum\u0018\b \u0001(\t\u0012\u000e\n\u0006stored\u0018\t \u0001(\b\u0012F\n\tdirection\u0018\n \u0001(\u000e2..com.avos.avoscloud.LogsComman", "d.QueryDirection:\u0003OLD\u0012\u0011\n\ttIncluded\u0018\u000b \u0001(\b\u0012\u0012\n\nttIncluded\u0018\f \u0001(\b\u0012\u000e\n\u0006lctype\u0018\r \u0001(\u0005\u0012)\n\u0004logs\u0018i \u0003(\u000b2\u001b.com.avos.avoscloud.LogItem\"\"\n\u000eQueryDirection\u0012\u0007\n\u0003OLD\u0010\u0001\u0012\u0007\n\u0003NEW\u0010\u0002\"L\n\nRcpCommand\u0012\n\n\u0002id\u0018\u0001 \u0001(\t\u0012\u000b\n\u0003cid\u0018\u0002 \u0001(\t\u0012\t\n\u0001t\u0018\u0003 \u0001(\u0003\u0012\f\n\u0004read\u0018\u0004 \u0001(\b\u0012\f\n\u0004from\u0018\u0005 \u0001(\t\"8\n\tReadTuple\u0012\u000b\n\u0003cid\u0018\u0001 \u0002(\t\u0012\u0011\n\ttimestamp\u0018\u0002 \u0001(\u0003\u0012\u000b\n\u0003mid\u0018\u0003 \u0001(\t\"N\n\fMaxReadTuple\u0012\u000b\n\u0003pid\u0018\u0001 \u0001(\t\u0012\u0017\n\u000fmaxAckTimestamp\u0018\u0002 \u0001(\u0003\u0012\u0018\n\u0010maxReadTimestamp\u0018\u0003 \u0001(\u0003\"V\n\u000bReadCommand\u0012\u000b\n\u0003cid\u0018\u0001 \u0001(\t\u0012", "\f\n\u0004cids\u0018\u0002 \u0003(\t\u0012,\n\u0005convs\u0018\u0003 \u0003(\u000b2\u001d.com.avos.avoscloud.ReadTuple\"f\n\u000fPresenceCommand\u0012.\n\u0006status\u0018\u0001 \u0001(\u000e2\u001e.com.avos.avoscloud.StatusType\u0012\u0016\n\u000esessionPeerIds\u0018\u0002 \u0003(\t\u0012\u000b\n\u0003cid\u0018\u0003 \u0001(\t\"?\n\rReportCommand\u0012\u0012\n\ninitiative\u0018\u0001 \u0001(\b\u0012\f\n\u0004type\u0018\u0002 \u0001(\t\u0012\f\n\u0004data\u0018\u0003 \u0001(\t\"¸\u0001\n\tPatchItem\u0012\u000b\n\u0003cid\u0018\u0001 \u0001(\t\u0012\u000b\n\u0003mid\u0018\u0002 \u0001(\t\u0012\u0011\n\ttimestamp\u0018\u0003 \u0001(\u0003\u0012\u000e\n\u0006recall\u0018\u0004 \u0001(\b\u0012\f\n\u0004data\u0018\u0005 \u0001(\t\u0012\u0016\n\u000epatchTimestamp\u0018\u0006 \u0001(\u0003\u0012\f\n\u0004from\u0018\u0007 \u0001(\t\u0012\u0011\n\tbinaryMsg\u0018\b \u0001(\f\u0012\u0012\n\nmentionAll\u0018\t \u0001(\b\u0012\u0013\n\u000bme", "ntionPids\u0018\n \u0003(\t\"U\n\fPatchCommand\u0012.\n\u0007patches\u0018\u0001 \u0003(\u000b2\u001d.com.avos.avoscloud.PatchItem\u0012\u0015\n\rlastPatchTime\u0018\u0002 \u0001(\u0003\"¦\u0001\n\rPubsubCommand\u0012\u000b\n\u0003cid\u0018\u0001 \u0001(\t\u0012\f\n\u0004cids\u0018\u0002 \u0003(\t\u0012\r\n\u0005topic\u0018\u0003 \u0001(\t\u0012\u0010\n\bsubtopic\u0018\u0004 \u0001(\t\u0012\u000e\n\u0006topics\u0018\u0005 \u0003(\t\u0012\u0011\n\tsubtopics\u0018\u0006 \u0003(\t\u00126\n\u0007results\u0018\u0007 \u0001(\u000b2%.com.avos.avoscloud.JsonObjectMessage\"\u0002\n\u0010BlacklistCommand\u0012\u000e\n\u0006srcCid\u0018\u0001 \u0001(\t\u0012\u000e\n\u0006toPids\u0018\u0002 \u0003(\t\u0012\u000e\n\u0006srcPid\u0018\u0003 \u0001(\t\u0012\u000e\n\u0006toCids\u0018\u0004 \u0003(\t\u0012\r\n\u0005limit\u0018\u0005 \u0001(\u0005\u0012\f\n\u0004next\u0018\u0006 \u0001(\t\u0012\u0013\n\u000bblockedPids", "\u0018\b \u0003(\t\u0012\u0013\n\u000bblockedCids\u0018\t \u0003(\t\u0012\u0013\n\u000ballowedPids\u0018\n \u0003(\t\u00124\n\nfailedPids\u0018\u000b \u0003(\u000b2 .com.avos.avoscloud.ErrorCommand\u0012\t\n\u0001t\u0018\f \u0001(\u0003\u0012\t\n\u0001n\u0018\r \u0001(\t\u0012\t\n\u0001s\u0018\u000e \u0001(\t\"å\b\n\u000eGenericCommand\u0012,\n\u0003cmd\u0018\u0001 \u0001(\u000e2\u001f.com.avos.avoscloud.CommandType\u0012&\n\u0002op\u0018\u0002 \u0001(\u000e2\u001a.com.avos.avoscloud.OpType\u0012\r\n\u0005appId\u0018\u0003 \u0001(\t\u0012\u000e\n\u0006peerId\u0018\u0004 \u0001(\t\u0012\t\n\u0001i\u0018\u0005 \u0001(\u0005\u0012\u0016\n\u000einstallationId\u0018\u0006 \u0001(\t\u0012\u0010\n\bpriority\u0018\u0007 \u0001(\u0005\u0012\u000f\n\u0007service\u0018\b \u0001(\u0005\u0012\u0010\n\bserverTs\u0018\t \u0001(\u0003\u00124\n\u000bdataMessage\u0018e \u0001(\u000b2\u001f.com.avos.avosclou", "d.DataCommand\u0012:\n\u000esessionMessage\u0018f \u0001(\u000b2\".com.avos.avoscloud.SessionCommand\u00126\n\ferrorMessage\u0018g \u0001(\u000b2 .com.avos.avoscloud.ErrorCommand\u00128\n\rdirectMessage\u0018h \u0001(\u000b2!.com.avos.avoscloud.DirectCommand\u00122\n\nackMessage\u0018i \u0001(\u000b2\u001e.com.avos.avoscloud.AckCommand\u00128\n\runreadMessage\u0018j \u0001(\u000b2!.com.avos.avoscloud.UnreadCommand\u00124\n\u000breadMessage\u0018k \u0001(\u000b2\u001f.com.avos.avoscloud.ReadCommand\u00122\n\nrcpMessage\u0018l \u0001(\u000b2\u001e.com.avos.avoscloud.RcpComm", "and\u00124\n\u000blogsMessage\u0018m \u0001(\u000b2\u001f.com.avos.avoscloud.LogsCommand\u00124\n\u000bconvMessage\u0018n \u0001(\u000b2\u001f.com.avos.avoscloud.ConvCommand\u00124\n\u000broomMessage\u0018o \u0001(\u000b2\u001f.com.avos.avoscloud.RoomCommand\u0012<\n\u000fpresenceMessage\u0018p \u0001(\u000b2#.com.avos.avoscloud.PresenceCommand\u00128\n\rreportMessage\u0018q \u0001(\u000b2!.com.avos.avoscloud.ReportCommand\u00126\n\fpatchMessage\u0018r \u0001(\u000b2 .com.avos.avoscloud.PatchCommand\u00128\n\rpubsubMessage\u0018s \u0001(\u000b2!.com.avos.avoscloud.PubsubCommand\u0012", ">\n\u0010blacklistMessage\u0018t \u0001(\u000b2$.com.avos.avoscloud.BlacklistCommand*ÿ\u0001\n\u000bCommandType\u0012\u000b\n\u0007session\u0010\u0000\u0012\b\n\u0004conv\u0010\u0001\u0012\n\n\u0006direct\u0010\u0002\u0012\u0007\n\u0003ack\u0010\u0003\u0012\u0007\n\u0003rcp\u0010\u0004\u0012\n\n\u0006unread\u0010\u0005\u0012\b\n\u0004logs\u0010\u0006\u0012\t\n\u0005error\u0010\u0007\u0012\t\n\u0005login\u0010\b\u0012\b\n\u0004data\u0010\t\u0012\b\n\u0004room\u0010\n\u0012\b\n\u0004read\u0010\u000b\u0012\f\n\bpresence\u0010\f\u0012\n\n\u0006report\u0010\r\u0012\b\n\u0004echo\u0010\u000e\u0012\f\n\bloggedin\u0010\u000f\u0012\n\n\u0006logout\u0010\u0010\u0012\r\n\tloggedout\u0010\u0011\u0012\t\n\u0005patch\u0010\u0012\u0012\n\n\u0006pubsub\u0010\u0013\u0012\r\n\tblacklist\u0010\u0014*Õ\u0007\n\u0006OpType\u0012\b\n\u0004open\u0010\u0001\u0012\u0007\n\u0003add\u0010\u0002\u0012\n\n\u0006remove\u0010\u0003\u0012\t\n\u0005close\u0010\u0004\u0012\n\n\u0006opened\u0010\u0005\u0012\n\n\u0006closed\u0010\u0006\u0012\t", "\n\u0005query\u0010\u0007\u0012\u0010\n\fquery_result\u0010\b\u0012\f\n\bconflict\u0010\t\u0012\t\n\u0005added\u0010\n\u0012\u000b\n\u0007removed\u0010\u000b\u0012\u000b\n\u0007refresh\u0010\f\u0012\r\n\trefreshed\u0010\r\u0012\t\n\u0005start\u0010\u001e\u0012\u000b\n\u0007started\u0010\u001f\u0012\n\n\u0006joined\u0010 \u0012\u0012\n\u000emembers_joined\u0010!\u0012\b\n\u0004left\u0010'\u0012\u0010\n\fmembers_left\u0010(\u0012\u000b\n\u0007results\u0010*\u0012\t\n\u0005count\u0010+\u0012\n\n\u0006result\u0010,\u0012\n\n\u0006update\u0010-\u0012\u000b\n\u0007updated\u0010.\u0012\b\n\u0004mute\u0010/\u0012\n\n\u0006unmute\u00100\u0012\n\n\u0006status\u00101\u0012\u000b\n\u0007members\u00102\u0012\f\n\bmax_read\u00103\u0012\r\n\tis_member\u00104\u0012\u0016\n\u0012member_info_update\u00105\u0012\u0017\n\u0013member_info_updated\u00106\u0012\u0017\n\u0013member_info_changed\u00107\u0012\b\n\u0004join\u0010P\u0012\n", "\n\u0006invite\u0010Q\u0012\t\n\u0005leave\u0010R\u0012\b\n\u0004kick\u0010S\u0012\n\n\u0006reject\u0010T\u0012\u000b\n\u0007invited\u0010U\u0012\n\n\u0006kicked\u0010V\u0012\n\n\u0006upload\u0010d\u0012\f\n\buploaded\u0010e\u0012\r\n\tsubscribe\u0010x\u0012\u000e\n\nsubscribed\u0010y\u0012\u000f\n\u000bunsubscribe\u0010z\u0012\u0010\n\funsubscribed\u0010{\u0012\u0011\n\ris_subscribed\u0010|\u0012\u000b\n\u0006modify\u0010\u0001\u0012\r\n\bmodified\u0010\u0001\u0012\n\n\u0005block\u0010ª\u0001\u0012\f\n\u0007unblock\u0010«\u0001\u0012\f\n\u0007blocked\u0010¬\u0001\u0012\u000e\n\tunblocked\u0010­\u0001\u0012\u0014\n\u000fmembers_blocked\u0010®\u0001\u0012\u0016\n\u0011members_unblocked\u0010¯\u0001\u0012\u000f\n\nadd_shutup\u0010´\u0001\u0012\u0012\n\rremove_shutup\u0010µ\u0001\u0012\u0011\n\fquery_shutup\u0010¶\u0001\u0012\u0011\n\fshutup_added\u0010·\u0001\u0012\u0013\n\u000eshutup_remov", "ed\u0010¸\u0001\u0012\u0012\n\rshutup_result\u0010¹\u0001\u0012\r\n\bshutuped\u0010º\u0001\u0012\u000f\n\nunshutuped\u0010»\u0001\u0012\u0015\n\u0010members_shutuped\u0010¼\u0001\u0012\u0017\n\u0012members_unshutuped\u0010½\u0001*\u001d\n\nStatusType\u0012\u0006\n\u0002on\u0010\u0001\u0012\u0007\n\u0003off\u0010\u0002B\u0007¢\u0002\u0004AVIM"}, new FileDescriptor[0], new InternalDescriptorAssigner() {
            public ExtensionRegistry assignDescriptors(FileDescriptor fileDescriptor) {
                Messages.descriptor = fileDescriptor;
                return null;
            }
        });
        String str = "Data";
        internal_static_com_avos_avoscloud_JsonObjectMessage_fieldAccessorTable = new FieldAccessorTable(internal_static_com_avos_avoscloud_JsonObjectMessage_descriptor, new String[]{str});
        String str2 = "Pid";
        internal_static_com_avos_avoscloud_ConvMemberInfo_fieldAccessorTable = new FieldAccessorTable(internal_static_com_avos_avoscloud_ConvMemberInfo_descriptor, new String[]{str2, "Role", "InfoId"});
        String str3 = "Convs";
        internal_static_com_avos_avoscloud_UnreadCommand_fieldAccessorTable = new FieldAccessorTable(internal_static_com_avos_avoscloud_UnreadCommand_descriptor, new String[]{str3, "NotifTime"});
        String str4 = "Cid";
        internal_static_com_avos_avoscloud_RcpCommand_fieldAccessorTable = new FieldAccessorTable(internal_static_com_avos_avoscloud_RcpCommand_descriptor, new String[]{"Id", str4, "T", "Read", HttpHeaders.FROM});
        internal_static_com_avos_avoscloud_ReadTuple_fieldAccessorTable = new FieldAccessorTable(internal_static_com_avos_avoscloud_ReadTuple_descriptor, new String[]{str4, "Timestamp", "Mid"});
        internal_static_com_avos_avoscloud_MaxReadTuple_fieldAccessorTable = new FieldAccessorTable(internal_static_com_avos_avoscloud_MaxReadTuple_descriptor, new String[]{str2, "MaxAckTimestamp", "MaxReadTimestamp"});
        internal_static_com_avos_avoscloud_ReadCommand_fieldAccessorTable = new FieldAccessorTable(internal_static_com_avos_avoscloud_ReadCommand_descriptor, new String[]{str4, "Cids", str3});
        internal_static_com_avos_avoscloud_PresenceCommand_fieldAccessorTable = new FieldAccessorTable(internal_static_com_avos_avoscloud_PresenceCommand_descriptor, new String[]{"Status", "SessionPeerIds", str4});
        internal_static_com_avos_avoscloud_ReportCommand_fieldAccessorTable = new FieldAccessorTable(internal_static_com_avos_avoscloud_ReportCommand_descriptor, new String[]{"Initiative", "Type", str});
    }
}
